Starting IncludeManager...
GeminiClient loaded successfully
analyzeSources()

Trovati 51 file sorgente nel progetto:
  - wasm3/esp_try.h
  - extensions/m3_extensions.c
  - extensions/wasm3_ext.h
  - extra/coremark_minimal.wasm.h
  - extra/fib32.wasm.h
  - extra/fib32_tail.wasm.h
  - extra/fib64.wasm.h
  - extra/wasi_core.h
  - wasm3/m3_api_esp_wasi.c
  - wasm3/m3_api_esp_wasi.h
  - wasm3/m3_api_libc.c
  - wasm3/m3_api_libc.h
  - wasm3/m3_api_meta_wasi.c
  - wasm3/m3_api_tracer.c
  - wasm3/m3_api_tracer.h
  - wasm3/m3_api_uvwasi.c
  - wasm3/m3_api_wasi.c
  - wasm3/m3_api_wasi.h
  - wasm3/m3_bind.c
  - wasm3/m3_bind.h
  - wasm3/m3_code.c
  - wasm3/m3_code.h
  - wasm3/m3_compile.c
  - wasm3/m3_compile.h
  - wasm3/m3_config.h
  - wasm3/m3_config_platforms.h
  - wasm3/m3_core.c
  - wasm3/m3_core.h
  - wasm3/m3_env.c
  - wasm3/m3_env.h
  - wasm3/m3_exception.c
  - wasm3/m3_exception.h
  - wasm3/m3_exec.c
  - wasm3/m3_exec.h
  - wasm3/m3_exec_defs.h
  - wasm3/m3_function.c
  - wasm3/m3_function.h
  - wasm3/m3_includes.h
  - wasm3/m3_info.c
  - wasm3/m3_info.h
  - wasm3/m3_math_utils.h
  - wasm3/m3_module.c
  - wasm3/m3_module.h
  - wasm3/m3_parse.c
  - wasm3/m3_parse.h
  - wasm3/m3_pointers.c
  - wasm3/m3_pointers.h
  - wasm3/m3_segmented_memory.c
  - wasm3/m3_segmented_memory.h
  - wasm3/wasm3.h
  - wasm3/wasm3_defs.h

Iteration 1
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_wasi.h. Missing symbols: set()
Blocking files: {PosixPath('/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3_defs.h')}
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_core.h. Missing symbols: {'default_allocator', 'MemoryAllocator', 'default_free'}
Blocking files: {PosixPath('/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3_defs.h')}
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_config.h. Missing symbols: set()
Blocking files: set()
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_tracer.h. Missing symbols: set()
Blocking files: {PosixPath('/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3.h')}
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_pointers.h. Missing symbols: {'ptr_status_t', 'ptr_check_result_t'}
Blocking files: set()
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_exec_defs.h. Missing symbols: {'IM3Operation', 'M3Memory_ptr', 'M3MemoryPoint_ptr'}
Blocking files: {PosixPath('/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3_defs.h')}
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_function.h. Missing symbols: {'IM3FuncType', 'WasmFunctionEntry', 'M3FuncType'}
Blocking files: {PosixPath('/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3_defs.h')}
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3.h. Missing symbols: {'IM3Environment', 'M3ErrorInfo', 'M3BacktraceFrame', 'IM3TaggedValue', 'M3Result', 'M3RawCall', 'IM3Global', 'IM3BacktraceInfo', 'IM3Runtime', 'M3SectionHandler', 'IM3Module', 'IM3BacktraceFrame', 'M3ValueType', 'IM3ImportContext'}
Blocking files: {PosixPath('/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_function.h')}
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_includes.h. Missing symbols: set()
Blocking files: set()
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_config_platforms.h. Missing symbols: {'ptr', 'ESP_LOGI'}
Blocking files: set()
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_code.h. Missing symbols: {'M3CodePage', 'M3CodePageHeader', 'IM3CodePage'}
Blocking files: set()
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/esp_try.h. Missing symbols: {'esp_err_to_name', 'esp_backtrace_print', 'ESP_LOGE', 'ESP_LOGI'}
Blocking files: set()
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_math_utils.h. Missing symbols: {'__builtin_expect', 'signbit', 'mask'}
Blocking files: {PosixPath('/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3_defs.h')}
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_exception.h. Missing symbols: set()
Blocking files: set()
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3_defs.h. Missing symbols: {'i64', 'u16', 'u64', 'm3slot_t', 'code_t', 'u8'}
Blocking files: set()
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_compile.h. Missing symbols: {'M3Compiler', 'M3OpInfo', 'IM3OpInfo', 'c_m3RegisterUnallocated', 'M3CompilationScope', 'IM3Compilation', 'M3Compilation'}
Blocking files: {PosixPath('/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3_defs.h')}
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_esp_wasi.h. Missing symbols: set()
Blocking files: {PosixPath('/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3_defs.h')}
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_exec.h. Missing symbols: {'sp', 'fabsf', 'ceilf', 'operand1', 'value', 'stack_backup', 'OP_I32_TRUNC_F32', 'branch', 'function', 'loopId', 'newSegments', 'numTargets', 'runtime', 'OP_REM_U', 'ctx', '__builtin_expect', 'stack', 'src', 'r', 'OP_I64_TRUNC_F32', 'call', 'numPagesToGrow', 'OP_I64_TRUNC_SAT_F32', 'memory', 'OP_I32_TRUNC_SAT_F64', 'branches', 'operand2', 'dest', 'sqrt', 'byte', 'copysign', 'stackOffset', 'memmove', 'OP_DIV_U', 'OP_U32_TRUNC_F32', '__builtin_ctzll', 'OP_U64_TRUNC_F64', 'source', 'type', 'OP_U64_TRUNC_F32', 'possible_trap', '__builtin_clzll', 'ceil', 'condition', 'rintf', 'memcpy', 'ESP_LOGE', 'val', 'sqrtf', 'truncf', 'elsePC', 'operand', '__builtin_ctz', 'op_Call', 'u', 'Call', 'result', 'size', 'requiredPages', 'floor', 'memset', 'OP_U64_TRUNC_SAT_F64', 'trunc', 'OP_U32_TRUNC_SAT_F32', 'floorf', 'rint', 'destination', '__builtin_popcount', 'OP_I64_TRUNC_F64', 'global', 'offset', 'OP_U64_TRUNC_SAT_F32', 'OP_I32_TRUNC_F64', 'ESP_LOGI', 'copysignf', 'OP_U32_TRUNC_SAT_F64', 'mem8', 'isnan', 'm3StackCheck', 'callPC', 'OP_U32_TRUNC_F64', 'module', 'tableIndex', 'OP_I32_TRUNC_SAT_F32', 'OP_I64_TRUNC_SAT_F64', 'from', 'dst', 'src8', 'iteration_count', '__builtin_popcountll', 'branchIndex', '__builtin_clz', 'fabs', 'preserve'}
Blocking files: {PosixPath('/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3.h')}
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_env.h. Missing symbols: {'ModuleVisitor', 'M3DataSegment', 'M3MemoryInfo'}
Blocking files: {PosixPath('/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3.h')}
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_libc.h. Missing symbols: set()
Blocking files: {PosixPath('/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3.h')}
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_parse.h. Missing symbols: set()
Blocking files: set()
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_bind.h. Missing symbols: set()
Blocking files: {PosixPath('/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3_defs.h')}
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_info.h. Missing symbols: set()
Blocking files: {PosixPath('/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3_defs.h')}
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_segmented_memory.h. Missing symbols: {'M3MemoryPoint', 'IM3Memory', 'M3Memory', 'IM3MemoryPoint', 'M3MemoryRegion', 'MemorySegment'}
Blocking files: {PosixPath('/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3_defs.h')}
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_module.h. Missing symbols: set()
Blocking files: set()
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extensions/wasm3_ext.h. Missing symbols: set()
Blocking files: set()
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/fib64.wasm.h. Missing symbols: {'fib64_wasm', 'fib64_wasm_len'}
Blocking files: set()
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/coremark_minimal.wasm.h. Missing symbols: {'coremark_minimal_wasm_len', 'coremark_minimal_wasm'}
Blocking files: set()
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/fib32_tail.wasm.h. Missing symbols: {'fib32_tail_wasm_len', 'fib32_tail_wasm'}
Blocking files: set()
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/fib32.wasm.h. Missing symbols: {'fib32_wasm', 'fib32_wasm_len'}
Blocking files: set()
Could not resolve /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/wasi_core.h. Missing symbols: {'__wasi_advice_t', '__wasi_size_t', '__wasi_roflags_t', '__wasi_clockid_t', '__wasi_errno_t', '__wasi_siflags_t', '__wasi_inode_t', '__wasi_eventtype_t', '__wasi_prestat_t', '__wasi_fdflags_t', '__wasi_fdstat_t', '__wasi_subscription_u_t', '__wasi_device_t', '__wasi_fd_t', '__wasi_filedelta_t', '__wasi_eventrwflags_t', '__wasi_event_u_t', '__wasi_sdflags_t', '__wasi_event_fd_readwrite_t', '__wasi_prestat_u_t', '__wasi_rights_t', '__wasi_exitcode_t', '__wasi_oflags_t', '__wasi_subscription_clock_t', '__wasi_subscription_t', '__wasi_fstflags_t', '__wasi_subclockflags_t', '__wasi_filetype_t', '__wasi_lookupflags_t', '__wasi_timestamp_t', '__wasi_linkcount_t', '__wasi_preopentype_t', '__wasi_iovec_t', '__wasi_ciovec_t', '__wasi_subscription_fd_readwrite_t', '__wasi_dirnamlen_t', '__wasi_filestat_t', '__wasi_userdata_t', '__wasi_filesize_t', '__wasi_whence_t', '__wasi_dircookie_t', '__wasi_dirent_t', '__wasi_signal_t', '__wasi_event_t', '__wasi_prestat_dir_t', '__wasi_riflags_t'}
Blocking files: set()
resolver.verify_and_resolve()
askAI request:
Instruction:
 
        Analyze include problems and suggest solutions.
        Expected JSON format:
        {
            "new_headers": [
                {
                    "name": string,
                    "symbols": [string],
                    "reason": string
                }
            ],
            "moved_symbols": [
                {
                    "symbol": string,
                    "from": string,
                    "to": string,
                    "reason": string
                }
            ],
            "include_order_fixes": [
                {
                    "file": string,
                    "current_order": [string],
                    "suggested_order": [string],
                    "reason": string
                }
            ]
        }
         
Prompt:
 
        Detected problems:
        1. Missing symbols: {"/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_wasi.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_core.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_config.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_tracer.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_pointers.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_exec_defs.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_function.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_includes.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_config_platforms.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_code.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/esp_try.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_math_utils.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_exception.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3_defs.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_compile.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_esp_wasi.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_exec.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_env.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_libc.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_parse.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_bind.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_info.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_segmented_memory.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_module.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extensions/wasm3_ext.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/fib64.wasm.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/coremark_minimal.wasm.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/fib32_tail.wasm.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/fib32.wasm.h": [], "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/wasi_core.h": []}
        2. Circular references: []
        3. Invalid orders: [{'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_wasi.h', 'required_symbols': ['ccstr_t', 'i32', 'm3_wasi_context_t', 'M3Result', 'IM3Module', 'u32']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_core.h', 'required_symbols': ['bytes_t', 'M3Result', 'default_free', 'IM3Runtime', 'IM3Module', 'voidptr_t', 'MemoryAllocator', 'IM3Function', 'cstr_t', 'u64', 'f32', 'i8', 'f64', 'u8', 'cbytes_t', 'ccstr_t', 'i32', 'default_allocator', 'i64', 'u32', 'm3opcode_t']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_config.h', 'required_symbols': []}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_tracer.h', 'required_symbols': ['M3Result', 'IM3Module']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_pointers.h', 'required_symbols': ['ptr_status_t', 'ptr_check_result_t']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_exec_defs.h', 'required_symbols': ['pc_t', 'M3Memory_ptr', 'IM3Operation', 'm3ret_t', 'f64', 'M3MemoryPoint_ptr', 'm3reg_t']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_function.h', 'required_symbols': ['cstr_t', 'bytes_t', 'IM3FuncType', 'pc_t', 'M3FuncType', 'u16', 'M3Result', 'M3Module', 'IM3Function', 'm3stack_t', 'M3ImportInfo', 'IM3Module', 'u32', 'u8', 'WasmFunctionEntry', 'M3Function']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3.h', 'required_symbols': ['IM3Environment', 'M3ErrorInfo', 'IM3Function', 'IM3TaggedValue', 'M3Result', 'M3RawCall', 'IM3Global', 'IM3BacktraceInfo', 'IM3Runtime', 'M3SectionHandler', 'IM3ImportContext', 'IM3Module', 'IM3BacktraceFrame', 'M3ValueType', 'M3BacktraceFrame']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_includes.h', 'required_symbols': []}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_config_platforms.h', 'required_symbols': ['ptr', 'ESP_LOGI']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_code.h', 'required_symbols': ['M3CodePage', 'M3CodePageHeader', 'IM3CodePage']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/esp_try.h', 'required_symbols': ['esp_err_to_name', 'esp_backtrace_print', 'ESP_LOGE', 'ESP_LOGI']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_math_utils.h', 'required_symbols': ['signbit', 'u64', 'f32', '__builtin_expect', 'mask', 'u32', 'f64']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_exception.h', 'required_symbols': []}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3_defs.h', 'required_symbols': ['i64', 'u16', 'u64', 'm3slot_t', 'code_t', 'u8']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_compile.h', 'required_symbols': ['bytes_t', 'pc_t', 'IM3FuncType', 'M3OpInfo', 'M3Result', 'IM3OpInfo', 'c_m3RegisterUnallocated', 'IM3Runtime', 'IM3Module', 'IM3Function', 'M3CompilationScope', 'u16', 'IM3Operation', 'i8', 'u8', 'i32', 'M3Compiler', 'm3slot_t', 'IM3Compilation', 'u32', 'M3Compilation', 'm3opcode_t', 'IM3CodePage']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_esp_wasi.h', 'required_symbols': ['ccstr_t', 'i32', 'm3_wasi_context_t', 'M3Result', 'IM3Module', 'u32']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_exec.h', 'required_symbols': ['m3Err_trapOutOfBoundsMemoryAccess', 'sp', 'fabsf', 'ceilf', 'operand1', 'rotr64', 'IM3Module', 'value', 'stack_backup', 'OP_I32_TRUNC_F32', 'm3Err_trapTableIndexOutOfRange', 'branch', 'function', 'loopId', 'newSegments', 'numTargets', 'runtime', 'm3Err_trapIndirectCallTypeMismatch', 'rotl32', 'CompileFunction', 'OP_REM_U', 'ctx', '__builtin_expect', 'stack', 'src', 'm3Err_trapDivisionByZero', 'r', 'OP_I64_TRUNC_F32', 'call', 'numPagesToGrow', 'm3stack_t', 'OP_I64_TRUNC_SAT_F32', 'memory', 'm3Err_trapIntegerConversion', 'OP_I32_TRUNC_SAT_F64', 'branches', 'IM3FuncType', 'operand2', 'max_f32', 'dest', 'sqrt', 'byte', 'IM3Function', 'copysign', 'stackOffset', 'u64', 'f32', 'memmove', 'OP_DIV_U', 'm3Err_trapStackOverflow', 'OP_U32_TRUNC_F32', 'm3Err_trapIntegerOverflow', 'm3Err_trapUnreachable', 'M3Memory_ptr', '__builtin_ctzll', 'OP_U64_TRUNC_F64', 'source', 'rotl64', 'm3reg_t', 'i32', 'type', 'i64', 'OP_U64_TRUNC_F32', 'possible_trap', 'm3ret_t', '__builtin_clzll', 'MemorySegment', 'ceil', 'M3MemoryPoint_ptr', 'condition', 'rintf', 'pc_t', 'M3Result', 'memcpy', 'ESP_LOGE', 'val', 'm3Err_mallocFailed', 'sqrtf', 'm3_Yield', 'min_f64', 'truncf', 'elsePC', 'operand', '__builtin_ctz', 'op_Call', 'u', 'Call', 'result', 'M3RawCall', 'size', 'u16', 'requiredPages', 'f64', 'u8', 'floor', 'memset', 'OP_U64_TRUNC_SAT_F64', 'm3Err_none', 'trunc', 'OP_U32_TRUNC_SAT_F32', 'floorf', 'rint', 'destination', '__builtin_popcount', 'min_f32', 'M3Memory', 'IM3Runtime', 'OP_I64_TRUNC_F64', 'global', 'm3Err_trapTableElementIsNull', 'offset', 'OP_U64_TRUNC_SAT_F32', 'OP_I32_TRUNC_F64', 'error_details', 'IM3Memory', 'copysignf', 'OP_U32_TRUNC_SAT_F64', 'ESP_LOGI', 'mem8', 'isnan', 'm3StackCheck', 'callPC', 'max_f64', 'OP_U32_TRUNC_F64', 'module', 'tableIndex', 'IM3Operation', 'OP_I32_TRUNC_SAT_F32', 'OP_I64_TRUNC_SAT_F64', 'from', 'i8', 'i16', 'dst', 'src8', 'rotr32', 'iteration_count', '__builtin_popcountll', 'm3slot_t', 'branchIndex', '__builtin_clz', 'M3ImportContext', 'fabs', 'u32', 'preserve']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_env.h', 'required_symbols': ['IM3Environment', 'bytes_t', 'IM3FuncType', 'M3Result', 'M3Memory', 'IM3Runtime', 'IM3Module', 'M3MemoryInfo', 'M3Environment', 'cstr_t', 'IM3Function', 'M3Module', 'f32', 'IM3Memory', 'IM3Global', 'M3ImportInfo', 'M3CodePage', 'IM3ImportInfo', 'M3Runtime', 'ModuleVisitor', 'M3SectionHandler', 'f64', 'u8', 'M3Global', 'M3Function', 'i32', 'M3ErrorInfo', 'i64', 'M3DataSegment', 'u32', 'M3Compilation', 'IM3CodePage']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_libc.h', 'required_symbols': ['M3Result', 'IM3Module']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_parse.h', 'required_symbols': []}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_bind.h', 'required_symbols': ['ccstr_t', 'u8', 'IM3FuncType', 'M3Result']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_info.h', 'required_symbols': ['cstr_t']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_segmented_memory.h', 'required_symbols': ['i32', 'M3MemoryPoint', 'M3Result', 'IM3Memory', 'M3Memory', 'IM3Runtime', 'IM3MemoryPoint', 'u32', 'u8', 'M3MemoryRegion', 'MemorySegment']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_module.h', 'required_symbols': []}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extensions/wasm3_ext.h', 'required_symbols': []}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/fib64.wasm.h', 'required_symbols': ['fib64_wasm', 'fib64_wasm_len']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/coremark_minimal.wasm.h', 'required_symbols': ['coremark_minimal_wasm_len', 'coremark_minimal_wasm']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/fib32_tail.wasm.h', 'required_symbols': ['fib32_tail_wasm_len', 'fib32_tail_wasm']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/fib32.wasm.h', 'required_symbols': ['fib32_wasm', 'fib32_wasm_len']}, {'file': '/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/wasi_core.h', 'required_symbols': ['__wasi_advice_t', '__wasi_size_t', '__wasi_roflags_t', '__wasi_clockid_t', '__wasi_errno_t', '__wasi_siflags_t', '__wasi_inode_t', '__wasi_eventtype_t', '__wasi_prestat_t', '__wasi_fdflags_t', '__wasi_fdstat_t', '__wasi_subscription_u_t', '__wasi_device_t', '__wasi_fd_t', '__wasi_filedelta_t', '__wasi_eventrwflags_t', '__wasi_event_u_t', '__wasi_sdflags_t', '__wasi_event_fd_readwrite_t', '__wasi_prestat_u_t', '__wasi_rights_t', '__wasi_exitcode_t', '__wasi_oflags_t', '__wasi_subscription_clock_t', '__wasi_subscription_t', '__wasi_fstflags_t', '__wasi_subclockflags_t', '__wasi_filetype_t', '__wasi_lookupflags_t', '__wasi_timestamp_t', '__wasi_linkcount_t', '__wasi_preopentype_t', '__wasi_iovec_t', '__wasi_ciovec_t', '__wasi_subscription_fd_readwrite_t', '__wasi_dirnamlen_t', '__wasi_filestat_t', '__wasi_userdata_t', '__wasi_filesize_t', '__wasi_whence_t', '__wasi_dircookie_t', '__wasi_dirent_t', '__wasi_signal_t', '__wasi_event_t', '__wasi_prestat_dir_t', '__wasi_riflags_t']}]
        
        Current resolution status:
        {
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_wasi.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "m3_wasi_context_t",
      "m3_LinkWASI",
      "m3_GetWasiContext"
    ],
    "required_symbols": [
      "ccstr_t",
      "i32",
      "m3_wasi_context_t",
      "M3Result",
      "IM3Module",
      "u32"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_core.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "Read_u8",
      "Read_opcode",
      "default_free",
      "m3_Int_CopyMem",
      "Read_f64",
      "ReadLebSigned",
      "Read_utf8",
      "SPrintArg",
      "current_allocator",
      "c_waTypes",
      "MemoryAllocator",
      "ReadLEB_u32",
      "c_waCompactTypes",
      "ReadLEB_i7",
      "default_realloc",
      "Read_u64",
      "ReadLebUnsigned",
      "IsFpType",
      "SizeOfType",
      "Read_u32",
      "Is64BitType",
      "m3_Malloc_Impl",
      "SPrintValue",
      "m3_Free_Impl",
      "default_malloc",
      "m3Error",
      "ReadLEB_i32",
      "NormalizeType",
      "default_allocator",
      "IsIntType",
      "ReadLEB_u7",
      "ReportError",
      "m3_Realloc_Impl",
      "ReadLEB_i64",
      "m3_Abort",
      "m3_CopyMem",
      "Read_f32"
    ],
    "required_symbols": [
      "bytes_t",
      "M3Result",
      "default_free",
      "IM3Runtime",
      "IM3Module",
      "voidptr_t",
      "MemoryAllocator",
      "IM3Function",
      "cstr_t",
      "u64",
      "f32",
      "i8",
      "f64",
      "u8",
      "cbytes_t",
      "ccstr_t",
      "i32",
      "default_allocator",
      "i64",
      "u32",
      "m3opcode_t"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_config.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [],
    "required_symbols": [],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_tracer.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "m3_LinkTracer"
    ],
    "required_symbols": [
      "M3Result",
      "IM3Module"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_pointers.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "ptr_status_t",
      "safe_ptr_t",
      "safe_free_with_check",
      "struct (unnamed at /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_pointers.h:31:9)",
      "validate_pointer",
      "is_address_in_range",
      "ultra_safe_ptr_valid",
      "is_ptr_freeable",
      "ptr_check_result_t",
      "safe_free",
      "ultra_safe_free",
      "safe_m3_int_free",
      "validate_ptr_for_free",
      "is_ptr_valid"
    ],
    "required_symbols": [
      "ptr_status_t",
      "ptr_check_result_t"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_exec_defs.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "IM3Operation",
      "RunCode",
      "M3Memory_ptr",
      "M3MemoryPoint_ptr"
    ],
    "required_symbols": [
      "pc_t",
      "M3Memory_ptr",
      "IM3Operation",
      "m3ret_t",
      "f64",
      "M3MemoryPoint_ptr",
      "m3reg_t"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_function.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "IM3FuncType",
      "GetFunctionArgType",
      "GetFuncTypeNumParams",
      "RegisterWasmFunctions",
      "IM3Function",
      "GetFunctionImportModuleName",
      "struct (unnamed at /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_function.h:41:16)",
      "M3FuncType",
      "GetFuncTypeResultType",
      "Function_FreeCompiledCode",
      "GetFunctionNumArgsAndLocals",
      "RegisterWasmFunction",
      "struct (unnamed at /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_function.h:17:16)",
      "GetFunctionReturnType",
      "GetFuncTypeNumResults",
      "SPrintFunctionArgList",
      "AllocFuncType",
      "AreFuncTypesEqual",
      "GetFunctionNames",
      "GetFuncTypeParamType",
      "M3Function",
      "Function_Release",
      "GetFunctionNumArgs",
      "GetFunctionNumReturns",
      "ParseFunctionSignature",
      "WasmFunctionEntry"
    ],
    "required_symbols": [
      "cstr_t",
      "bytes_t",
      "IM3FuncType",
      "pc_t",
      "M3FuncType",
      "u16",
      "M3Result",
      "M3Module",
      "IM3Function",
      "m3stack_t",
      "M3ImportInfo",
      "IM3Module",
      "u32",
      "u8",
      "WasmFunctionEntry",
      "M3Function"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "m3_NewEnvironment",
      "m3Err_trapOutOfBoundsMemoryAccess",
      "m3_GetArgCount",
      "m3Err_tooManyMemorySections",
      "m3Err_noCompiler",
      "IM3Module",
      "m3Err_globalTypeMismatch",
      "m3_GetArgType",
      "m3Err_trapTableIndexOutOfRange",
      "m3_GetRetType",
      "m3Err_malformedFunctionSignature",
      "m3Err_missingUTF8",
      "m3Err_trapIndirectCallTypeMismatch",
      "m3_CallVL",
      "m3Err_mallocFailedCodePage",
      "m3_NewRuntime",
      "m3Err_typeMismatch",
      "m3_RunStart",
      "IM3ImportInfo",
      "m3_LinkRawFunction",
      "m3Err_moduleAlreadyLinked",
      "IM3BacktraceFrame",
      "m3Err_trapDivisionByZero",
      "m3_FindFunction",
      "M3ErrorInfo",
      "m3_SetCustomSectionHandler",
      "m3Err_moduleNotLinked",
      "m3Err_trapExit",
      "m3Err_trapIntegerConversion",
      "M3ValueType",
      "m3Err_globaIndexOutOfBounds",
      "IM3Environment",
      "m3Err_typeCountMismatch",
      "m3Err_settingImmutableGlobal",
      "m3_GetGlobalType",
      "m3_GetUserData",
      "IM3Function",
      "M3Module",
      "m3Err_lebOverflow",
      "m3Err_wasmOverrun",
      "m3Err_restrictedOpcode",
      "M3BacktraceInfo",
      "m3Err_nullRuntime",
      "m3_ParseModule",
      "m3Err_trapStackOverflow",
      "m3Err_wasmMalformed",
      "m3Err_trapIntegerOverflow",
      "m3_FreeEnvironment",
      "m3_FindGlobal",
      "m3Err_trapUnreachable",
      "M3Function",
      "m3_LoadModule",
      "m3Err_globalMemoryNotAllocated",
      "m3_SetModuleName",
      "m3_GetFunctionName",
      "m3Err_wasmSectionOverrun",
      "m3_GetErrorInfo",
      "m3Err_functionStackUnderrun",
      "m3Err_m3Err_malformedUtf8",
      "m3Err_wasmUnderrun",
      "m3_PrintProfilerInfo",
      "m3_GetFunctionModule",
      "M3Result",
      "m3_GetResultsVL",
      "m3Err_misorderedWasmSection",
      "IM3BacktraceInfo",
      "m3_Call",
      "m3Err_argumentTypeMismatch",
      "m3Err_invalidTypeId",
      "m3Err_mallocFailed",
      "m3_Yield",
      "m3Err_missingCompiledCode",
      "IM3Global",
      "m3_GetResultsV",
      "m3_SetGlobal",
      "M3Runtime",
      "m3Err_wasmMemoryOverflow",
      "M3RawCall",
      "m3Err_incompatibleWasmVersion",
      "m3_PrintRuntimeInfo",
      "M3Global",
      "m3Err_tooManyArgsRets",
      "m3_ResetErrorInfo",
      "m3Err_none",
      "m3_CompileModule",
      "m3Err_functionStackOverflow",
      "m3_GetGlobal",
      "m3_GetTableFunction",
      "m3_GetResults",
      "m3Err_globalNotMutable",
      "m3_LinkRawFunctionEx",
      "m3_FreeRuntime",
      "m3Err_functionLookupFailed",
      "m3_GetModuleRuntime",
      "IM3ImportContext",
      "M3TaggedValue",
      "m3Err_wasmSectionUnderrun",
      "IM3Runtime",
      "m3_GetMemory",
      "m3_GetRetCount",
      "m3_CallV",
      "M3Environment",
      "m3Err_trapTableElementIsNull",
      "m3_FreeModule",
      "m3_GetBacktrace",
      "M3ImportInfo",
      "m3Err_globalLookupFailed",
      "m3Err_wasmMissingInitExpr",
      "m3Err_unknownOpcode",
      "m3Err_argumentCountMismatch",
      "IM3TaggedValue",
      "M3SectionHandler",
      "M3BacktraceFrame",
      "m3_PrintM3Info",
      "m3_GetModuleName",
      "m3Err_functionImportMissing",
      "M3ImportContext",
      "m3_CallArgv",
      "m3_GetMemorySize",
      "m3Err_trapAbort"
    ],
    "required_symbols": [
      "IM3Environment",
      "M3ErrorInfo",
      "IM3Function",
      "IM3TaggedValue",
      "M3Result",
      "M3RawCall",
      "IM3Global",
      "IM3BacktraceInfo",
      "IM3Runtime",
      "M3SectionHandler",
      "IM3ImportContext",
      "IM3Module",
      "IM3BacktraceFrame",
      "M3ValueType",
      "M3BacktraceFrame"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_includes.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [],
    "required_symbols": [],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_config_platforms.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "preallocate_wasm_memory",
      "check_memory_available"
    ],
    "required_symbols": [
      "ptr",
      "ESP_LOGI"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_code.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "GetEndCodePage",
      "FreeCodePages",
      "EmitWord_impl",
      "EmitWord32",
      "EmitWord64",
      "M3CodePageHeader",
      "PopCodePage",
      "NewCodePage",
      "GetPageStartPC",
      "GetPagePC",
      "CountCodePages",
      "M3CodePage",
      "PushCodePage",
      "NumFreeLines",
      "M3CodeMappingPage",
      "IM3CodePage"
    ],
    "required_symbols": [
      "M3CodePage",
      "M3CodePageHeader",
      "IM3CodePage"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/esp_try.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "last_error",
      "example_function_trycatch",
      "faulty_function",
      "backtrace"
    ],
    "required_symbols": [
      "esp_err_to_name",
      "esp_backtrace_print",
      "ESP_LOGE",
      "ESP_LOGI"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_math_utils.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "rotr32",
      "min_f32",
      "max_f64",
      "min_f64",
      "rotr64",
      "max_f32",
      "rotl32",
      "rotl64"
    ],
    "required_symbols": [
      "signbit",
      "u64",
      "f32",
      "__builtin_expect",
      "mask",
      "u32",
      "f64"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_exception.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "error_details"
    ],
    "required_symbols": [],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/wasm3_defs.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "bytes_t",
      "pc_t",
      "cvptr_t",
      "voidptr_t",
      "cstr_t",
      "u64",
      "f32",
      "u16",
      "code_t",
      "i8",
      "i16",
      "f64",
      "u8",
      "cbytes_t",
      "m3reg_t",
      "ccstr_t",
      "i32",
      "m3stack_t",
      "i64",
      "m3slot_t",
      "m3ret_t",
      "u32",
      "m3opcode_t"
    ],
    "required_symbols": [
      "i64",
      "u16",
      "u64",
      "m3slot_t",
      "code_t",
      "u8"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_compile.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "M3OpInfo",
      "IM3OpInfo",
      "GetSingleRetType",
      "c_m3RegisterUnallocated",
      "IM3CompilationScope",
      "struct (unnamed at /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_compile.h:74:9)",
      "CompileRawFunction",
      "M3CompilationScope",
      "IsIntRegisterSlotAlias",
      "CompileBlock",
      "CompileFunction",
      "IsFpRegisterSlotAlias",
      "GetMaxUsedSlotPlusOne",
      "IsRegisterAllocated",
      "GetOpInfo",
      "struct (unnamed at /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_compile.h:131:16)",
      "c_slotUnused",
      "struct (unnamed at /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_compile.h:56:16)",
      "IsStackPolymorphic",
      "enum (unnamed at /Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_compile.h:19:1)",
      "IsRegisterSlotAlias",
      "M3Compiler",
      "CompileBlockStatements",
      "IM3Compilation",
      "M3Compilation"
    ],
    "required_symbols": [
      "bytes_t",
      "pc_t",
      "IM3FuncType",
      "M3OpInfo",
      "M3Result",
      "IM3OpInfo",
      "c_m3RegisterUnallocated",
      "IM3Runtime",
      "IM3Module",
      "IM3Function",
      "M3CompilationScope",
      "u16",
      "IM3Operation",
      "i8",
      "u8",
      "i32",
      "M3Compiler",
      "m3slot_t",
      "IM3Compilation",
      "u32",
      "M3Compilation",
      "m3opcode_t",
      "IM3CodePage"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_esp_wasi.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "m3_wasi_context_t",
      "m3_LinkEspWASI_Hello",
      "m3_LinkEspWASI",
      "m3_GetWasiContext"
    ],
    "required_symbols": [
      "ccstr_t",
      "i32",
      "m3_wasi_context_t",
      "M3Result",
      "IM3Module",
      "u32"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_exec.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "op_u64_LessThan_ss",
      "op_i64_Divide_sr",
      "op_i32_LessThan_ss",
      "op_f64_Sqrt_s",
      "op_u64_Rotl_rs",
      "op_f64_Convert_u64_r_s",
      "op_u32_And_ss",
      "op_f32_Divide_sr",
      "op_u64_Rotl_sr",
      "op_i64_LessThanOrEqual_ss",
      "op_f32_Negate_r",
      "op_f64_Subtract_sr",
      "op_f32_Min_sr",
      "op_i32_Subtract_rs",
      "op_u32_Trunc_f64_s_r",
      "op_u64_TruncSat_f32_r_s",
      "op_f64_Convert_i64_r_r",
      "op_f64_Convert_i64_s_s",
      "op_u64_Divide_rs",
      "op_f64_CopySign_rs",
      "op_u64_Xor_ss",
      "op_f64_Convert_i32_r_r",
      "op_u64_ShiftLeft_rs",
      "op_u32_Remainder_rs",
      "op_i64_TruncSat_f64_r_r",
      "op_f32_GreaterThan_sr",
      "op_u32_ShiftRight_sr",
      "op_u32_Divide_sr",
      "op_i32_Wrap_i64_r",
      "op_i32_Load_i16_r",
      "op_f32_CopySign_ss",
      "op_u32_Rotl_ss",
      "op_u32_Rotl_rs",
      "op_f64_Negate_r",
      "op_f64_Convert_u32_s_s",
      "op_i64_Extend16_s_r",
      "op_i64_Equal_ss",
      "op_u32_TruncSat_f32_s_s",
      "op_f64_LessThan_rs",
      "op_i32_Store_u8_ss",
      "op_u64_ShiftRight_sr",
      "op_i64_Subtract_rs",
      "op_f32_Convert_i32_s_r",
      "op_f32_Reinterpret_i32_s_r",
      "op_f64_Floor_s",
      "op_f64_Ceil_r",
      "op_f64_Trunc_s",
      "op_u32_Clz_r",
      "op_i32_NotEqual_rs",
      "op_i32_Store_i32_rs",
      "op_u64_GreaterThanOrEqual_ss",
      "op_u64_TruncSat_f32_r_r",
      "op_Select_i64_ssr",
      "op_BranchIfPrologue_s",
      "op_f32_GreaterThanOrEqual_rs",
      "op_GetGlobal_s64",
      "op_SetRegister_f32",
      "op_i32_Load_i8_s",
      "op_i64_Remainder_ss",
      "op_f32_Store_f32_rs",
      "op_u32_Xor_rs",
      "op_u64_Trunc_f32_r_r",
      "op_Unsupported",
      "op_u64_GreaterThan_rs",
      "op_u32_Xor_ss",
      "op_u32_Rotl_sr",
      "op_u64_Ctz_r",
      "op_u32_ShiftLeft_ss",
      "op_u32_TruncSat_f64_s_r",
      "op_i64_TruncSat_f64_s_r",
      "op_SetGlobal_s64",
      "op_u64_Rotl_ss",
      "op_f64_LessThanOrEqual_sr",
      "op_i64_Trunc_f32_r_s",
      "op_f64_Subtract_ss",
      "op_u32_GreaterThanOrEqual_sr",
      "op_i32_TruncSat_f64_s_s",
      "op_u64_TruncSat_f64_r_s",
      "op_i64_Add_rs",
      "op_i64_GreaterThanOrEqual_ss",
      "op_f64_LessThanOrEqual_ss",
      "op_u64_Trunc_f64_r_s",
      "op_u32_Remainder_sr",
      "op_u32_Or_ss",
      "op_i32_GreaterThanOrEqual_sr",
      "op_f32_Multiply_rs",
      "op_f64_Min_sr",
      "op_i64_Extend_u32_r",
      "op_Select_i32_srs",
      "op_u32_LessThan_sr",
      "op_BranchIf_r",
      "op_CopySlot_32",
      "op_i32_Store_u8_rs",
      "op_i64_GreaterThan_sr",
      "op_u32_GreaterThan_rs",
      "op_Call",
      "op_Const64",
      "op_i64_Load_i64_r",
      "op_u64_Trunc_f64_s_r",
      "op_Select_i32_sss",
      "op_f64_GreaterThanOrEqual_ss",
      "op_i64_ShiftRight_sr",
      "op_f32_NotEqual_ss",
      "op_i64_Remainder_sr",
      "op_f32_Reinterpret_i32_s_s",
      "op_i64_Store_u8_ss",
      "op_f32_Floor_s",
      "op_f32_Abs_r",
      "op_i64_Load_i8_s",
      "op_PreserveSetSlot_i32",
      "op_i32_Subtract_sr",
      "op_Select_f32_srs",
      "op_i32_Trunc_f64_s_r",
      "op_i64_Extend8_s_s",
      "op_u32_TruncSat_f32_r_s",
      "op_f32_CopySign_sr",
      "op_i32_Equal_rs",
      "op_i64_LessThanOrEqual_rs",
      "op_i32_TruncSat_f32_r_s",
      "op_f64_Ceil_s",
      "op_i32_LessThan_rs",
      "op_i64_Load_i16_r",
      "op_f64_Min_rs",
      "op_i64_Remainder_rs",
      "op_Select_i64_rss",
      "op_u64_Divide_ss",
      "op_i32_Load_u8_r",
      "op_f64_CopySign_sr",
      "op_i32_TruncSat_f32_r_r",
      "op_GetGlobal_s32",
      "op_f64_Convert_i32_s_r",
      "op_u32_Ctz_r",
      "op_End",
      "op_i32_Remainder_rs",
      "op_f64_GreaterThanOrEqual_sr",
      "op_f64_Sqrt_r",
      "op_i64_TruncSat_f32_s_s",
      "op_i64_Trunc_f64_r_s",
      "op_u64_Or_ss",
      "op_u32_GreaterThanOrEqual_rs",
      "op_If_s",
      "op_i64_Load_i32_r",
      "op_i64_LessThanOrEqual_sr",
      "op_u64_ShiftLeft_sr",
      "op_u64_And_rs",
      "op_i64_Trunc_f32_r_r",
      "op_u64_And_ss",
      "op_If_r",
      "op_f64_Store_f64_sr",
      "op_u64_TruncSat_f64_r_r",
      "op_f32_Convert_i32_r_s",
      "op_i64_Load_i8_r",
      "op_u32_Trunc_f64_s_s",
      "op_f32_Trunc_s",
      "op_f32_NotEqual_rs",
      "op_PreserveCopySlot_64",
      "op_f64_Divide_ss",
      "op_i32_Remainder_sr",
      "op_u32_Trunc_f64_r_r",
      "op_f32_Convert_u64_r_s",
      "op_f32_Max_sr",
      "op_f32_Subtract_ss",
      "op_i64_Reinterpret_f64_s_r",
      "op_f64_Floor_r",
      "op_u64_Clz_s",
      "op_i32_TruncSat_f32_s_s",
      "op_u64_TruncSat_f32_s_r",
      "op_f64_Reinterpret_i64_r_s",
      "op_i64_Store_i16_ss",
      "op_f32_Convert_u64_s_r",
      "op_i64_Extend_u32_s",
      "op_i32_Store_i16_ss",
      "op_u64_ShiftLeft_ss",
      "op_f32_LessThanOrEqual_ss",
      "op_u32_Popcnt_s",
      "op_f32_Reinterpret_i32_r_r",
      "op_i64_Reinterpret_f64_r_s",
      "op_u32_TruncSat_f64_r_s",
      "op_f32_Load_f32_r",
      "op_u32_Trunc_f32_s_s",
      "op_i64_Load_u8_s",
      "op_u32_TruncSat_f64_r_r",
      "op_u64_TruncSat_f64_s_s",
      "op_u64_GreaterThan_ss",
      "op_u64_LessThanOrEqual_rs",
      "op_u64_TruncSat_f32_s_s",
      "op_f64_Equal_rs",
      "op_i64_TruncSat_f64_r_s",
      "op_i32_TruncSat_f64_r_s",
      "op_u64_Remainder_rs",
      "op_u64_Rotr_rs",
      "op_f64_Min_ss",
      "op_i64_Multiply_rs",
      "op_i64_Extend32_s_r",
      "op_u64_LessThanOrEqual_sr",
      "op_f32_LessThan_ss",
      "op_f32_Divide_ss",
      "op_Select_f64_rss",
      "op_i64_Subtract_ss",
      "op_BranchIfPrologue_r",
      "op_f32_Sqrt_r",
      "op_f64_GreaterThan_sr",
      "op_SetGlobal_f32",
      "op_u64_Trunc_f64_r_r",
      "op_i32_TruncSat_f64_s_r",
      "op_i32_Trunc_f64_s_s",
      "op_i64_Reinterpret_f64_s_s",
      "op_PreserveSetSlot_i64",
      "op_i64_NotEqual_rs",
      "op_i64_GreaterThanOrEqual_sr",
      "op_f32_Negate_s",
      "op_u64_Xor_rs",
      "op_u64_Remainder_sr",
      "op_f64_Reinterpret_i64_s_s",
      "op_u32_Divide_rs",
      "op_BranchIf_s",
      "op_i32_GreaterThan_sr",
      "op_f32_Divide_rs",
      "op_u64_Rotr_sr",
      "op_i32_Load_u8_s",
      "op_i64_ShiftRight_rs",
      "op_i64_Load_u8_r",
      "op_i32_Load_i32_r",
      "op_Return",
      "op_i64_Extend8_s_r",
      "op_f32_Multiply_ss",
      "op_u32_Rotr_sr",
      "op_f32_Subtract_rs",
      "op_i32_Trunc_f32_s_s",
      "op_u64_Popcnt_s",
      "op_i64_Store_u8_sr",
      "op_i32_Reinterpret_f32_s_s",
      "op_u64_LessThan_rs",
      "op_ContinueLoop",
      "op_f32_Nearest_r",
      "op_f64_CopySign_ss",
      "op_i32_Load_i16_s",
      "op_Select_f64_srs",
      "op_i64_LessThan_sr",
      "op_u64_ShiftRight_ss",
      "op_i64_LessThan_rs",
      "op_f32_Add_rs",
      "op_i64_TruncSat_f64_s_s",
      "op_i64_Store_i32_sr",
      "op_Select_f32_ssr",
      "op_u64_TruncSat_f64_s_r",
      "op_f64_Reinterpret_i64_r_r",
      "op_Branch",
      "op_u64_Divide_sr",
      "op_CallIndirect",
      "op_i32_Wrap_i64_s",
      "op_i32_EqualToZero_s",
      "op_SetRegister_f64",
      "op_u32_Or_rs",
      "op_PreserveCopySlot_32",
      "op_u64_Trunc_f32_s_s",
      "op_f32_Reinterpret_i32_r_s",
      "op_f64_Convert_u32_r_s",
      "op_u32_LessThanOrEqual_sr",
      "op_Select_f64_rsr",
      "op_i32_Divide_ss",
      "op_u32_Remainder_ss",
      "op_i32_Divide_rs",
      "WASM_Entry_IgnoreBufferOverflow",
      "op_i64_TruncSat_f32_r_s",
      "op_Select_f64_sss",
      "op_f64_Max_sr",
      "op_u32_TruncSat_f32_s_r",
      "op_f32_Nearest_s",
      "op_i64_TruncSat_f32_s_r",
      "op_f32_Abs_s",
      "op_f64_Store_f64_ss",
      "op_PreserveSetSlot_f32",
      "op_u64_LessThanOrEqual_ss",
      "op_f64_LessThanOrEqual_rs",
      "op_MemCopy",
      "op_f32_Sqrt_s",
      "op_f64_NotEqual_ss",
      "op_f64_Convert_u64_s_s",
      "op_i64_ShiftRight_ss",
      "op_u64_GreaterThanOrEqual_sr",
      "op_Compile",
      "op_i32_Trunc_f64_r_r",
      "op_i64_Load_u16_r",
      "op_u32_Rotr_ss",
      "op_i64_EqualToZero_r",
      "op_i32_Remainder_ss",
      "op_Select_i64_srs",
      "op_f64_LessThan_ss",
      "op_f64_Convert_u32_s_r",
      "op_f32_Ceil_s",
      "op_f64_Promote_f32_r",
      "op_i64_Divide_ss",
      "op_i32_Store_i16_sr",
      "op_i32_Store_i32_ss",
      "op_SetGlobal_s32",
      "op_u32_ShiftRight_rs",
      "op_f64_Divide_rs",
      "op_f32_Min_ss",
      "op_Select_f32_rsr",
      "op_i64_Load_u16_s",
      "op_u32_Divide_ss",
      "op_f32_Convert_i32_s_s",
      "op_f32_Convert_u32_s_r",
      "op_i64_Load_i64_s",
      "op_f64_Nearest_r",
      "op_u32_ShiftLeft_rs",
      "op_f32_Convert_i64_s_s",
      "op_i32_Load_i32_s",
      "op_u64_Or_rs",
      "op_u64_Trunc_f32_r_s",
      "op_i64_Store_i16_rs",
      "op_u64_Popcnt_r",
      "op_u32_And_rs",
      "op_i64_Store_i32_rs",
      "op_SetGlobal_i64",
      "op_u64_Trunc_f32_s_r",
      "op_i64_Load_i16_s",
      "op_BranchTable",
      "op_Unreachable",
      "op_MemGrow",
      "op_f32_Convert_u32_r_r",
      "op_Select_i32_rss",
      "op_i32_Reinterpret_f32_r_r",
      "op_f32_Convert_i64_r_s",
      "op_Select_f64_ssr",
      "op_i32_Extend16_s_s",
      "op_u32_GreaterThan_sr",
      "op_u32_Trunc_f32_r_r",
      "op_i32_Trunc_f64_r_s",
      "op_f64_Add_ss",
      "op_i32_ShiftRight_ss",
      "op_u64_Remainder_ss",
      "op_i32_Trunc_f32_r_r",
      "op_ContinueLoopIf",
      "op_i64_Trunc_f64_r_r",
      "op_u32_LessThanOrEqual_rs",
      "op_u32_GreaterThanOrEqual_ss",
      "op_i64_Extend16_s_s",
      "op_i32_ShiftRight_sr",
      "op_f32_Load_f32_s",
      "op_i32_Load_u16_r",
      "op_i64_Extend_i32_r",
      "op_i64_Trunc_f32_s_r",
      "op_i32_Reinterpret_f32_s_r",
      "op_f64_Convert_i32_r_s",
      "op_i64_Extend_i32_s",
      "op_f32_Demote_f64_r",
      "op_u64_Rotr_ss",
      "op_i64_EqualToZero_s",
      "op_i32_Trunc_f32_r_s",
      "op_u32_Clz_s",
      "op_f32_Convert_u64_r_r",
      "op_i32_LessThanOrEqual_rs",
      "op_f64_Promote_f32_s",
      "op_f32_Convert_i32_r_r",
      "op_MemSize",
      "op_f64_Multiply_ss",
      "op_f64_GreaterThan_rs",
      "op_u32_LessThan_ss",
      "op_Entry",
      "m3SegmentedMemAccess",
      "op_i32_EqualToZero_r",
      "op_Select_i64_sss",
      "op_f32_Store_f32_sr",
      "op_i64_Load_u32_r",
      "op_i32_Store_i32_sr",
      "op_f64_NotEqual_rs",
      "op_u32_TruncSat_f64_s_s",
      "op_i64_Add_ss",
      "op_i32_LessThan_sr",
      "op_i32_GreaterThan_rs",
      "op_i32_TruncSat_f64_r_r",
      "op_Select_f32_rrs",
      "op_f64_Convert_i32_s_s",
      "op_f32_Convert_u64_s_s",
      "op_u32_ShiftRight_ss",
      "op_f32_Demote_f64_s",
      "op_i32_Load_i8_r",
      "op_f32_LessThanOrEqual_sr",
      "op_i32_GreaterThanOrEqual_rs",
      "op_f64_Max_ss",
      "op_f32_GreaterThan_rs",
      "op_f32_Convert_i64_s_r",
      "op_i64_LessThan_ss",
      "op_i64_Store_i16_sr",
      "op_SetGlobal_f64",
      "op_i64_Load_u32_s",
      "op_f32_Store_f32_rr",
      "op_PreserveSetSlot_f64",
      "op_Select_f32_rss",
      "op_i32_Extend8_s_r",
      "op_i32_Trunc_f32_s_r",
      "op_f32_Convert_i64_r_r",
      "op_f32_CopySign_rs",
      "op_i32_NotEqual_ss",
      "op_i64_Multiply_ss",
      "op_MemFill",
      "op_f32_GreaterThanOrEqual_sr",
      "op_f64_Load_f64_s",
      "op_f64_Multiply_rs",
      "op_Select_i32_ssr",
      "op_f64_Convert_i64_r_s",
      "op_CopySlot_64",
      "op_f64_Divide_sr",
      "op_u32_Trunc_f64_r_s",
      "op_i64_GreaterThanOrEqual_rs",
      "op_f64_Nearest_s",
      "op_f32_GreaterThan_ss",
      "op_i64_Equal_rs",
      "op_f32_Convert_u32_r_s",
      "op_i32_LessThanOrEqual_sr",
      "op_u64_Clz_r",
      "op_u32_Ctz_s",
      "op_f64_Add_rs",
      "op_f64_Convert_i64_s_r",
      "op_i64_Store_i64_sr",
      "op_i64_Store_i64_rs",
      "op_u32_Popcnt_r",
      "op_i64_Trunc_f64_s_s",
      "op_f64_GreaterThanOrEqual_rs",
      "op_i64_NotEqual_ss",
      "op_u32_Trunc_f32_s_r",
      "op_f32_Min_rs",
      "op_u32_GreaterThan_ss",
      "op_i32_Store_i16_rs",
      "op_f32_LessThanOrEqual_rs",
      "op_i64_Trunc_f64_s_r",
      "op_u32_LessThanOrEqual_ss",
      "op_i64_Extend32_s_s",
      "op_f64_Max_rs",
      "op_f64_Load_f64_r",
      "op_i64_Reinterpret_f64_r_r",
      "op_i32_Multiply_ss",
      "op_i32_Extend8_s_s",
      "op_i32_Reinterpret_f32_r_s",
      "op_i64_GreaterThan_rs",
      "op_i32_LessThanOrEqual_ss",
      "op_i32_GreaterThan_ss",
      "op_f32_Equal_ss",
      "op_i32_Load_u16_s",
      "op_f64_Abs_r",
      "op_i32_Store_u8_sr",
      "op_i64_Store_i64_ss",
      "op_f32_Store_f32_ss",
      "op_f32_Floor_r",
      "op_u32_TruncSat_f32_r_r",
      "op_i32_GreaterThanOrEqual_ss",
      "op_i32_Add_rs",
      "op_i64_Store_u8_rs",
      "op_f64_Reinterpret_i64_s_r",
      "op_i64_Store_i32_ss",
      "op_f32_Ceil_r",
      "op_i32_ShiftRight_rs",
      "op_f32_Trunc_r",
      "op_Loop",
      "op_Select_f64_rrs",
      "op_f32_Max_ss",
      "op_u32_ShiftLeft_sr",
      "op_f64_Equal_ss",
      "op_u64_GreaterThanOrEqual_rs",
      "op_Select_f32_sss",
      "Call",
      "op_SetGlobal_i32",
      "op_u64_ShiftRight_rs",
      "op_u64_Trunc_f64_s_s",
      "op_f64_Trunc_r",
      "op_f64_Abs_s",
      "op_i64_GreaterThan_ss",
      "op_i32_Add_ss",
      "op_u32_Trunc_f32_r_s",
      "op_u64_Ctz_s",
      "op_i64_Load_i32_s",
      "op_f32_Convert_u32_s_s",
      "op_SetRegister_i32",
      "op_i64_Divide_rs",
      "op_f32_LessThan_rs",
      "op_u64_LessThan_sr",
      "op_i32_Subtract_ss",
      "op_f32_Equal_rs",
      "op_i32_Extend16_s_r",
      "op_f64_Convert_u64_s_r",
      "op_f64_Store_f64_rs",
      "op_i64_TruncSat_f32_r_r",
      "op_CallRawFunction",
      "op_f32_GreaterThanOrEqual_ss",
      "op_u32_Rotr_rs",
      "op_f32_LessThan_sr",
      "op_f32_Add_ss",
      "op_f64_Convert_u64_r_r",
      "op_i32_TruncSat_f32_s_r",
      "op_i64_Trunc_f32_s_s",
      "op_i32_Equal_ss",
      "op_f64_GreaterThan_ss",
      "op_u32_LessThan_rs",
      "op_f64_Subtract_rs",
      "op_f32_Subtract_sr",
      "op_f32_Max_rs",
      "op_i32_Multiply_rs",
      "op_f64_Store_f64_rr",
      "op_Const32",
      "op_SetRegister_i64",
      "op_u64_GreaterThan_sr",
      "op_f64_LessThan_sr",
      "op_f64_Negate_s",
      "op_i32_Divide_sr",
      "op_f64_Convert_u32_r_r",
      "op_i64_Subtract_sr"
    ],
    "required_symbols": [
      "m3Err_trapOutOfBoundsMemoryAccess",
      "sp",
      "fabsf",
      "ceilf",
      "operand1",
      "rotr64",
      "IM3Module",
      "value",
      "stack_backup",
      "OP_I32_TRUNC_F32",
      "m3Err_trapTableIndexOutOfRange",
      "branch",
      "function",
      "loopId",
      "newSegments",
      "numTargets",
      "runtime",
      "m3Err_trapIndirectCallTypeMismatch",
      "rotl32",
      "CompileFunction",
      "OP_REM_U",
      "ctx",
      "__builtin_expect",
      "stack",
      "src",
      "m3Err_trapDivisionByZero",
      "r",
      "OP_I64_TRUNC_F32",
      "call",
      "numPagesToGrow",
      "m3stack_t",
      "OP_I64_TRUNC_SAT_F32",
      "memory",
      "m3Err_trapIntegerConversion",
      "OP_I32_TRUNC_SAT_F64",
      "branches",
      "IM3FuncType",
      "operand2",
      "max_f32",
      "dest",
      "sqrt",
      "byte",
      "IM3Function",
      "copysign",
      "stackOffset",
      "u64",
      "f32",
      "memmove",
      "OP_DIV_U",
      "m3Err_trapStackOverflow",
      "OP_U32_TRUNC_F32",
      "m3Err_trapIntegerOverflow",
      "m3Err_trapUnreachable",
      "M3Memory_ptr",
      "__builtin_ctzll",
      "OP_U64_TRUNC_F64",
      "source",
      "rotl64",
      "m3reg_t",
      "i32",
      "type",
      "i64",
      "OP_U64_TRUNC_F32",
      "possible_trap",
      "m3ret_t",
      "__builtin_clzll",
      "MemorySegment",
      "ceil",
      "M3MemoryPoint_ptr",
      "condition",
      "rintf",
      "pc_t",
      "M3Result",
      "memcpy",
      "ESP_LOGE",
      "val",
      "m3Err_mallocFailed",
      "sqrtf",
      "m3_Yield",
      "min_f64",
      "truncf",
      "elsePC",
      "operand",
      "__builtin_ctz",
      "op_Call",
      "u",
      "Call",
      "result",
      "M3RawCall",
      "size",
      "u16",
      "requiredPages",
      "f64",
      "u8",
      "floor",
      "memset",
      "OP_U64_TRUNC_SAT_F64",
      "m3Err_none",
      "trunc",
      "OP_U32_TRUNC_SAT_F32",
      "floorf",
      "rint",
      "destination",
      "__builtin_popcount",
      "min_f32",
      "M3Memory",
      "IM3Runtime",
      "OP_I64_TRUNC_F64",
      "global",
      "m3Err_trapTableElementIsNull",
      "offset",
      "OP_U64_TRUNC_SAT_F32",
      "OP_I32_TRUNC_F64",
      "error_details",
      "IM3Memory",
      "copysignf",
      "OP_U32_TRUNC_SAT_F64",
      "ESP_LOGI",
      "mem8",
      "isnan",
      "m3StackCheck",
      "callPC",
      "max_f64",
      "OP_U32_TRUNC_F64",
      "module",
      "tableIndex",
      "IM3Operation",
      "OP_I32_TRUNC_SAT_F32",
      "OP_I64_TRUNC_SAT_F64",
      "from",
      "i8",
      "i16",
      "dst",
      "src8",
      "rotr32",
      "iteration_count",
      "__builtin_popcountll",
      "m3slot_t",
      "branchIndex",
      "__builtin_clz",
      "M3ImportContext",
      "fabs",
      "u32",
      "preserve"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_env.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "Environment_Release",
      "Module_AddFunction",
      "ReleaseCodePage",
      "Environment_AddFuncType",
      "M3MemoryInfo",
      "M3Environment",
      "AcquireCodePage",
      "Module_PreallocFunctions",
      "M3Module",
      "ForEachModule",
      "FreeImportInfo",
      "M3Runtime",
      "ModuleVisitor",
      "v_FindFunction",
      "Module_AddGlobal",
      "Module_GetFunction",
      "M3Global",
      "Module_GenerateNames",
      "M3DataSegment",
      "AcquireCodePageWithCapacity"
    ],
    "required_symbols": [
      "IM3Environment",
      "bytes_t",
      "IM3FuncType",
      "M3Result",
      "M3Memory",
      "IM3Runtime",
      "IM3Module",
      "M3MemoryInfo",
      "M3Environment",
      "cstr_t",
      "IM3Function",
      "M3Module",
      "f32",
      "IM3Memory",
      "IM3Global",
      "M3ImportInfo",
      "M3CodePage",
      "IM3ImportInfo",
      "M3Runtime",
      "ModuleVisitor",
      "M3SectionHandler",
      "f64",
      "u8",
      "M3Global",
      "M3Function",
      "i32",
      "M3ErrorInfo",
      "i64",
      "M3DataSegment",
      "u32",
      "M3Compilation",
      "IM3CodePage"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_libc.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "m3_LinkLibC",
      "m3_LinkSpecTest"
    ],
    "required_symbols": [
      "M3Result",
      "IM3Module"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_parse.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [],
    "required_symbols": [],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_bind.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "ConvertTypeCharToTypeId",
      "SignatureToFuncType"
    ],
    "required_symbols": [
      "ccstr_t",
      "u8",
      "IM3FuncType",
      "M3Result"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_info.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "ProfileHit"
    ],
    "required_symbols": [
      "cstr_t"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_segmented_memory.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "GetMemorySegment",
      "M3MemoryPoint",
      "Runtime_Release",
      "M3Memory",
      "IM3MemoryPoint",
      "allocate_segment",
      "m3_NewMemory",
      "M3Memory_t",
      "GetEffectiveAddress",
      "IsLinearAddress",
      "InitRuntime",
      "IM3Memory",
      "GrowStack",
      "GetStackAddress",
      "M3MemoryRegion",
      "ResizeMemory",
      "IsStackAddress",
      "m3_StoreInt",
      "m3_GetMemoryPoint",
      "m3_LoadInt",
      "AddressType",
      "M3MemoryPoint_t",
      "AddSegment",
      "MemorySegment"
    ],
    "required_symbols": [
      "i32",
      "M3MemoryPoint",
      "M3Result",
      "IM3Memory",
      "M3Memory",
      "IM3Runtime",
      "IM3MemoryPoint",
      "u32",
      "u8",
      "M3MemoryRegion",
      "MemorySegment"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_module.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [],
    "required_symbols": [],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extensions/wasm3_ext.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "m3_GetFunctionByIndex",
      "m3_NewModule",
      "m3_InjectFunction"
    ],
    "required_symbols": [],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/fib64.wasm.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [],
    "required_symbols": [
      "fib64_wasm",
      "fib64_wasm_len"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/coremark_minimal.wasm.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [],
    "required_symbols": [
      "coremark_minimal_wasm_len",
      "coremark_minimal_wasm"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/fib32_tail.wasm.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [],
    "required_symbols": [
      "fib32_tail_wasm_len",
      "fib32_tail_wasm"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/fib32.wasm.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [],
    "required_symbols": [
      "fib32_wasm",
      "fib32_wasm_len"
    ],
    "blocking_symbols": []
  },
  "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/extra/wasi_core.h": {
    "resolved": false,
    "current_includes": [],
    "provided_symbols": [
      "__wasi_advice_t",
      "__wasi_path_create_directory",
      "__wasi_device_t",
      "__wasi_filedelta_t",
      "__wasi_fd_fdstat_get",
      "__wasi_eventrwflags_t",
      "__wasi_fd_read",
      "__wasi_sock_recv",
      "__wasi_rights_t",
      "__wasi_exitcode_t",
      "__wasi_fd_renumber",
      "__wasi_poll_oneoff",
      "__wasi_fd_close",
      "__wasi_subscription_t",
      "__wasi_args_get",
      "__wasi_filetype_t",
      "__wasi_sched_yield",
      "__wasi_preopentype_t",
      "__wasi_fd_prestat_dir_name",
      "__wasi_fd_pwrite",
      "__wasi_whence_t",
      "__wasi_dircookie_t",
      "__wasi_sock_shutdown",
      "__wasi_path_remove_directory",
      "__wasi_fd_fdstat_set_flags",
      "__wasi_signal_t",
      "__wasi_clockid_t",
      "__wasi_inode_t",
      "__wasi_fd_prestat_get",
      "__wasi_event_u_t",
      "__wasi_fd_allocate",
      "__wasi_fd_fdstat_set_rights",
      "__wasi_fd_sync",
      "__wasi_sdflags_t",
      "__wasi_fstflags_t",
      "__wasi_subclockflags_t",
      "__wasi_path_symlink",
      "__wasi_ciovec_t",
      "__wasi_iovec_t",
      "__wasi_proc_raise",
      "__wasi_subscription_fd_readwrite_t",
      "__wasi_dirnamlen_t",
      "__wasi_fd_pread",
      "__wasi_sock_send",
      "__wasi_random_get",
      "__wasi_prestat_dir_t",
      "__wasi_riflags_t",
      "__wasi_path_rename",
      "__wasi_clock_res_get",
      "__wasi_fd_filestat_get",
      "__wasi_roflags_t",
      "__wasi_eventtype_t",
      "__wasi_prestat_t",
      "__wasi_fdflags_t",
      "__wasi_fdstat_t",
      "__wasi_environ_sizes_get",
      "__wasi_fd_datasync",
      "__wasi_fd_t",
      "__wasi_fd_filestat_set_times",
      "__wasi_prestat_u_t",
      "__wasi_path_filestat_get",
      "__wasi_oflags_t",
      "__wasi_subscription_clock_t",
      "__wasi_environ_get",
      "__wasi_fd_write",
      "__wasi_path_link",
      "__wasi_linkcount_t",
      "__wasi_userdata_t",
      "__wasi_filesize_t",
      "__wasi_event_t",
      "__wasi_clock_time_get",
      "__wasi_size_t",
      "__wasi_errno_t",
      "__wasi_siflags_t",
      "__wasi_subscription_u_t",
      "__wasi_fd_seek",
      "__wasi_args_sizes_get",
      "__wasi_path_filestat_set_times",
      "__wasi_proc_exit",
      "__wasi_event_fd_readwrite_t",
      "__wasi_path_open",
      "__wasi_fd_readdir",
      "__wasi_path_unlink_file",
      "__wasi_lookupflags_t",
      "__wasi_timestamp_t",
      "__wasi_fd_filestat_set_size",
      "__wasi_fd_tell",
      "__wasi_path_readlink",
      "__wasi_filestat_t",
      "__wasi_fd_advise",
      "__wasi_dirent_t"
    ],
    "required_symbols": [
      "__wasi_advice_t",
      "__wasi_size_t",
      "__wasi_roflags_t",
      "__wasi_clockid_t",
      "__wasi_errno_t",
      "__wasi_siflags_t",
      "__wasi_inode_t",
      "__wasi_eventtype_t",
      "__wasi_prestat_t",
      "__wasi_fdflags_t",
      "__wasi_fdstat_t",
      "__wasi_subscription_u_t",
      "__wasi_device_t",
      "__wasi_fd_t",
      "__wasi_filedelta_t",
      "__wasi_eventrwflags_t",
      "__wasi_event_u_t",
      "__wasi_sdflags_t",
      "__wasi_event_fd_readwrite_t",
      "__wasi_prestat_u_t",
      "__wasi_rights_t",
      "__wasi_exitcode_t",
      "__wasi_oflags_t",
      "__wasi_subscription_clock_t",
      "__wasi_subscription_t",
      "__wasi_fstflags_t",
      "__wasi_subclockflags_t",
      "__wasi_filetype_t",
      "__wasi_lookupflags_t",
      "__wasi_timestamp_t",
      "__wasi_linkcount_t",
      "__wasi_preopentype_t",
      "__wasi_iovec_t",
      "__wasi_ciovec_t",
      "__wasi_subscription_fd_readwrite_t",
      "__wasi_dirnamlen_t",
      "__wasi_filestat_t",
      "__wasi_userdata_t",
      "__wasi_filesize_t",
      "__wasi_whence_t",
      "__wasi_dircookie_t",
      "__wasi_dirent_t",
      "__wasi_signal_t",
      "__wasi_event_t",
      "__wasi_prestat_dir_t",
      "__wasi_riflags_t"
    ],
    "blocking_symbols": []
  }
}
        
        Suggest how to reorganize headers to resolve these issues while maintaining
        consistency across all files.
        
Response: 
 {'candidates': [{'content': {'parts': [{'text': '```json\n{\n  "new_headers": [],\n  "moved_symbols": [],\n  "include_order_fixes": [\n    {\n      "file": "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_wasi.h",\n      "current_order": [],\n      "suggested_order": [\n        "wasm3.h"\n      ],\n      "reason": "Missing required symbols: IM3Module, M3Result. These are provided by wasm3.h"\n    },\n    {\n      "file": "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_core.h",\n      "current_order": [],\n      "suggested_order": [\n        "wasm3_defs.h",\n        "wasm3.h"\n      ],\n      "reason": "Missing required symbols: bytes_t, M3Result, IM3Runtime, IM3Module, voidptr_t, MemoryAllocator, IM3Function, cstr_t, u64, f32, i8, f64, u8, cbytes_t, ccstr_t, i32, default_allocator, i64, u32, m3opcode_t. These are defined in wasm3_defs.h and wasm3.h."\n    },\n    {\n      "file": "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_tracer.h",\n      "current_order": [],\n      "suggested_order": [\n        "wasm3.h"\n      ],\n      "reason": "Missing required symbols: M3Result, IM3Module. These are provided by wasm3.h"\n    },\n    {\n      "file": "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_exec_defs.h",\n      "current_order": [],\n      "suggested_order": [\n        "wasm3_defs.h"\n      ],\n      "reason": "Missing required symbols: pc_t, M3Memory_ptr, m3ret_t, f64, M3MemoryPoint_ptr, m3reg_t. These are defined in wasm3_defs.h."\n    },\n    {\n      "file": "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_function.h",\n      "current_order": [],\n      "suggested_order": [\n        "wasm3_defs.h",\n        "wasm3.h"\n      ],\n      "reason": "Missing required symbols: cstr_t, bytes_t, IM3FuncType, pc_t, M3FuncType, u16, M3Result, M3Module, IM3Function, m3stack_t, M3ImportInfo, IM3Module, u32, u8, WasmFunctionEntry, M3Function. These are defined in wasm3_defs.h and wasm3.h"\n    },\n    {\n      "file": "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_config_platforms.h",\n      "current_order": [],\n      "suggested_order": [\n        "esp_log.h"\n      ],\n      "reason": "Missing required symbol: ESP_LOGI.  This is provided by esp_log.h"\n    },\n    {\n      "file": "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/esp_try.h",\n      "current_order": [],\n      "suggested_order": [\n        "esp_log.h",\n        "esp_err.h",\n        "esp_backtrace.h"\n\n      ],\n      "reason": "Missing required symbols: esp_err_to_name, esp_backtrace_print, ESP_LOGE, ESP_LOGI. These are provided by esp_log.h, esp_err.h and esp_backtrace.h"\n    },\n    {\n      "file": "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_math_utils.h",\n      "current_order": [],\n      "suggested_order": [\n        "wasm3_defs.h",\n        "math.h"\n      ],\n      "reason": "Missing required symbols: signbit, u64, f32, __builtin_expect, mask, u32, f64. These are provided by math.h and wasm3_defs.h"\n    },\n    {\n      "file": "/Users/riccardo/Sources/GitHub/hello.esp32/hello-idf/components/wasm3-helloesp/platforms/embedded/esp32-idf-wasi/wasm3/wasm3/m3_api_esp_wasi.h",\n      "current_order": [],\n      "suggested_order": [\n        "wasm3.h"\n      ],\n      "reason": "Missing required symbols: ccstr_t, i32, m3_wasi_context_t, M3Result, IM3Module, u32. These are defined in wasm3.h and indirectly through other includes in wasm3.h"\n    }\n  ]\n}\n```'}], 'role': 'model'}, 'finishReason': 'STOP', 'avgLogprobs': -0.022216163746748188}], 'usageMetadata': {'promptTokenCount': 24285, 'candidatesTokenCount': 1437, 'totalTokenCount': 25722}, 'modelVersion': 'gemini-1.5-pro-002'} 


Analisi delle inclusioni:

Problemi rilevati:
Traceback (most recent call last):
  File "/Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pydev/pydevd.py", line 1551, in _exec
    pydev_imports.execfile(file, globals, locals)  # execute the script
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pydev/_pydev_imps/_pydev_execfile.py", line 18, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "test_includeManager.py", line 65, in <module>
    main()
  File "test_includeManager.py", line 50, in main
    print(json.dumps(result['verification'], indent=2))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/encoder.py", line 202, in encode
    chunks = list(chunks)
             ^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/encoder.py", line 432, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/encoder.py", line 406, in _iterencode_dict
    yield from chunks
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/encoder.py", line 406, in _iterencode_dict
    yield from chunks
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/encoder.py", line 439, in _iterencode
    o = _default(o)
        ^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type set is not JSON serializable
