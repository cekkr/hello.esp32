
build/esp-idf/main/CMakeFiles/__idf_main.dir/wasm3/source/m3_compile.c.obj:     file format elf32-xtensa-le
build/esp-idf/main/CMakeFiles/__idf_main.dir/wasm3/source/m3_compile.c.obj
architecture: xtensa, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000

Xtensa header:

Machine     = Base
Insn tables = true
Literal tables = true

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .literal.EmitPointer 00000008  00000000  00000000  00000034  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .literal.ReservePointer 00000008  00000000  00000000  0000003c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  2 .literal.op_ContinueLoop 00000004  00000000  00000000  00000044  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  3 .literal.op_BranchTable 00000014  00000000  00000000  00000048  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .literal.op_Branch 00000008  00000000  00000000  0000005c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .literal.op_Unsupported 00000008  00000000  00000000  00000064  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .literal.op_Loop 0000000c  00000000  00000000  0000006c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .literal.op_Unreachable 00000004  00000000  00000000  00000078  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .literal.op_CallRawFunction 00000058  00000000  00000000  0000007c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .literal.profileOp 0000000c  00000000  00000000  000000d4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .literal.op_PreserveSetSlot_f64 00000018  00000000  00000000  000000e0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .literal.op_PreserveSetSlot_f32 0000001c  00000000  00000000  000000f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .literal.op_PreserveSetSlot_i64 00000018  00000000  00000000  00000114  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .literal.op_PreserveSetSlot_i32 00000018  00000000  00000000  0000012c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .literal.op_SetSlot_f64 00000010  00000000  00000000  00000144  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .literal.op_SetSlot_f32 00000014  00000000  00000000  00000154  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 16 .literal.op_SetSlot_i64 00000010  00000000  00000000  00000168  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 17 .literal.op_SetSlot_i32 00000010  00000000  00000000  00000178  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 18 .literal.op_SetRegister_f64 00000010  00000000  00000000  00000188  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 19 .literal.op_SetRegister_f32 00000014  00000000  00000000  00000198  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 20 .literal.op_SetRegister_i64 00000010  00000000  00000000  000001ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 21 .literal.op_SetRegister_i32 00000010  00000000  00000000  000001bc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 22 .literal.op_SetGlobal_s64 00000014  00000000  00000000  000001cc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 23 .literal.op_SetGlobal_s32 00000014  00000000  00000000  000001e0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 24 .literal.op_SetGlobal_f64 0000000c  00000000  00000000  000001f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 25 .literal.op_SetGlobal_f32 00000010  00000000  00000000  00000200  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 26 .literal.op_SetGlobal_i64 0000000c  00000000  00000000  00000210  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 27 .literal.op_SetGlobal_i32 0000000c  00000000  00000000  0000021c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 28 .literal.op_Select_f64_rsr 00000010  00000000  00000000  00000228  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 29 .literal.op_Select_f64_rrs 00000010  00000000  00000000  00000238  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 30 .literal.op_Select_f64_rss 00000018  00000000  00000000  00000248  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 31 .literal.op_Select_f64_ssr 00000018  00000000  00000000  00000260  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 32 .literal.op_Select_f64_srs 00000018  00000000  00000000  00000278  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 33 .literal.op_Select_f64_sss 00000020  00000000  00000000  00000290  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 34 .literal.op_Select_f32_rsr 00000018  00000000  00000000  000002b0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 35 .literal.op_Select_f32_rrs 00000018  00000000  00000000  000002c8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 36 .literal.op_Select_f32_rss 0000001c  00000000  00000000  000002e0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 37 .literal.op_Select_f32_ssr 00000020  00000000  00000000  000002fc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 38 .literal.op_Select_f32_srs 00000020  00000000  00000000  0000031c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 39 .literal.op_Select_f32_sss 00000024  00000000  00000000  0000033c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 40 .literal.op_Select_i64_sss 00000020  00000000  00000000  00000360  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 41 .literal.op_Select_i64_ssr 00000018  00000000  00000000  00000380  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 42 .literal.op_Select_i64_srs 00000018  00000000  00000000  00000398  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 43 .literal.op_Select_i64_rss 00000018  00000000  00000000  000003b0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 44 .literal.op_Select_i32_sss 00000020  00000000  00000000  000003c8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 45 .literal.op_Select_i32_ssr 00000018  00000000  00000000  000003e8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 46 .literal.op_Select_i32_srs 00000018  00000000  00000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 47 .literal.op_Select_i32_rss 00000018  00000000  00000000  00000418  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 48 .literal.op_BranchIfPrologue_r 00000010  00000000  00000000  00000430  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 49 .literal.op_If_r 00000010  00000000  00000000  00000440  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 50 .literal.op_PreserveCopySlot_64 00000020  00000000  00000000  00000450  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 51 .literal.op_CopySlot_64 00000018  00000000  00000000  00000470  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 52 .literal.op_BranchIfPrologue_s 00000018  00000000  00000000  00000488  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 53 .literal.op_If_s 00000018  00000000  00000000  000004a0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 54 .literal.op_PreserveCopySlot_32 00000020  00000000  00000000  000004b8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 55 .literal.op_CopySlot_32 00000018  00000000  00000000  000004d8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 56 .literal.op_ContinueLoopIf 0000000c  00000000  00000000  000004f0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 57 .literal.op_GetGlobal_s64 00000014  00000000  00000000  000004fc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 58 .literal.op_GetGlobal_s32 00000014  00000000  00000000  00000510  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 59 .literal.op_i64_Extend32_s_s 00000010  00000000  00000000  00000524  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 60 .literal.op_i64_Extend32_s_r 00000008  00000000  00000000  00000534  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 61 .literal.op_i64_Extend16_s_s 00000010  00000000  00000000  0000053c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 62 .literal.op_i64_Extend16_s_r 00000008  00000000  00000000  0000054c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 63 .literal.op_i64_Extend8_s_s 00000010  00000000  00000000  00000554  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 64 .literal.op_i64_Extend8_s_r 00000008  00000000  00000000  00000564  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 65 .literal.op_i32_Extend16_s_s 00000010  00000000  00000000  0000056c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 66 .literal.op_i32_Extend16_s_r 00000008  00000000  00000000  0000057c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 67 .literal.op_i32_Extend8_s_s 00000010  00000000  00000000  00000584  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 68 .literal.op_i32_Extend8_s_r 00000008  00000000  00000000  00000594  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 69 .literal.op_f64_Reinterpret_i64_s_s 00000018  00000000  00000000  0000059c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 70 .literal.op_f64_Reinterpret_i64_s_r 00000010  00000000  00000000  000005b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 71 .literal.op_f64_Reinterpret_i64_r_s 00000010  00000000  00000000  000005c4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 72 .literal.op_f64_Reinterpret_i64_r_r 00000008  00000000  00000000  000005d4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 73 .literal.op_f32_Reinterpret_i32_s_s 00000018  00000000  00000000  000005dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 74 .literal.op_f32_Reinterpret_i32_s_r 00000010  00000000  00000000  000005f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 75 .literal.op_f32_Reinterpret_i32_r_s 00000014  00000000  00000000  00000604  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 76 .literal.op_f32_Reinterpret_i32_r_r 0000000c  00000000  00000000  00000618  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 77 .literal.op_i64_Reinterpret_f64_s_s 00000018  00000000  00000000  00000624  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 78 .literal.op_i64_Reinterpret_f64_s_r 00000010  00000000  00000000  0000063c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 79 .literal.op_i64_Reinterpret_f64_r_s 00000010  00000000  00000000  0000064c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 80 .literal.op_i64_Reinterpret_f64_r_r 00000008  00000000  00000000  0000065c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 81 .literal.op_i32_Reinterpret_f32_s_s 00000018  00000000  00000000  00000664  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 82 .literal.op_i32_Reinterpret_f32_s_r 00000014  00000000  00000000  0000067c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 83 .literal.op_i32_Reinterpret_f32_r_s 00000010  00000000  00000000  00000690  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 84 .literal.op_i32_Reinterpret_f32_r_r 0000000c  00000000  00000000  000006a0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 85 .literal.op_f64_Promote_f32_s 00000014  00000000  00000000  000006ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 86 .literal.op_f64_Promote_f32_r 00000010  00000000  00000000  000006c0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 87 .literal.op_f64_Convert_u64_s_s 0000001c  00000000  00000000  000006d0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 88 .literal.op_f64_Convert_u64_s_r 00000014  00000000  00000000  000006ec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 89 .literal.op_f64_Convert_u64_r_s 00000014  00000000  00000000  00000700  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 90 .literal.op_f64_Convert_u64_r_r 0000000c  00000000  00000000  00000714  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 91 .literal.op_f64_Convert_i64_s_s 0000001c  00000000  00000000  00000720  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 92 .literal.op_f64_Convert_i64_s_r 00000014  00000000  00000000  0000073c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 93 .literal.op_f64_Convert_i64_r_s 00000014  00000000  00000000  00000750  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 94 .literal.op_f64_Convert_i64_r_r 0000000c  00000000  00000000  00000764  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 95 .literal.op_f64_Convert_u32_s_s 0000001c  00000000  00000000  00000770  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 96 .literal.op_f64_Convert_u32_s_r 00000014  00000000  00000000  0000078c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 97 .literal.op_f64_Convert_u32_r_s 00000014  00000000  00000000  000007a0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 98 .literal.op_f64_Convert_u32_r_r 0000000c  00000000  00000000  000007b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 99 .literal.op_f64_Convert_i32_s_s 0000001c  00000000  00000000  000007c0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
100 .literal.op_f64_Convert_i32_s_r 00000014  00000000  00000000  000007dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
101 .literal.op_f64_Convert_i32_r_s 00000014  00000000  00000000  000007f0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
102 .literal.op_f64_Convert_i32_r_r 0000000c  00000000  00000000  00000804  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
103 .literal.op_f32_Demote_f64_s 00000018  00000000  00000000  00000810  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
104 .literal.op_f32_Demote_f64_r 00000010  00000000  00000000  00000828  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
105 .literal.op_f32_Convert_u64_s_s 0000001c  00000000  00000000  00000838  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
106 .literal.op_f32_Convert_u64_s_r 00000014  00000000  00000000  00000854  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
107 .literal.op_f32_Convert_u64_r_s 00000018  00000000  00000000  00000868  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
108 .literal.op_f32_Convert_u64_r_r 00000010  00000000  00000000  00000880  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
109 .literal.op_f32_Convert_i64_s_s 0000001c  00000000  00000000  00000890  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
110 .literal.op_f32_Convert_i64_s_r 00000014  00000000  00000000  000008ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
111 .literal.op_f32_Convert_i64_r_s 00000018  00000000  00000000  000008c0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
112 .literal.op_f32_Convert_i64_r_r 00000010  00000000  00000000  000008d8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
113 .literal.op_f32_Convert_u32_s_s 00000018  00000000  00000000  000008e8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
114 .literal.op_f32_Convert_u32_s_r 00000010  00000000  00000000  00000900  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
115 .literal.op_f32_Convert_u32_r_s 00000014  00000000  00000000  00000910  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
116 .literal.op_f32_Convert_u32_r_r 0000000c  00000000  00000000  00000924  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
117 .literal.op_f32_Convert_i32_s_s 00000018  00000000  00000000  00000930  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
118 .literal.op_f32_Convert_i32_s_r 00000010  00000000  00000000  00000948  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
119 .literal.op_f32_Convert_i32_r_s 00000014  00000000  00000000  00000958  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
120 .literal.op_f32_Convert_i32_r_r 0000000c  00000000  00000000  0000096c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
121 .literal.op_u64_Trunc_f64_s_s 00000034  00000000  00000000  00000978  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
122 .literal.op_u64_Trunc_f64_s_r 0000002c  00000000  00000000  000009ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
123 .literal.op_u64_Trunc_f64_r_s 0000002c  00000000  00000000  000009d8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
124 .literal.op_u64_Trunc_f64_r_r 00000024  00000000  00000000  00000a04  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
125 .literal.op_i64_Trunc_f64_s_s 00000034  00000000  00000000  00000a28  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
126 .literal.op_i64_Trunc_f64_s_r 0000002c  00000000  00000000  00000a5c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
127 .literal.op_i64_Trunc_f64_r_s 0000002c  00000000  00000000  00000a88  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
128 .literal.op_i64_Trunc_f64_r_r 00000024  00000000  00000000  00000ab4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
129 .literal.op_u64_Trunc_f32_s_s 00000028  00000000  00000000  00000ad8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
130 .literal.op_u64_Trunc_f32_s_r 00000024  00000000  00000000  00000b00  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
131 .literal.op_u64_Trunc_f32_r_s 00000020  00000000  00000000  00000b24  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
132 .literal.op_u64_Trunc_f32_r_r 0000001c  00000000  00000000  00000b44  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
133 .literal.op_i64_Trunc_f32_s_s 00000028  00000000  00000000  00000b60  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
134 .literal.op_i64_Trunc_f32_s_r 00000024  00000000  00000000  00000b88  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
135 .literal.op_i64_Trunc_f32_r_s 00000020  00000000  00000000  00000bac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
136 .literal.op_i64_Trunc_f32_r_r 0000001c  00000000  00000000  00000bcc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
137 .literal.op_i64_Extend_u32_s 00000010  00000000  00000000  00000be8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
138 .literal.op_i64_Extend_u32_r 00000008  00000000  00000000  00000bf8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
139 .literal.op_i64_Extend_i32_s 00000010  00000000  00000000  00000c00  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
140 .literal.op_i64_Extend_i32_r 00000008  00000000  00000000  00000c10  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
141 .literal.op_u32_Trunc_f64_s_s 00000034  00000000  00000000  00000c18  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
142 .literal.op_u32_Trunc_f64_s_r 0000002c  00000000  00000000  00000c4c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
143 .literal.op_u32_Trunc_f64_r_s 0000002c  00000000  00000000  00000c78  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
144 .literal.op_u32_Trunc_f64_r_r 00000024  00000000  00000000  00000ca4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
145 .literal.op_i32_Trunc_f64_s_s 00000038  00000000  00000000  00000cc8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
146 .literal.op_i32_Trunc_f64_s_r 00000030  00000000  00000000  00000d00  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
147 .literal.op_i32_Trunc_f64_r_s 00000030  00000000  00000000  00000d30  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
148 .literal.op_i32_Trunc_f64_r_r 00000028  00000000  00000000  00000d60  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
149 .literal.op_u32_Trunc_f32_s_s 00000024  00000000  00000000  00000d88  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
150 .literal.op_u32_Trunc_f32_s_r 00000020  00000000  00000000  00000dac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
151 .literal.op_u32_Trunc_f32_r_s 0000001c  00000000  00000000  00000dcc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
152 .literal.op_u32_Trunc_f32_r_r 00000018  00000000  00000000  00000de8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
153 .literal.op_i32_Trunc_f32_s_s 00000024  00000000  00000000  00000e00  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
154 .literal.op_i32_Trunc_f32_s_r 00000020  00000000  00000000  00000e24  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
155 .literal.op_i32_Trunc_f32_r_s 0000001c  00000000  00000000  00000e44  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
156 .literal.op_i32_Trunc_f32_r_r 00000018  00000000  00000000  00000e60  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
157 .literal.op_i32_Wrap_i64_s 00000010  00000000  00000000  00000e78  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
158 .literal.op_i32_Wrap_i64_r 00000008  00000000  00000000  00000e88  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
159 .literal.op_f64_Divide_ss 0000001c  00000000  00000000  00000e90  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
160 .literal.op_f64_Divide_sr 00000014  00000000  00000000  00000eac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
161 .literal.op_f64_Divide_rs 00000014  00000000  00000000  00000ec0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
162 .literal.op_f64_Multiply_ss 0000001c  00000000  00000000  00000ed4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
163 .literal.op_f64_Multiply_rs 00000014  00000000  00000000  00000ef0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
164 .literal.op_f64_Subtract_ss 0000001c  00000000  00000000  00000f04  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
165 .literal.op_f64_Subtract_sr 00000014  00000000  00000000  00000f20  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
166 .literal.op_f64_Subtract_rs 00000014  00000000  00000000  00000f34  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
167 .literal.op_f64_Add_ss 0000001c  00000000  00000000  00000f48  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
168 .literal.op_f64_Add_rs 00000014  00000000  00000000  00000f64  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
169 .literal.op_f64_Negate_s 00000014  00000000  00000000  00000f78  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
170 .literal.op_f64_Negate_r 0000000c  00000000  00000000  00000f8c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
171 .literal.op_f64_Abs_s 00000010  00000000  00000000  00000f98  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
172 .literal.op_f64_Abs_r 00000008  00000000  00000000  00000fa8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
173 .literal.op_f32_Divide_ss 00000020  00000000  00000000  00000fb0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
174 .literal.op_f32_Divide_sr 0000001c  00000000  00000000  00000fd0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
175 .literal.op_f32_Divide_rs 0000001c  00000000  00000000  00000fec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
176 .literal.op_f32_Multiply_ss 0000001c  00000000  00000000  00001008  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
177 .literal.op_f32_Multiply_rs 00000018  00000000  00000000  00001024  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
178 .literal.op_f32_Subtract_ss 0000001c  00000000  00000000  0000103c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
179 .literal.op_f32_Subtract_sr 00000018  00000000  00000000  00001058  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
180 .literal.op_f32_Subtract_rs 00000018  00000000  00000000  00001070  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
181 .literal.op_f32_Add_ss 0000001c  00000000  00000000  00001088  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
182 .literal.op_f32_Add_rs 00000018  00000000  00000000  000010a4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
183 .literal.op_f32_Negate_s 00000014  00000000  00000000  000010bc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
184 .literal.op_f32_Negate_r 00000010  00000000  00000000  000010d0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
185 .literal.op_f32_Abs_s 00000014  00000000  00000000  000010e0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
186 .literal.op_f32_Abs_r 00000010  00000000  00000000  000010f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
187 .literal.op_u64_Rotr_ss 00000018  00000000  00000000  00001104  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
188 .literal.op_u64_Rotr_sr 00000010  00000000  00000000  0000111c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
189 .literal.op_u64_Rotr_rs 00000010  00000000  00000000  0000112c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
190 .literal.op_u64_Rotl_ss 00000018  00000000  00000000  0000113c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
191 .literal.op_u64_Rotl_sr 00000010  00000000  00000000  00001154  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
192 .literal.op_u64_Rotl_rs 00000010  00000000  00000000  00001164  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
193 .literal.op_u64_ShiftRight_ss 00000018  00000000  00000000  00001174  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
194 .literal.op_u64_ShiftRight_sr 00000010  00000000  00000000  0000118c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
195 .literal.op_u64_ShiftRight_rs 00000010  00000000  00000000  0000119c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
196 .literal.op_i64_ShiftRight_ss 00000018  00000000  00000000  000011ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
197 .literal.op_i64_ShiftRight_sr 00000010  00000000  00000000  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
198 .literal.op_i64_ShiftRight_rs 00000010  00000000  00000000  000011d4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
199 .literal.op_u64_ShiftLeft_ss 00000018  00000000  00000000  000011e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
200 .literal.op_u64_ShiftLeft_sr 00000010  00000000  00000000  000011fc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
201 .literal.op_u64_ShiftLeft_rs 00000010  00000000  00000000  0000120c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
202 .literal.op_u64_Xor_ss 00000018  00000000  00000000  0000121c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
203 .literal.op_u64_Xor_rs 00000010  00000000  00000000  00001234  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
204 .literal.op_u64_Or_ss 00000018  00000000  00000000  00001244  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
205 .literal.op_u64_Or_rs 00000010  00000000  00000000  0000125c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
206 .literal.op_u64_And_ss 00000018  00000000  00000000  0000126c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
207 .literal.op_u64_And_rs 00000010  00000000  00000000  00001284  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
208 .literal.op_u64_Remainder_ss 00000020  00000000  00000000  00001294  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
209 .literal.op_u64_Remainder_sr 00000018  00000000  00000000  000012b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
210 .literal.op_u64_Remainder_rs 00000018  00000000  00000000  000012cc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
211 .literal.op_i64_Remainder_ss 00000024  00000000  00000000  000012e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
212 .literal.op_i64_Remainder_sr 0000001c  00000000  00000000  00001308  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
213 .literal.op_i64_Remainder_rs 0000001c  00000000  00000000  00001324  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
214 .literal.op_u64_Divide_ss 00000020  00000000  00000000  00001340  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
215 .literal.op_u64_Divide_sr 00000018  00000000  00000000  00001360  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
216 .literal.op_u64_Divide_rs 00000018  00000000  00000000  00001378  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
217 .literal.op_i64_Divide_ss 00000024  00000000  00000000  00001390  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
218 .literal.op_i64_Divide_sr 0000001c  00000000  00000000  000013b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
219 .literal.op_i64_Divide_rs 0000001c  00000000  00000000  000013d0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
220 .literal.op_i64_Multiply_ss 00000018  00000000  00000000  000013ec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
221 .literal.op_i64_Multiply_rs 00000010  00000000  00000000  00001404  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
222 .literal.op_i64_Subtract_ss 00000018  00000000  00000000  00001414  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
223 .literal.op_i64_Subtract_sr 00000010  00000000  00000000  0000142c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
224 .literal.op_i64_Subtract_rs 00000010  00000000  00000000  0000143c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
225 .literal.op_i64_Add_ss 00000018  00000000  00000000  0000144c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
226 .literal.op_i64_Add_rs 00000010  00000000  00000000  00001464  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
227 .literal.op_u32_Rotr_ss 00000018  00000000  00000000  00001474  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
228 .literal.op_u32_Rotr_sr 00000010  00000000  00000000  0000148c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
229 .literal.op_u32_Rotr_rs 00000010  00000000  00000000  0000149c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
230 .literal.op_u32_Rotl_ss 00000018  00000000  00000000  000014ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
231 .literal.op_u32_Rotl_sr 00000010  00000000  00000000  000014c4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
232 .literal.op_u32_Rotl_rs 00000010  00000000  00000000  000014d4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
233 .literal.op_u32_ShiftRight_ss 00000018  00000000  00000000  000014e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
234 .literal.op_u32_ShiftRight_sr 00000010  00000000  00000000  000014fc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
235 .literal.op_u32_ShiftRight_rs 00000010  00000000  00000000  0000150c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
236 .literal.op_i32_ShiftRight_ss 00000018  00000000  00000000  0000151c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
237 .literal.op_i32_ShiftRight_sr 00000010  00000000  00000000  00001534  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
238 .literal.op_i32_ShiftRight_rs 00000010  00000000  00000000  00001544  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
239 .literal.op_u32_ShiftLeft_ss 00000018  00000000  00000000  00001554  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
240 .literal.op_u32_ShiftLeft_sr 00000010  00000000  00000000  0000156c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
241 .literal.op_u32_ShiftLeft_rs 00000010  00000000  00000000  0000157c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
242 .literal.op_u32_Xor_ss 00000018  00000000  00000000  0000158c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
243 .literal.op_u32_Xor_rs 00000010  00000000  00000000  000015a4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
244 .literal.op_u32_Or_ss 00000018  00000000  00000000  000015b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
245 .literal.op_u32_Or_rs 00000010  00000000  00000000  000015cc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
246 .literal.op_u32_And_ss 00000018  00000000  00000000  000015dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
247 .literal.op_u32_And_rs 00000010  00000000  00000000  000015f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
248 .literal.op_u32_Remainder_ss 0000001c  00000000  00000000  00001604  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
249 .literal.op_u32_Remainder_sr 00000014  00000000  00000000  00001620  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
250 .literal.op_u32_Remainder_rs 00000014  00000000  00000000  00001634  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
251 .literal.op_i32_Remainder_ss 00000020  00000000  00000000  00001648  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
252 .literal.op_i32_Remainder_sr 00000018  00000000  00000000  00001668  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
253 .literal.op_i32_Remainder_rs 00000018  00000000  00000000  00001680  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
254 .literal.op_u32_Divide_ss 0000001c  00000000  00000000  00001698  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
255 .literal.op_u32_Divide_sr 00000014  00000000  00000000  000016b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
256 .literal.op_u32_Divide_rs 00000014  00000000  00000000  000016c8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
257 .literal.op_i32_Divide_ss 00000020  00000000  00000000  000016dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
258 .literal.op_i32_Divide_sr 00000018  00000000  00000000  000016fc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
259 .literal.op_i32_Divide_rs 00000018  00000000  00000000  00001714  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
260 .literal.op_i32_Multiply_ss 00000018  00000000  00000000  0000172c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
261 .literal.op_i32_Multiply_rs 00000010  00000000  00000000  00001744  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
262 .literal.op_i32_Subtract_ss 00000018  00000000  00000000  00001754  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
263 .literal.op_i32_Subtract_sr 00000010  00000000  00000000  0000176c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
264 .literal.op_i32_Subtract_rs 00000010  00000000  00000000  0000177c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
265 .literal.op_i32_Add_ss 00000018  00000000  00000000  0000178c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
266 .literal.op_i32_Add_rs 00000010  00000000  00000000  000017a4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
267 .literal.op_f64_GreaterThanOrEqual_ss 0000001c  00000000  00000000  000017b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
268 .literal.op_f64_GreaterThanOrEqual_sr 00000014  00000000  00000000  000017d0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
269 .literal.op_f64_GreaterThanOrEqual_rs 00000014  00000000  00000000  000017e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
270 .literal.op_f64_LessThanOrEqual_ss 0000001c  00000000  00000000  000017f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
271 .literal.op_f64_LessThanOrEqual_sr 00000014  00000000  00000000  00001814  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
272 .literal.op_f64_LessThanOrEqual_rs 00000014  00000000  00000000  00001828  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
273 .literal.op_f64_GreaterThan_ss 0000001c  00000000  00000000  0000183c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
274 .literal.op_f64_GreaterThan_sr 00000014  00000000  00000000  00001858  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
275 .literal.op_f64_GreaterThan_rs 00000014  00000000  00000000  0000186c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
276 .literal.op_f64_LessThan_ss 0000001c  00000000  00000000  00001880  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
277 .literal.op_f64_LessThan_sr 00000014  00000000  00000000  0000189c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
278 .literal.op_f64_LessThan_rs 00000014  00000000  00000000  000018b0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
279 .literal.op_f64_NotEqual_ss 0000001c  00000000  00000000  000018c4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
280 .literal.op_f64_NotEqual_rs 00000014  00000000  00000000  000018e0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
281 .literal.op_f64_Equal_ss 0000001c  00000000  00000000  000018f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
282 .literal.op_f64_Equal_rs 00000014  00000000  00000000  00001910  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
283 .literal.op_f32_GreaterThanOrEqual_ss 00000018  00000000  00000000  00001924  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
284 .literal.op_f32_GreaterThanOrEqual_sr 00000014  00000000  00000000  0000193c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
285 .literal.op_f32_GreaterThanOrEqual_rs 00000014  00000000  00000000  00001950  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
286 .literal.op_f32_LessThanOrEqual_ss 00000018  00000000  00000000  00001964  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
287 .literal.op_f32_LessThanOrEqual_sr 00000014  00000000  00000000  0000197c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
288 .literal.op_f32_LessThanOrEqual_rs 00000014  00000000  00000000  00001990  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
289 .literal.op_f32_GreaterThan_ss 00000018  00000000  00000000  000019a4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
290 .literal.op_f32_GreaterThan_sr 00000014  00000000  00000000  000019bc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
291 .literal.op_f32_GreaterThan_rs 00000014  00000000  00000000  000019d0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
292 .literal.op_f32_LessThan_ss 00000018  00000000  00000000  000019e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
293 .literal.op_f32_LessThan_sr 00000014  00000000  00000000  000019fc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
294 .literal.op_f32_LessThan_rs 00000014  00000000  00000000  00001a10  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
295 .literal.op_f32_NotEqual_ss 00000018  00000000  00000000  00001a24  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
296 .literal.op_f32_NotEqual_rs 00000014  00000000  00000000  00001a3c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
297 .literal.op_f32_Equal_ss 00000018  00000000  00000000  00001a50  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
298 .literal.op_f32_Equal_rs 00000014  00000000  00000000  00001a68  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
299 .literal.op_u64_GreaterThanOrEqual_ss 00000018  00000000  00000000  00001a7c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
300 .literal.op_u64_GreaterThanOrEqual_sr 00000010  00000000  00000000  00001a94  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
301 .literal.op_u64_GreaterThanOrEqual_rs 00000010  00000000  00000000  00001aa4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
302 .literal.op_i64_GreaterThanOrEqual_ss 00000018  00000000  00000000  00001ab4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
303 .literal.op_i64_GreaterThanOrEqual_sr 00000010  00000000  00000000  00001acc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
304 .literal.op_i64_GreaterThanOrEqual_rs 00000010  00000000  00000000  00001adc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
305 .literal.op_u64_LessThanOrEqual_ss 00000018  00000000  00000000  00001aec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
306 .literal.op_u64_LessThanOrEqual_sr 00000010  00000000  00000000  00001b04  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
307 .literal.op_u64_LessThanOrEqual_rs 00000010  00000000  00000000  00001b14  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
308 .literal.op_i64_LessThanOrEqual_ss 00000018  00000000  00000000  00001b24  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
309 .literal.op_i64_LessThanOrEqual_sr 00000010  00000000  00000000  00001b3c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
310 .literal.op_i64_LessThanOrEqual_rs 00000010  00000000  00000000  00001b4c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
311 .literal.op_u64_GreaterThan_ss 00000018  00000000  00000000  00001b5c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
312 .literal.op_u64_GreaterThan_sr 00000010  00000000  00000000  00001b74  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
313 .literal.op_u64_GreaterThan_rs 00000010  00000000  00000000  00001b84  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
314 .literal.op_i64_GreaterThan_ss 00000018  00000000  00000000  00001b94  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
315 .literal.op_i64_GreaterThan_sr 00000010  00000000  00000000  00001bac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
316 .literal.op_i64_GreaterThan_rs 00000010  00000000  00000000  00001bbc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
317 .literal.op_u64_LessThan_ss 00000018  00000000  00000000  00001bcc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
318 .literal.op_u64_LessThan_sr 00000010  00000000  00000000  00001be4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
319 .literal.op_u64_LessThan_rs 00000010  00000000  00000000  00001bf4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
320 .literal.op_i64_LessThan_ss 00000018  00000000  00000000  00001c04  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
321 .literal.op_i64_LessThan_sr 00000010  00000000  00000000  00001c1c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
322 .literal.op_i64_LessThan_rs 00000010  00000000  00000000  00001c2c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
323 .literal.op_i64_NotEqual_ss 00000018  00000000  00000000  00001c3c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
324 .literal.op_i64_NotEqual_rs 00000010  00000000  00000000  00001c54  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
325 .literal.op_i64_Equal_ss 00000018  00000000  00000000  00001c64  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
326 .literal.op_i64_Equal_rs 00000010  00000000  00000000  00001c7c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
327 .literal.op_i64_EqualToZero_s 00000010  00000000  00000000  00001c8c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
328 .literal.op_i64_EqualToZero_r 00000008  00000000  00000000  00001c9c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
329 .literal.op_u32_GreaterThanOrEqual_ss 00000018  00000000  00000000  00001ca4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
330 .literal.op_u32_GreaterThanOrEqual_sr 00000010  00000000  00000000  00001cbc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
331 .literal.op_u32_GreaterThanOrEqual_rs 00000010  00000000  00000000  00001ccc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
332 .literal.op_i32_GreaterThanOrEqual_ss 00000018  00000000  00000000  00001cdc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
333 .literal.op_i32_GreaterThanOrEqual_sr 00000010  00000000  00000000  00001cf4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
334 .literal.op_i32_GreaterThanOrEqual_rs 00000010  00000000  00000000  00001d04  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
335 .literal.op_u32_LessThanOrEqual_ss 00000018  00000000  00000000  00001d14  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
336 .literal.op_u32_LessThanOrEqual_sr 00000010  00000000  00000000  00001d2c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
337 .literal.op_u32_LessThanOrEqual_rs 00000010  00000000  00000000  00001d3c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
338 .literal.op_i32_LessThanOrEqual_ss 00000018  00000000  00000000  00001d4c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
339 .literal.op_i32_LessThanOrEqual_sr 00000010  00000000  00000000  00001d64  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
340 .literal.op_i32_LessThanOrEqual_rs 00000010  00000000  00000000  00001d74  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
341 .literal.op_u32_GreaterThan_ss 00000018  00000000  00000000  00001d84  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
342 .literal.op_u32_GreaterThan_sr 00000010  00000000  00000000  00001d9c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
343 .literal.op_u32_GreaterThan_rs 00000010  00000000  00000000  00001dac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
344 .literal.op_i32_GreaterThan_ss 00000018  00000000  00000000  00001dbc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
345 .literal.op_i32_GreaterThan_sr 00000010  00000000  00000000  00001dd4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
346 .literal.op_i32_GreaterThan_rs 00000010  00000000  00000000  00001de4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
347 .literal.op_u32_LessThan_ss 00000018  00000000  00000000  00001df4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
348 .literal.op_u32_LessThan_sr 00000010  00000000  00000000  00001e0c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
349 .literal.op_u32_LessThan_rs 00000010  00000000  00000000  00001e1c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
350 .literal.op_i32_LessThan_ss 00000018  00000000  00000000  00001e2c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
351 .literal.op_i32_LessThan_sr 00000010  00000000  00000000  00001e44  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
352 .literal.op_i32_LessThan_rs 00000010  00000000  00000000  00001e54  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
353 .literal.op_i32_NotEqual_ss 00000018  00000000  00000000  00001e64  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
354 .literal.op_i32_NotEqual_rs 00000010  00000000  00000000  00001e7c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
355 .literal.op_i32_Equal_ss 00000018  00000000  00000000  00001e8c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
356 .literal.op_i32_Equal_rs 00000010  00000000  00000000  00001ea4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
357 .literal.op_i32_EqualToZero_s 00000010  00000000  00000000  00001eb4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
358 .literal.op_i32_EqualToZero_r 00000008  00000000  00000000  00001ec4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
359 .literal.op_Const32 00000050  00000000  00000000  00001ecc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
360 .literal.op_MemSize 00000008  00000000  00000000  00001f1c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
361 .literal.op_BranchIf_s 00000018  00000000  00000000  00001f24  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
362 .literal.op_BranchIf_r 00000010  00000000  00000000  00001f3c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
363 .literal.op_u64_TruncSat_f64_s_s 00000030  00000000  00000000  00001f4c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
364 .literal.op_u64_TruncSat_f64_s_r 00000028  00000000  00000000  00001f7c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
365 .literal.op_u64_TruncSat_f64_r_s 00000028  00000000  00000000  00001fa4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
366 .literal.op_u64_TruncSat_f64_r_r 00000024  00000000  00000000  00001fcc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
367 .literal.op_i64_TruncSat_f64_s_s 00000038  00000000  00000000  00001ff0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
368 .literal.op_i64_TruncSat_f64_s_r 00000030  00000000  00000000  00002028  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
369 .literal.op_i64_TruncSat_f64_r_s 00000030  00000000  00000000  00002058  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
370 .literal.op_i64_TruncSat_f64_r_r 0000002c  00000000  00000000  00002088  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
371 .literal.op_u64_TruncSat_f32_s_s 00000024  00000000  00000000  000020b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
372 .literal.op_u64_TruncSat_f32_s_r 00000020  00000000  00000000  000020d8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
373 .literal.op_u64_TruncSat_f32_r_s 0000001c  00000000  00000000  000020f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
374 .literal.op_u64_TruncSat_f32_r_r 0000001c  00000000  00000000  00002114  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
375 .literal.op_i64_TruncSat_f32_s_s 0000002c  00000000  00000000  00002130  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
376 .literal.op_i64_TruncSat_f32_s_r 00000028  00000000  00000000  0000215c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
377 .literal.op_i64_TruncSat_f32_r_s 00000024  00000000  00000000  00002184  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
378 .literal.op_i64_TruncSat_f32_r_r 00000024  00000000  00000000  000021a8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
379 .literal.op_u32_TruncSat_f64_s_s 00000030  00000000  00000000  000021cc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
380 .literal.op_u32_TruncSat_f64_s_r 00000028  00000000  00000000  000021fc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
381 .literal.op_u32_TruncSat_f64_r_s 00000028  00000000  00000000  00002224  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
382 .literal.op_u32_TruncSat_f64_r_r 00000020  00000000  00000000  0000224c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
383 .literal.op_i32_TruncSat_f64_s_s 0000003c  00000000  00000000  0000226c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
384 .literal.op_i32_TruncSat_f64_s_r 00000034  00000000  00000000  000022a8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
385 .literal.op_i32_TruncSat_f64_r_s 00000034  00000000  00000000  000022dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
386 .literal.op_i32_TruncSat_f64_r_r 00000030  00000000  00000000  00002310  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
387 .literal.op_u32_TruncSat_f32_s_s 00000020  00000000  00000000  00002340  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
388 .literal.op_u32_TruncSat_f32_s_r 0000001c  00000000  00000000  00002360  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
389 .literal.op_u32_TruncSat_f32_r_s 00000018  00000000  00000000  0000237c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
390 .literal.op_u32_TruncSat_f32_r_r 00000018  00000000  00000000  00002394  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
391 .literal.op_i32_TruncSat_f32_s_s 00000028  00000000  00000000  000023ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
392 .literal.op_i32_TruncSat_f32_s_r 00000024  00000000  00000000  000023d4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
393 .literal.op_i32_TruncSat_f32_r_s 00000020  00000000  00000000  000023f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
394 .literal.op_i32_TruncSat_f32_r_r 00000020  00000000  00000000  00002418  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
395 .literal.op_MemCopy 0000005c  00000000  00000000  00002438  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
396 .literal.op_Const64 00000078  00000000  00000000  00002494  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
397 .literal.op_i64_Store_i32_ss 00000020  00000000  00000000  0000250c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
398 .literal.op_i64_Store_i32_sr 00000018  00000000  00000000  0000252c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
399 .literal.op_i64_Store_i32_rs 00000018  00000000  00000000  00002544  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
400 .literal.op_i64_Store_i16_ss 00000020  00000000  00000000  0000255c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
401 .literal.op_i64_Store_i16_sr 00000018  00000000  00000000  0000257c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
402 .literal.op_i64_Store_i16_rs 00000018  00000000  00000000  00002594  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
403 .literal.op_i64_Store_u8_ss 00000020  00000000  00000000  000025ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
404 .literal.op_i64_Store_u8_sr 00000018  00000000  00000000  000025cc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
405 .literal.op_i64_Store_u8_rs 00000018  00000000  00000000  000025e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
406 .literal.op_i32_Store_i16_ss 00000020  00000000  00000000  000025fc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
407 .literal.op_i32_Store_i16_sr 00000018  00000000  00000000  0000261c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
408 .literal.op_i32_Store_i16_rs 00000018  00000000  00000000  00002634  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
409 .literal.op_i32_Store_u8_ss 00000020  00000000  00000000  0000264c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
410 .literal.op_i32_Store_u8_sr 00000018  00000000  00000000  0000266c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
411 .literal.op_i32_Store_u8_rs 00000018  00000000  00000000  00002684  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
412 .literal.op_f64_Store_f64_rr 00000010  00000000  00000000  0000269c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
413 .literal.op_f64_Store_f64_ss 00000020  00000000  00000000  000026ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
414 .literal.op_f64_Store_f64_sr 00000018  00000000  00000000  000026cc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
415 .literal.op_f64_Store_f64_rs 00000018  00000000  00000000  000026e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
416 .literal.op_f32_Store_f32_rr 00000014  00000000  00000000  000026fc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
417 .literal.op_f32_Store_f32_ss 00000020  00000000  00000000  00002710  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
418 .literal.op_f32_Store_f32_sr 00000018  00000000  00000000  00002730  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
419 .literal.op_f32_Store_f32_rs 0000001c  00000000  00000000  00002748  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
420 .literal.op_i64_Store_i64_ss 00000020  00000000  00000000  00002764  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
421 .literal.op_i64_Store_i64_sr 00000018  00000000  00000000  00002784  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
422 .literal.op_i64_Store_i64_rs 00000018  00000000  00000000  0000279c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
423 .literal.op_i32_Store_i32_ss 00000020  00000000  00000000  000027b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
424 .literal.op_i32_Store_i32_sr 00000018  00000000  00000000  000027d4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
425 .literal.op_i32_Store_i32_rs 00000018  00000000  00000000  000027ec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
426 .literal.op_i64_Load_u32_s 00000018  00000000  00000000  00002804  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
427 .literal.op_i64_Load_u32_r 00000010  00000000  00000000  0000281c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
428 .literal.op_i64_Load_i32_s 00000018  00000000  00000000  0000282c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
429 .literal.op_i64_Load_i32_r 00000010  00000000  00000000  00002844  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
430 .literal.op_i64_Load_u16_s 00000018  00000000  00000000  00002854  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
431 .literal.op_i64_Load_u16_r 00000010  00000000  00000000  0000286c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
432 .literal.op_i64_Load_i16_s 00000018  00000000  00000000  0000287c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
433 .literal.op_i64_Load_i16_r 00000010  00000000  00000000  00002894  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
434 .literal.op_i64_Load_u8_s 00000018  00000000  00000000  000028a4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
435 .literal.op_i64_Load_u8_r 00000010  00000000  00000000  000028bc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
436 .literal.op_i64_Load_i8_s 00000018  00000000  00000000  000028cc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
437 .literal.op_i64_Load_i8_r 00000010  00000000  00000000  000028e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
438 .literal.op_i32_Load_u16_s 00000018  00000000  00000000  000028f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
439 .literal.op_i32_Load_u16_r 00000010  00000000  00000000  0000290c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
440 .literal.op_i32_Load_i16_s 00000018  00000000  00000000  0000291c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
441 .literal.op_i32_Load_i16_r 00000010  00000000  00000000  00002934  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
442 .literal.op_i32_Load_u8_s 00000018  00000000  00000000  00002944  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
443 .literal.op_i32_Load_u8_r 00000010  00000000  00000000  0000295c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
444 .literal.op_i32_Load_i8_s 00000018  00000000  00000000  0000296c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
445 .literal.op_i32_Load_i8_r 00000010  00000000  00000000  00002984  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
446 .literal.op_f64_Load_f64_s 00000018  00000000  00000000  00002994  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
447 .literal.op_f64_Load_f64_r 00000010  00000000  00000000  000029ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
448 .literal.op_f32_Load_f32_s 0000001c  00000000  00000000  000029bc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
449 .literal.op_f32_Load_f32_r 00000014  00000000  00000000  000029d8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
450 .literal.op_i64_Load_i64_s 00000018  00000000  00000000  000029ec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
451 .literal.op_i64_Load_i64_r 00000010  00000000  00000000  00002a04  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
452 .literal.op_i32_Load_i32_s 00000018  00000000  00000000  00002a14  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
453 .literal.op_i32_Load_i32_r 00000010  00000000  00000000  00002a2c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
454 .literal.op_MemFill 0000005c  00000000  00000000  00002a3c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
455 .literal.op_Entry 00000018  00000000  00000000  00002a98  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
456 .literal.EnsureCodePageNumLines 00000044  00000000  00000000  00002ab0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
457 .literal.EmitOp 0000001c  00000000  00000000  00002af4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
458 .literal.Pop  00000040  00000000  00000000  00002b10  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
459 .literal.op_f64_CopySign_ss 00000018  00000000  00000000  00002b50  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
460 .literal.op_f64_CopySign_sr 00000010  00000000  00000000  00002b68  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
461 .literal.op_f64_CopySign_rs 00000010  00000000  00000000  00002b78  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
462 .literal.op_f64_Max_ss 00000030  00000000  00000000  00002b88  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
463 .literal.op_f64_Sqrt_s 00000014  00000000  00000000  00002bb8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
464 .literal.op_f64_Sqrt_r 0000000c  00000000  00000000  00002bcc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
465 .literal.op_f64_Nearest_s 00000014  00000000  00000000  00002bd8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
466 .literal.op_f64_Nearest_r 0000000c  00000000  00000000  00002bec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
467 .literal.op_f64_Trunc_s 00000014  00000000  00000000  00002bf8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
468 .literal.op_f64_Trunc_r 0000000c  00000000  00000000  00002c0c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
469 .literal.op_f64_Floor_s 00000014  00000000  00000000  00002c18  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
470 .literal.op_f64_Floor_r 0000000c  00000000  00000000  00002c2c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
471 .literal.op_f64_Ceil_s 00000014  00000000  00000000  00002c38  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
472 .literal.op_f64_Ceil_r 0000000c  00000000  00000000  00002c4c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
473 .literal.op_f32_CopySign_ss 0000001c  00000000  00000000  00002c58  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
474 .literal.op_f32_CopySign_sr 00000018  00000000  00000000  00002c74  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
475 .literal.op_f32_CopySign_rs 00000018  00000000  00000000  00002c8c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
476 .literal.op_f32_Sqrt_s 00000018  00000000  00000000  00002ca4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
477 .literal.op_f32_Sqrt_r 00000014  00000000  00000000  00002cbc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
478 .literal.op_f32_Nearest_s 00000018  00000000  00000000  00002cd0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
479 .literal.op_f32_Nearest_r 00000014  00000000  00000000  00002ce8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
480 .literal.op_f32_Trunc_s 00000018  00000000  00000000  00002cfc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
481 .literal.op_f32_Trunc_r 00000014  00000000  00000000  00002d14  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
482 .literal.op_f32_Floor_s 00000018  00000000  00000000  00002d28  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
483 .literal.op_f32_Floor_r 00000014  00000000  00000000  00002d40  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
484 .literal.op_f32_Ceil_s 00000018  00000000  00000000  00002d54  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
485 .literal.op_f32_Ceil_r 00000014  00000000  00000000  00002d6c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
486 .literal.op_u64_Popcnt_s 00000014  00000000  00000000  00002d80  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
487 .literal.op_u64_Popcnt_r 0000000c  00000000  00000000  00002d94  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
488 .literal.op_u64_Ctz_s 00000014  00000000  00000000  00002da0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
489 .literal.op_u64_Ctz_r 0000000c  00000000  00000000  00002db4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
490 .literal.op_u64_Clz_s 00000010  00000000  00000000  00002dc0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
491 .literal.op_u64_Clz_r 0000000c  00000000  00000000  00002dd0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
492 .literal.op_u32_Popcnt_s 00000014  00000000  00000000  00002ddc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
493 .literal.op_u32_Popcnt_r 0000000c  00000000  00000000  00002df0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
494 .literal.op_u32_Ctz_s 00000010  00000000  00000000  00002dfc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
495 .literal.op_u32_Ctz_r 0000000c  00000000  00000000  00002e0c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
496 .literal.op_u32_Clz_s 00000010  00000000  00000000  00002e18  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
497 .literal.op_u32_Clz_r 0000000c  00000000  00000000  00002e28  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
498 .literal.op_MemGrow 0000000c  00000000  00000000  00002e34  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
499 .literal.ReadBlockType 0000002c  00000000  00000000  00002e40  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
500 .literal.op_f64_Min_ss 00000030  00000000  00000000  00002e6c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
501 .literal.op_f32_Max_ss 00000028  00000000  00000000  00002e9c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
502 .literal.op_f32_Min_ss 00000028  00000000  00000000  00002ec4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
503 .literal.Call$constprop$0 0000000c  00000000  00000000  00002eec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
504 .literal.op_Call 00000018  00000000  00000000  00002ef8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
505 .literal.EmitSlotOffset$isra$0 00000004  00000000  00000000  00002f10  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
506 .literal.EmitConstant32$isra$0 00000004  00000000  00000000  00002f14  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
507 .literal.op_f64_Min_rs 00000028  00000000  00000000  00002f18  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
508 .literal.op_f64_Max_rs 00000028  00000000  00000000  00002f40  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
509 .literal.op_f32_Min_rs 00000024  00000000  00000000  00002f68  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
510 .literal.op_f32_Max_rs 00000024  00000000  00000000  00002f8c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
511 .literal.AllocateSlotsWithinRange 00000018  00000000  00000000  00002fb0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
512 .literal.PreserveRegisterIfOccupied 00000014  00000000  00000000  00002fc8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
513 .literal.FindReferencedLocalWithinCurrentBlock 00000028  00000000  00000000  00002fdc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
514 .literal.PreserveArgsAndLocals 00000040  00000000  00000000  00003004  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
515 .literal.CopyStackIndexToSlot 00000040  00000000  00000000  00003044  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
516 .literal.CopyStackSlotsR 00000044  00000000  00000000  00003084  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
517 .literal.ReturnValues 00000024  00000000  00000000  000030c8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
518 .literal.Compile_End 0000000c  00000000  00000000  000030ec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
519 .literal.Compile_Memory_Size 0000002c  00000000  00000000  000030f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
520 .literal.Compile_GetLocal 00000034  00000000  00000000  00003124  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
521 .literal.PushBlockResults 00000040  00000000  00000000  00003158  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
522 .literal.CompileCallArgsAndReturn 00000058  00000000  00000000  00003198  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
523 .literal.Compile_CallIndirect 00000050  00000000  00000000  000031f0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
524 .literal.Compile_Call 00000034  00000000  00000000  00003240  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
525 .literal.Compile_Unreachable 0000005c  00000000  00000000  00003274  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
526 .literal.CopyStackTopToRegister$constprop$0 00000034  00000000  00000000  000032d0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
527 .literal.ResolveBlockResults 0000002c  00000000  00000000  00003304  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
528 .literal.Compile_BranchTable 000000dc  00000000  00000000  00003330  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
529 .literal.Compile_Memory_CopyFill 00000060  00000000  00000000  0000340c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
530 .literal.Compile_Memory_Grow 00000030  00000000  00000000  0000346c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
531 .literal.Compile_Return 00000064  00000000  00000000  0000349c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
532 .literal.Compile_Convert 00000078  00000000  00000000  00003500  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
533 .literal.Compile_SetLocal 0000006c  00000000  00000000  00003578  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
534 .literal.Compile_GetSetGlobal 00000080  00000000  00000000  000035e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
535 .literal.Compile_Operator 000000a4  00000000  00000000  00003664  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
536 .literal.Compile_Load_Store 00000030  00000000  00000000  00003708  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
537 .literal.Compile_Drop 00000040  00000000  00000000  00003738  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
538 .literal.Compile_Select 000000b4  00000000  00000000  00003778  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
539 .literal.PushConst 00000078  00000000  00000000  0000382c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
540 .literal.Compile_Const_f64 00000018  00000000  00000000  000038a4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
541 .literal.Compile_Const_f32 0000001c  00000000  00000000  000038bc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
542 .literal.Compile_Const_i64 00000018  00000000  00000000  000038d8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
543 .literal.Compile_Const_i32 00000018  00000000  00000000  000038f0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
544 .literal.Compile_Branch 00000180  00000000  00000000  00003908  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
545 .literal.GetMaxUsedSlotPlusOne 00000010  00000000  00000000  00003a88  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
546 .literal.CompileRawFunction 00000034  00000000  00000000  00003a98  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
547 .literal.GetOpInfo 00000008  00000000  00000000  00003acc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
548 .literal.CompileBlockStatements 00000018  00000000  00000000  00003ad4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
549 .literal.CompileFunction$part$0 000000cc  00000000  00000000  00003aec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
550 .literal.op_Compile 0000001c  00000000  00000000  00003bb8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
551 .literal.op_CallIndirect 0000002c  00000000  00000000  00003bd4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
552 .literal.CompileBlock 000000b4  00000000  00000000  00003c00  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
553 .literal.Compile_LoopOrBlock 0000004c  00000000  00000000  00003cb4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
554 .literal.Compile_If 00000090  00000000  00000000  00003d00  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
555 .literal.CompileFunction 00000008  00000000  00000000  00003d90  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
556 .text         00000000  00000000  00000000  00003d98  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
557 .data         00000000  00000000  00000000  00003d98  2**0
                  CONTENTS, ALLOC, LOAD, DATA
558 .bss          00000000  00000000  00000000  00003d98  2**0
                  ALLOC
559 .text.op_Return 00000007  00000000  00000000  00003d98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
560 .text.op_End  00000007  00000000  00000000  00003da0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
561 .text.Compile_Nop 00000007  00000000  00000000  00003da8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
562 .text.EmitPointer 0000001e  00000000  00000000  00003db0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
563 .text.ReservePointer 0000001b  00000000  00000000  00003dd0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
564 .text.op_ContinueLoop 00000014  00000000  00000000  00003dec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
565 .text.op_BranchTable 00000066  00000000  00000000  00003e00  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
566 .text.op_Branch 00000030  00000000  00000000  00003e68  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
567 .rodata.op_Unsupported.str1.4 00000021  00000000  00000000  00003e98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
568 .text.op_Unsupported 00000010  00000000  00000000  00003ebc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
569 .text.op_Loop 0000003d  00000000  00000000  00003ecc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
570 .text.op_Unreachable 00000010  00000000  00000000  00003f0c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
571 .rodata.op_CallRawFunction.str1.4 00000060  00000000  00000000  00003f1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
572 .text.op_CallRawFunction 000000e8  00000000  00000000  00003f7c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
573 .text.profileOp 00000038  00000000  00000000  00004064  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
574 .text.op_PreserveSetSlot_f64 0000006e  00000000  00000000  0000409c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
575 .text.op_PreserveSetSlot_f32 00000078  00000000  00000000  0000410c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
576 .text.op_PreserveSetSlot_i64 0000006a  00000000  00000000  00004184  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
577 .text.op_PreserveSetSlot_i32 00000064  00000000  00000000  000041f0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
578 .text.op_SetSlot_f64 0000004d  00000000  00000000  00004254  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
579 .text.op_SetSlot_f32 00000054  00000000  00000000  000042a4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
580 .text.op_SetSlot_i64 00000045  00000000  00000000  000042f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
581 .text.op_SetSlot_i32 00000044  00000000  00000000  00004340  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
582 .text.op_SetRegister_f64 00000041  00000000  00000000  00004384  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
583 .text.op_SetRegister_f32 00000045  00000000  00000000  000043c8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
584 .text.op_SetRegister_i64 00000041  00000000  00000000  00004410  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
585 .text.op_SetRegister_i32 00000044  00000000  00000000  00004454  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
586 .text.op_SetGlobal_s64 00000059  00000000  00000000  00004498  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
587 .text.op_SetGlobal_s32 00000055  00000000  00000000  000044f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
588 .text.op_SetGlobal_f64 00000038  00000000  00000000  0000454c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
589 .text.op_SetGlobal_f32 00000044  00000000  00000000  00004584  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
590 .text.op_SetGlobal_i64 00000038  00000000  00000000  000045c8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
591 .text.op_SetGlobal_i32 00000035  00000000  00000000  00004600  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
592 .text.op_Select_f64_rsr 00000048  00000000  00000000  00004638  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
593 .text.op_Select_f64_rrs 0000004d  00000000  00000000  00004680  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
594 .text.op_Select_f64_rss 00000071  00000000  00000000  000046d0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
595 .text.op_Select_f64_ssr 00000068  00000000  00000000  00004744  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
596 .text.op_Select_f64_srs 0000006d  00000000  00000000  000047ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
597 .text.op_Select_f64_sss 00000091  00000000  00000000  0000481c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
598 .text.op_Select_f32_rsr 00000054  00000000  00000000  000048b0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
599 .text.op_Select_f32_rrs 00000054  00000000  00000000  00004904  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
600 .text.op_Select_f32_rss 00000068  00000000  00000000  00004958  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
601 .text.op_Select_f32_ssr 00000074  00000000  00000000  000049c0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
602 .text.op_Select_f32_srs 00000074  00000000  00000000  00004a34  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
603 .text.op_Select_f32_sss 0000008a  00000000  00000000  00004aa8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
604 .text.op_Select_i64_sss 0000008c  00000000  00000000  00004b34  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
605 .text.op_Select_i64_ssr 00000068  00000000  00000000  00004bc0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
606 .text.op_Select_i64_srs 00000068  00000000  00000000  00004c28  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
607 .text.op_Select_i64_rss 0000006c  00000000  00000000  00004c90  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
608 .text.op_Select_i32_sss 00000088  00000000  00000000  00004cfc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
609 .text.op_Select_i32_ssr 00000068  00000000  00000000  00004d84  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
610 .text.op_Select_i32_srs 00000068  00000000  00000000  00004dec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
611 .text.op_Select_i32_rss 00000068  00000000  00000000  00004e54  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
612 .text.op_BranchIfPrologue_r 00000061  00000000  00000000  00004ebc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
613 .text.op_If_r 00000061  00000000  00000000  00004f20  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
614 .text.op_PreserveCopySlot_64 00000091  00000000  00000000  00004f84  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
615 .text.op_CopySlot_64 00000066  00000000  00000000  00005018  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
616 .text.op_BranchIfPrologue_s 0000008c  00000000  00000000  00005080  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
617 .text.op_If_s 0000008c  00000000  00000000  0000510c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
618 .text.op_PreserveCopySlot_32 00000089  00000000  00000000  00005198  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
619 .text.op_CopySlot_32 00000062  00000000  00000000  00005224  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
620 .text.op_ContinueLoopIf 00000039  00000000  00000000  00005288  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
621 .text.op_GetGlobal_s64 00000059  00000000  00000000  000052c4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
622 .text.op_GetGlobal_s32 00000055  00000000  00000000  00005320  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
623 .text.op_i64_Extend32_s_s 00000044  00000000  00000000  00005378  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
624 .text.op_i64_Extend32_s_r 00000025  00000000  00000000  000053bc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
625 .text.op_i64_Extend16_s_s 00000045  00000000  00000000  000053e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
626 .text.op_i64_Extend16_s_r 00000028  00000000  00000000  0000542c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
627 .text.op_i64_Extend8_s_s 00000048  00000000  00000000  00005454  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
628 .text.op_i64_Extend8_s_r 00000028  00000000  00000000  0000549c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
629 .text.op_i32_Extend16_s_s 00000045  00000000  00000000  000054c4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
630 .text.op_i32_Extend16_s_r 00000028  00000000  00000000  0000550c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
631 .text.op_i32_Extend8_s_s 00000048  00000000  00000000  00005534  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
632 .text.op_i32_Extend8_s_r 00000028  00000000  00000000  0000557c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
633 .text.op_f64_Reinterpret_i64_s_s 00000070  00000000  00000000  000055a4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
634 .text.op_f64_Reinterpret_i64_s_r 0000004c  00000000  00000000  00005614  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
635 .text.op_f64_Reinterpret_i64_r_s 00000041  00000000  00000000  00005660  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
636 .text.op_f64_Reinterpret_i64_r_r 00000020  00000000  00000000  000056a4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
637 .text.op_f32_Reinterpret_i32_s_s 00000064  00000000  00000000  000056c4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
638 .text.op_f32_Reinterpret_i32_s_r 00000044  00000000  00000000  00005728  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
639 .text.op_f32_Reinterpret_i32_r_s 00000045  00000000  00000000  0000576c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
640 .text.op_f32_Reinterpret_i32_r_r 00000028  00000000  00000000  000057b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
641 .text.op_i64_Reinterpret_f64_s_s 00000070  00000000  00000000  000057dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
642 .text.op_i64_Reinterpret_f64_s_r 0000004d  00000000  00000000  0000584c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
643 .text.op_i64_Reinterpret_f64_r_s 00000041  00000000  00000000  0000589c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
644 .text.op_i64_Reinterpret_f64_r_r 00000020  00000000  00000000  000058e0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
645 .text.op_i32_Reinterpret_f32_s_s 00000064  00000000  00000000  00005900  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
646 .text.op_i32_Reinterpret_f32_s_r 00000054  00000000  00000000  00005964  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
647 .text.op_i32_Reinterpret_f32_r_s 00000044  00000000  00000000  000059b8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
648 .text.op_i32_Reinterpret_f32_r_r 00000030  00000000  00000000  000059fc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
649 .text.op_f64_Promote_f32_s 00000045  00000000  00000000  00005a2c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
650 .text.op_f64_Promote_f32_r 00000030  00000000  00000000  00005a74  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
651 .text.op_f64_Convert_u64_s_s 00000078  00000000  00000000  00005aa4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
652 .text.op_f64_Convert_u64_s_r 00000051  00000000  00000000  00005b1c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
653 .text.op_f64_Convert_u64_r_s 00000048  00000000  00000000  00005b70  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
654 .text.op_f64_Convert_u64_r_r 0000002a  00000000  00000000  00005bb8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
655 .text.op_f64_Convert_i64_s_s 00000078  00000000  00000000  00005be4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
656 .text.op_f64_Convert_i64_s_r 00000051  00000000  00000000  00005c5c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
657 .text.op_f64_Convert_i64_r_s 00000048  00000000  00000000  00005cb0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
658 .text.op_f64_Convert_i64_r_r 0000002a  00000000  00000000  00005cf8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
659 .text.op_f64_Convert_u32_s_s 00000071  00000000  00000000  00005d24  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
660 .text.op_f64_Convert_u32_s_r 00000051  00000000  00000000  00005d98  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
661 .text.op_f64_Convert_u32_r_s 00000045  00000000  00000000  00005dec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
662 .text.op_f64_Convert_u32_r_r 00000028  00000000  00000000  00005e34  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
663 .text.op_f64_Convert_i32_s_s 00000071  00000000  00000000  00005e5c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
664 .text.op_f64_Convert_i32_s_r 00000051  00000000  00000000  00005ed0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
665 .text.op_f64_Convert_i32_r_s 00000045  00000000  00000000  00005f24  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
666 .text.op_f64_Convert_i32_r_r 00000028  00000000  00000000  00005f6c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
667 .text.op_f32_Demote_f64_s 0000004e  00000000  00000000  00005f94  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
668 .text.op_f32_Demote_f64_r 00000030  00000000  00000000  00005fe4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
669 .text.op_f32_Convert_u64_s_s 00000076  00000000  00000000  00006014  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
670 .text.op_f32_Convert_u64_s_r 00000050  00000000  00000000  0000608c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
671 .text.op_f32_Convert_u64_r_s 0000004e  00000000  00000000  000060dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
672 .text.op_f32_Convert_u64_r_r 00000032  00000000  00000000  0000612c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
673 .text.op_f32_Convert_i64_s_s 00000076  00000000  00000000  00006160  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
674 .text.op_f32_Convert_i64_s_r 00000050  00000000  00000000  000061d8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
675 .text.op_f32_Convert_i64_r_s 0000004e  00000000  00000000  00006228  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
676 .text.op_f32_Convert_i64_r_r 00000032  00000000  00000000  00006278  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
677 .text.op_f32_Convert_u32_s_s 00000068  00000000  00000000  000062ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
678 .text.op_f32_Convert_u32_s_r 00000048  00000000  00000000  00006314  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
679 .text.op_f32_Convert_u32_r_s 0000004c  00000000  00000000  0000635c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
680 .text.op_f32_Convert_u32_r_r 0000002c  00000000  00000000  000063a8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
681 .text.op_f32_Convert_i32_s_s 00000068  00000000  00000000  000063d4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
682 .text.op_f32_Convert_i32_s_r 00000048  00000000  00000000  0000643c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
683 .text.op_f32_Convert_i32_r_s 0000004c  00000000  00000000  00006484  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
684 .text.op_f32_Convert_i32_r_r 0000002c  00000000  00000000  000064d0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
685 .text.op_u64_Trunc_f64_s_s 000000bc  00000000  00000000  000064fc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
686 .text.op_u64_Trunc_f64_s_r 00000096  00000000  00000000  000065b8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
687 .text.op_u64_Trunc_f64_r_s 00000096  00000000  00000000  00006650  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
688 .text.op_u64_Trunc_f64_r_r 00000072  00000000  00000000  000066e8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
689 .text.op_i64_Trunc_f64_s_s 000000bc  00000000  00000000  0000675c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
690 .text.op_i64_Trunc_f64_s_r 00000096  00000000  00000000  00006818  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
691 .text.op_i64_Trunc_f64_r_s 00000096  00000000  00000000  000068b0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
692 .text.op_i64_Trunc_f64_r_r 00000072  00000000  00000000  00006948  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
693 .text.op_u64_Trunc_f32_s_s 0000009a  00000000  00000000  000069bc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
694 .text.op_u64_Trunc_f32_s_r 00000085  00000000  00000000  00006a58  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
695 .text.op_u64_Trunc_f32_r_s 00000078  00000000  00000000  00006ae0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
696 .text.op_u64_Trunc_f32_r_r 00000061  00000000  00000000  00006b58  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
697 .text.op_i64_Trunc_f32_s_s 0000009a  00000000  00000000  00006bbc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
698 .text.op_i64_Trunc_f32_s_r 00000085  00000000  00000000  00006c58  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
699 .text.op_i64_Trunc_f32_r_s 00000078  00000000  00000000  00006ce0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
700 .text.op_i64_Trunc_f32_r_r 00000061  00000000  00000000  00006d58  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
701 .text.op_i64_Extend_u32_s 00000041  00000000  00000000  00006dbc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
702 .text.op_i64_Extend_u32_r 00000024  00000000  00000000  00006e00  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
703 .text.op_i64_Extend_i32_s 00000044  00000000  00000000  00006e24  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
704 .text.op_i64_Extend_i32_r 00000025  00000000  00000000  00006e68  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
705 .text.op_u32_Trunc_f64_s_s 000000ba  00000000  00000000  00006e90  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
706 .text.op_u32_Trunc_f64_s_r 00000094  00000000  00000000  00006f4c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
707 .text.op_u32_Trunc_f64_r_s 00000096  00000000  00000000  00006fe0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
708 .text.op_u32_Trunc_f64_r_r 00000072  00000000  00000000  00007078  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
709 .text.op_i32_Trunc_f64_s_s 000000ba  00000000  00000000  000070ec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
710 .text.op_i32_Trunc_f64_s_r 00000094  00000000  00000000  000071a8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
711 .text.op_i32_Trunc_f64_r_s 00000098  00000000  00000000  0000723c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
712 .text.op_i32_Trunc_f64_r_r 00000074  00000000  00000000  000072d4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
713 .text.op_u32_Trunc_f32_s_s 00000090  00000000  00000000  00007348  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
714 .text.op_u32_Trunc_f32_s_r 00000080  00000000  00000000  000073d8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
715 .text.op_u32_Trunc_f32_r_s 00000070  00000000  00000000  00007458  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
716 .text.op_u32_Trunc_f32_r_r 0000005c  00000000  00000000  000074c8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
717 .text.op_i32_Trunc_f32_s_s 00000090  00000000  00000000  00007524  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
718 .text.op_i32_Trunc_f32_s_r 00000080  00000000  00000000  000075b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
719 .text.op_i32_Trunc_f32_r_s 00000072  00000000  00000000  00007634  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
720 .text.op_i32_Trunc_f32_r_r 00000060  00000000  00000000  000076a8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
721 .text.op_i32_Wrap_i64_s 00000041  00000000  00000000  00007708  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
722 .text.op_i32_Wrap_i64_r 00000024  00000000  00000000  0000774c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
723 .text.op_f64_Divide_ss 00000070  00000000  00000000  00007770  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
724 .text.op_f64_Divide_sr 0000004d  00000000  00000000  000077e0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
725 .text.op_f64_Divide_rs 0000004c  00000000  00000000  00007830  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
726 .text.op_f64_Multiply_ss 00000072  00000000  00000000  0000787c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
727 .text.op_f64_Multiply_rs 0000004d  00000000  00000000  000078f0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
728 .text.op_f64_Subtract_ss 00000070  00000000  00000000  00007940  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
729 .text.op_f64_Subtract_sr 0000004d  00000000  00000000  000079b0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
730 .text.op_f64_Subtract_rs 0000004c  00000000  00000000  00007a00  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
731 .text.op_f64_Add_ss 00000072  00000000  00000000  00007a4c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
732 .text.op_f64_Add_rs 0000004d  00000000  00000000  00007ac0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
733 .text.op_f64_Negate_s 00000046  00000000  00000000  00007b10  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
734 .text.op_f64_Negate_r 0000002c  00000000  00000000  00007b58  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
735 .text.op_f64_Abs_s 00000046  00000000  00000000  00007b84  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
736 .text.op_f64_Abs_r 0000002c  00000000  00000000  00007bcc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
737 .text.op_f32_Divide_ss 0000006e  00000000  00000000  00007bf8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
738 .text.op_f32_Divide_sr 00000058  00000000  00000000  00007c68  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
739 .text.op_f32_Divide_rs 0000005c  00000000  00000000  00007cc0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
740 .text.op_f32_Multiply_ss 00000074  00000000  00000000  00007d1c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
741 .text.op_f32_Multiply_rs 00000061  00000000  00000000  00007d90  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
742 .text.op_f32_Subtract_ss 00000074  00000000  00000000  00007df4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
743 .text.op_f32_Subtract_sr 00000061  00000000  00000000  00007e68  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
744 .text.op_f32_Subtract_rs 00000061  00000000  00000000  00007ecc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
745 .text.op_f32_Add_ss 00000074  00000000  00000000  00007f30  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
746 .text.op_f32_Add_rs 00000061  00000000  00000000  00007fa4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
747 .text.op_f32_Negate_s 0000004c  00000000  00000000  00008008  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
748 .text.op_f32_Negate_r 0000003c  00000000  00000000  00008054  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
749 .text.op_f32_Abs_s 0000004c  00000000  00000000  00008090  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
750 .text.op_f32_Abs_r 0000003c  00000000  00000000  000080dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
751 .text.op_u64_Rotr_ss 000000c4  00000000  00000000  00008118  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
752 .text.op_u64_Rotr_sr 000000a1  00000000  00000000  000081dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
753 .text.op_u64_Rotr_rs 000000a4  00000000  00000000  00008280  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
754 .text.op_u64_Rotl_ss 000000c4  00000000  00000000  00008324  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
755 .text.op_u64_Rotl_sr 000000a1  00000000  00000000  000083e8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
756 .text.op_u64_Rotl_rs 000000a4  00000000  00000000  0000848c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
757 .text.op_u64_ShiftRight_ss 0000008d  00000000  00000000  00008530  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
758 .text.op_u64_ShiftRight_sr 0000006c  00000000  00000000  000085c0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
759 .text.op_u64_ShiftRight_rs 0000006d  00000000  00000000  0000862c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
760 .text.op_i64_ShiftRight_ss 00000090  00000000  00000000  0000869c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
761 .text.op_i64_ShiftRight_sr 0000006e  00000000  00000000  0000872c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
762 .text.op_i64_ShiftRight_rs 00000070  00000000  00000000  0000879c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
763 .text.op_u64_ShiftLeft_ss 0000008e  00000000  00000000  0000880c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
764 .text.op_u64_ShiftLeft_sr 0000006c  00000000  00000000  0000889c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
765 .text.op_u64_ShiftLeft_rs 0000006e  00000000  00000000  00008908  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
766 .text.op_u64_Xor_ss 00000068  00000000  00000000  00008978  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
767 .text.op_u64_Xor_rs 00000048  00000000  00000000  000089e0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
768 .text.op_u64_Or_ss 00000068  00000000  00000000  00008a28  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
769 .text.op_u64_Or_rs 00000048  00000000  00000000  00008a90  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
770 .text.op_u64_And_ss 00000068  00000000  00000000  00008ad8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
771 .text.op_u64_And_rs 00000048  00000000  00000000  00008b40  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
772 .text.op_u64_Remainder_ss 00000081  00000000  00000000  00008b88  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
773 .text.op_u64_Remainder_sr 0000005f  00000000  00000000  00008c0c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
774 .text.op_u64_Remainder_rs 00000061  00000000  00000000  00008c6c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
775 .text.op_i64_Remainder_ss 0000009c  00000000  00000000  00008cd0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
776 .text.op_i64_Remainder_sr 0000007a  00000000  00000000  00008d6c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
777 .text.op_i64_Remainder_rs 0000007c  00000000  00000000  00008de8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
778 .text.op_u64_Divide_ss 00000081  00000000  00000000  00008e64  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
779 .text.op_u64_Divide_sr 0000005f  00000000  00000000  00008ee8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
780 .text.op_u64_Divide_rs 00000061  00000000  00000000  00008f48  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
781 .text.op_i64_Divide_ss 00000094  00000000  00000000  00008fac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
782 .text.op_i64_Divide_sr 00000071  00000000  00000000  00009040  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
783 .text.op_i64_Divide_rs 00000075  00000000  00000000  000090b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
784 .text.op_i64_Multiply_ss 00000072  00000000  00000000  0000912c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
785 .text.op_i64_Multiply_rs 00000051  00000000  00000000  000091a0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
786 .text.op_i64_Subtract_ss 00000074  00000000  00000000  000091f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
787 .text.op_i64_Subtract_sr 00000054  00000000  00000000  00009268  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
788 .text.op_i64_Subtract_rs 00000054  00000000  00000000  000092bc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
789 .text.op_i64_Add_ss 00000070  00000000  00000000  00009310  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
790 .text.op_i64_Add_rs 0000004e  00000000  00000000  00009380  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
791 .text.op_u32_Rotr_ss 00000068  00000000  00000000  000093d0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
792 .text.op_u32_Rotr_sr 00000048  00000000  00000000  00009438  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
793 .text.op_u32_Rotr_rs 00000048  00000000  00000000  00009480  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
794 .text.op_u32_Rotl_ss 00000068  00000000  00000000  000094c8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
795 .text.op_u32_Rotl_sr 00000048  00000000  00000000  00009530  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
796 .text.op_u32_Rotl_rs 00000048  00000000  00000000  00009578  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
797 .text.op_u32_ShiftRight_ss 00000068  00000000  00000000  000095c0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
798 .text.op_u32_ShiftRight_sr 00000048  00000000  00000000  00009628  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
799 .text.op_u32_ShiftRight_rs 00000048  00000000  00000000  00009670  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
800 .text.op_i32_ShiftRight_ss 0000006a  00000000  00000000  000096b8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
801 .text.op_i32_ShiftRight_sr 0000004a  00000000  00000000  00009724  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
802 .text.op_i32_ShiftRight_rs 0000004a  00000000  00000000  00009770  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
803 .text.op_u32_ShiftLeft_ss 00000068  00000000  00000000  000097bc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
804 .text.op_u32_ShiftLeft_sr 00000048  00000000  00000000  00009824  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
805 .text.op_u32_ShiftLeft_rs 00000048  00000000  00000000  0000986c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
806 .text.op_u32_Xor_ss 00000064  00000000  00000000  000098b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
807 .text.op_u32_Xor_rs 00000044  00000000  00000000  00009918  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
808 .text.op_u32_Or_ss 00000064  00000000  00000000  0000995c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
809 .text.op_u32_Or_rs 00000044  00000000  00000000  000099c0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
810 .text.op_u32_And_ss 00000064  00000000  00000000  00009a04  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
811 .text.op_u32_And_rs 00000044  00000000  00000000  00009a68  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
812 .text.op_u32_Remainder_ss 00000072  00000000  00000000  00009aac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
813 .text.op_u32_Remainder_sr 00000052  00000000  00000000  00009b20  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
814 .text.op_u32_Remainder_rs 00000052  00000000  00000000  00009b74  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
815 .text.op_i32_Remainder_ss 00000088  00000000  00000000  00009bc8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
816 .text.op_i32_Remainder_sr 00000065  00000000  00000000  00009c50  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
817 .text.op_i32_Remainder_rs 00000067  00000000  00000000  00009cb8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
818 .text.op_u32_Divide_ss 00000072  00000000  00000000  00009d20  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
819 .text.op_u32_Divide_sr 00000052  00000000  00000000  00009d94  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
820 .text.op_u32_Divide_rs 00000052  00000000  00000000  00009de8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
821 .text.op_i32_Divide_ss 00000081  00000000  00000000  00009e3c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
822 .text.op_i32_Divide_sr 0000005f  00000000  00000000  00009ec0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
823 .text.op_i32_Divide_rs 00000061  00000000  00000000  00009f20  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
824 .text.op_i32_Multiply_ss 00000068  00000000  00000000  00009f84  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
825 .text.op_i32_Multiply_rs 00000048  00000000  00000000  00009fec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
826 .text.op_i32_Subtract_ss 00000068  00000000  00000000  0000a034  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
827 .text.op_i32_Subtract_sr 00000048  00000000  00000000  0000a09c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
828 .text.op_i32_Subtract_rs 00000048  00000000  00000000  0000a0e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
829 .text.op_i32_Add_ss 00000066  00000000  00000000  0000a12c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
830 .text.op_i32_Add_rs 00000046  00000000  00000000  0000a194  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
831 .text.op_f64_GreaterThanOrEqual_ss 00000078  00000000  00000000  0000a1dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
832 .text.op_f64_GreaterThanOrEqual_sr 00000056  00000000  00000000  0000a254  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
833 .text.op_f64_GreaterThanOrEqual_rs 00000054  00000000  00000000  0000a2ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
834 .text.op_f64_LessThanOrEqual_ss 00000074  00000000  00000000  0000a300  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
835 .text.op_f64_LessThanOrEqual_sr 00000054  00000000  00000000  0000a374  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
836 .text.op_f64_LessThanOrEqual_rs 00000056  00000000  00000000  0000a3c8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
837 .text.op_f64_GreaterThan_ss 00000072  00000000  00000000  0000a420  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
838 .text.op_f64_GreaterThan_sr 00000052  00000000  00000000  0000a494  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
839 .text.op_f64_GreaterThan_rs 00000056  00000000  00000000  0000a4e8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
840 .text.op_f64_LessThan_ss 00000078  00000000  00000000  0000a540  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
841 .text.op_f64_LessThan_sr 00000056  00000000  00000000  0000a5b8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
842 .text.op_f64_LessThan_rs 00000052  00000000  00000000  0000a610  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
843 .text.op_f64_NotEqual_ss 00000074  00000000  00000000  0000a664  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
844 .text.op_f64_NotEqual_rs 00000054  00000000  00000000  0000a6d8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
845 .text.op_f64_Equal_ss 00000074  00000000  00000000  0000a72c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
846 .text.op_f64_Equal_rs 00000054  00000000  00000000  0000a7a0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
847 .text.op_f32_GreaterThanOrEqual_ss 00000074  00000000  00000000  0000a7f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
848 .text.op_f32_GreaterThanOrEqual_sr 0000005c  00000000  00000000  0000a868  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
849 .text.op_f32_GreaterThanOrEqual_rs 0000005c  00000000  00000000  0000a8c4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
850 .text.op_f32_LessThanOrEqual_ss 00000074  00000000  00000000  0000a920  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
851 .text.op_f32_LessThanOrEqual_sr 0000005c  00000000  00000000  0000a994  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
852 .text.op_f32_LessThanOrEqual_rs 0000005c  00000000  00000000  0000a9f0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
853 .text.op_f32_GreaterThan_ss 00000074  00000000  00000000  0000aa4c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
854 .text.op_f32_GreaterThan_sr 0000005c  00000000  00000000  0000aac0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
855 .text.op_f32_GreaterThan_rs 0000005c  00000000  00000000  0000ab1c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
856 .text.op_f32_LessThan_ss 00000074  00000000  00000000  0000ab78  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
857 .text.op_f32_LessThan_sr 0000005c  00000000  00000000  0000abec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
858 .text.op_f32_LessThan_rs 0000005c  00000000  00000000  0000ac48  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
859 .text.op_f32_NotEqual_ss 00000074  00000000  00000000  0000aca4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
860 .text.op_f32_NotEqual_rs 0000005c  00000000  00000000  0000ad18  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
861 .text.op_f32_Equal_ss 00000074  00000000  00000000  0000ad74  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
862 .text.op_f32_Equal_rs 0000005c  00000000  00000000  0000ade8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
863 .text.op_u64_GreaterThanOrEqual_ss 00000076  00000000  00000000  0000ae44  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
864 .text.op_u64_GreaterThanOrEqual_sr 00000056  00000000  00000000  0000aebc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
865 .text.op_u64_GreaterThanOrEqual_rs 00000056  00000000  00000000  0000af14  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
866 .text.op_i64_GreaterThanOrEqual_ss 00000076  00000000  00000000  0000af6c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
867 .text.op_i64_GreaterThanOrEqual_sr 00000056  00000000  00000000  0000afe4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
868 .text.op_i64_GreaterThanOrEqual_rs 00000056  00000000  00000000  0000b03c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
869 .text.op_u64_LessThanOrEqual_ss 00000076  00000000  00000000  0000b094  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
870 .text.op_u64_LessThanOrEqual_sr 00000056  00000000  00000000  0000b10c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
871 .text.op_u64_LessThanOrEqual_rs 00000056  00000000  00000000  0000b164  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
872 .text.op_i64_LessThanOrEqual_ss 00000076  00000000  00000000  0000b1bc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
873 .text.op_i64_LessThanOrEqual_sr 00000056  00000000  00000000  0000b234  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
874 .text.op_i64_LessThanOrEqual_rs 00000056  00000000  00000000  0000b28c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
875 .text.op_u64_GreaterThan_ss 00000076  00000000  00000000  0000b2e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
876 .text.op_u64_GreaterThan_sr 00000056  00000000  00000000  0000b35c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
877 .text.op_u64_GreaterThan_rs 00000056  00000000  00000000  0000b3b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
878 .text.op_i64_GreaterThan_ss 00000076  00000000  00000000  0000b40c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
879 .text.op_i64_GreaterThan_sr 00000056  00000000  00000000  0000b484  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
880 .text.op_i64_GreaterThan_rs 00000056  00000000  00000000  0000b4dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
881 .text.op_u64_LessThan_ss 00000076  00000000  00000000  0000b534  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
882 .text.op_u64_LessThan_sr 00000056  00000000  00000000  0000b5ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
883 .text.op_u64_LessThan_rs 00000056  00000000  00000000  0000b604  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
884 .text.op_i64_LessThan_ss 00000076  00000000  00000000  0000b65c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
885 .text.op_i64_LessThan_sr 00000056  00000000  00000000  0000b6d4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
886 .text.op_i64_LessThan_rs 00000056  00000000  00000000  0000b72c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
887 .text.op_i64_NotEqual_ss 00000072  00000000  00000000  0000b784  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
888 .text.op_i64_NotEqual_rs 00000054  00000000  00000000  0000b7f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
889 .text.op_i64_Equal_ss 00000072  00000000  00000000  0000b84c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
890 .text.op_i64_Equal_rs 00000054  00000000  00000000  0000b8c0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
891 .text.op_i64_EqualToZero_s 0000004c  00000000  00000000  0000b914  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
892 .text.op_i64_EqualToZero_r 0000002a  00000000  00000000  0000b960  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
893 .text.op_u32_GreaterThanOrEqual_ss 00000068  00000000  00000000  0000b98c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
894 .text.op_u32_GreaterThanOrEqual_sr 0000004c  00000000  00000000  0000b9f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
895 .text.op_u32_GreaterThanOrEqual_rs 0000004c  00000000  00000000  0000ba40  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
896 .text.op_i32_GreaterThanOrEqual_ss 00000068  00000000  00000000  0000ba8c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
897 .text.op_i32_GreaterThanOrEqual_sr 0000004c  00000000  00000000  0000baf4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
898 .text.op_i32_GreaterThanOrEqual_rs 0000004c  00000000  00000000  0000bb40  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
899 .text.op_u32_LessThanOrEqual_ss 00000068  00000000  00000000  0000bb8c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
900 .text.op_u32_LessThanOrEqual_sr 0000004c  00000000  00000000  0000bbf4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
901 .text.op_u32_LessThanOrEqual_rs 0000004c  00000000  00000000  0000bc40  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
902 .text.op_i32_LessThanOrEqual_ss 00000068  00000000  00000000  0000bc8c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
903 .text.op_i32_LessThanOrEqual_sr 0000004c  00000000  00000000  0000bcf4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
904 .text.op_i32_LessThanOrEqual_rs 0000004c  00000000  00000000  0000bd40  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
905 .text.op_u32_GreaterThan_ss 00000068  00000000  00000000  0000bd8c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
906 .text.op_u32_GreaterThan_sr 0000004c  00000000  00000000  0000bdf4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
907 .text.op_u32_GreaterThan_rs 0000004c  00000000  00000000  0000be40  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
908 .text.op_i32_GreaterThan_ss 00000068  00000000  00000000  0000be8c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
909 .text.op_i32_GreaterThan_sr 0000004c  00000000  00000000  0000bef4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
910 .text.op_i32_GreaterThan_rs 0000004c  00000000  00000000  0000bf40  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
911 .text.op_u32_LessThan_ss 00000068  00000000  00000000  0000bf8c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
912 .text.op_u32_LessThan_sr 0000004c  00000000  00000000  0000bff4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
913 .text.op_u32_LessThan_rs 0000004c  00000000  00000000  0000c040  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
914 .text.op_i32_LessThan_ss 00000068  00000000  00000000  0000c08c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
915 .text.op_i32_LessThan_sr 0000004c  00000000  00000000  0000c0f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
916 .text.op_i32_LessThan_rs 0000004c  00000000  00000000  0000c140  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
917 .text.op_i32_NotEqual_ss 00000069  00000000  00000000  0000c18c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
918 .text.op_i32_NotEqual_rs 00000049  00000000  00000000  0000c1f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
919 .text.op_i32_Equal_ss 00000069  00000000  00000000  0000c244  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
920 .text.op_i32_Equal_rs 00000049  00000000  00000000  0000c2b0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
921 .text.op_i32_EqualToZero_s 00000046  00000000  00000000  0000c2fc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
922 .text.op_i32_EqualToZero_r 00000028  00000000  00000000  0000c344  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
923 .rodata.op_Const32.str1.4 0000008b  00000000  00000000  0000c36c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
924 .text.op_Const32 000000db  00000000  00000000  0000c3f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
925 .text.op_MemSize 00000024  00000000  00000000  0000c4d4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
926 .text.op_BranchIf_s 0000008c  00000000  00000000  0000c4f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
927 .text.op_BranchIf_r 00000061  00000000  00000000  0000c584  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
928 .text.op_u64_TruncSat_f64_s_s 000000c3  00000000  00000000  0000c5e8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
929 .text.op_u64_TruncSat_f64_s_r 000000a7  00000000  00000000  0000c6ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
930 .text.op_u64_TruncSat_f64_r_s 00000098  00000000  00000000  0000c754  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
931 .text.op_u64_TruncSat_f64_r_r 0000008c  00000000  00000000  0000c7ec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
932 .text.op_i64_TruncSat_f64_s_s 000000d0  00000000  00000000  0000c878  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
933 .text.op_i64_TruncSat_f64_s_r 000000b0  00000000  00000000  0000c948  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
934 .text.op_i64_TruncSat_f64_r_s 000000a1  00000000  00000000  0000c9f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
935 .text.op_i64_TruncSat_f64_r_r 00000095  00000000  00000000  0000ca9c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
936 .text.op_u64_TruncSat_f32_s_s 0000009c  00000000  00000000  0000cb34  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
937 .text.op_u64_TruncSat_f32_s_r 00000087  00000000  00000000  0000cbd0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
938 .text.op_u64_TruncSat_f32_r_s 0000007b  00000000  00000000  0000cc58  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
939 .text.op_u64_TruncSat_f32_r_r 00000079  00000000  00000000  0000ccd4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
940 .text.op_i64_TruncSat_f32_s_s 000000a5  00000000  00000000  0000cd50  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
941 .text.op_i64_TruncSat_f32_s_r 00000090  00000000  00000000  0000cdf8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
942 .text.op_i64_TruncSat_f32_r_s 00000084  00000000  00000000  0000ce88  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
943 .text.op_i64_TruncSat_f32_r_r 00000084  00000000  00000000  0000cf0c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
944 .text.op_u32_TruncSat_f64_s_s 000000bd  00000000  00000000  0000cf90  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
945 .text.op_u32_TruncSat_f64_s_r 0000009f  00000000  00000000  0000d050  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
946 .text.op_u32_TruncSat_f64_r_s 0000009c  00000000  00000000  0000d0f0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
947 .text.op_u32_TruncSat_f64_r_r 00000074  00000000  00000000  0000d18c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
948 .text.op_i32_TruncSat_f64_s_s 000000c2  00000000  00000000  0000d200  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
949 .text.op_i32_TruncSat_f64_s_r 0000009a  00000000  00000000  0000d2c4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
950 .text.op_i32_TruncSat_f64_r_s 000000a8  00000000  00000000  0000d360  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
951 .text.op_i32_TruncSat_f64_r_r 00000099  00000000  00000000  0000d408  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
952 .text.op_u32_TruncSat_f32_s_s 0000008e  00000000  00000000  0000d4a4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
953 .text.op_u32_TruncSat_f32_s_r 00000082  00000000  00000000  0000d534  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
954 .text.op_u32_TruncSat_f32_r_s 00000073  00000000  00000000  0000d5b8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
955 .text.op_u32_TruncSat_f32_r_r 00000074  00000000  00000000  0000d62c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
956 .text.op_i32_TruncSat_f32_s_s 00000095  00000000  00000000  0000d6a0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
957 .text.op_i32_TruncSat_f32_s_r 0000008a  00000000  00000000  0000d738  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
958 .text.op_i32_TruncSat_f32_r_s 0000007c  00000000  00000000  0000d7c4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
959 .text.op_i32_TruncSat_f32_r_r 00000080  00000000  00000000  0000d840  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
960 .rodata.op_MemCopy.str1.4 00000031  00000000  00000000  0000d8c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
961 .text.op_MemCopy 000000ed  00000000  00000000  0000d8f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
962 .rodata.op_Const64.str1.4 00000078  00000000  00000000  0000d9e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
963 .text.op_Const64 00000164  00000000  00000000  0000da5c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
964 .text.op_i64_Store_i32_ss 0000008c  00000000  00000000  0000dbc0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
965 .text.op_i64_Store_i32_sr 00000068  00000000  00000000  0000dc4c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
966 .text.op_i64_Store_i32_rs 00000068  00000000  00000000  0000dcb4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
967 .text.op_i64_Store_i16_ss 0000008c  00000000  00000000  0000dd1c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
968 .text.op_i64_Store_i16_sr 00000068  00000000  00000000  0000dda8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
969 .text.op_i64_Store_i16_rs 00000068  00000000  00000000  0000de10  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
970 .text.op_i64_Store_u8_ss 0000008c  00000000  00000000  0000de78  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
971 .text.op_i64_Store_u8_sr 00000068  00000000  00000000  0000df04  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
972 .text.op_i64_Store_u8_rs 00000068  00000000  00000000  0000df6c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
973 .text.op_i32_Store_i16_ss 0000008c  00000000  00000000  0000dfd4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
974 .text.op_i32_Store_i16_sr 00000068  00000000  00000000  0000e060  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
975 .text.op_i32_Store_i16_rs 00000068  00000000  00000000  0000e0c8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
976 .text.op_i32_Store_u8_ss 0000008c  00000000  00000000  0000e130  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
977 .text.op_i32_Store_u8_sr 00000068  00000000  00000000  0000e1bc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
978 .text.op_i32_Store_u8_rs 00000068  00000000  00000000  0000e224  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
979 .text.op_f64_Store_f64_rr 00000050  00000000  00000000  0000e28c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
980 .text.op_f64_Store_f64_ss 00000094  00000000  00000000  0000e2dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
981 .text.op_f64_Store_f64_sr 00000074  00000000  00000000  0000e370  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
982 .text.op_f64_Store_f64_rs 00000070  00000000  00000000  0000e3e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
983 .text.op_f32_Store_f32_rr 0000005c  00000000  00000000  0000e454  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
984 .text.op_f32_Store_f32_ss 00000090  00000000  00000000  0000e4b0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
985 .text.op_f32_Store_f32_sr 00000070  00000000  00000000  0000e540  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
986 .text.op_f32_Store_f32_rs 00000078  00000000  00000000  0000e5b0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
987 .text.op_i64_Store_i64_ss 00000094  00000000  00000000  0000e628  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
988 .text.op_i64_Store_i64_sr 00000074  00000000  00000000  0000e6bc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
989 .text.op_i64_Store_i64_rs 00000068  00000000  00000000  0000e730  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
990 .text.op_i32_Store_i32_ss 0000008c  00000000  00000000  0000e798  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
991 .text.op_i32_Store_i32_sr 00000068  00000000  00000000  0000e824  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
992 .text.op_i32_Store_i32_rs 00000068  00000000  00000000  0000e88c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
993 .text.op_i64_Load_u32_s 00000064  00000000  00000000  0000e8f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
994 .text.op_i64_Load_u32_r 00000048  00000000  00000000  0000e958  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
995 .text.op_i64_Load_i32_s 00000068  00000000  00000000  0000e9a0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
996 .text.op_i64_Load_i32_r 0000004a  00000000  00000000  0000ea08  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
997 .text.op_i64_Load_u16_s 00000065  00000000  00000000  0000ea54  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
998 .text.op_i64_Load_u16_r 00000048  00000000  00000000  0000eabc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
999 .text.op_i64_Load_i16_s 00000068  00000000  00000000  0000eb04  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1000 .text.op_i64_Load_i16_r 0000004c  00000000  00000000  0000eb6c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1001 .text.op_i64_Load_u8_s 00000065  00000000  00000000  0000ebb8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1002 .text.op_i64_Load_u8_r 00000048  00000000  00000000  0000ec20  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1003 .text.op_i64_Load_i8_s 0000006c  00000000  00000000  0000ec68  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1004 .text.op_i64_Load_i8_r 0000004e  00000000  00000000  0000ecd4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1005 .text.op_i32_Load_u16_s 00000065  00000000  00000000  0000ed24  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1006 .text.op_i32_Load_u16_r 00000048  00000000  00000000  0000ed8c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1007 .text.op_i32_Load_i16_s 00000068  00000000  00000000  0000edd4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1008 .text.op_i32_Load_i16_r 0000004c  00000000  00000000  0000ee3c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1009 .text.op_i32_Load_u8_s 00000065  00000000  00000000  0000ee88  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1010 .text.op_i32_Load_u8_r 00000048  00000000  00000000  0000eef0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1011 .text.op_i32_Load_i8_s 0000006c  00000000  00000000  0000ef38  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1012 .text.op_i32_Load_i8_r 0000004e  00000000  00000000  0000efa4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1013 .text.op_f64_Load_f64_s 00000062  00000000  00000000  0000eff4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1014 .text.op_f64_Load_f64_r 00000042  00000000  00000000  0000f058  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1015 .text.op_f32_Load_f32_s 00000066  00000000  00000000  0000f09c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1016 .text.op_f32_Load_f32_r 00000046  00000000  00000000  0000f104  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1017 .text.op_i64_Load_i64_s 00000064  00000000  00000000  0000f14c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1018 .text.op_i64_Load_i64_r 00000048  00000000  00000000  0000f1b0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1019 .text.op_i32_Load_i32_s 00000068  00000000  00000000  0000f1f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1020 .text.op_i32_Load_i32_r 0000004a  00000000  00000000  0000f260  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1021 .rodata.op_MemFill.str1.4 00000031  00000000  00000000  0000f2ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1022 .text.op_MemFill 000000ed  00000000  00000000  0000f2e0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1023 .text.op_Entry 00000077  00000000  00000000  0000f3d0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1024 .rodata.EnsureCodePageNumLines.str1.4 000000b0  00000000  00000000  0000f448  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1025 .text.EnsureCodePageNumLines 0000009c  00000000  00000000  0000f4f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1026 .rodata.EmitOp.str1.4 00000026  00000000  00000000  0000f594  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1027 .text.EmitOp  0000004e  00000000  00000000  0000f5bc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1028 .rodata.Pop.str1.4 00000088  00000000  00000000  0000f60c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1029 .text.Pop     0000012d  00000000  00000000  0000f694  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1030 .text.op_f64_CopySign_ss 00000070  00000000  00000000  0000f7c4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1031 .text.op_f64_CopySign_sr 00000056  00000000  00000000  0000f834  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1032 .text.op_f64_CopySign_rs 0000004e  00000000  00000000  0000f88c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1033 .text.op_f64_Max_ss 000000cc  00000000  00000000  0000f8dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1034 .text.op_f64_Sqrt_s 00000049  00000000  00000000  0000f9a8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1035 .text.op_f64_Sqrt_r 0000002a  00000000  00000000  0000f9f4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1036 .text.op_f64_Nearest_s 00000049  00000000  00000000  0000fa20  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1037 .text.op_f64_Nearest_r 0000002a  00000000  00000000  0000fa6c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1038 .text.op_f64_Trunc_s 00000049  00000000  00000000  0000fa98  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1039 .text.op_f64_Trunc_r 0000002a  00000000  00000000  0000fae4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1040 .text.op_f64_Floor_s 00000049  00000000  00000000  0000fb10  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1041 .text.op_f64_Floor_r 0000002a  00000000  00000000  0000fb5c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1042 .text.op_f64_Ceil_s 00000049  00000000  00000000  0000fb88  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1043 .text.op_f64_Ceil_r 0000002a  00000000  00000000  0000fbd4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1044 .text.op_f32_CopySign_ss 00000072  00000000  00000000  0000fc00  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1045 .text.op_f32_CopySign_sr 00000064  00000000  00000000  0000fc74  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1046 .text.op_f32_CopySign_rs 0000005e  00000000  00000000  0000fcd8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1047 .text.op_f32_Sqrt_s 0000004c  00000000  00000000  0000fd38  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1048 .text.op_f32_Sqrt_r 00000036  00000000  00000000  0000fd84  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1049 .text.op_f32_Nearest_s 0000004c  00000000  00000000  0000fdbc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1050 .text.op_f32_Nearest_r 00000036  00000000  00000000  0000fe08  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1051 .text.op_f32_Trunc_s 0000004c  00000000  00000000  0000fe40  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1052 .text.op_f32_Trunc_r 00000036  00000000  00000000  0000fe8c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1053 .text.op_f32_Floor_s 0000004c  00000000  00000000  0000fec4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1054 .text.op_f32_Floor_r 00000036  00000000  00000000  0000ff10  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1055 .text.op_f32_Ceil_s 0000004c  00000000  00000000  0000ff48  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1056 .text.op_f32_Ceil_r 00000036  00000000  00000000  0000ff94  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1057 .text.op_u64_Popcnt_s 0000004e  00000000  00000000  0000ffcc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1058 .text.op_u64_Popcnt_r 00000030  00000000  00000000  0001001c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1059 .text.op_u64_Ctz_s 00000059  00000000  00000000  0001004c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1060 .text.op_u64_Ctz_r 00000039  00000000  00000000  000100a8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1061 .text.op_u64_Clz_s 00000059  00000000  00000000  000100e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1062 .text.op_u64_Clz_r 0000004d  00000000  00000000  00010140  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1063 .text.op_u32_Popcnt_s 0000004a  00000000  00000000  00010190  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1064 .text.op_u32_Popcnt_r 0000002e  00000000  00000000  000101dc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1065 .text.op_u32_Ctz_s 00000057  00000000  00000000  0001020c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1066 .text.op_u32_Ctz_r 00000050  00000000  00000000  00010264  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1067 .text.op_u32_Clz_s 0000004b  00000000  00000000  000102b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1068 .text.op_u32_Clz_r 00000044  00000000  00000000  00010300  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1069 .text.op_MemGrow 00000041  00000000  00000000  00010344  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1070 .rodata.ReadBlockType.str1.4 0000003f  00000000  00000000  00010388  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1071 .text.ReadBlockType 000000a5  00000000  00000000  000103c8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1072 .text.op_f64_Min_ss 000000cc  00000000  00000000  00010470  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1073 .text.op_f32_Max_ss 000000b9  00000000  00000000  0001053c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1074 .text.op_f32_Min_ss 000000b9  00000000  00000000  000105f8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1075 .text.Call$constprop$0 0000003c  00000000  00000000  000106b4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1076 .text.op_Call 0000005e  00000000  00000000  000106f0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1077 .text.EmitSlotOffset$isra$0 00000012  00000000  00000000  00010750  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1078 .text.EmitConstant32$isra$0 00000012  00000000  00000000  00010764  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1079 .text.op_f64_Min_rs 000000ad  00000000  00000000  00010778  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1080 .text.op_f64_Max_rs 000000ad  00000000  00000000  00010828  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1081 .text.op_f32_Min_rs 000000a5  00000000  00000000  000108d8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1082 .text.op_f32_Max_rs 000000a5  00000000  00000000  00010980  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1083 .rodata.AllocateSlotsWithinRange.str1.4 00000019  00000000  00000000  00010a28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1084 .text.AllocateSlotsWithinRange 000000c1  00000000  00000000  00010a44  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1085 .text.PreserveRegisterIfOccupied 00000081  00000000  00000000  00010b08  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1086 .rodata.FindReferencedLocalWithinCurrentBlock.str1.4 0000006c  00000000  00000000  00010b8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1087 .text.FindReferencedLocalWithinCurrentBlock 000000fd  00000000  00000000  00010bf8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1088 .rodata.PreserveArgsAndLocals.str1.4 00000037  00000000  00000000  00010cf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1089 .text.PreserveArgsAndLocals 000000f8  00000000  00000000  00010d30  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1090 .text.CopyStackIndexToSlot 000000d6  00000000  00000000  00010e28  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1091 .rodata.CopyStackSlotsR.str1.4 00000028  00000000  00000000  00010f00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1092 .text.CopyStackSlotsR 00000258  00000000  00000000  00010f28  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1093 .rodata.ReturnValues.str1.4 00000044  00000000  00000000  00011180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1094 .text.ReturnValues 0000012b  00000000  00000000  000111c4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1095 .text.Compile_End 00000030  00000000  00000000  000112f0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1096 .rodata.Compile_Memory_Size.str1.4 00000028  00000000  00000000  00011320  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1097 .text.Compile_Memory_Size 000000a0  00000000  00000000  00011348  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1098 .rodata.Compile_GetLocal.str1.4 0000001a  00000000  00000000  000113e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1099 .text.Compile_GetLocal 000000d9  00000000  00000000  00011404  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1100 .rodata.PushBlockResults.str1.4 00000021  00000000  00000000  000114e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1101 .text.PushBlockResults 0000013b  00000000  00000000  00011504  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1102 .rodata.CompileCallArgsAndReturn.str1.4 0000001a  00000000  00000000  00011640  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1103 .text.CompileCallArgsAndReturn 00000265  00000000  00000000  0001165c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1104 .rodata.Compile_CallIndirect.str1.4 00000026  00000000  00000000  000118c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1105 .text.Compile_CallIndirect 0000018f  00000000  00000000  000118ec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1106 .rodata.Compile_Call.str1.4 00000030  00000000  00000000  00011a7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1107 .text.Compile_Call 000000a4  00000000  00000000  00011aac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1108 .rodata.Compile_Unreachable.str1.4 00000040  00000000  00000000  00011b50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1109 .text.Compile_Unreachable 00000176  00000000  00000000  00011b90  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1110 .text.CopyStackTopToRegister$constprop$0 00000136  00000000  00000000  00011d08  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1111 .text.ResolveBlockResults 00000118  00000000  00000000  00011e40  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1112 .rodata.Compile_BranchTable.str1.4 0000003b  00000000  00000000  00011f58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1113 .text.Compile_BranchTable 0000035a  00000000  00000000  00011f94  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1114 .text.Compile_Memory_CopyFill 00000270  00000000  00000000  000122f0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1115 .text.Compile_Memory_Grow 000000d4  00000000  00000000  00012560  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1116 .text.Compile_Return 0000019e  00000000  00000000  00012634  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1117 .text.Compile_Convert 0000030a  00000000  00000000  000127d4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1118 .text.Compile_SetLocal 00000292  00000000  00000000  00012ae0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1119 .text.Compile_GetSetGlobal 000002c1  00000000  00000000  00012d74  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1120 .rodata.Compile_Operator.str1.4 0000005d  00000000  00000000  00013038  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1121 .text.Compile_Operator 00000502  00000000  00000000  00013098  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1122 .rodata.Compile_Load_Store.str1.4 00000022  00000000  00000000  0001359c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1123 .text.Compile_Load_Store 000000b6  00000000  00000000  000135c0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1124 .text.Compile_Drop 0000012d  00000000  00000000  00013678  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1125 .text.Compile_Select 000006b6  00000000  00000000  000137a8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1126 .rodata.PushConst.str1.4 0000002b  00000000  00000000  00013e60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1127 .text.PushConst 00000401  00000000  00000000  00013e8c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1128 .rodata.Compile_Const_f64.str1.4 00000026  00000000  00000000  00014290  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1129 .text.Compile_Const_f64 0000004e  00000000  00000000  000142b8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1130 .rodata.Compile_Const_f32.str1.4 00000025  00000000  00000000  00014308  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1131 .text.Compile_Const_f32 00000056  00000000  00000000  00014330  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1132 .rodata.Compile_Const_i64.str1.4 00000027  00000000  00000000  00014388  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1133 .text.Compile_Const_i64 0000004a  00000000  00000000  000143b0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1134 .rodata.Compile_Const_i32.str1.4 00000026  00000000  00000000  000143fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1135 .text.Compile_Const_i32 0000004b  00000000  00000000  00014424  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1136 .text.Compile_Branch 000009d6  00000000  00000000  00014470  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1137 .text.GetMaxUsedSlotPlusOne 0000008a  00000000  00000000  00014e48  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1138 .text.AddTrapRecord 00000007  00000000  00000000  00014ed4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
1139 .rodata.CompileRawFunction.str1.4 00000013  00000000  00000000  00014edc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1140 .text.CompileRawFunction 0000006f  00000000  00000000  00014ef0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1141 .text.GetOpInfo 00000039  00000000  00000000  00014f60  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1142 .text.CompileBlockStatements 000000d8  00000000  00000000  00014f9c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1143 .rodata.CompileFunction$part$0.str1.4 000000fe  00000000  00000000  00015074  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1144 .text.CompileFunction$part$0 0000051f  00000000  00000000  00015174  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1145 .rodata.op_Compile.str1.4 00000019  00000000  00000000  00015694  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1146 .text.op_Compile 0000007b  00000000  00000000  000156b0  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1147 .text.op_CallIndirect 000000de  00000000  00000000  0001572c  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1148 .rodata.CompileBlock.str1.4 0000006a  00000000  00000000  0001580c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1149 .text.CompileBlock 00000451  00000000  00000000  00015878  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1150 .rodata.Compile_LoopOrBlock.str1.4 00000017  00000000  00000000  00015ccc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1151 .text.Compile_LoopOrBlock 0000017a  00000000  00000000  00015ce4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1152 .text.Compile_If 000002de  00000000  00000000  00015e60  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1153 .text.CompileFunction 00000016  00000000  00000000  00016140  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
1154 .rodata.__FUNCTION__$0 00000018  00000000  00000000  00016158  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1155 .rodata.__FUNCTION__$1 00000018  00000000  00000000  00016170  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1156 .rodata.__FUNCTION__$2 00000018  00000000  00000000  00016188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1157 .rodata.__FUNCTION__$3 00000018  00000000  00000000  000161a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1158 .rodata.__FUNCTION__$4 00000018  00000000  00000000  000161b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1159 .rodata.__FUNCTION__$5 00000018  00000000  00000000  000161d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1160 .rodata.__FUNCTION__$6 00000018  00000000  00000000  000161e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1161 .rodata.__FUNCTION__$7 00000018  00000000  00000000  00016200  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1162 .rodata.__FUNCTION__$8 00000018  00000000  00000000  00016218  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1163 .rodata.__FUNCTION__$9 00000018  00000000  00000000  00016230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1164 .rodata.__FUNCTION__$10 00000018  00000000  00000000  00016248  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1165 .rodata.__FUNCTION__$11 00000018  00000000  00000000  00016260  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1166 .rodata.__FUNCTION__$12 00000018  00000000  00000000  00016278  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1167 .rodata.__FUNCTION__$13 00000018  00000000  00000000  00016290  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1168 .rodata.__FUNCTION__$14 00000018  00000000  00000000  000162a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1169 .rodata.__FUNCTION__$15 00000018  00000000  00000000  000162c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1170 .rodata.__FUNCTION__$16 00000018  00000000  00000000  000162d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1171 .rodata.__FUNCTION__$17 00000018  00000000  00000000  000162f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1172 .rodata.__FUNCTION__$18 00000018  00000000  00000000  00016308  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1173 .rodata.__FUNCTION__$19 00000018  00000000  00000000  00016320  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1174 .rodata.__FUNCTION__$20 00000018  00000000  00000000  00016338  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1175 .rodata.__FUNCTION__$21 00000018  00000000  00000000  00016350  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1176 .rodata.__FUNCTION__$22 00000018  00000000  00000000  00016368  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1177 .rodata.__FUNCTION__$23 00000018  00000000  00000000  00016380  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1178 .rodata.__FUNCTION__$24 00000018  00000000  00000000  00016398  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1179 .rodata.__FUNCTION__$25 00000018  00000000  00000000  000163b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1180 .rodata.__FUNCTION__$26 00000018  00000000  00000000  000163c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1181 .rodata.__FUNCTION__$27 00000018  00000000  00000000  000163e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1182 .rodata.__FUNCTION__$28 00000018  00000000  00000000  000163f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1183 .rodata.__FUNCTION__$29 00000018  00000000  00000000  00016410  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1184 .rodata.__FUNCTION__$30 00000018  00000000  00000000  00016428  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1185 .rodata.__FUNCTION__$31 00000018  00000000  00000000  00016440  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1186 .rodata.__FUNCTION__$32 00000008  00000000  00000000  00016458  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1187 .rodata.__FUNCTION__$33 0000000a  00000000  00000000  00016460  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1188 .rodata.__FUNCTION__$34 0000000e  00000000  00000000  0001646c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1189 .rodata.__FUNCTION__$35 0000000e  00000000  00000000  0001647c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1190 .rodata.__FUNCTION__$36 0000000f  00000000  00000000  0001648c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1191 .rodata.__FUNCTION__$37 00000008  00000000  00000000  0001649c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1192 .rodata.__FUNCTION__$38 00000005  00000000  00000000  000164a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1193 .rodata.__FUNCTION__$39 00000010  00000000  00000000  000164ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1194 .rodata.__FUNCTION__$40 00000012  00000000  00000000  000164bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1195 .rodata.__FUNCTION__$41 00000012  00000000  00000000  000164d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1196 .rodata.__FUNCTION__$42 00000012  00000000  00000000  000164e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1197 .rodata.__FUNCTION__$43 00000012  00000000  00000000  000164f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1198 .rodata.__FUNCTION__$44 00000012  00000000  00000000  0001650c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1199 .rodata.__FUNCTION__$45 00000012  00000000  00000000  00016520  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1200 .rodata.__FUNCTION__$46 00000012  00000000  00000000  00016534  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1201 .rodata.__FUNCTION__$47 00000012  00000000  00000000  00016548  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1202 .rodata.__FUNCTION__$48 00000011  00000000  00000000  0001655c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1203 .rodata.__FUNCTION__$49 00000011  00000000  00000000  00016570  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1204 .rodata.__FUNCTION__$50 00000011  00000000  00000000  00016584  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1205 .rodata.__FUNCTION__$51 00000011  00000000  00000000  00016598  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1206 .rodata.__FUNCTION__$52 00000012  00000000  00000000  000165ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1207 .rodata.__FUNCTION__$53 00000012  00000000  00000000  000165c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1208 .rodata.__FUNCTION__$54 00000012  00000000  00000000  000165d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1209 .rodata.__FUNCTION__$55 00000012  00000000  00000000  000165e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1210 .rodata.__FUNCTION__$56 00000011  00000000  00000000  000165fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1211 .rodata.__FUNCTION__$57 00000011  00000000  00000000  00016610  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1212 .rodata.__FUNCTION__$58 00000011  00000000  00000000  00016624  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1213 .rodata.__FUNCTION__$59 00000011  00000000  00000000  00016638  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1214 .rodata.__FUNCTION__$60 00000012  00000000  00000000  0001664c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1215 .rodata.__FUNCTION__$61 00000012  00000000  00000000  00016660  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1216 .rodata.__FUNCTION__$62 00000012  00000000  00000000  00016674  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1217 .rodata.__FUNCTION__$63 00000012  00000000  00000000  00016688  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1218 .rodata.__FUNCTION__$64 00000012  00000000  00000000  0001669c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1219 .rodata.__FUNCTION__$65 00000012  00000000  00000000  000166b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1220 .rodata.__FUNCTION__$66 00000012  00000000  00000000  000166c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1221 .rodata.__FUNCTION__$67 00000012  00000000  00000000  000166d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1222 .rodata.__FUNCTION__$68 00000014  00000000  00000000  000166ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1223 .rodata.__FUNCTION__$69 00000014  00000000  00000000  00016700  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1224 .rodata.__FUNCTION__$70 00000014  00000000  00000000  00016714  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1225 .rodata.__FUNCTION__$71 00000014  00000000  00000000  00016728  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1226 .rodata.__FUNCTION__$72 00000014  00000000  00000000  0001673c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1227 .rodata.__FUNCTION__$73 00000014  00000000  00000000  00016750  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1228 .rodata.__FUNCTION__$74 00000014  00000000  00000000  00016764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1229 .rodata.__FUNCTION__$75 00000014  00000000  00000000  00016778  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1230 .rodata.__FUNCTION__$76 00000014  00000000  00000000  0001678c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1231 .rodata.__FUNCTION__$77 00000014  00000000  00000000  000167a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1232 .rodata.__FUNCTION__$78 00000014  00000000  00000000  000167b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1233 .rodata.__FUNCTION__$79 00000014  00000000  00000000  000167c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1234 .rodata.__FUNCTION__$80 00000014  00000000  00000000  000167dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1235 .rodata.__FUNCTION__$81 00000014  00000000  00000000  000167f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1236 .rodata.__FUNCTION__$82 00000013  00000000  00000000  00016804  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1237 .rodata.__FUNCTION__$83 00000013  00000000  00000000  00016818  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1238 .rodata.__FUNCTION__$84 00000013  00000000  00000000  0001682c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1239 .rodata.__FUNCTION__$85 00000014  00000000  00000000  00016840  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1240 .rodata.__FUNCTION__$86 00000014  00000000  00000000  00016854  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1241 .rodata.__FUNCTION__$87 00000014  00000000  00000000  00016868  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1242 .rodata.__FUNCTION__$88 00000013  00000000  00000000  0001687c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1243 .rodata.__FUNCTION__$89 00000013  00000000  00000000  00016890  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1244 .rodata.__FUNCTION__$90 00000013  00000000  00000000  000168a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1245 .rodata.__FUNCTION__$91 00000014  00000000  00000000  000168b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1246 .rodata.__FUNCTION__$92 00000014  00000000  00000000  000168cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1247 .rodata.__FUNCTION__$93 00000014  00000000  00000000  000168e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1248 .rodata.__FUNCTION__$94 00000014  00000000  00000000  000168f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1249 .rodata.__FUNCTION__$95 00000014  00000000  00000000  00016908  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1250 .rodata.__FUNCTION__$96 00000014  00000000  00000000  0001691c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1251 .rodata.__FUNCTION__$97 0000000b  00000000  00000000  00016930  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1252 .rodata.__FUNCTION__$98 0000000b  00000000  00000000  0001693c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1253 .rodata.__FUNCTION__$99 0000000b  00000000  00000000  00016948  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1254 .rodata.__FUNCTION__$100 0000000b  00000000  00000000  00016954  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1255 .rodata.__FUNCTION__$101 00000015  00000000  00000000  00016960  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1256 .rodata.__FUNCTION__$102 00000015  00000000  00000000  00016978  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1257 .rodata.__FUNCTION__$103 00000010  00000000  00000000  00016990  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1258 .rodata.__FUNCTION__$104 00000010  00000000  00000000  000169a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1259 .rodata.__FUNCTION__$105 00000013  00000000  00000000  000169b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1260 .rodata.__FUNCTION__$106 00000013  00000000  00000000  000169c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1261 .rodata.__FUNCTION__$107 00000013  00000000  00000000  000169d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1262 .rodata.__FUNCTION__$108 00000013  00000000  00000000  000169ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1263 .rodata.__FUNCTION__$109 00000013  00000000  00000000  00016a00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1264 .rodata.__FUNCTION__$110 00000013  00000000  00000000  00016a14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1265 .rodata.__FUNCTION__$111 00000013  00000000  00000000  00016a28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1266 .rodata.__FUNCTION__$112 00000013  00000000  00000000  00016a3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1267 .rodata.__FUNCTION__$113 00000016  00000000  00000000  00016a50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1268 .rodata.__FUNCTION__$114 00000016  00000000  00000000  00016a68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1269 .rodata.__FUNCTION__$115 00000016  00000000  00000000  00016a80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1270 .rodata.__FUNCTION__$116 00000016  00000000  00000000  00016a98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1271 .rodata.__FUNCTION__$117 00000016  00000000  00000000  00016ab0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1272 .rodata.__FUNCTION__$118 00000016  00000000  00000000  00016ac8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1273 .rodata.__FUNCTION__$119 0000001a  00000000  00000000  00016ae0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1274 .rodata.__FUNCTION__$120 0000001a  00000000  00000000  00016afc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1275 .rodata.__FUNCTION__$121 0000001a  00000000  00000000  00016b18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1276 .rodata.__FUNCTION__$122 0000001a  00000000  00000000  00016b34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1277 .rodata.__FUNCTION__$123 0000001a  00000000  00000000  00016b50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1278 .rodata.__FUNCTION__$124 0000001a  00000000  00000000  00016b6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1279 .rodata.__FUNCTION__$125 0000001d  00000000  00000000  00016b88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1280 .rodata.__FUNCTION__$126 0000001d  00000000  00000000  00016ba8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1281 .rodata.__FUNCTION__$127 0000001d  00000000  00000000  00016bc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1282 .rodata.__FUNCTION__$128 0000001d  00000000  00000000  00016be8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1283 .rodata.__FUNCTION__$129 0000001d  00000000  00000000  00016c08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1284 .rodata.__FUNCTION__$130 0000001d  00000000  00000000  00016c28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1285 .rodata.__FUNCTION__$131 00000015  00000000  00000000  00016c48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1286 .rodata.__FUNCTION__$132 00000015  00000000  00000000  00016c60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1287 .rodata.__FUNCTION__$133 00000010  00000000  00000000  00016c78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1288 .rodata.__FUNCTION__$134 00000010  00000000  00000000  00016c88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1289 .rodata.__FUNCTION__$135 00000013  00000000  00000000  00016c98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1290 .rodata.__FUNCTION__$136 00000013  00000000  00000000  00016cac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1291 .rodata.__FUNCTION__$137 00000013  00000000  00000000  00016cc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1292 .rodata.__FUNCTION__$138 00000013  00000000  00000000  00016cd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1293 .rodata.__FUNCTION__$139 00000013  00000000  00000000  00016ce8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1294 .rodata.__FUNCTION__$140 00000013  00000000  00000000  00016cfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1295 .rodata.__FUNCTION__$141 00000013  00000000  00000000  00016d10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1296 .rodata.__FUNCTION__$142 00000013  00000000  00000000  00016d24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1297 .rodata.__FUNCTION__$143 00000016  00000000  00000000  00016d38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1298 .rodata.__FUNCTION__$144 00000016  00000000  00000000  00016d50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1299 .rodata.__FUNCTION__$145 00000016  00000000  00000000  00016d68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1300 .rodata.__FUNCTION__$146 00000016  00000000  00000000  00016d80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1301 .rodata.__FUNCTION__$147 00000016  00000000  00000000  00016d98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1302 .rodata.__FUNCTION__$148 00000016  00000000  00000000  00016db0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1303 .rodata.__FUNCTION__$149 0000001a  00000000  00000000  00016dc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1304 .rodata.__FUNCTION__$150 0000001a  00000000  00000000  00016de4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1305 .rodata.__FUNCTION__$151 0000001a  00000000  00000000  00016e00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1306 .rodata.__FUNCTION__$152 0000001a  00000000  00000000  00016e1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1307 .rodata.__FUNCTION__$153 0000001a  00000000  00000000  00016e38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1308 .rodata.__FUNCTION__$154 0000001a  00000000  00000000  00016e54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1309 .rodata.__FUNCTION__$155 0000001d  00000000  00000000  00016e70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1310 .rodata.__FUNCTION__$156 0000001d  00000000  00000000  00016e90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1311 .rodata.__FUNCTION__$157 0000001d  00000000  00000000  00016eb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1312 .rodata.__FUNCTION__$158 0000001d  00000000  00000000  00016ed0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1313 .rodata.__FUNCTION__$159 0000001d  00000000  00000000  00016ef0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1314 .rodata.__FUNCTION__$160 0000001d  00000000  00000000  00016f10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1315 .rodata.__FUNCTION__$161 00000010  00000000  00000000  00016f30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1316 .rodata.__FUNCTION__$162 00000010  00000000  00000000  00016f40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1317 .rodata.__FUNCTION__$163 00000013  00000000  00000000  00016f50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1318 .rodata.__FUNCTION__$164 00000013  00000000  00000000  00016f64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1319 .rodata.__FUNCTION__$165 00000013  00000000  00000000  00016f78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1320 .rodata.__FUNCTION__$166 00000013  00000000  00000000  00016f8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1321 .rodata.__FUNCTION__$167 00000013  00000000  00000000  00016fa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1322 .rodata.__FUNCTION__$168 00000016  00000000  00000000  00016fb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1323 .rodata.__FUNCTION__$169 00000016  00000000  00000000  00016fcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1324 .rodata.__FUNCTION__$170 00000016  00000000  00000000  00016fe4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1325 .rodata.__FUNCTION__$171 0000001a  00000000  00000000  00016ffc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1326 .rodata.__FUNCTION__$172 0000001a  00000000  00000000  00017018  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1327 .rodata.__FUNCTION__$173 0000001a  00000000  00000000  00017034  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1328 .rodata.__FUNCTION__$174 0000001d  00000000  00000000  00017050  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1329 .rodata.__FUNCTION__$175 0000001d  00000000  00000000  00017070  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1330 .rodata.__FUNCTION__$176 0000001d  00000000  00000000  00017090  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1331 .rodata.__FUNCTION__$177 00000010  00000000  00000000  000170b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1332 .rodata.__FUNCTION__$178 00000010  00000000  00000000  000170c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1333 .rodata.__FUNCTION__$179 00000013  00000000  00000000  000170d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1334 .rodata.__FUNCTION__$180 00000013  00000000  00000000  000170e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1335 .rodata.__FUNCTION__$181 00000013  00000000  00000000  000170f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1336 .rodata.__FUNCTION__$182 00000013  00000000  00000000  0001710c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1337 .rodata.__FUNCTION__$183 00000013  00000000  00000000  00017120  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1338 .rodata.__FUNCTION__$184 00000016  00000000  00000000  00017134  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1339 .rodata.__FUNCTION__$185 00000016  00000000  00000000  0001714c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1340 .rodata.__FUNCTION__$186 00000016  00000000  00000000  00017164  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1341 .rodata.__FUNCTION__$187 0000001a  00000000  00000000  0001717c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1342 .rodata.__FUNCTION__$188 0000001a  00000000  00000000  00017198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1343 .rodata.__FUNCTION__$189 0000001a  00000000  00000000  000171b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1344 .rodata.__FUNCTION__$190 0000001d  00000000  00000000  000171d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1345 .rodata.__FUNCTION__$191 0000001d  00000000  00000000  000171f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1346 .rodata.__FUNCTION__$192 0000001d  00000000  00000000  00017210  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1347 .rodata.__FUNCTION__$193 0000000d  00000000  00000000  00017230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1348 .rodata.__FUNCTION__$194 0000000d  00000000  00000000  00017240  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1349 .rodata.__FUNCTION__$195 0000000d  00000000  00000000  00017250  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1350 .rodata.__FUNCTION__$196 0000000d  00000000  00000000  00017260  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1351 .rodata.__FUNCTION__$197 00000010  00000000  00000000  00017270  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1352 .rodata.__FUNCTION__$198 00000010  00000000  00000000  00017280  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1353 .rodata.__FUNCTION__$199 0000000e  00000000  00000000  00017290  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1354 .rodata.__FUNCTION__$200 0000000e  00000000  00000000  000172a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1355 .rodata.__FUNCTION__$201 00000013  00000000  00000000  000172b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1356 .rodata.__FUNCTION__$202 00000013  00000000  00000000  000172c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1357 .rodata.__FUNCTION__$203 00000013  00000000  00000000  000172d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1358 .rodata.__FUNCTION__$204 00000013  00000000  00000000  000172ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1359 .rodata.__FUNCTION__$205 00000013  00000000  00000000  00017300  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1360 .rodata.__FUNCTION__$206 00000011  00000000  00000000  00017314  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1361 .rodata.__FUNCTION__$207 00000011  00000000  00000000  00017328  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1362 .rodata.__FUNCTION__$208 00000011  00000000  00000000  0001733c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1363 .rodata.__FUNCTION__$209 00000011  00000000  00000000  00017350  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1364 .rodata.__FUNCTION__$210 00000011  00000000  00000000  00017364  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1365 .rodata.__FUNCTION__$211 00000011  00000000  00000000  00017378  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1366 .rodata.__FUNCTION__$212 00000014  00000000  00000000  0001738c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1367 .rodata.__FUNCTION__$213 00000014  00000000  00000000  000173a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1368 .rodata.__FUNCTION__$214 00000014  00000000  00000000  000173b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1369 .rodata.__FUNCTION__$215 00000014  00000000  00000000  000173c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1370 .rodata.__FUNCTION__$216 00000014  00000000  00000000  000173dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1371 .rodata.__FUNCTION__$217 00000014  00000000  00000000  000173f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1372 .rodata.__FUNCTION__$218 0000000e  00000000  00000000  00017404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1373 .rodata.__FUNCTION__$219 0000000e  00000000  00000000  00017414  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1374 .rodata.__FUNCTION__$220 0000000d  00000000  00000000  00017424  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1375 .rodata.__FUNCTION__$221 0000000d  00000000  00000000  00017434  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1376 .rodata.__FUNCTION__$222 0000000e  00000000  00000000  00017444  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1377 .rodata.__FUNCTION__$223 0000000e  00000000  00000000  00017454  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1378 .rodata.__FUNCTION__$224 00000014  00000000  00000000  00017464  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1379 .rodata.__FUNCTION__$225 00000014  00000000  00000000  00017478  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1380 .rodata.__FUNCTION__$226 00000014  00000000  00000000  0001748c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1381 .rodata.__FUNCTION__$227 00000015  00000000  00000000  000174a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1382 .rodata.__FUNCTION__$228 00000015  00000000  00000000  000174b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1383 .rodata.__FUNCTION__$229 00000015  00000000  00000000  000174d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1384 .rodata.__FUNCTION__$230 00000015  00000000  00000000  000174e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1385 .rodata.__FUNCTION__$231 00000015  00000000  00000000  00017500  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1386 .rodata.__FUNCTION__$232 00000015  00000000  00000000  00017518  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1387 .rodata.__FUNCTION__$233 0000000f  00000000  00000000  00017530  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1388 .rodata.__FUNCTION__$234 0000000f  00000000  00000000  00017540  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1389 .rodata.__FUNCTION__$235 0000000f  00000000  00000000  00017550  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1390 .rodata.__FUNCTION__$236 0000000f  00000000  00000000  00017560  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1391 .rodata.__FUNCTION__$237 0000000f  00000000  00000000  00017570  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1392 .rodata.__FUNCTION__$238 0000000f  00000000  00000000  00017580  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1393 .rodata.__FUNCTION__$239 0000000d  00000000  00000000  00017590  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1394 .rodata.__FUNCTION__$240 0000000d  00000000  00000000  000175a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1395 .rodata.__FUNCTION__$241 0000000d  00000000  00000000  000175b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1396 .rodata.__FUNCTION__$242 0000000d  00000000  00000000  000175c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1397 .rodata.__FUNCTION__$243 00000010  00000000  00000000  000175d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1398 .rodata.__FUNCTION__$244 00000010  00000000  00000000  000175e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1399 .rodata.__FUNCTION__$245 0000000e  00000000  00000000  000175f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1400 .rodata.__FUNCTION__$246 0000000e  00000000  00000000  00017600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1401 .rodata.__FUNCTION__$247 00000013  00000000  00000000  00017610  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1402 .rodata.__FUNCTION__$248 00000013  00000000  00000000  00017624  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1403 .rodata.__FUNCTION__$249 00000013  00000000  00000000  00017638  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1404 .rodata.__FUNCTION__$250 00000013  00000000  00000000  0001764c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1405 .rodata.__FUNCTION__$251 00000013  00000000  00000000  00017660  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1406 .rodata.__FUNCTION__$252 00000011  00000000  00000000  00017674  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1407 .rodata.__FUNCTION__$253 00000011  00000000  00000000  00017688  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1408 .rodata.__FUNCTION__$254 00000011  00000000  00000000  0001769c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1409 .rodata.__FUNCTION__$255 00000011  00000000  00000000  000176b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1410 .rodata.__FUNCTION__$256 00000011  00000000  00000000  000176c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1411 .rodata.__FUNCTION__$257 00000011  00000000  00000000  000176d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1412 .rodata.__FUNCTION__$258 00000014  00000000  00000000  000176ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1413 .rodata.__FUNCTION__$259 00000014  00000000  00000000  00017700  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1414 .rodata.__FUNCTION__$260 00000014  00000000  00000000  00017714  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1415 .rodata.__FUNCTION__$261 00000014  00000000  00000000  00017728  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1416 .rodata.__FUNCTION__$262 00000014  00000000  00000000  0001773c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1417 .rodata.__FUNCTION__$263 00000014  00000000  00000000  00017750  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1418 .rodata.__FUNCTION__$264 0000000e  00000000  00000000  00017764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1419 .rodata.__FUNCTION__$265 0000000e  00000000  00000000  00017774  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1420 .rodata.__FUNCTION__$266 0000000d  00000000  00000000  00017784  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1421 .rodata.__FUNCTION__$267 0000000d  00000000  00000000  00017794  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1422 .rodata.__FUNCTION__$268 0000000e  00000000  00000000  000177a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1423 .rodata.__FUNCTION__$269 0000000e  00000000  00000000  000177b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1424 .rodata.__FUNCTION__$270 00000014  00000000  00000000  000177c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1425 .rodata.__FUNCTION__$271 00000014  00000000  00000000  000177d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1426 .rodata.__FUNCTION__$272 00000014  00000000  00000000  000177ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1427 .rodata.__FUNCTION__$273 00000015  00000000  00000000  00017800  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1428 .rodata.__FUNCTION__$274 00000015  00000000  00000000  00017818  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1429 .rodata.__FUNCTION__$275 00000015  00000000  00000000  00017830  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1430 .rodata.__FUNCTION__$276 00000015  00000000  00000000  00017848  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1431 .rodata.__FUNCTION__$277 00000015  00000000  00000000  00017860  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1432 .rodata.__FUNCTION__$278 00000015  00000000  00000000  00017878  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1433 .rodata.__FUNCTION__$279 0000000f  00000000  00000000  00017890  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1434 .rodata.__FUNCTION__$280 0000000f  00000000  00000000  000178a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1435 .rodata.__FUNCTION__$281 0000000f  00000000  00000000  000178b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1436 .rodata.__FUNCTION__$282 0000000f  00000000  00000000  000178c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1437 .rodata.__FUNCTION__$283 0000000f  00000000  00000000  000178d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1438 .rodata.__FUNCTION__$284 0000000f  00000000  00000000  000178e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1439 .rodata.__FUNCTION__$285 0000000d  00000000  00000000  000178f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1440 .rodata.__FUNCTION__$286 0000000d  00000000  00000000  00017900  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1441 .rodata.__FUNCTION__$287 00000010  00000000  00000000  00017910  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1442 .rodata.__FUNCTION__$288 00000010  00000000  00000000  00017920  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1443 .rodata.__FUNCTION__$289 0000000e  00000000  00000000  00017930  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1444 .rodata.__FUNCTION__$290 0000000e  00000000  00000000  00017940  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1445 .rodata.__FUNCTION__$291 0000000f  00000000  00000000  00017950  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1446 .rodata.__FUNCTION__$292 0000000f  00000000  00000000  00017960  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1447 .rodata.__FUNCTION__$293 0000000f  00000000  00000000  00017970  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1448 .rodata.__FUNCTION__$294 0000000f  00000000  00000000  00017980  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1449 .rodata.__FUNCTION__$295 00000011  00000000  00000000  00017990  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1450 .rodata.__FUNCTION__$296 00000011  00000000  00000000  000179a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1451 .rodata.__FUNCTION__$297 0000000e  00000000  00000000  000179b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1452 .rodata.__FUNCTION__$298 0000000e  00000000  00000000  000179c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1453 .rodata.__FUNCTION__$299 0000000e  00000000  00000000  000179d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1454 .rodata.__FUNCTION__$300 0000000e  00000000  00000000  000179e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1455 .rodata.__FUNCTION__$301 00000013  00000000  00000000  000179f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1456 .rodata.__FUNCTION__$302 00000013  00000000  00000000  00017a0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1457 .rodata.__FUNCTION__$303 00000013  00000000  00000000  00017a20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1458 .rodata.__FUNCTION__$304 00000013  00000000  00000000  00017a34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1459 .rodata.__FUNCTION__$305 00000013  00000000  00000000  00017a48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1460 .rodata.__FUNCTION__$306 00000011  00000000  00000000  00017a5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1461 .rodata.__FUNCTION__$307 00000011  00000000  00000000  00017a70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1462 .rodata.__FUNCTION__$308 00000011  00000000  00000000  00017a84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1463 .rodata.__FUNCTION__$309 0000000e  00000000  00000000  00017a98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1464 .rodata.__FUNCTION__$310 0000000e  00000000  00000000  00017aa8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1465 .rodata.__FUNCTION__$311 0000000e  00000000  00000000  00017ab8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1466 .rodata.__FUNCTION__$312 0000000e  00000000  00000000  00017ac8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1467 .rodata.__FUNCTION__$313 00000013  00000000  00000000  00017ad8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1468 .rodata.__FUNCTION__$314 00000013  00000000  00000000  00017aec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1469 .rodata.__FUNCTION__$315 00000013  00000000  00000000  00017b00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1470 .rodata.__FUNCTION__$316 0000000d  00000000  00000000  00017b14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1471 .rodata.__FUNCTION__$317 0000000d  00000000  00000000  00017b24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1472 .rodata.__FUNCTION__$318 00000010  00000000  00000000  00017b34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1473 .rodata.__FUNCTION__$319 00000010  00000000  00000000  00017b44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1474 .rodata.__FUNCTION__$320 0000000e  00000000  00000000  00017b54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1475 .rodata.__FUNCTION__$321 0000000e  00000000  00000000  00017b64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1476 .rodata.__FUNCTION__$322 0000000f  00000000  00000000  00017b74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1477 .rodata.__FUNCTION__$323 0000000f  00000000  00000000  00017b84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1478 .rodata.__FUNCTION__$324 0000000f  00000000  00000000  00017b94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1479 .rodata.__FUNCTION__$325 0000000f  00000000  00000000  00017ba4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1480 .rodata.__FUNCTION__$326 00000011  00000000  00000000  00017bb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1481 .rodata.__FUNCTION__$327 00000011  00000000  00000000  00017bc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1482 .rodata.__FUNCTION__$328 0000000e  00000000  00000000  00017bdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1483 .rodata.__FUNCTION__$329 0000000e  00000000  00000000  00017bec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1484 .rodata.__FUNCTION__$330 0000000e  00000000  00000000  00017bfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1485 .rodata.__FUNCTION__$331 0000000e  00000000  00000000  00017c0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1486 .rodata.__FUNCTION__$332 00000013  00000000  00000000  00017c1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1487 .rodata.__FUNCTION__$333 00000013  00000000  00000000  00017c30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1488 .rodata.__FUNCTION__$334 00000013  00000000  00000000  00017c44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1489 .rodata.__FUNCTION__$335 00000013  00000000  00000000  00017c58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1490 .rodata.__FUNCTION__$336 00000013  00000000  00000000  00017c6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1491 .rodata.__FUNCTION__$337 00000011  00000000  00000000  00017c80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1492 .rodata.__FUNCTION__$338 00000011  00000000  00000000  00017c94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1493 .rodata.__FUNCTION__$339 00000011  00000000  00000000  00017ca8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1494 .rodata.__FUNCTION__$340 0000000e  00000000  00000000  00017cbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1495 .rodata.__FUNCTION__$341 0000000e  00000000  00000000  00017ccc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1496 .rodata.__FUNCTION__$342 0000000e  00000000  00000000  00017cdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1497 .rodata.__FUNCTION__$343 0000000e  00000000  00000000  00017cec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1498 .rodata.__FUNCTION__$344 00000013  00000000  00000000  00017cfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1499 .rodata.__FUNCTION__$345 00000013  00000000  00000000  00017d10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1500 .rodata.__FUNCTION__$346 00000013  00000000  00000000  00017d24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1501 .rodata.__FUNCTION__$347 00000012  00000000  00000000  00017d38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1502 .rodata.__FUNCTION__$348 00000012  00000000  00000000  00017d4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1503 .rodata.__FUNCTION__$349 00000015  00000000  00000000  00017d60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1504 .rodata.__FUNCTION__$350 00000015  00000000  00000000  00017d78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1505 .rodata.__FUNCTION__$351 00000015  00000000  00000000  00017d90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1506 .rodata.__FUNCTION__$352 00000015  00000000  00000000  00017da8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1507 .rodata.__FUNCTION__$353 00000015  00000000  00000000  00017dc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1508 .rodata.__FUNCTION__$354 00000015  00000000  00000000  00017dd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1509 .rodata.__FUNCTION__$355 00000015  00000000  00000000  00017df0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1510 .rodata.__FUNCTION__$356 00000015  00000000  00000000  00017e08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1511 .rodata.__FUNCTION__$357 00000015  00000000  00000000  00017e20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1512 .rodata.__FUNCTION__$358 00000015  00000000  00000000  00017e38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1513 .rodata.__FUNCTION__$359 00000015  00000000  00000000  00017e50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1514 .rodata.__FUNCTION__$360 00000015  00000000  00000000  00017e68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1515 .rodata.__FUNCTION__$361 00000015  00000000  00000000  00017e80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1516 .rodata.__FUNCTION__$362 00000015  00000000  00000000  00017e98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1517 .rodata.__FUNCTION__$363 00000015  00000000  00000000  00017eb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1518 .rodata.__FUNCTION__$364 00000015  00000000  00000000  00017ec8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1519 .rodata.__FUNCTION__$365 00000014  00000000  00000000  00017ee0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1520 .rodata.__FUNCTION__$366 00000014  00000000  00000000  00017ef4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1521 .rodata.__FUNCTION__$367 00000014  00000000  00000000  00017f08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1522 .rodata.__FUNCTION__$368 00000014  00000000  00000000  00017f1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1523 .rodata.__FUNCTION__$369 00000015  00000000  00000000  00017f30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1524 .rodata.__FUNCTION__$370 00000015  00000000  00000000  00017f48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1525 .rodata.__FUNCTION__$371 00000015  00000000  00000000  00017f60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1526 .rodata.__FUNCTION__$372 00000015  00000000  00000000  00017f78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1527 .rodata.__FUNCTION__$373 00000015  00000000  00000000  00017f90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1528 .rodata.__FUNCTION__$374 00000015  00000000  00000000  00017fa8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1529 .rodata.__FUNCTION__$375 00000015  00000000  00000000  00017fc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1530 .rodata.__FUNCTION__$376 00000015  00000000  00000000  00017fd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1531 .rodata.__FUNCTION__$377 00000015  00000000  00000000  00017ff0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1532 .rodata.__FUNCTION__$378 00000015  00000000  00000000  00018008  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1533 .rodata.__FUNCTION__$379 00000015  00000000  00000000  00018020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1534 .rodata.__FUNCTION__$380 00000015  00000000  00000000  00018038  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1535 .rodata.__FUNCTION__$381 00000015  00000000  00000000  00018050  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1536 .rodata.__FUNCTION__$382 00000015  00000000  00000000  00018068  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1537 .rodata.__FUNCTION__$383 00000015  00000000  00000000  00018080  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1538 .rodata.__FUNCTION__$384 00000015  00000000  00000000  00018098  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1539 .rodata.__FUNCTION__$385 00000017  00000000  00000000  000180b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1540 .rodata.__FUNCTION__$386 00000017  00000000  00000000  000180c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1541 .rodata.__FUNCTION__$387 00000017  00000000  00000000  000180e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1542 .rodata.__FUNCTION__$388 00000017  00000000  00000000  000180f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1543 .rodata.__FUNCTION__$389 00000017  00000000  00000000  00018110  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1544 .rodata.__FUNCTION__$390 00000017  00000000  00000000  00018128  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1545 .rodata.__FUNCTION__$391 00000017  00000000  00000000  00018140  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1546 .rodata.__FUNCTION__$392 00000017  00000000  00000000  00018158  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1547 .rodata.__FUNCTION__$393 00000017  00000000  00000000  00018170  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1548 .rodata.__FUNCTION__$394 00000017  00000000  00000000  00018188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1549 .rodata.__FUNCTION__$395 00000017  00000000  00000000  000181a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1550 .rodata.__FUNCTION__$396 00000017  00000000  00000000  000181b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1551 .rodata.__FUNCTION__$397 00000017  00000000  00000000  000181d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1552 .rodata.__FUNCTION__$398 00000017  00000000  00000000  000181e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1553 .rodata.__FUNCTION__$399 00000017  00000000  00000000  00018200  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1554 .rodata.__FUNCTION__$400 00000017  00000000  00000000  00018218  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1555 .rodata.__FUNCTION__$401 00000014  00000000  00000000  00018230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1556 .rodata.__FUNCTION__$402 00000014  00000000  00000000  00018244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1557 .rodata.__FUNCTION__$403 00000017  00000000  00000000  00018258  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1558 .rodata.__FUNCTION__$404 00000017  00000000  00000000  00018270  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1559 .rodata.__FUNCTION__$405 00000017  00000000  00000000  00018288  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1560 .rodata.__FUNCTION__$406 00000017  00000000  00000000  000182a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1561 .rodata.__FUNCTION__$407 00000017  00000000  00000000  000182b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1562 .rodata.__FUNCTION__$408 00000017  00000000  00000000  000182d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1563 .rodata.__FUNCTION__$409 00000017  00000000  00000000  000182e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1564 .rodata.__FUNCTION__$410 00000017  00000000  00000000  00018300  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1565 .rodata.__FUNCTION__$411 00000017  00000000  00000000  00018318  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1566 .rodata.__FUNCTION__$412 00000017  00000000  00000000  00018330  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1567 .rodata.__FUNCTION__$413 00000017  00000000  00000000  00018348  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1568 .rodata.__FUNCTION__$414 00000017  00000000  00000000  00018360  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1569 .rodata.__FUNCTION__$415 00000017  00000000  00000000  00018378  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1570 .rodata.__FUNCTION__$416 00000017  00000000  00000000  00018390  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1571 .rodata.__FUNCTION__$417 00000017  00000000  00000000  000183a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1572 .rodata.__FUNCTION__$418 00000017  00000000  00000000  000183c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1573 .rodata.__FUNCTION__$419 00000015  00000000  00000000  000183d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1574 .rodata.__FUNCTION__$420 00000015  00000000  00000000  000183f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1575 .rodata.__FUNCTION__$421 0000001b  00000000  00000000  00018408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1576 .rodata.__FUNCTION__$422 0000001b  00000000  00000000  00018424  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1577 .rodata.__FUNCTION__$423 0000001b  00000000  00000000  00018440  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1578 .rodata.__FUNCTION__$424 0000001b  00000000  00000000  0001845c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1579 .rodata.__FUNCTION__$425 0000001b  00000000  00000000  00018478  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1580 .rodata.__FUNCTION__$426 0000001b  00000000  00000000  00018494  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1581 .rodata.__FUNCTION__$427 0000001b  00000000  00000000  000184b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1582 .rodata.__FUNCTION__$428 0000001b  00000000  00000000  000184cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1583 .rodata.__FUNCTION__$429 0000001b  00000000  00000000  000184e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1584 .rodata.__FUNCTION__$430 0000001b  00000000  00000000  00018504  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1585 .rodata.__FUNCTION__$431 0000001b  00000000  00000000  00018520  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1586 .rodata.__FUNCTION__$432 0000001b  00000000  00000000  0001853c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1587 .rodata.__FUNCTION__$433 0000001b  00000000  00000000  00018558  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1588 .rodata.__FUNCTION__$434 0000001b  00000000  00000000  00018574  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1589 .rodata.__FUNCTION__$435 0000001b  00000000  00000000  00018590  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1590 .rodata.__FUNCTION__$436 0000001b  00000000  00000000  000185ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1591 .rodata.__FUNCTION__$437 00000013  00000000  00000000  000185c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1592 .rodata.__FUNCTION__$438 00000013  00000000  00000000  000185dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1593 .rodata.__FUNCTION__$439 00000014  00000000  00000000  000185f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1594 .rodata.__FUNCTION__$440 00000014  00000000  00000000  00018604  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1595 .rodata.__FUNCTION__$441 00000013  00000000  00000000  00018618  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1596 .rodata.__FUNCTION__$442 00000013  00000000  00000000  0001862c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1597 .rodata.__FUNCTION__$443 00000014  00000000  00000000  00018640  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1598 .rodata.__FUNCTION__$444 00000014  00000000  00000000  00018654  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1599 .rodata.__FUNCTION__$445 00000014  00000000  00000000  00018668  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1600 .rodata.__FUNCTION__$446 00000014  00000000  00000000  0001867c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1601 .rodata.__FUNCTION__$447 0000000b  00000000  00000000  00018690  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1602 .rodata.__FUNCTION__$448 00000009  00000000  00000000  0001869c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1603 .rodata.__FUNCTION__$449 00000011  00000000  00000000  000186a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1604 .rodata.__FUNCTION__$450 00000011  00000000  00000000  000186bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1605 .rodata.__FUNCTION__$451 00000012  00000000  00000000  000186d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1606 .rodata.__FUNCTION__$452 0000000f  00000000  00000000  000186e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1607 .rodata.__FUNCTION__$453 00000017  00000000  00000000  000186f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1608 .rodata.__FUNCTION__$454 00000008  00000000  00000000  0001870c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1609 .rodata.__FUNCTION__$455 00000016  00000000  00000000  00018714  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1610 .rodata.__FUNCTION__$456 0000000f  00000000  00000000  0001872c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1611 .rodata.__FUNCTION__$457 00000017  00000000  00000000  0001873c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1612 .rodata.__FUNCTION__$458 00000008  00000000  00000000  00018754  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1613 .rodata.__FUNCTION__$459 00000016  00000000  00000000  0001875c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1614 .rodata.__FUNCTION__$460 00000012  00000000  00000000  00018774  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1615 .rodata.__FUNCTION__$461 00000012  00000000  00000000  00018788  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1616 .rodata.__FUNCTION__$462 00000012  00000000  00000000  0001879c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1617 .rodata.__FUNCTION__$463 00000012  00000000  00000000  000187b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1618 .rodata.__FUNCTION__$464 00000012  00000000  00000000  000187c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1619 .rodata.__FUNCTION__$465 00000012  00000000  00000000  000187d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1620 .rodata.__FUNCTION__$466 00000012  00000000  00000000  000187ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1621 .rodata.__FUNCTION__$467 00000012  00000000  00000000  00018800  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1622 .rodata.__FUNCTION__$468 00000012  00000000  00000000  00018814  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1623 .rodata.__FUNCTION__$469 00000012  00000000  00000000  00018828  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1624 .rodata.__FUNCTION__$470 00000012  00000000  00000000  0001883c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1625 .rodata.__FUNCTION__$471 00000012  00000000  00000000  00018850  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1626 .rodata.__FUNCTION__$472 00000012  00000000  00000000  00018864  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1627 .rodata.__FUNCTION__$473 00000012  00000000  00000000  00018878  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1628 .rodata.__FUNCTION__$474 00000012  00000000  00000000  0001888c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1629 .rodata.__FUNCTION__$475 00000012  00000000  00000000  000188a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1630 .rodata.__FUNCTION__$476 00000012  00000000  00000000  000188b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1631 .rodata.__FUNCTION__$477 00000012  00000000  00000000  000188c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1632 .rodata.__FUNCTION__$478 00000012  00000000  00000000  000188dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1633 .rodata.__FUNCTION__$479 00000012  00000000  00000000  000188f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1634 .rodata.__FUNCTION__$480 0000000b  00000000  00000000  00018904  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1635 .rodata.__FUNCTION__$481 0000000b  00000000  00000000  00018910  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1636 .rodata.__FUNCTION__$482 00000011  00000000  00000000  0001891c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1637 .rodata.__FUNCTION__$483 00000011  00000000  00000000  00018930  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1638 .rodata.__FUNCTION__$484 00000011  00000000  00000000  00018944  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1639 .rodata.__FUNCTION__$485 00000011  00000000  00000000  00018958  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1640 .rodata.__FUNCTION__$486 00000011  00000000  00000000  0001896c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1641 .rodata.__FUNCTION__$487 00000011  00000000  00000000  00018980  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1642 .rodata.__FUNCTION__$488 00000013  00000000  00000000  00018994  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1643 .rodata.__FUNCTION__$489 00000013  00000000  00000000  000189a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1644 .rodata.__FUNCTION__$490 00000013  00000000  00000000  000189bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1645 .rodata.__FUNCTION__$491 00000013  00000000  00000000  000189d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1646 .rodata.__FUNCTION__$492 0000000f  00000000  00000000  000189e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1647 .rodata.__FUNCTION__$493 0000000f  00000000  00000000  000189f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1648 .rodata.__FUNCTION__$494 0000000f  00000000  00000000  00018a04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1649 .rodata.__FUNCTION__$495 0000000f  00000000  00000000  00018a14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1650 .rodata.__FUNCTION__$496 00000017  00000000  00000000  00018a24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1651 .rodata.__FUNCTION__$497 00000017  00000000  00000000  00018a3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1652 .rodata.__FUNCTION__$498 00000017  00000000  00000000  00018a54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1653 .rodata.__FUNCTION__$499 0000000a  00000000  00000000  00018a6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1654 .rodata.__FUNCTION__$500 00000017  00000000  00000000  00018a78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1655 .rodata.WASM_DEBUG_CompileFunction 00000008  00000000  00000000  00018a90  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1656 .rodata.str1.4 00000ba8  00000000  00000000  00018a98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1657 .rodata.c_operationsFC 0000016c  00000000  00000000  00019640  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
1658 .dram1.3      00001a94  00000000  00000000  000197ac  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
1659 .rodata.c_fpSelectOps 00000030  00000000  00000000  0001b240  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
1660 .rodata.c_intSelectOps 00000020  00000000  00000000  0001b270  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
1661 .rodata.c_setRegisterOps 00000014  00000000  00000000  0001b290  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
1662 .rodata.c_setGlobalOps 00000014  00000000  00000000  0001b2a4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
1663 .rodata.c_setSetOps 00000014  00000000  00000000  0001b2b8  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
1664 .rodata.c_preserveSetSlot 00000014  00000000  00000000  0001b2cc  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
1665 .rodata.WASM_DEBUG_Const 00000001  00000000  00000000  0001b2e0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1666 .rodata.WASM_DEBUG_ContinueLoopIf 00000001  00000000  00000000  0001b2e1  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1667 .rodata.WASM_DEBUG_ContinueLoop 00000001  00000000  00000000  0001b2e2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1668 .rodata.WASM_DEBUG_BanchIf 00000001  00000000  00000000  0001b2e3  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1669 .rodata.WASM_DEBUG_Loop 00000001  00000000  00000000  0001b2e4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1670 .rodata.WASM_MemFill_DisableCheck 00000001  00000000  00000000  0001b2e5  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1671 .rodata.WASM_DEBUG_MemFill 00000001  00000000  00000000  0001b2e6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1672 .rodata.WASM_MemCopy_DisableCheck 00000001  00000000  00000000  0001b2e7  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1673 .rodata.WASM_DEBUG_MemCopy 00000001  00000000  00000000  0001b2e8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1674 .rodata.WASM_DEBUG_MemGrow 00000001  00000000  00000000  0001b2e9  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1675 .rodata.WASM_DEBUG_CallRawFunction 00000001  00000000  00000000  0001b2ea  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
1676 .rodata.c_waTypes 00000018  00000000  00000000  0001b2ec  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
1677 .bss.ERROR_POINTER 00000008  00000000  00000000  0001b308  2**3
                  ALLOC
1678 .debug_frame  00003490  00000000  00000000  0001b308  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
1679 .debug_info   00035f67  00000000  00000000  0001e798  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
1680 .debug_abbrev 00000775  00000000  00000000  000546ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
1681 .debug_loc    0001c834  00000000  00000000  00054e74  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
1682 .debug_aranges 00001198  00000000  00000000  000716a8  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
1683 .debug_ranges 00006620  00000000  00000000  00072840  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
1684 .debug_line   000286e8  00000000  00000000  00078e60  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
1685 .debug_str    000051b1  00000000  00000000  000a1548  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
1686 .comment      00000030  00000000  00000000  000a66f9  2**0
                  CONTENTS, READONLY
1687 .xtensa.info  00000038  00000000  00000000  000a6729  2**0
                  CONTENTS, READONLY
1688 .xt.lit       00001160  00000000  00000000  000a6761  2**0
                  CONTENTS, RELOC, READONLY
1689 .xt.prop      0000c54c  00000000  00000000  000a78c1  2**0
                  CONTENTS, RELOC, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 m3_compile.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .text.op_Return	00000000 .text.op_Return
00000000 l     F .text.op_Return	00000007 op_Return
00000000 l    d  .text.op_End	00000000 .text.op_End
00000000 l     F .text.op_End	00000007 op_End
00000000 l    d  .text.Compile_Nop	00000000 .text.Compile_Nop
00000000 l     F .text.Compile_Nop	00000007 Compile_Nop
00000000 l    d  .text.EmitPointer	00000000 .text.EmitPointer
00000000 l     F .text.EmitPointer	0000001e EmitPointer
00000000 l    d  .text.ReservePointer	00000000 .text.ReservePointer
00000000 l     F .text.ReservePointer	0000001b ReservePointer
00000000 l    d  .text.op_ContinueLoop	00000000 .text.op_ContinueLoop
00000000 l     F .text.op_ContinueLoop	00000014 op_ContinueLoop
00000000 l    d  .text.op_BranchTable	00000000 .text.op_BranchTable
00000000 l     O .rodata.__FUNCTION__$36	0000000f __FUNCTION__$36
00000000 l     F .text.op_BranchTable	00000066 op_BranchTable
00000000 l    d  .text.op_Branch	00000000 .text.op_Branch
00000000 l     O .rodata.__FUNCTION__$33	0000000a __FUNCTION__$33
00000000 l     F .text.op_Branch	00000030 op_Branch
00000000 l    d  .rodata.op_Unsupported.str1.4	00000000 .rodata.op_Unsupported.str1.4
00000000 l    d  .text.op_Unsupported	00000000 .text.op_Unsupported
00000000 l     F .text.op_Unsupported	00000010 op_Unsupported
00000000 l    d  .text.op_Loop	00000000 .text.op_Loop
00000000 l     O .rodata.__FUNCTION__$32	00000008 __FUNCTION__$32
00000000 l     F .text.op_Loop	0000003d op_Loop
00000000 l    d  .text.op_Unreachable	00000000 .text.op_Unreachable
00000000 l     F .text.op_Unreachable	00000010 op_Unreachable
00000000 l    d  .rodata.op_CallRawFunction.str1.4	00000000 .rodata.op_CallRawFunction.str1.4
00000000 l    d  .text.op_CallRawFunction	00000000 .text.op_CallRawFunction
00000000 l     F .text.op_CallRawFunction	000000e8 op_CallRawFunction
00000000 l    d  .text.profileOp	00000000 .text.profileOp
00000000 l     O .rodata.__FUNCTION__$499	0000000a __FUNCTION__$499
00000000 l     F .text.profileOp	00000038 profileOp
00000000 l    d  .text.op_PreserveSetSlot_f64	00000000 .text.op_PreserveSetSlot_f64
00000000 l     O .rodata.__FUNCTION__$500	00000017 __FUNCTION__$500
00000000 l     F .text.op_PreserveSetSlot_f64	0000006e op_PreserveSetSlot_f64
00000000 l    d  .text.op_PreserveSetSlot_f32	00000000 .text.op_PreserveSetSlot_f32
00000000 l     O .rodata.__FUNCTION__$498	00000017 __FUNCTION__$498
00000000 l     F .text.op_PreserveSetSlot_f32	00000078 op_PreserveSetSlot_f32
00000000 l    d  .text.op_PreserveSetSlot_i64	00000000 .text.op_PreserveSetSlot_i64
00000000 l     O .rodata.__FUNCTION__$497	00000017 __FUNCTION__$497
00000000 l     F .text.op_PreserveSetSlot_i64	0000006a op_PreserveSetSlot_i64
00000000 l    d  .text.op_PreserveSetSlot_i32	00000000 .text.op_PreserveSetSlot_i32
00000000 l     O .rodata.__FUNCTION__$496	00000017 __FUNCTION__$496
00000000 l     F .text.op_PreserveSetSlot_i32	00000064 op_PreserveSetSlot_i32
00000000 l    d  .text.op_SetSlot_f64	00000000 .text.op_SetSlot_f64
00000000 l     O .rodata.__FUNCTION__$495	0000000f __FUNCTION__$495
00000000 l     F .text.op_SetSlot_f64	0000004d op_SetSlot_f64
00000000 l    d  .text.op_SetSlot_f32	00000000 .text.op_SetSlot_f32
00000000 l     O .rodata.__FUNCTION__$494	0000000f __FUNCTION__$494
00000000 l     F .text.op_SetSlot_f32	00000054 op_SetSlot_f32
00000000 l    d  .text.op_SetSlot_i64	00000000 .text.op_SetSlot_i64
00000000 l     O .rodata.__FUNCTION__$493	0000000f __FUNCTION__$493
00000000 l     F .text.op_SetSlot_i64	00000045 op_SetSlot_i64
00000000 l    d  .text.op_SetSlot_i32	00000000 .text.op_SetSlot_i32
00000000 l     O .rodata.__FUNCTION__$492	0000000f __FUNCTION__$492
00000000 l     F .text.op_SetSlot_i32	00000044 op_SetSlot_i32
00000000 l    d  .text.op_SetRegister_f64	00000000 .text.op_SetRegister_f64
00000000 l     O .rodata.__FUNCTION__$491	00000013 __FUNCTION__$491
00000000 l     F .text.op_SetRegister_f64	00000041 op_SetRegister_f64
00000000 l    d  .text.op_SetRegister_f32	00000000 .text.op_SetRegister_f32
00000000 l     O .rodata.__FUNCTION__$490	00000013 __FUNCTION__$490
00000000 l     F .text.op_SetRegister_f32	00000045 op_SetRegister_f32
00000000 l    d  .text.op_SetRegister_i64	00000000 .text.op_SetRegister_i64
00000000 l     O .rodata.__FUNCTION__$489	00000013 __FUNCTION__$489
00000000 l     F .text.op_SetRegister_i64	00000041 op_SetRegister_i64
00000000 l    d  .text.op_SetRegister_i32	00000000 .text.op_SetRegister_i32
00000000 l     O .rodata.__FUNCTION__$488	00000013 __FUNCTION__$488
00000000 l     F .text.op_SetRegister_i32	00000044 op_SetRegister_i32
00000000 l    d  .text.op_SetGlobal_s64	00000000 .text.op_SetGlobal_s64
00000000 l     O .rodata.__FUNCTION__$487	00000011 __FUNCTION__$487
00000000 l     F .text.op_SetGlobal_s64	00000059 op_SetGlobal_s64
00000000 l    d  .text.op_SetGlobal_s32	00000000 .text.op_SetGlobal_s32
00000000 l     O .rodata.__FUNCTION__$486	00000011 __FUNCTION__$486
00000000 l     F .text.op_SetGlobal_s32	00000055 op_SetGlobal_s32
00000000 l    d  .text.op_SetGlobal_f64	00000000 .text.op_SetGlobal_f64
00000000 l     O .rodata.__FUNCTION__$485	00000011 __FUNCTION__$485
00000000 l     F .text.op_SetGlobal_f64	00000038 op_SetGlobal_f64
00000000 l    d  .text.op_SetGlobal_f32	00000000 .text.op_SetGlobal_f32
00000000 l     O .rodata.__FUNCTION__$484	00000011 __FUNCTION__$484
00000000 l     F .text.op_SetGlobal_f32	00000044 op_SetGlobal_f32
00000000 l    d  .text.op_SetGlobal_i64	00000000 .text.op_SetGlobal_i64
00000000 l     O .rodata.__FUNCTION__$483	00000011 __FUNCTION__$483
00000000 l     F .text.op_SetGlobal_i64	00000038 op_SetGlobal_i64
00000000 l    d  .text.op_SetGlobal_i32	00000000 .text.op_SetGlobal_i32
00000000 l     O .rodata.__FUNCTION__$482	00000011 __FUNCTION__$482
00000000 l     F .text.op_SetGlobal_i32	00000035 op_SetGlobal_i32
00000000 l    d  .text.op_Select_f64_rsr	00000000 .text.op_Select_f64_rsr
00000000 l     O .rodata.__FUNCTION__$479	00000012 __FUNCTION__$479
00000000 l     F .text.op_Select_f64_rsr	00000048 op_Select_f64_rsr
00000000 l    d  .text.op_Select_f64_rrs	00000000 .text.op_Select_f64_rrs
00000000 l     O .rodata.__FUNCTION__$478	00000012 __FUNCTION__$478
00000000 l     F .text.op_Select_f64_rrs	0000004d op_Select_f64_rrs
00000000 l    d  .text.op_Select_f64_rss	00000000 .text.op_Select_f64_rss
00000000 l     O .rodata.__FUNCTION__$477	00000012 __FUNCTION__$477
00000000 l     F .text.op_Select_f64_rss	00000071 op_Select_f64_rss
00000000 l    d  .text.op_Select_f64_ssr	00000000 .text.op_Select_f64_ssr
00000000 l     O .rodata.__FUNCTION__$476	00000012 __FUNCTION__$476
00000000 l     F .text.op_Select_f64_ssr	00000068 op_Select_f64_ssr
00000000 l    d  .text.op_Select_f64_srs	00000000 .text.op_Select_f64_srs
00000000 l     O .rodata.__FUNCTION__$475	00000012 __FUNCTION__$475
00000000 l     F .text.op_Select_f64_srs	0000006d op_Select_f64_srs
00000000 l    d  .text.op_Select_f64_sss	00000000 .text.op_Select_f64_sss
00000000 l     O .rodata.__FUNCTION__$474	00000012 __FUNCTION__$474
00000000 l     F .text.op_Select_f64_sss	00000091 op_Select_f64_sss
00000000 l    d  .text.op_Select_f32_rsr	00000000 .text.op_Select_f32_rsr
00000000 l     O .rodata.__FUNCTION__$473	00000012 __FUNCTION__$473
00000000 l     F .text.op_Select_f32_rsr	00000054 op_Select_f32_rsr
00000000 l    d  .text.op_Select_f32_rrs	00000000 .text.op_Select_f32_rrs
00000000 l     O .rodata.__FUNCTION__$472	00000012 __FUNCTION__$472
00000000 l     F .text.op_Select_f32_rrs	00000054 op_Select_f32_rrs
00000000 l    d  .text.op_Select_f32_rss	00000000 .text.op_Select_f32_rss
00000000 l     O .rodata.__FUNCTION__$471	00000012 __FUNCTION__$471
00000000 l     F .text.op_Select_f32_rss	00000068 op_Select_f32_rss
00000000 l    d  .text.op_Select_f32_ssr	00000000 .text.op_Select_f32_ssr
00000000 l     O .rodata.__FUNCTION__$470	00000012 __FUNCTION__$470
00000000 l     F .text.op_Select_f32_ssr	00000074 op_Select_f32_ssr
00000000 l    d  .text.op_Select_f32_srs	00000000 .text.op_Select_f32_srs
00000000 l     O .rodata.__FUNCTION__$469	00000012 __FUNCTION__$469
00000000 l     F .text.op_Select_f32_srs	00000074 op_Select_f32_srs
00000000 l    d  .text.op_Select_f32_sss	00000000 .text.op_Select_f32_sss
00000000 l     O .rodata.__FUNCTION__$468	00000012 __FUNCTION__$468
00000000 l     F .text.op_Select_f32_sss	0000008a op_Select_f32_sss
00000000 l    d  .text.op_Select_i64_sss	00000000 .text.op_Select_i64_sss
00000000 l     O .rodata.__FUNCTION__$467	00000012 __FUNCTION__$467
00000000 l     F .text.op_Select_i64_sss	0000008c op_Select_i64_sss
00000000 l    d  .text.op_Select_i64_ssr	00000000 .text.op_Select_i64_ssr
00000000 l     O .rodata.__FUNCTION__$466	00000012 __FUNCTION__$466
00000000 l     F .text.op_Select_i64_ssr	00000068 op_Select_i64_ssr
00000000 l    d  .text.op_Select_i64_srs	00000000 .text.op_Select_i64_srs
00000000 l     O .rodata.__FUNCTION__$465	00000012 __FUNCTION__$465
00000000 l     F .text.op_Select_i64_srs	00000068 op_Select_i64_srs
00000000 l    d  .text.op_Select_i64_rss	00000000 .text.op_Select_i64_rss
00000000 l     O .rodata.__FUNCTION__$464	00000012 __FUNCTION__$464
00000000 l     F .text.op_Select_i64_rss	0000006c op_Select_i64_rss
00000000 l    d  .text.op_Select_i32_sss	00000000 .text.op_Select_i32_sss
00000000 l     O .rodata.__FUNCTION__$463	00000012 __FUNCTION__$463
00000000 l     F .text.op_Select_i32_sss	00000088 op_Select_i32_sss
00000000 l    d  .text.op_Select_i32_ssr	00000000 .text.op_Select_i32_ssr
00000000 l     O .rodata.__FUNCTION__$462	00000012 __FUNCTION__$462
00000000 l     F .text.op_Select_i32_ssr	00000068 op_Select_i32_ssr
00000000 l    d  .text.op_Select_i32_srs	00000000 .text.op_Select_i32_srs
00000000 l     O .rodata.__FUNCTION__$461	00000012 __FUNCTION__$461
00000000 l     F .text.op_Select_i32_srs	00000068 op_Select_i32_srs
00000000 l    d  .text.op_Select_i32_rss	00000000 .text.op_Select_i32_rss
00000000 l     O .rodata.__FUNCTION__$460	00000012 __FUNCTION__$460
00000000 l     F .text.op_Select_i32_rss	00000068 op_Select_i32_rss
00000000 l    d  .text.op_BranchIfPrologue_r	00000000 .text.op_BranchIfPrologue_r
00000000 l     O .rodata.__FUNCTION__$459	00000016 __FUNCTION__$459
00000000 l     F .text.op_BranchIfPrologue_r	00000061 op_BranchIfPrologue_r
00000000 l    d  .text.op_If_r	00000000 .text.op_If_r
00000000 l     O .rodata.__FUNCTION__$458	00000008 __FUNCTION__$458
00000000 l     F .text.op_If_r	00000061 op_If_r
00000000 l    d  .text.op_PreserveCopySlot_64	00000000 .text.op_PreserveCopySlot_64
00000000 l     O .rodata.__FUNCTION__$457	00000017 __FUNCTION__$457
00000000 l     F .text.op_PreserveCopySlot_64	00000091 op_PreserveCopySlot_64
00000000 l    d  .text.op_CopySlot_64	00000000 .text.op_CopySlot_64
00000000 l     O .rodata.__FUNCTION__$456	0000000f __FUNCTION__$456
00000000 l     F .text.op_CopySlot_64	00000066 op_CopySlot_64
00000000 l    d  .text.op_BranchIfPrologue_s	00000000 .text.op_BranchIfPrologue_s
00000000 l     O .rodata.__FUNCTION__$455	00000016 __FUNCTION__$455
00000000 l     F .text.op_BranchIfPrologue_s	0000008c op_BranchIfPrologue_s
00000000 l    d  .text.op_If_s	00000000 .text.op_If_s
00000000 l     O .rodata.__FUNCTION__$454	00000008 __FUNCTION__$454
00000000 l     F .text.op_If_s	0000008c op_If_s
00000000 l    d  .text.op_PreserveCopySlot_32	00000000 .text.op_PreserveCopySlot_32
00000000 l     O .rodata.__FUNCTION__$453	00000017 __FUNCTION__$453
00000000 l     F .text.op_PreserveCopySlot_32	00000089 op_PreserveCopySlot_32
00000000 l    d  .text.op_CopySlot_32	00000000 .text.op_CopySlot_32
00000000 l     O .rodata.__FUNCTION__$452	0000000f __FUNCTION__$452
00000000 l     F .text.op_CopySlot_32	00000062 op_CopySlot_32
00000000 l    d  .text.op_ContinueLoopIf	00000000 .text.op_ContinueLoopIf
00000000 l     O .rodata.__FUNCTION__$451	00000012 __FUNCTION__$451
00000000 l     F .text.op_ContinueLoopIf	00000039 op_ContinueLoopIf
00000000 l    d  .text.op_GetGlobal_s64	00000000 .text.op_GetGlobal_s64
00000000 l     O .rodata.__FUNCTION__$450	00000011 __FUNCTION__$450
00000000 l     F .text.op_GetGlobal_s64	00000059 op_GetGlobal_s64
00000000 l    d  .text.op_GetGlobal_s32	00000000 .text.op_GetGlobal_s32
00000000 l     O .rodata.__FUNCTION__$449	00000011 __FUNCTION__$449
00000000 l     F .text.op_GetGlobal_s32	00000055 op_GetGlobal_s32
00000000 l    d  .text.op_i64_Extend32_s_s	00000000 .text.op_i64_Extend32_s_s
00000000 l     O .rodata.__FUNCTION__$446	00000014 __FUNCTION__$446
00000000 l     F .text.op_i64_Extend32_s_s	00000044 op_i64_Extend32_s_s
00000000 l    d  .text.op_i64_Extend32_s_r	00000000 .text.op_i64_Extend32_s_r
00000000 l     O .rodata.__FUNCTION__$445	00000014 __FUNCTION__$445
00000000 l     F .text.op_i64_Extend32_s_r	00000025 op_i64_Extend32_s_r
00000000 l    d  .text.op_i64_Extend16_s_s	00000000 .text.op_i64_Extend16_s_s
00000000 l     O .rodata.__FUNCTION__$444	00000014 __FUNCTION__$444
00000000 l     F .text.op_i64_Extend16_s_s	00000045 op_i64_Extend16_s_s
00000000 l    d  .text.op_i64_Extend16_s_r	00000000 .text.op_i64_Extend16_s_r
00000000 l     O .rodata.__FUNCTION__$443	00000014 __FUNCTION__$443
00000000 l     F .text.op_i64_Extend16_s_r	00000028 op_i64_Extend16_s_r
00000000 l    d  .text.op_i64_Extend8_s_s	00000000 .text.op_i64_Extend8_s_s
00000000 l     O .rodata.__FUNCTION__$442	00000013 __FUNCTION__$442
00000000 l     F .text.op_i64_Extend8_s_s	00000048 op_i64_Extend8_s_s
00000000 l    d  .text.op_i64_Extend8_s_r	00000000 .text.op_i64_Extend8_s_r
00000000 l     O .rodata.__FUNCTION__$441	00000013 __FUNCTION__$441
00000000 l     F .text.op_i64_Extend8_s_r	00000028 op_i64_Extend8_s_r
00000000 l    d  .text.op_i32_Extend16_s_s	00000000 .text.op_i32_Extend16_s_s
00000000 l     O .rodata.__FUNCTION__$440	00000014 __FUNCTION__$440
00000000 l     F .text.op_i32_Extend16_s_s	00000045 op_i32_Extend16_s_s
00000000 l    d  .text.op_i32_Extend16_s_r	00000000 .text.op_i32_Extend16_s_r
00000000 l     O .rodata.__FUNCTION__$439	00000014 __FUNCTION__$439
00000000 l     F .text.op_i32_Extend16_s_r	00000028 op_i32_Extend16_s_r
00000000 l    d  .text.op_i32_Extend8_s_s	00000000 .text.op_i32_Extend8_s_s
00000000 l     O .rodata.__FUNCTION__$438	00000013 __FUNCTION__$438
00000000 l     F .text.op_i32_Extend8_s_s	00000048 op_i32_Extend8_s_s
00000000 l    d  .text.op_i32_Extend8_s_r	00000000 .text.op_i32_Extend8_s_r
00000000 l     O .rodata.__FUNCTION__$437	00000013 __FUNCTION__$437
00000000 l     F .text.op_i32_Extend8_s_r	00000028 op_i32_Extend8_s_r
00000000 l    d  .text.op_f64_Reinterpret_i64_s_s	00000000 .text.op_f64_Reinterpret_i64_s_s
00000000 l     O .rodata.__FUNCTION__$436	0000001b __FUNCTION__$436
00000000 l     F .text.op_f64_Reinterpret_i64_s_s	00000070 op_f64_Reinterpret_i64_s_s
00000000 l    d  .text.op_f64_Reinterpret_i64_s_r	00000000 .text.op_f64_Reinterpret_i64_s_r
00000000 l     O .rodata.__FUNCTION__$435	0000001b __FUNCTION__$435
00000000 l     F .text.op_f64_Reinterpret_i64_s_r	0000004c op_f64_Reinterpret_i64_s_r
00000000 l    d  .text.op_f64_Reinterpret_i64_r_s	00000000 .text.op_f64_Reinterpret_i64_r_s
00000000 l     O .rodata.__FUNCTION__$434	0000001b __FUNCTION__$434
00000000 l     F .text.op_f64_Reinterpret_i64_r_s	00000041 op_f64_Reinterpret_i64_r_s
00000000 l    d  .text.op_f64_Reinterpret_i64_r_r	00000000 .text.op_f64_Reinterpret_i64_r_r
00000000 l     O .rodata.__FUNCTION__$433	0000001b __FUNCTION__$433
00000000 l     F .text.op_f64_Reinterpret_i64_r_r	00000020 op_f64_Reinterpret_i64_r_r
00000000 l    d  .text.op_f32_Reinterpret_i32_s_s	00000000 .text.op_f32_Reinterpret_i32_s_s
00000000 l     O .rodata.__FUNCTION__$432	0000001b __FUNCTION__$432
00000000 l     F .text.op_f32_Reinterpret_i32_s_s	00000064 op_f32_Reinterpret_i32_s_s
00000000 l    d  .text.op_f32_Reinterpret_i32_s_r	00000000 .text.op_f32_Reinterpret_i32_s_r
00000000 l     O .rodata.__FUNCTION__$431	0000001b __FUNCTION__$431
00000000 l     F .text.op_f32_Reinterpret_i32_s_r	00000044 op_f32_Reinterpret_i32_s_r
00000000 l    d  .text.op_f32_Reinterpret_i32_r_s	00000000 .text.op_f32_Reinterpret_i32_r_s
00000000 l     O .rodata.__FUNCTION__$430	0000001b __FUNCTION__$430
00000000 l     F .text.op_f32_Reinterpret_i32_r_s	00000045 op_f32_Reinterpret_i32_r_s
00000000 l    d  .text.op_f32_Reinterpret_i32_r_r	00000000 .text.op_f32_Reinterpret_i32_r_r
00000000 l     O .rodata.__FUNCTION__$429	0000001b __FUNCTION__$429
00000000 l     F .text.op_f32_Reinterpret_i32_r_r	00000028 op_f32_Reinterpret_i32_r_r
00000000 l    d  .text.op_i64_Reinterpret_f64_s_s	00000000 .text.op_i64_Reinterpret_f64_s_s
00000000 l     O .rodata.__FUNCTION__$428	0000001b __FUNCTION__$428
00000000 l     F .text.op_i64_Reinterpret_f64_s_s	00000070 op_i64_Reinterpret_f64_s_s
00000000 l    d  .text.op_i64_Reinterpret_f64_s_r	00000000 .text.op_i64_Reinterpret_f64_s_r
00000000 l     O .rodata.__FUNCTION__$427	0000001b __FUNCTION__$427
00000000 l     F .text.op_i64_Reinterpret_f64_s_r	0000004d op_i64_Reinterpret_f64_s_r
00000000 l    d  .text.op_i64_Reinterpret_f64_r_s	00000000 .text.op_i64_Reinterpret_f64_r_s
00000000 l     O .rodata.__FUNCTION__$426	0000001b __FUNCTION__$426
00000000 l     F .text.op_i64_Reinterpret_f64_r_s	00000041 op_i64_Reinterpret_f64_r_s
00000000 l    d  .text.op_i64_Reinterpret_f64_r_r	00000000 .text.op_i64_Reinterpret_f64_r_r
00000000 l     O .rodata.__FUNCTION__$425	0000001b __FUNCTION__$425
00000000 l     F .text.op_i64_Reinterpret_f64_r_r	00000020 op_i64_Reinterpret_f64_r_r
00000000 l    d  .text.op_i32_Reinterpret_f32_s_s	00000000 .text.op_i32_Reinterpret_f32_s_s
00000000 l     O .rodata.__FUNCTION__$424	0000001b __FUNCTION__$424
00000000 l     F .text.op_i32_Reinterpret_f32_s_s	00000064 op_i32_Reinterpret_f32_s_s
00000000 l    d  .text.op_i32_Reinterpret_f32_s_r	00000000 .text.op_i32_Reinterpret_f32_s_r
00000000 l     O .rodata.__FUNCTION__$423	0000001b __FUNCTION__$423
00000000 l     F .text.op_i32_Reinterpret_f32_s_r	00000054 op_i32_Reinterpret_f32_s_r
00000000 l    d  .text.op_i32_Reinterpret_f32_r_s	00000000 .text.op_i32_Reinterpret_f32_r_s
00000000 l     O .rodata.__FUNCTION__$422	0000001b __FUNCTION__$422
00000000 l     F .text.op_i32_Reinterpret_f32_r_s	00000044 op_i32_Reinterpret_f32_r_s
00000000 l    d  .text.op_i32_Reinterpret_f32_r_r	00000000 .text.op_i32_Reinterpret_f32_r_r
00000000 l     O .rodata.__FUNCTION__$421	0000001b __FUNCTION__$421
00000000 l     F .text.op_i32_Reinterpret_f32_r_r	00000030 op_i32_Reinterpret_f32_r_r
00000000 l    d  .text.op_f64_Promote_f32_s	00000000 .text.op_f64_Promote_f32_s
00000000 l     O .rodata.__FUNCTION__$420	00000015 __FUNCTION__$420
00000000 l     F .text.op_f64_Promote_f32_s	00000045 op_f64_Promote_f32_s
00000000 l    d  .text.op_f64_Promote_f32_r	00000000 .text.op_f64_Promote_f32_r
00000000 l     O .rodata.__FUNCTION__$419	00000015 __FUNCTION__$419
00000000 l     F .text.op_f64_Promote_f32_r	00000030 op_f64_Promote_f32_r
00000000 l    d  .text.op_f64_Convert_u64_s_s	00000000 .text.op_f64_Convert_u64_s_s
00000000 l     O .rodata.__FUNCTION__$418	00000017 __FUNCTION__$418
00000000 l     F .text.op_f64_Convert_u64_s_s	00000078 op_f64_Convert_u64_s_s
00000000 l    d  .text.op_f64_Convert_u64_s_r	00000000 .text.op_f64_Convert_u64_s_r
00000000 l     O .rodata.__FUNCTION__$417	00000017 __FUNCTION__$417
00000000 l     F .text.op_f64_Convert_u64_s_r	00000051 op_f64_Convert_u64_s_r
00000000 l    d  .text.op_f64_Convert_u64_r_s	00000000 .text.op_f64_Convert_u64_r_s
00000000 l     O .rodata.__FUNCTION__$416	00000017 __FUNCTION__$416
00000000 l     F .text.op_f64_Convert_u64_r_s	00000048 op_f64_Convert_u64_r_s
00000000 l    d  .text.op_f64_Convert_u64_r_r	00000000 .text.op_f64_Convert_u64_r_r
00000000 l     O .rodata.__FUNCTION__$415	00000017 __FUNCTION__$415
00000000 l     F .text.op_f64_Convert_u64_r_r	0000002a op_f64_Convert_u64_r_r
00000000 l    d  .text.op_f64_Convert_i64_s_s	00000000 .text.op_f64_Convert_i64_s_s
00000000 l     O .rodata.__FUNCTION__$414	00000017 __FUNCTION__$414
00000000 l     F .text.op_f64_Convert_i64_s_s	00000078 op_f64_Convert_i64_s_s
00000000 l    d  .text.op_f64_Convert_i64_s_r	00000000 .text.op_f64_Convert_i64_s_r
00000000 l     O .rodata.__FUNCTION__$413	00000017 __FUNCTION__$413
00000000 l     F .text.op_f64_Convert_i64_s_r	00000051 op_f64_Convert_i64_s_r
00000000 l    d  .text.op_f64_Convert_i64_r_s	00000000 .text.op_f64_Convert_i64_r_s
00000000 l     O .rodata.__FUNCTION__$412	00000017 __FUNCTION__$412
00000000 l     F .text.op_f64_Convert_i64_r_s	00000048 op_f64_Convert_i64_r_s
00000000 l    d  .text.op_f64_Convert_i64_r_r	00000000 .text.op_f64_Convert_i64_r_r
00000000 l     O .rodata.__FUNCTION__$411	00000017 __FUNCTION__$411
00000000 l     F .text.op_f64_Convert_i64_r_r	0000002a op_f64_Convert_i64_r_r
00000000 l    d  .text.op_f64_Convert_u32_s_s	00000000 .text.op_f64_Convert_u32_s_s
00000000 l     O .rodata.__FUNCTION__$410	00000017 __FUNCTION__$410
00000000 l     F .text.op_f64_Convert_u32_s_s	00000071 op_f64_Convert_u32_s_s
00000000 l    d  .text.op_f64_Convert_u32_s_r	00000000 .text.op_f64_Convert_u32_s_r
00000000 l     O .rodata.__FUNCTION__$409	00000017 __FUNCTION__$409
00000000 l     F .text.op_f64_Convert_u32_s_r	00000051 op_f64_Convert_u32_s_r
00000000 l    d  .text.op_f64_Convert_u32_r_s	00000000 .text.op_f64_Convert_u32_r_s
00000000 l     O .rodata.__FUNCTION__$408	00000017 __FUNCTION__$408
00000000 l     F .text.op_f64_Convert_u32_r_s	00000045 op_f64_Convert_u32_r_s
00000000 l    d  .text.op_f64_Convert_u32_r_r	00000000 .text.op_f64_Convert_u32_r_r
00000000 l     O .rodata.__FUNCTION__$407	00000017 __FUNCTION__$407
00000000 l     F .text.op_f64_Convert_u32_r_r	00000028 op_f64_Convert_u32_r_r
00000000 l    d  .text.op_f64_Convert_i32_s_s	00000000 .text.op_f64_Convert_i32_s_s
00000000 l     O .rodata.__FUNCTION__$406	00000017 __FUNCTION__$406
00000000 l     F .text.op_f64_Convert_i32_s_s	00000071 op_f64_Convert_i32_s_s
00000000 l    d  .text.op_f64_Convert_i32_s_r	00000000 .text.op_f64_Convert_i32_s_r
00000000 l     O .rodata.__FUNCTION__$405	00000017 __FUNCTION__$405
00000000 l     F .text.op_f64_Convert_i32_s_r	00000051 op_f64_Convert_i32_s_r
00000000 l    d  .text.op_f64_Convert_i32_r_s	00000000 .text.op_f64_Convert_i32_r_s
00000000 l     O .rodata.__FUNCTION__$404	00000017 __FUNCTION__$404
00000000 l     F .text.op_f64_Convert_i32_r_s	00000045 op_f64_Convert_i32_r_s
00000000 l    d  .text.op_f64_Convert_i32_r_r	00000000 .text.op_f64_Convert_i32_r_r
00000000 l     O .rodata.__FUNCTION__$403	00000017 __FUNCTION__$403
00000000 l     F .text.op_f64_Convert_i32_r_r	00000028 op_f64_Convert_i32_r_r
00000000 l    d  .text.op_f32_Demote_f64_s	00000000 .text.op_f32_Demote_f64_s
00000000 l     O .rodata.__FUNCTION__$402	00000014 __FUNCTION__$402
00000000 l     F .text.op_f32_Demote_f64_s	0000004e op_f32_Demote_f64_s
00000000 l    d  .text.op_f32_Demote_f64_r	00000000 .text.op_f32_Demote_f64_r
00000000 l     O .rodata.__FUNCTION__$401	00000014 __FUNCTION__$401
00000000 l     F .text.op_f32_Demote_f64_r	00000030 op_f32_Demote_f64_r
00000000 l    d  .text.op_f32_Convert_u64_s_s	00000000 .text.op_f32_Convert_u64_s_s
00000000 l     O .rodata.__FUNCTION__$400	00000017 __FUNCTION__$400
00000000 l     F .text.op_f32_Convert_u64_s_s	00000076 op_f32_Convert_u64_s_s
00000000 l    d  .text.op_f32_Convert_u64_s_r	00000000 .text.op_f32_Convert_u64_s_r
00000000 l     O .rodata.__FUNCTION__$399	00000017 __FUNCTION__$399
00000000 l     F .text.op_f32_Convert_u64_s_r	00000050 op_f32_Convert_u64_s_r
00000000 l    d  .text.op_f32_Convert_u64_r_s	00000000 .text.op_f32_Convert_u64_r_s
00000000 l     O .rodata.__FUNCTION__$398	00000017 __FUNCTION__$398
00000000 l     F .text.op_f32_Convert_u64_r_s	0000004e op_f32_Convert_u64_r_s
00000000 l    d  .text.op_f32_Convert_u64_r_r	00000000 .text.op_f32_Convert_u64_r_r
00000000 l     O .rodata.__FUNCTION__$397	00000017 __FUNCTION__$397
00000000 l     F .text.op_f32_Convert_u64_r_r	00000032 op_f32_Convert_u64_r_r
00000000 l    d  .text.op_f32_Convert_i64_s_s	00000000 .text.op_f32_Convert_i64_s_s
00000000 l     O .rodata.__FUNCTION__$396	00000017 __FUNCTION__$396
00000000 l     F .text.op_f32_Convert_i64_s_s	00000076 op_f32_Convert_i64_s_s
00000000 l    d  .text.op_f32_Convert_i64_s_r	00000000 .text.op_f32_Convert_i64_s_r
00000000 l     O .rodata.__FUNCTION__$395	00000017 __FUNCTION__$395
00000000 l     F .text.op_f32_Convert_i64_s_r	00000050 op_f32_Convert_i64_s_r
00000000 l    d  .text.op_f32_Convert_i64_r_s	00000000 .text.op_f32_Convert_i64_r_s
00000000 l     O .rodata.__FUNCTION__$394	00000017 __FUNCTION__$394
00000000 l     F .text.op_f32_Convert_i64_r_s	0000004e op_f32_Convert_i64_r_s
00000000 l    d  .text.op_f32_Convert_i64_r_r	00000000 .text.op_f32_Convert_i64_r_r
00000000 l     O .rodata.__FUNCTION__$393	00000017 __FUNCTION__$393
00000000 l     F .text.op_f32_Convert_i64_r_r	00000032 op_f32_Convert_i64_r_r
00000000 l    d  .text.op_f32_Convert_u32_s_s	00000000 .text.op_f32_Convert_u32_s_s
00000000 l     O .rodata.__FUNCTION__$392	00000017 __FUNCTION__$392
00000000 l     F .text.op_f32_Convert_u32_s_s	00000068 op_f32_Convert_u32_s_s
00000000 l    d  .text.op_f32_Convert_u32_s_r	00000000 .text.op_f32_Convert_u32_s_r
00000000 l     O .rodata.__FUNCTION__$391	00000017 __FUNCTION__$391
00000000 l     F .text.op_f32_Convert_u32_s_r	00000048 op_f32_Convert_u32_s_r
00000000 l    d  .text.op_f32_Convert_u32_r_s	00000000 .text.op_f32_Convert_u32_r_s
00000000 l     O .rodata.__FUNCTION__$390	00000017 __FUNCTION__$390
00000000 l     F .text.op_f32_Convert_u32_r_s	0000004c op_f32_Convert_u32_r_s
00000000 l    d  .text.op_f32_Convert_u32_r_r	00000000 .text.op_f32_Convert_u32_r_r
00000000 l     O .rodata.__FUNCTION__$389	00000017 __FUNCTION__$389
00000000 l     F .text.op_f32_Convert_u32_r_r	0000002c op_f32_Convert_u32_r_r
00000000 l    d  .text.op_f32_Convert_i32_s_s	00000000 .text.op_f32_Convert_i32_s_s
00000000 l     O .rodata.__FUNCTION__$388	00000017 __FUNCTION__$388
00000000 l     F .text.op_f32_Convert_i32_s_s	00000068 op_f32_Convert_i32_s_s
00000000 l    d  .text.op_f32_Convert_i32_s_r	00000000 .text.op_f32_Convert_i32_s_r
00000000 l     O .rodata.__FUNCTION__$387	00000017 __FUNCTION__$387
00000000 l     F .text.op_f32_Convert_i32_s_r	00000048 op_f32_Convert_i32_s_r
00000000 l    d  .text.op_f32_Convert_i32_r_s	00000000 .text.op_f32_Convert_i32_r_s
00000000 l     O .rodata.__FUNCTION__$386	00000017 __FUNCTION__$386
00000000 l     F .text.op_f32_Convert_i32_r_s	0000004c op_f32_Convert_i32_r_s
00000000 l    d  .text.op_f32_Convert_i32_r_r	00000000 .text.op_f32_Convert_i32_r_r
00000000 l     O .rodata.__FUNCTION__$385	00000017 __FUNCTION__$385
00000000 l     F .text.op_f32_Convert_i32_r_r	0000002c op_f32_Convert_i32_r_r
00000000 l    d  .text.op_u64_Trunc_f64_s_s	00000000 .text.op_u64_Trunc_f64_s_s
00000000 l     O .rodata.__FUNCTION__$384	00000015 __FUNCTION__$384
00000000 l     F .text.op_u64_Trunc_f64_s_s	000000bc op_u64_Trunc_f64_s_s
00000000 l    d  .text.op_u64_Trunc_f64_s_r	00000000 .text.op_u64_Trunc_f64_s_r
00000000 l     O .rodata.__FUNCTION__$383	00000015 __FUNCTION__$383
00000000 l     F .text.op_u64_Trunc_f64_s_r	00000096 op_u64_Trunc_f64_s_r
00000000 l    d  .text.op_u64_Trunc_f64_r_s	00000000 .text.op_u64_Trunc_f64_r_s
00000000 l     O .rodata.__FUNCTION__$382	00000015 __FUNCTION__$382
00000000 l     F .text.op_u64_Trunc_f64_r_s	00000096 op_u64_Trunc_f64_r_s
00000000 l    d  .text.op_u64_Trunc_f64_r_r	00000000 .text.op_u64_Trunc_f64_r_r
00000000 l     O .rodata.__FUNCTION__$381	00000015 __FUNCTION__$381
00000000 l     F .text.op_u64_Trunc_f64_r_r	00000072 op_u64_Trunc_f64_r_r
00000000 l    d  .text.op_i64_Trunc_f64_s_s	00000000 .text.op_i64_Trunc_f64_s_s
00000000 l     O .rodata.__FUNCTION__$380	00000015 __FUNCTION__$380
00000000 l     F .text.op_i64_Trunc_f64_s_s	000000bc op_i64_Trunc_f64_s_s
00000000 l    d  .text.op_i64_Trunc_f64_s_r	00000000 .text.op_i64_Trunc_f64_s_r
00000000 l     O .rodata.__FUNCTION__$379	00000015 __FUNCTION__$379
00000000 l     F .text.op_i64_Trunc_f64_s_r	00000096 op_i64_Trunc_f64_s_r
00000000 l    d  .text.op_i64_Trunc_f64_r_s	00000000 .text.op_i64_Trunc_f64_r_s
00000000 l     O .rodata.__FUNCTION__$378	00000015 __FUNCTION__$378
00000000 l     F .text.op_i64_Trunc_f64_r_s	00000096 op_i64_Trunc_f64_r_s
00000000 l    d  .text.op_i64_Trunc_f64_r_r	00000000 .text.op_i64_Trunc_f64_r_r
00000000 l     O .rodata.__FUNCTION__$377	00000015 __FUNCTION__$377
00000000 l     F .text.op_i64_Trunc_f64_r_r	00000072 op_i64_Trunc_f64_r_r
00000000 l    d  .text.op_u64_Trunc_f32_s_s	00000000 .text.op_u64_Trunc_f32_s_s
00000000 l     O .rodata.__FUNCTION__$376	00000015 __FUNCTION__$376
00000000 l     F .text.op_u64_Trunc_f32_s_s	0000009a op_u64_Trunc_f32_s_s
00000000 l    d  .text.op_u64_Trunc_f32_s_r	00000000 .text.op_u64_Trunc_f32_s_r
00000000 l     O .rodata.__FUNCTION__$375	00000015 __FUNCTION__$375
00000000 l     F .text.op_u64_Trunc_f32_s_r	00000085 op_u64_Trunc_f32_s_r
00000000 l    d  .text.op_u64_Trunc_f32_r_s	00000000 .text.op_u64_Trunc_f32_r_s
00000000 l     O .rodata.__FUNCTION__$374	00000015 __FUNCTION__$374
00000000 l     F .text.op_u64_Trunc_f32_r_s	00000078 op_u64_Trunc_f32_r_s
00000000 l    d  .text.op_u64_Trunc_f32_r_r	00000000 .text.op_u64_Trunc_f32_r_r
00000000 l     O .rodata.__FUNCTION__$373	00000015 __FUNCTION__$373
00000000 l     F .text.op_u64_Trunc_f32_r_r	00000061 op_u64_Trunc_f32_r_r
00000000 l    d  .text.op_i64_Trunc_f32_s_s	00000000 .text.op_i64_Trunc_f32_s_s
00000000 l     O .rodata.__FUNCTION__$372	00000015 __FUNCTION__$372
00000000 l     F .text.op_i64_Trunc_f32_s_s	0000009a op_i64_Trunc_f32_s_s
00000000 l    d  .text.op_i64_Trunc_f32_s_r	00000000 .text.op_i64_Trunc_f32_s_r
00000000 l     O .rodata.__FUNCTION__$371	00000015 __FUNCTION__$371
00000000 l     F .text.op_i64_Trunc_f32_s_r	00000085 op_i64_Trunc_f32_s_r
00000000 l    d  .text.op_i64_Trunc_f32_r_s	00000000 .text.op_i64_Trunc_f32_r_s
00000000 l     O .rodata.__FUNCTION__$370	00000015 __FUNCTION__$370
00000000 l     F .text.op_i64_Trunc_f32_r_s	00000078 op_i64_Trunc_f32_r_s
00000000 l    d  .text.op_i64_Trunc_f32_r_r	00000000 .text.op_i64_Trunc_f32_r_r
00000000 l     O .rodata.__FUNCTION__$369	00000015 __FUNCTION__$369
00000000 l     F .text.op_i64_Trunc_f32_r_r	00000061 op_i64_Trunc_f32_r_r
00000000 l    d  .text.op_i64_Extend_u32_s	00000000 .text.op_i64_Extend_u32_s
00000000 l     O .rodata.__FUNCTION__$368	00000014 __FUNCTION__$368
00000000 l     F .text.op_i64_Extend_u32_s	00000041 op_i64_Extend_u32_s
00000000 l    d  .text.op_i64_Extend_u32_r	00000000 .text.op_i64_Extend_u32_r
00000000 l     O .rodata.__FUNCTION__$367	00000014 __FUNCTION__$367
00000000 l     F .text.op_i64_Extend_u32_r	00000024 op_i64_Extend_u32_r
00000000 l    d  .text.op_i64_Extend_i32_s	00000000 .text.op_i64_Extend_i32_s
00000000 l     O .rodata.__FUNCTION__$366	00000014 __FUNCTION__$366
00000000 l     F .text.op_i64_Extend_i32_s	00000044 op_i64_Extend_i32_s
00000000 l    d  .text.op_i64_Extend_i32_r	00000000 .text.op_i64_Extend_i32_r
00000000 l     O .rodata.__FUNCTION__$365	00000014 __FUNCTION__$365
00000000 l     F .text.op_i64_Extend_i32_r	00000025 op_i64_Extend_i32_r
00000000 l    d  .text.op_u32_Trunc_f64_s_s	00000000 .text.op_u32_Trunc_f64_s_s
00000000 l     O .rodata.__FUNCTION__$364	00000015 __FUNCTION__$364
00000000 l     F .text.op_u32_Trunc_f64_s_s	000000ba op_u32_Trunc_f64_s_s
00000000 l    d  .text.op_u32_Trunc_f64_s_r	00000000 .text.op_u32_Trunc_f64_s_r
00000000 l     O .rodata.__FUNCTION__$363	00000015 __FUNCTION__$363
00000000 l     F .text.op_u32_Trunc_f64_s_r	00000094 op_u32_Trunc_f64_s_r
00000000 l    d  .text.op_u32_Trunc_f64_r_s	00000000 .text.op_u32_Trunc_f64_r_s
00000000 l     O .rodata.__FUNCTION__$362	00000015 __FUNCTION__$362
00000000 l     F .text.op_u32_Trunc_f64_r_s	00000096 op_u32_Trunc_f64_r_s
00000000 l    d  .text.op_u32_Trunc_f64_r_r	00000000 .text.op_u32_Trunc_f64_r_r
00000000 l     O .rodata.__FUNCTION__$361	00000015 __FUNCTION__$361
00000000 l     F .text.op_u32_Trunc_f64_r_r	00000072 op_u32_Trunc_f64_r_r
00000000 l    d  .text.op_i32_Trunc_f64_s_s	00000000 .text.op_i32_Trunc_f64_s_s
00000000 l     O .rodata.__FUNCTION__$360	00000015 __FUNCTION__$360
00000000 l     F .text.op_i32_Trunc_f64_s_s	000000ba op_i32_Trunc_f64_s_s
00000000 l    d  .text.op_i32_Trunc_f64_s_r	00000000 .text.op_i32_Trunc_f64_s_r
00000000 l     O .rodata.__FUNCTION__$359	00000015 __FUNCTION__$359
00000000 l     F .text.op_i32_Trunc_f64_s_r	00000094 op_i32_Trunc_f64_s_r
00000000 l    d  .text.op_i32_Trunc_f64_r_s	00000000 .text.op_i32_Trunc_f64_r_s
00000000 l     O .rodata.__FUNCTION__$358	00000015 __FUNCTION__$358
00000000 l     F .text.op_i32_Trunc_f64_r_s	00000098 op_i32_Trunc_f64_r_s
00000000 l    d  .text.op_i32_Trunc_f64_r_r	00000000 .text.op_i32_Trunc_f64_r_r
00000000 l     O .rodata.__FUNCTION__$357	00000015 __FUNCTION__$357
00000000 l     F .text.op_i32_Trunc_f64_r_r	00000074 op_i32_Trunc_f64_r_r
00000000 l    d  .text.op_u32_Trunc_f32_s_s	00000000 .text.op_u32_Trunc_f32_s_s
00000000 l     O .rodata.__FUNCTION__$356	00000015 __FUNCTION__$356
00000000 l     F .text.op_u32_Trunc_f32_s_s	00000090 op_u32_Trunc_f32_s_s
00000000 l    d  .text.op_u32_Trunc_f32_s_r	00000000 .text.op_u32_Trunc_f32_s_r
00000000 l     O .rodata.__FUNCTION__$355	00000015 __FUNCTION__$355
00000000 l     F .text.op_u32_Trunc_f32_s_r	00000080 op_u32_Trunc_f32_s_r
00000000 l    d  .text.op_u32_Trunc_f32_r_s	00000000 .text.op_u32_Trunc_f32_r_s
00000000 l     O .rodata.__FUNCTION__$354	00000015 __FUNCTION__$354
00000000 l     F .text.op_u32_Trunc_f32_r_s	00000070 op_u32_Trunc_f32_r_s
00000000 l    d  .text.op_u32_Trunc_f32_r_r	00000000 .text.op_u32_Trunc_f32_r_r
00000000 l     O .rodata.__FUNCTION__$353	00000015 __FUNCTION__$353
00000000 l     F .text.op_u32_Trunc_f32_r_r	0000005c op_u32_Trunc_f32_r_r
00000000 l    d  .text.op_i32_Trunc_f32_s_s	00000000 .text.op_i32_Trunc_f32_s_s
00000000 l     O .rodata.__FUNCTION__$352	00000015 __FUNCTION__$352
00000000 l     F .text.op_i32_Trunc_f32_s_s	00000090 op_i32_Trunc_f32_s_s
00000000 l    d  .text.op_i32_Trunc_f32_s_r	00000000 .text.op_i32_Trunc_f32_s_r
00000000 l     O .rodata.__FUNCTION__$351	00000015 __FUNCTION__$351
00000000 l     F .text.op_i32_Trunc_f32_s_r	00000080 op_i32_Trunc_f32_s_r
00000000 l    d  .text.op_i32_Trunc_f32_r_s	00000000 .text.op_i32_Trunc_f32_r_s
00000000 l     O .rodata.__FUNCTION__$350	00000015 __FUNCTION__$350
00000000 l     F .text.op_i32_Trunc_f32_r_s	00000072 op_i32_Trunc_f32_r_s
00000000 l    d  .text.op_i32_Trunc_f32_r_r	00000000 .text.op_i32_Trunc_f32_r_r
00000000 l     O .rodata.__FUNCTION__$349	00000015 __FUNCTION__$349
00000000 l     F .text.op_i32_Trunc_f32_r_r	00000060 op_i32_Trunc_f32_r_r
00000000 l    d  .text.op_i32_Wrap_i64_s	00000000 .text.op_i32_Wrap_i64_s
00000000 l     O .rodata.__FUNCTION__$348	00000012 __FUNCTION__$348
00000000 l     F .text.op_i32_Wrap_i64_s	00000041 op_i32_Wrap_i64_s
00000000 l    d  .text.op_i32_Wrap_i64_r	00000000 .text.op_i32_Wrap_i64_r
00000000 l     O .rodata.__FUNCTION__$347	00000012 __FUNCTION__$347
00000000 l     F .text.op_i32_Wrap_i64_r	00000024 op_i32_Wrap_i64_r
00000000 l    d  .text.op_f64_Divide_ss	00000000 .text.op_f64_Divide_ss
00000000 l     O .rodata.__FUNCTION__$339	00000011 __FUNCTION__$339
00000000 l     F .text.op_f64_Divide_ss	00000070 op_f64_Divide_ss
00000000 l    d  .text.op_f64_Divide_sr	00000000 .text.op_f64_Divide_sr
00000000 l     O .rodata.__FUNCTION__$338	00000011 __FUNCTION__$338
00000000 l     F .text.op_f64_Divide_sr	0000004d op_f64_Divide_sr
00000000 l    d  .text.op_f64_Divide_rs	00000000 .text.op_f64_Divide_rs
00000000 l     O .rodata.__FUNCTION__$337	00000011 __FUNCTION__$337
00000000 l     F .text.op_f64_Divide_rs	0000004c op_f64_Divide_rs
00000000 l    d  .text.op_f64_Multiply_ss	00000000 .text.op_f64_Multiply_ss
00000000 l     O .rodata.__FUNCTION__$336	00000013 __FUNCTION__$336
00000000 l     F .text.op_f64_Multiply_ss	00000072 op_f64_Multiply_ss
00000000 l    d  .text.op_f64_Multiply_rs	00000000 .text.op_f64_Multiply_rs
00000000 l     O .rodata.__FUNCTION__$335	00000013 __FUNCTION__$335
00000000 l     F .text.op_f64_Multiply_rs	0000004d op_f64_Multiply_rs
00000000 l    d  .text.op_f64_Subtract_ss	00000000 .text.op_f64_Subtract_ss
00000000 l     O .rodata.__FUNCTION__$334	00000013 __FUNCTION__$334
00000000 l     F .text.op_f64_Subtract_ss	00000070 op_f64_Subtract_ss
00000000 l    d  .text.op_f64_Subtract_sr	00000000 .text.op_f64_Subtract_sr
00000000 l     O .rodata.__FUNCTION__$333	00000013 __FUNCTION__$333
00000000 l     F .text.op_f64_Subtract_sr	0000004d op_f64_Subtract_sr
00000000 l    d  .text.op_f64_Subtract_rs	00000000 .text.op_f64_Subtract_rs
00000000 l     O .rodata.__FUNCTION__$332	00000013 __FUNCTION__$332
00000000 l     F .text.op_f64_Subtract_rs	0000004c op_f64_Subtract_rs
00000000 l    d  .text.op_f64_Add_ss	00000000 .text.op_f64_Add_ss
00000000 l     O .rodata.__FUNCTION__$331	0000000e __FUNCTION__$331
00000000 l     F .text.op_f64_Add_ss	00000072 op_f64_Add_ss
00000000 l    d  .text.op_f64_Add_rs	00000000 .text.op_f64_Add_rs
00000000 l     O .rodata.__FUNCTION__$330	0000000e __FUNCTION__$330
00000000 l     F .text.op_f64_Add_rs	0000004d op_f64_Add_rs
00000000 l    d  .text.op_f64_Negate_s	00000000 .text.op_f64_Negate_s
00000000 l     O .rodata.__FUNCTION__$319	00000010 __FUNCTION__$319
00000000 l     F .text.op_f64_Negate_s	00000046 op_f64_Negate_s
00000000 l    d  .text.op_f64_Negate_r	00000000 .text.op_f64_Negate_r
00000000 l     O .rodata.__FUNCTION__$318	00000010 __FUNCTION__$318
00000000 l     F .text.op_f64_Negate_r	0000002c op_f64_Negate_r
00000000 l    d  .text.op_f64_Abs_s	00000000 .text.op_f64_Abs_s
00000000 l     O .rodata.__FUNCTION__$317	0000000d __FUNCTION__$317
00000000 l     F .text.op_f64_Abs_s	00000046 op_f64_Abs_s
00000000 l    d  .text.op_f64_Abs_r	00000000 .text.op_f64_Abs_r
00000000 l     O .rodata.__FUNCTION__$316	0000000d __FUNCTION__$316
00000000 l     F .text.op_f64_Abs_r	0000002c op_f64_Abs_r
00000000 l    d  .text.op_f32_Divide_ss	00000000 .text.op_f32_Divide_ss
00000000 l     O .rodata.__FUNCTION__$308	00000011 __FUNCTION__$308
00000000 l     F .text.op_f32_Divide_ss	0000006e op_f32_Divide_ss
00000000 l    d  .text.op_f32_Divide_sr	00000000 .text.op_f32_Divide_sr
00000000 l     O .rodata.__FUNCTION__$307	00000011 __FUNCTION__$307
00000000 l     F .text.op_f32_Divide_sr	00000058 op_f32_Divide_sr
00000000 l    d  .text.op_f32_Divide_rs	00000000 .text.op_f32_Divide_rs
00000000 l     O .rodata.__FUNCTION__$306	00000011 __FUNCTION__$306
00000000 l     F .text.op_f32_Divide_rs	0000005c op_f32_Divide_rs
00000000 l    d  .text.op_f32_Multiply_ss	00000000 .text.op_f32_Multiply_ss
00000000 l     O .rodata.__FUNCTION__$305	00000013 __FUNCTION__$305
00000000 l     F .text.op_f32_Multiply_ss	00000074 op_f32_Multiply_ss
00000000 l    d  .text.op_f32_Multiply_rs	00000000 .text.op_f32_Multiply_rs
00000000 l     O .rodata.__FUNCTION__$304	00000013 __FUNCTION__$304
00000000 l     F .text.op_f32_Multiply_rs	00000061 op_f32_Multiply_rs
00000000 l    d  .text.op_f32_Subtract_ss	00000000 .text.op_f32_Subtract_ss
00000000 l     O .rodata.__FUNCTION__$303	00000013 __FUNCTION__$303
00000000 l     F .text.op_f32_Subtract_ss	00000074 op_f32_Subtract_ss
00000000 l    d  .text.op_f32_Subtract_sr	00000000 .text.op_f32_Subtract_sr
00000000 l     O .rodata.__FUNCTION__$302	00000013 __FUNCTION__$302
00000000 l     F .text.op_f32_Subtract_sr	00000061 op_f32_Subtract_sr
00000000 l    d  .text.op_f32_Subtract_rs	00000000 .text.op_f32_Subtract_rs
00000000 l     O .rodata.__FUNCTION__$301	00000013 __FUNCTION__$301
00000000 l     F .text.op_f32_Subtract_rs	00000061 op_f32_Subtract_rs
00000000 l    d  .text.op_f32_Add_ss	00000000 .text.op_f32_Add_ss
00000000 l     O .rodata.__FUNCTION__$300	0000000e __FUNCTION__$300
00000000 l     F .text.op_f32_Add_ss	00000074 op_f32_Add_ss
00000000 l    d  .text.op_f32_Add_rs	00000000 .text.op_f32_Add_rs
00000000 l     O .rodata.__FUNCTION__$299	0000000e __FUNCTION__$299
00000000 l     F .text.op_f32_Add_rs	00000061 op_f32_Add_rs
00000000 l    d  .text.op_f32_Negate_s	00000000 .text.op_f32_Negate_s
00000000 l     O .rodata.__FUNCTION__$288	00000010 __FUNCTION__$288
00000000 l     F .text.op_f32_Negate_s	0000004c op_f32_Negate_s
00000000 l    d  .text.op_f32_Negate_r	00000000 .text.op_f32_Negate_r
00000000 l     O .rodata.__FUNCTION__$287	00000010 __FUNCTION__$287
00000000 l     F .text.op_f32_Negate_r	0000003c op_f32_Negate_r
00000000 l    d  .text.op_f32_Abs_s	00000000 .text.op_f32_Abs_s
00000000 l     O .rodata.__FUNCTION__$286	0000000d __FUNCTION__$286
00000000 l     F .text.op_f32_Abs_s	0000004c op_f32_Abs_s
00000000 l    d  .text.op_f32_Abs_r	00000000 .text.op_f32_Abs_r
00000000 l     O .rodata.__FUNCTION__$285	0000000d __FUNCTION__$285
00000000 l     F .text.op_f32_Abs_r	0000003c op_f32_Abs_r
00000000 l    d  .text.op_u64_Rotr_ss	00000000 .text.op_u64_Rotr_ss
00000000 l     O .rodata.__FUNCTION__$284	0000000f __FUNCTION__$284
00000000 l     F .text.op_u64_Rotr_ss	000000c4 op_u64_Rotr_ss
00000000 l    d  .text.op_u64_Rotr_sr	00000000 .text.op_u64_Rotr_sr
00000000 l     O .rodata.__FUNCTION__$283	0000000f __FUNCTION__$283
00000000 l     F .text.op_u64_Rotr_sr	000000a1 op_u64_Rotr_sr
00000000 l    d  .text.op_u64_Rotr_rs	00000000 .text.op_u64_Rotr_rs
00000000 l     O .rodata.__FUNCTION__$282	0000000f __FUNCTION__$282
00000000 l     F .text.op_u64_Rotr_rs	000000a4 op_u64_Rotr_rs
00000000 l    d  .text.op_u64_Rotl_ss	00000000 .text.op_u64_Rotl_ss
00000000 l     O .rodata.__FUNCTION__$281	0000000f __FUNCTION__$281
00000000 l     F .text.op_u64_Rotl_ss	000000c4 op_u64_Rotl_ss
00000000 l    d  .text.op_u64_Rotl_sr	00000000 .text.op_u64_Rotl_sr
00000000 l     O .rodata.__FUNCTION__$280	0000000f __FUNCTION__$280
00000000 l     F .text.op_u64_Rotl_sr	000000a1 op_u64_Rotl_sr
00000000 l    d  .text.op_u64_Rotl_rs	00000000 .text.op_u64_Rotl_rs
00000000 l     O .rodata.__FUNCTION__$279	0000000f __FUNCTION__$279
00000000 l     F .text.op_u64_Rotl_rs	000000a4 op_u64_Rotl_rs
00000000 l    d  .text.op_u64_ShiftRight_ss	00000000 .text.op_u64_ShiftRight_ss
00000000 l     O .rodata.__FUNCTION__$278	00000015 __FUNCTION__$278
00000000 l     F .text.op_u64_ShiftRight_ss	0000008d op_u64_ShiftRight_ss
00000000 l    d  .text.op_u64_ShiftRight_sr	00000000 .text.op_u64_ShiftRight_sr
00000000 l     O .rodata.__FUNCTION__$277	00000015 __FUNCTION__$277
00000000 l     F .text.op_u64_ShiftRight_sr	0000006c op_u64_ShiftRight_sr
00000000 l    d  .text.op_u64_ShiftRight_rs	00000000 .text.op_u64_ShiftRight_rs
00000000 l     O .rodata.__FUNCTION__$276	00000015 __FUNCTION__$276
00000000 l     F .text.op_u64_ShiftRight_rs	0000006d op_u64_ShiftRight_rs
00000000 l    d  .text.op_i64_ShiftRight_ss	00000000 .text.op_i64_ShiftRight_ss
00000000 l     O .rodata.__FUNCTION__$275	00000015 __FUNCTION__$275
00000000 l     F .text.op_i64_ShiftRight_ss	00000090 op_i64_ShiftRight_ss
00000000 l    d  .text.op_i64_ShiftRight_sr	00000000 .text.op_i64_ShiftRight_sr
00000000 l     O .rodata.__FUNCTION__$274	00000015 __FUNCTION__$274
00000000 l     F .text.op_i64_ShiftRight_sr	0000006e op_i64_ShiftRight_sr
00000000 l    d  .text.op_i64_ShiftRight_rs	00000000 .text.op_i64_ShiftRight_rs
00000000 l     O .rodata.__FUNCTION__$273	00000015 __FUNCTION__$273
00000000 l     F .text.op_i64_ShiftRight_rs	00000070 op_i64_ShiftRight_rs
00000000 l    d  .text.op_u64_ShiftLeft_ss	00000000 .text.op_u64_ShiftLeft_ss
00000000 l     O .rodata.__FUNCTION__$272	00000014 __FUNCTION__$272
00000000 l     F .text.op_u64_ShiftLeft_ss	0000008e op_u64_ShiftLeft_ss
00000000 l    d  .text.op_u64_ShiftLeft_sr	00000000 .text.op_u64_ShiftLeft_sr
00000000 l     O .rodata.__FUNCTION__$271	00000014 __FUNCTION__$271
00000000 l     F .text.op_u64_ShiftLeft_sr	0000006c op_u64_ShiftLeft_sr
00000000 l    d  .text.op_u64_ShiftLeft_rs	00000000 .text.op_u64_ShiftLeft_rs
00000000 l     O .rodata.__FUNCTION__$270	00000014 __FUNCTION__$270
00000000 l     F .text.op_u64_ShiftLeft_rs	0000006e op_u64_ShiftLeft_rs
00000000 l    d  .text.op_u64_Xor_ss	00000000 .text.op_u64_Xor_ss
00000000 l     O .rodata.__FUNCTION__$269	0000000e __FUNCTION__$269
00000000 l     F .text.op_u64_Xor_ss	00000068 op_u64_Xor_ss
00000000 l    d  .text.op_u64_Xor_rs	00000000 .text.op_u64_Xor_rs
00000000 l     O .rodata.__FUNCTION__$268	0000000e __FUNCTION__$268
00000000 l     F .text.op_u64_Xor_rs	00000048 op_u64_Xor_rs
00000000 l    d  .text.op_u64_Or_ss	00000000 .text.op_u64_Or_ss
00000000 l     O .rodata.__FUNCTION__$267	0000000d __FUNCTION__$267
00000000 l     F .text.op_u64_Or_ss	00000068 op_u64_Or_ss
00000000 l    d  .text.op_u64_Or_rs	00000000 .text.op_u64_Or_rs
00000000 l     O .rodata.__FUNCTION__$266	0000000d __FUNCTION__$266
00000000 l     F .text.op_u64_Or_rs	00000048 op_u64_Or_rs
00000000 l    d  .text.op_u64_And_ss	00000000 .text.op_u64_And_ss
00000000 l     O .rodata.__FUNCTION__$265	0000000e __FUNCTION__$265
00000000 l     F .text.op_u64_And_ss	00000068 op_u64_And_ss
00000000 l    d  .text.op_u64_And_rs	00000000 .text.op_u64_And_rs
00000000 l     O .rodata.__FUNCTION__$264	0000000e __FUNCTION__$264
00000000 l     F .text.op_u64_And_rs	00000048 op_u64_And_rs
00000000 l    d  .text.op_u64_Remainder_ss	00000000 .text.op_u64_Remainder_ss
00000000 l     O .rodata.__FUNCTION__$263	00000014 __FUNCTION__$263
00000000 l     F .text.op_u64_Remainder_ss	00000081 op_u64_Remainder_ss
00000000 l    d  .text.op_u64_Remainder_sr	00000000 .text.op_u64_Remainder_sr
00000000 l     O .rodata.__FUNCTION__$262	00000014 __FUNCTION__$262
00000000 l     F .text.op_u64_Remainder_sr	0000005f op_u64_Remainder_sr
00000000 l    d  .text.op_u64_Remainder_rs	00000000 .text.op_u64_Remainder_rs
00000000 l     O .rodata.__FUNCTION__$261	00000014 __FUNCTION__$261
00000000 l     F .text.op_u64_Remainder_rs	00000061 op_u64_Remainder_rs
00000000 l    d  .text.op_i64_Remainder_ss	00000000 .text.op_i64_Remainder_ss
00000000 l     O .rodata.__FUNCTION__$260	00000014 __FUNCTION__$260
00000000 l     F .text.op_i64_Remainder_ss	0000009c op_i64_Remainder_ss
00000000 l    d  .text.op_i64_Remainder_sr	00000000 .text.op_i64_Remainder_sr
00000000 l     O .rodata.__FUNCTION__$259	00000014 __FUNCTION__$259
00000000 l     F .text.op_i64_Remainder_sr	0000007a op_i64_Remainder_sr
00000000 l    d  .text.op_i64_Remainder_rs	00000000 .text.op_i64_Remainder_rs
00000000 l     O .rodata.__FUNCTION__$258	00000014 __FUNCTION__$258
00000000 l     F .text.op_i64_Remainder_rs	0000007c op_i64_Remainder_rs
00000000 l    d  .text.op_u64_Divide_ss	00000000 .text.op_u64_Divide_ss
00000000 l     O .rodata.__FUNCTION__$257	00000011 __FUNCTION__$257
00000000 l     F .text.op_u64_Divide_ss	00000081 op_u64_Divide_ss
00000000 l    d  .text.op_u64_Divide_sr	00000000 .text.op_u64_Divide_sr
00000000 l     O .rodata.__FUNCTION__$256	00000011 __FUNCTION__$256
00000000 l     F .text.op_u64_Divide_sr	0000005f op_u64_Divide_sr
00000000 l    d  .text.op_u64_Divide_rs	00000000 .text.op_u64_Divide_rs
00000000 l     O .rodata.__FUNCTION__$255	00000011 __FUNCTION__$255
00000000 l     F .text.op_u64_Divide_rs	00000061 op_u64_Divide_rs
00000000 l    d  .text.op_i64_Divide_ss	00000000 .text.op_i64_Divide_ss
00000000 l     O .rodata.__FUNCTION__$254	00000011 __FUNCTION__$254
00000000 l     F .text.op_i64_Divide_ss	00000094 op_i64_Divide_ss
00000000 l    d  .text.op_i64_Divide_sr	00000000 .text.op_i64_Divide_sr
00000000 l     O .rodata.__FUNCTION__$253	00000011 __FUNCTION__$253
00000000 l     F .text.op_i64_Divide_sr	00000071 op_i64_Divide_sr
00000000 l    d  .text.op_i64_Divide_rs	00000000 .text.op_i64_Divide_rs
00000000 l     O .rodata.__FUNCTION__$252	00000011 __FUNCTION__$252
00000000 l     F .text.op_i64_Divide_rs	00000075 op_i64_Divide_rs
00000000 l    d  .text.op_i64_Multiply_ss	00000000 .text.op_i64_Multiply_ss
00000000 l     O .rodata.__FUNCTION__$251	00000013 __FUNCTION__$251
00000000 l     F .text.op_i64_Multiply_ss	00000072 op_i64_Multiply_ss
00000000 l    d  .text.op_i64_Multiply_rs	00000000 .text.op_i64_Multiply_rs
00000000 l     O .rodata.__FUNCTION__$250	00000013 __FUNCTION__$250
00000000 l     F .text.op_i64_Multiply_rs	00000051 op_i64_Multiply_rs
00000000 l    d  .text.op_i64_Subtract_ss	00000000 .text.op_i64_Subtract_ss
00000000 l     O .rodata.__FUNCTION__$249	00000013 __FUNCTION__$249
00000000 l     F .text.op_i64_Subtract_ss	00000074 op_i64_Subtract_ss
00000000 l    d  .text.op_i64_Subtract_sr	00000000 .text.op_i64_Subtract_sr
00000000 l     O .rodata.__FUNCTION__$248	00000013 __FUNCTION__$248
00000000 l     F .text.op_i64_Subtract_sr	00000054 op_i64_Subtract_sr
00000000 l    d  .text.op_i64_Subtract_rs	00000000 .text.op_i64_Subtract_rs
00000000 l     O .rodata.__FUNCTION__$247	00000013 __FUNCTION__$247
00000000 l     F .text.op_i64_Subtract_rs	00000054 op_i64_Subtract_rs
00000000 l    d  .text.op_i64_Add_ss	00000000 .text.op_i64_Add_ss
00000000 l     O .rodata.__FUNCTION__$246	0000000e __FUNCTION__$246
00000000 l     F .text.op_i64_Add_ss	00000070 op_i64_Add_ss
00000000 l    d  .text.op_i64_Add_rs	00000000 .text.op_i64_Add_rs
00000000 l     O .rodata.__FUNCTION__$245	0000000e __FUNCTION__$245
00000000 l     F .text.op_i64_Add_rs	0000004e op_i64_Add_rs
00000000 l    d  .text.op_u32_Rotr_ss	00000000 .text.op_u32_Rotr_ss
00000000 l     O .rodata.__FUNCTION__$238	0000000f __FUNCTION__$238
00000000 l     F .text.op_u32_Rotr_ss	00000068 op_u32_Rotr_ss
00000000 l    d  .text.op_u32_Rotr_sr	00000000 .text.op_u32_Rotr_sr
00000000 l     O .rodata.__FUNCTION__$237	0000000f __FUNCTION__$237
00000000 l     F .text.op_u32_Rotr_sr	00000048 op_u32_Rotr_sr
00000000 l    d  .text.op_u32_Rotr_rs	00000000 .text.op_u32_Rotr_rs
00000000 l     O .rodata.__FUNCTION__$236	0000000f __FUNCTION__$236
00000000 l     F .text.op_u32_Rotr_rs	00000048 op_u32_Rotr_rs
00000000 l    d  .text.op_u32_Rotl_ss	00000000 .text.op_u32_Rotl_ss
00000000 l     O .rodata.__FUNCTION__$235	0000000f __FUNCTION__$235
00000000 l     F .text.op_u32_Rotl_ss	00000068 op_u32_Rotl_ss
00000000 l    d  .text.op_u32_Rotl_sr	00000000 .text.op_u32_Rotl_sr
00000000 l     O .rodata.__FUNCTION__$234	0000000f __FUNCTION__$234
00000000 l     F .text.op_u32_Rotl_sr	00000048 op_u32_Rotl_sr
00000000 l    d  .text.op_u32_Rotl_rs	00000000 .text.op_u32_Rotl_rs
00000000 l     O .rodata.__FUNCTION__$233	0000000f __FUNCTION__$233
00000000 l     F .text.op_u32_Rotl_rs	00000048 op_u32_Rotl_rs
00000000 l    d  .text.op_u32_ShiftRight_ss	00000000 .text.op_u32_ShiftRight_ss
00000000 l     O .rodata.__FUNCTION__$232	00000015 __FUNCTION__$232
00000000 l     F .text.op_u32_ShiftRight_ss	00000068 op_u32_ShiftRight_ss
00000000 l    d  .text.op_u32_ShiftRight_sr	00000000 .text.op_u32_ShiftRight_sr
00000000 l     O .rodata.__FUNCTION__$231	00000015 __FUNCTION__$231
00000000 l     F .text.op_u32_ShiftRight_sr	00000048 op_u32_ShiftRight_sr
00000000 l    d  .text.op_u32_ShiftRight_rs	00000000 .text.op_u32_ShiftRight_rs
00000000 l     O .rodata.__FUNCTION__$230	00000015 __FUNCTION__$230
00000000 l     F .text.op_u32_ShiftRight_rs	00000048 op_u32_ShiftRight_rs
00000000 l    d  .text.op_i32_ShiftRight_ss	00000000 .text.op_i32_ShiftRight_ss
00000000 l     O .rodata.__FUNCTION__$229	00000015 __FUNCTION__$229
00000000 l     F .text.op_i32_ShiftRight_ss	0000006a op_i32_ShiftRight_ss
00000000 l    d  .text.op_i32_ShiftRight_sr	00000000 .text.op_i32_ShiftRight_sr
00000000 l     O .rodata.__FUNCTION__$228	00000015 __FUNCTION__$228
00000000 l     F .text.op_i32_ShiftRight_sr	0000004a op_i32_ShiftRight_sr
00000000 l    d  .text.op_i32_ShiftRight_rs	00000000 .text.op_i32_ShiftRight_rs
00000000 l     O .rodata.__FUNCTION__$227	00000015 __FUNCTION__$227
00000000 l     F .text.op_i32_ShiftRight_rs	0000004a op_i32_ShiftRight_rs
00000000 l    d  .text.op_u32_ShiftLeft_ss	00000000 .text.op_u32_ShiftLeft_ss
00000000 l     O .rodata.__FUNCTION__$226	00000014 __FUNCTION__$226
00000000 l     F .text.op_u32_ShiftLeft_ss	00000068 op_u32_ShiftLeft_ss
00000000 l    d  .text.op_u32_ShiftLeft_sr	00000000 .text.op_u32_ShiftLeft_sr
00000000 l     O .rodata.__FUNCTION__$225	00000014 __FUNCTION__$225
00000000 l     F .text.op_u32_ShiftLeft_sr	00000048 op_u32_ShiftLeft_sr
00000000 l    d  .text.op_u32_ShiftLeft_rs	00000000 .text.op_u32_ShiftLeft_rs
00000000 l     O .rodata.__FUNCTION__$224	00000014 __FUNCTION__$224
00000000 l     F .text.op_u32_ShiftLeft_rs	00000048 op_u32_ShiftLeft_rs
00000000 l    d  .text.op_u32_Xor_ss	00000000 .text.op_u32_Xor_ss
00000000 l     O .rodata.__FUNCTION__$223	0000000e __FUNCTION__$223
00000000 l     F .text.op_u32_Xor_ss	00000064 op_u32_Xor_ss
00000000 l    d  .text.op_u32_Xor_rs	00000000 .text.op_u32_Xor_rs
00000000 l     O .rodata.__FUNCTION__$222	0000000e __FUNCTION__$222
00000000 l     F .text.op_u32_Xor_rs	00000044 op_u32_Xor_rs
00000000 l    d  .text.op_u32_Or_ss	00000000 .text.op_u32_Or_ss
00000000 l     O .rodata.__FUNCTION__$221	0000000d __FUNCTION__$221
00000000 l     F .text.op_u32_Or_ss	00000064 op_u32_Or_ss
00000000 l    d  .text.op_u32_Or_rs	00000000 .text.op_u32_Or_rs
00000000 l     O .rodata.__FUNCTION__$220	0000000d __FUNCTION__$220
00000000 l     F .text.op_u32_Or_rs	00000044 op_u32_Or_rs
00000000 l    d  .text.op_u32_And_ss	00000000 .text.op_u32_And_ss
00000000 l     O .rodata.__FUNCTION__$219	0000000e __FUNCTION__$219
00000000 l     F .text.op_u32_And_ss	00000064 op_u32_And_ss
00000000 l    d  .text.op_u32_And_rs	00000000 .text.op_u32_And_rs
00000000 l     O .rodata.__FUNCTION__$218	0000000e __FUNCTION__$218
00000000 l     F .text.op_u32_And_rs	00000044 op_u32_And_rs
00000000 l    d  .text.op_u32_Remainder_ss	00000000 .text.op_u32_Remainder_ss
00000000 l     O .rodata.__FUNCTION__$217	00000014 __FUNCTION__$217
00000000 l     F .text.op_u32_Remainder_ss	00000072 op_u32_Remainder_ss
00000000 l    d  .text.op_u32_Remainder_sr	00000000 .text.op_u32_Remainder_sr
00000000 l     O .rodata.__FUNCTION__$216	00000014 __FUNCTION__$216
00000000 l     F .text.op_u32_Remainder_sr	00000052 op_u32_Remainder_sr
00000000 l    d  .text.op_u32_Remainder_rs	00000000 .text.op_u32_Remainder_rs
00000000 l     O .rodata.__FUNCTION__$215	00000014 __FUNCTION__$215
00000000 l     F .text.op_u32_Remainder_rs	00000052 op_u32_Remainder_rs
00000000 l    d  .text.op_i32_Remainder_ss	00000000 .text.op_i32_Remainder_ss
00000000 l     O .rodata.__FUNCTION__$214	00000014 __FUNCTION__$214
00000000 l     F .text.op_i32_Remainder_ss	00000088 op_i32_Remainder_ss
00000000 l    d  .text.op_i32_Remainder_sr	00000000 .text.op_i32_Remainder_sr
00000000 l     O .rodata.__FUNCTION__$213	00000014 __FUNCTION__$213
00000000 l     F .text.op_i32_Remainder_sr	00000065 op_i32_Remainder_sr
00000000 l    d  .text.op_i32_Remainder_rs	00000000 .text.op_i32_Remainder_rs
00000000 l     O .rodata.__FUNCTION__$212	00000014 __FUNCTION__$212
00000000 l     F .text.op_i32_Remainder_rs	00000067 op_i32_Remainder_rs
00000000 l    d  .text.op_u32_Divide_ss	00000000 .text.op_u32_Divide_ss
00000000 l     O .rodata.__FUNCTION__$211	00000011 __FUNCTION__$211
00000000 l     F .text.op_u32_Divide_ss	00000072 op_u32_Divide_ss
00000000 l    d  .text.op_u32_Divide_sr	00000000 .text.op_u32_Divide_sr
00000000 l     O .rodata.__FUNCTION__$210	00000011 __FUNCTION__$210
00000000 l     F .text.op_u32_Divide_sr	00000052 op_u32_Divide_sr
00000000 l    d  .text.op_u32_Divide_rs	00000000 .text.op_u32_Divide_rs
00000000 l     O .rodata.__FUNCTION__$209	00000011 __FUNCTION__$209
00000000 l     F .text.op_u32_Divide_rs	00000052 op_u32_Divide_rs
00000000 l    d  .text.op_i32_Divide_ss	00000000 .text.op_i32_Divide_ss
00000000 l     O .rodata.__FUNCTION__$208	00000011 __FUNCTION__$208
00000000 l     F .text.op_i32_Divide_ss	00000081 op_i32_Divide_ss
00000000 l    d  .text.op_i32_Divide_sr	00000000 .text.op_i32_Divide_sr
00000000 l     O .rodata.__FUNCTION__$207	00000011 __FUNCTION__$207
00000000 l     F .text.op_i32_Divide_sr	0000005f op_i32_Divide_sr
00000000 l    d  .text.op_i32_Divide_rs	00000000 .text.op_i32_Divide_rs
00000000 l     O .rodata.__FUNCTION__$206	00000011 __FUNCTION__$206
00000000 l     F .text.op_i32_Divide_rs	00000061 op_i32_Divide_rs
00000000 l    d  .text.op_i32_Multiply_ss	00000000 .text.op_i32_Multiply_ss
00000000 l     O .rodata.__FUNCTION__$205	00000013 __FUNCTION__$205
00000000 l     F .text.op_i32_Multiply_ss	00000068 op_i32_Multiply_ss
00000000 l    d  .text.op_i32_Multiply_rs	00000000 .text.op_i32_Multiply_rs
00000000 l     O .rodata.__FUNCTION__$204	00000013 __FUNCTION__$204
00000000 l     F .text.op_i32_Multiply_rs	00000048 op_i32_Multiply_rs
00000000 l    d  .text.op_i32_Subtract_ss	00000000 .text.op_i32_Subtract_ss
00000000 l     O .rodata.__FUNCTION__$203	00000013 __FUNCTION__$203
00000000 l     F .text.op_i32_Subtract_ss	00000068 op_i32_Subtract_ss
00000000 l    d  .text.op_i32_Subtract_sr	00000000 .text.op_i32_Subtract_sr
00000000 l     O .rodata.__FUNCTION__$202	00000013 __FUNCTION__$202
00000000 l     F .text.op_i32_Subtract_sr	00000048 op_i32_Subtract_sr
00000000 l    d  .text.op_i32_Subtract_rs	00000000 .text.op_i32_Subtract_rs
00000000 l     O .rodata.__FUNCTION__$201	00000013 __FUNCTION__$201
00000000 l     F .text.op_i32_Subtract_rs	00000048 op_i32_Subtract_rs
00000000 l    d  .text.op_i32_Add_ss	00000000 .text.op_i32_Add_ss
00000000 l     O .rodata.__FUNCTION__$200	0000000e __FUNCTION__$200
00000000 l     F .text.op_i32_Add_ss	00000066 op_i32_Add_ss
00000000 l    d  .text.op_i32_Add_rs	00000000 .text.op_i32_Add_rs
00000000 l     O .rodata.__FUNCTION__$199	0000000e __FUNCTION__$199
00000000 l     F .text.op_i32_Add_rs	00000046 op_i32_Add_rs
00000000 l    d  .text.op_f64_GreaterThanOrEqual_ss	00000000 .text.op_f64_GreaterThanOrEqual_ss
00000000 l     O .rodata.__FUNCTION__$192	0000001d __FUNCTION__$192
00000000 l     F .text.op_f64_GreaterThanOrEqual_ss	00000078 op_f64_GreaterThanOrEqual_ss
00000000 l    d  .text.op_f64_GreaterThanOrEqual_sr	00000000 .text.op_f64_GreaterThanOrEqual_sr
00000000 l     O .rodata.__FUNCTION__$191	0000001d __FUNCTION__$191
00000000 l     F .text.op_f64_GreaterThanOrEqual_sr	00000056 op_f64_GreaterThanOrEqual_sr
00000000 l    d  .text.op_f64_GreaterThanOrEqual_rs	00000000 .text.op_f64_GreaterThanOrEqual_rs
00000000 l     O .rodata.__FUNCTION__$190	0000001d __FUNCTION__$190
00000000 l     F .text.op_f64_GreaterThanOrEqual_rs	00000054 op_f64_GreaterThanOrEqual_rs
00000000 l    d  .text.op_f64_LessThanOrEqual_ss	00000000 .text.op_f64_LessThanOrEqual_ss
00000000 l     O .rodata.__FUNCTION__$189	0000001a __FUNCTION__$189
00000000 l     F .text.op_f64_LessThanOrEqual_ss	00000074 op_f64_LessThanOrEqual_ss
00000000 l    d  .text.op_f64_LessThanOrEqual_sr	00000000 .text.op_f64_LessThanOrEqual_sr
00000000 l     O .rodata.__FUNCTION__$188	0000001a __FUNCTION__$188
00000000 l     F .text.op_f64_LessThanOrEqual_sr	00000054 op_f64_LessThanOrEqual_sr
00000000 l    d  .text.op_f64_LessThanOrEqual_rs	00000000 .text.op_f64_LessThanOrEqual_rs
00000000 l     O .rodata.__FUNCTION__$187	0000001a __FUNCTION__$187
00000000 l     F .text.op_f64_LessThanOrEqual_rs	00000056 op_f64_LessThanOrEqual_rs
00000000 l    d  .text.op_f64_GreaterThan_ss	00000000 .text.op_f64_GreaterThan_ss
00000000 l     O .rodata.__FUNCTION__$186	00000016 __FUNCTION__$186
00000000 l     F .text.op_f64_GreaterThan_ss	00000072 op_f64_GreaterThan_ss
00000000 l    d  .text.op_f64_GreaterThan_sr	00000000 .text.op_f64_GreaterThan_sr
00000000 l     O .rodata.__FUNCTION__$185	00000016 __FUNCTION__$185
00000000 l     F .text.op_f64_GreaterThan_sr	00000052 op_f64_GreaterThan_sr
00000000 l    d  .text.op_f64_GreaterThan_rs	00000000 .text.op_f64_GreaterThan_rs
00000000 l     O .rodata.__FUNCTION__$184	00000016 __FUNCTION__$184
00000000 l     F .text.op_f64_GreaterThan_rs	00000056 op_f64_GreaterThan_rs
00000000 l    d  .text.op_f64_LessThan_ss	00000000 .text.op_f64_LessThan_ss
00000000 l     O .rodata.__FUNCTION__$183	00000013 __FUNCTION__$183
00000000 l     F .text.op_f64_LessThan_ss	00000078 op_f64_LessThan_ss
00000000 l    d  .text.op_f64_LessThan_sr	00000000 .text.op_f64_LessThan_sr
00000000 l     O .rodata.__FUNCTION__$182	00000013 __FUNCTION__$182
00000000 l     F .text.op_f64_LessThan_sr	00000056 op_f64_LessThan_sr
00000000 l    d  .text.op_f64_LessThan_rs	00000000 .text.op_f64_LessThan_rs
00000000 l     O .rodata.__FUNCTION__$181	00000013 __FUNCTION__$181
00000000 l     F .text.op_f64_LessThan_rs	00000052 op_f64_LessThan_rs
00000000 l    d  .text.op_f64_NotEqual_ss	00000000 .text.op_f64_NotEqual_ss
00000000 l     O .rodata.__FUNCTION__$180	00000013 __FUNCTION__$180
00000000 l     F .text.op_f64_NotEqual_ss	00000074 op_f64_NotEqual_ss
00000000 l    d  .text.op_f64_NotEqual_rs	00000000 .text.op_f64_NotEqual_rs
00000000 l     O .rodata.__FUNCTION__$179	00000013 __FUNCTION__$179
00000000 l     F .text.op_f64_NotEqual_rs	00000054 op_f64_NotEqual_rs
00000000 l    d  .text.op_f64_Equal_ss	00000000 .text.op_f64_Equal_ss
00000000 l     O .rodata.__FUNCTION__$178	00000010 __FUNCTION__$178
00000000 l     F .text.op_f64_Equal_ss	00000074 op_f64_Equal_ss
00000000 l    d  .text.op_f64_Equal_rs	00000000 .text.op_f64_Equal_rs
00000000 l     O .rodata.__FUNCTION__$177	00000010 __FUNCTION__$177
00000000 l     F .text.op_f64_Equal_rs	00000054 op_f64_Equal_rs
00000000 l    d  .text.op_f32_GreaterThanOrEqual_ss	00000000 .text.op_f32_GreaterThanOrEqual_ss
00000000 l     O .rodata.__FUNCTION__$176	0000001d __FUNCTION__$176
00000000 l     F .text.op_f32_GreaterThanOrEqual_ss	00000074 op_f32_GreaterThanOrEqual_ss
00000000 l    d  .text.op_f32_GreaterThanOrEqual_sr	00000000 .text.op_f32_GreaterThanOrEqual_sr
00000000 l     O .rodata.__FUNCTION__$175	0000001d __FUNCTION__$175
00000000 l     F .text.op_f32_GreaterThanOrEqual_sr	0000005c op_f32_GreaterThanOrEqual_sr
00000000 l    d  .text.op_f32_GreaterThanOrEqual_rs	00000000 .text.op_f32_GreaterThanOrEqual_rs
00000000 l     O .rodata.__FUNCTION__$174	0000001d __FUNCTION__$174
00000000 l     F .text.op_f32_GreaterThanOrEqual_rs	0000005c op_f32_GreaterThanOrEqual_rs
00000000 l    d  .text.op_f32_LessThanOrEqual_ss	00000000 .text.op_f32_LessThanOrEqual_ss
00000000 l     O .rodata.__FUNCTION__$173	0000001a __FUNCTION__$173
00000000 l     F .text.op_f32_LessThanOrEqual_ss	00000074 op_f32_LessThanOrEqual_ss
00000000 l    d  .text.op_f32_LessThanOrEqual_sr	00000000 .text.op_f32_LessThanOrEqual_sr
00000000 l     O .rodata.__FUNCTION__$172	0000001a __FUNCTION__$172
00000000 l     F .text.op_f32_LessThanOrEqual_sr	0000005c op_f32_LessThanOrEqual_sr
00000000 l    d  .text.op_f32_LessThanOrEqual_rs	00000000 .text.op_f32_LessThanOrEqual_rs
00000000 l     O .rodata.__FUNCTION__$171	0000001a __FUNCTION__$171
00000000 l     F .text.op_f32_LessThanOrEqual_rs	0000005c op_f32_LessThanOrEqual_rs
00000000 l    d  .text.op_f32_GreaterThan_ss	00000000 .text.op_f32_GreaterThan_ss
00000000 l     O .rodata.__FUNCTION__$170	00000016 __FUNCTION__$170
00000000 l     F .text.op_f32_GreaterThan_ss	00000074 op_f32_GreaterThan_ss
00000000 l    d  .text.op_f32_GreaterThan_sr	00000000 .text.op_f32_GreaterThan_sr
00000000 l     O .rodata.__FUNCTION__$169	00000016 __FUNCTION__$169
00000000 l     F .text.op_f32_GreaterThan_sr	0000005c op_f32_GreaterThan_sr
00000000 l    d  .text.op_f32_GreaterThan_rs	00000000 .text.op_f32_GreaterThan_rs
00000000 l     O .rodata.__FUNCTION__$168	00000016 __FUNCTION__$168
00000000 l     F .text.op_f32_GreaterThan_rs	0000005c op_f32_GreaterThan_rs
00000000 l    d  .text.op_f32_LessThan_ss	00000000 .text.op_f32_LessThan_ss
00000000 l     O .rodata.__FUNCTION__$167	00000013 __FUNCTION__$167
00000000 l     F .text.op_f32_LessThan_ss	00000074 op_f32_LessThan_ss
00000000 l    d  .text.op_f32_LessThan_sr	00000000 .text.op_f32_LessThan_sr
00000000 l     O .rodata.__FUNCTION__$166	00000013 __FUNCTION__$166
00000000 l     F .text.op_f32_LessThan_sr	0000005c op_f32_LessThan_sr
00000000 l    d  .text.op_f32_LessThan_rs	00000000 .text.op_f32_LessThan_rs
00000000 l     O .rodata.__FUNCTION__$165	00000013 __FUNCTION__$165
00000000 l     F .text.op_f32_LessThan_rs	0000005c op_f32_LessThan_rs
00000000 l    d  .text.op_f32_NotEqual_ss	00000000 .text.op_f32_NotEqual_ss
00000000 l     O .rodata.__FUNCTION__$164	00000013 __FUNCTION__$164
00000000 l     F .text.op_f32_NotEqual_ss	00000074 op_f32_NotEqual_ss
00000000 l    d  .text.op_f32_NotEqual_rs	00000000 .text.op_f32_NotEqual_rs
00000000 l     O .rodata.__FUNCTION__$163	00000013 __FUNCTION__$163
00000000 l     F .text.op_f32_NotEqual_rs	0000005c op_f32_NotEqual_rs
00000000 l    d  .text.op_f32_Equal_ss	00000000 .text.op_f32_Equal_ss
00000000 l     O .rodata.__FUNCTION__$162	00000010 __FUNCTION__$162
00000000 l     F .text.op_f32_Equal_ss	00000074 op_f32_Equal_ss
00000000 l    d  .text.op_f32_Equal_rs	00000000 .text.op_f32_Equal_rs
00000000 l     O .rodata.__FUNCTION__$161	00000010 __FUNCTION__$161
00000000 l     F .text.op_f32_Equal_rs	0000005c op_f32_Equal_rs
00000000 l    d  .text.op_u64_GreaterThanOrEqual_ss	00000000 .text.op_u64_GreaterThanOrEqual_ss
00000000 l     O .rodata.__FUNCTION__$160	0000001d __FUNCTION__$160
00000000 l     F .text.op_u64_GreaterThanOrEqual_ss	00000076 op_u64_GreaterThanOrEqual_ss
00000000 l    d  .text.op_u64_GreaterThanOrEqual_sr	00000000 .text.op_u64_GreaterThanOrEqual_sr
00000000 l     O .rodata.__FUNCTION__$159	0000001d __FUNCTION__$159
00000000 l     F .text.op_u64_GreaterThanOrEqual_sr	00000056 op_u64_GreaterThanOrEqual_sr
00000000 l    d  .text.op_u64_GreaterThanOrEqual_rs	00000000 .text.op_u64_GreaterThanOrEqual_rs
00000000 l     O .rodata.__FUNCTION__$158	0000001d __FUNCTION__$158
00000000 l     F .text.op_u64_GreaterThanOrEqual_rs	00000056 op_u64_GreaterThanOrEqual_rs
00000000 l    d  .text.op_i64_GreaterThanOrEqual_ss	00000000 .text.op_i64_GreaterThanOrEqual_ss
00000000 l     O .rodata.__FUNCTION__$157	0000001d __FUNCTION__$157
00000000 l     F .text.op_i64_GreaterThanOrEqual_ss	00000076 op_i64_GreaterThanOrEqual_ss
00000000 l    d  .text.op_i64_GreaterThanOrEqual_sr	00000000 .text.op_i64_GreaterThanOrEqual_sr
00000000 l     O .rodata.__FUNCTION__$156	0000001d __FUNCTION__$156
00000000 l     F .text.op_i64_GreaterThanOrEqual_sr	00000056 op_i64_GreaterThanOrEqual_sr
00000000 l    d  .text.op_i64_GreaterThanOrEqual_rs	00000000 .text.op_i64_GreaterThanOrEqual_rs
00000000 l     O .rodata.__FUNCTION__$155	0000001d __FUNCTION__$155
00000000 l     F .text.op_i64_GreaterThanOrEqual_rs	00000056 op_i64_GreaterThanOrEqual_rs
00000000 l    d  .text.op_u64_LessThanOrEqual_ss	00000000 .text.op_u64_LessThanOrEqual_ss
00000000 l     O .rodata.__FUNCTION__$154	0000001a __FUNCTION__$154
00000000 l     F .text.op_u64_LessThanOrEqual_ss	00000076 op_u64_LessThanOrEqual_ss
00000000 l    d  .text.op_u64_LessThanOrEqual_sr	00000000 .text.op_u64_LessThanOrEqual_sr
00000000 l     O .rodata.__FUNCTION__$153	0000001a __FUNCTION__$153
00000000 l     F .text.op_u64_LessThanOrEqual_sr	00000056 op_u64_LessThanOrEqual_sr
00000000 l    d  .text.op_u64_LessThanOrEqual_rs	00000000 .text.op_u64_LessThanOrEqual_rs
00000000 l     O .rodata.__FUNCTION__$152	0000001a __FUNCTION__$152
00000000 l     F .text.op_u64_LessThanOrEqual_rs	00000056 op_u64_LessThanOrEqual_rs
00000000 l    d  .text.op_i64_LessThanOrEqual_ss	00000000 .text.op_i64_LessThanOrEqual_ss
00000000 l     O .rodata.__FUNCTION__$151	0000001a __FUNCTION__$151
00000000 l     F .text.op_i64_LessThanOrEqual_ss	00000076 op_i64_LessThanOrEqual_ss
00000000 l    d  .text.op_i64_LessThanOrEqual_sr	00000000 .text.op_i64_LessThanOrEqual_sr
00000000 l     O .rodata.__FUNCTION__$150	0000001a __FUNCTION__$150
00000000 l     F .text.op_i64_LessThanOrEqual_sr	00000056 op_i64_LessThanOrEqual_sr
00000000 l    d  .text.op_i64_LessThanOrEqual_rs	00000000 .text.op_i64_LessThanOrEqual_rs
00000000 l     O .rodata.__FUNCTION__$149	0000001a __FUNCTION__$149
00000000 l     F .text.op_i64_LessThanOrEqual_rs	00000056 op_i64_LessThanOrEqual_rs
00000000 l    d  .text.op_u64_GreaterThan_ss	00000000 .text.op_u64_GreaterThan_ss
00000000 l     O .rodata.__FUNCTION__$148	00000016 __FUNCTION__$148
00000000 l     F .text.op_u64_GreaterThan_ss	00000076 op_u64_GreaterThan_ss
00000000 l    d  .text.op_u64_GreaterThan_sr	00000000 .text.op_u64_GreaterThan_sr
00000000 l     O .rodata.__FUNCTION__$147	00000016 __FUNCTION__$147
00000000 l     F .text.op_u64_GreaterThan_sr	00000056 op_u64_GreaterThan_sr
00000000 l    d  .text.op_u64_GreaterThan_rs	00000000 .text.op_u64_GreaterThan_rs
00000000 l     O .rodata.__FUNCTION__$146	00000016 __FUNCTION__$146
00000000 l     F .text.op_u64_GreaterThan_rs	00000056 op_u64_GreaterThan_rs
00000000 l    d  .text.op_i64_GreaterThan_ss	00000000 .text.op_i64_GreaterThan_ss
00000000 l     O .rodata.__FUNCTION__$145	00000016 __FUNCTION__$145
00000000 l     F .text.op_i64_GreaterThan_ss	00000076 op_i64_GreaterThan_ss
00000000 l    d  .text.op_i64_GreaterThan_sr	00000000 .text.op_i64_GreaterThan_sr
00000000 l     O .rodata.__FUNCTION__$144	00000016 __FUNCTION__$144
00000000 l     F .text.op_i64_GreaterThan_sr	00000056 op_i64_GreaterThan_sr
00000000 l    d  .text.op_i64_GreaterThan_rs	00000000 .text.op_i64_GreaterThan_rs
00000000 l     O .rodata.__FUNCTION__$143	00000016 __FUNCTION__$143
00000000 l     F .text.op_i64_GreaterThan_rs	00000056 op_i64_GreaterThan_rs
00000000 l    d  .text.op_u64_LessThan_ss	00000000 .text.op_u64_LessThan_ss
00000000 l     O .rodata.__FUNCTION__$142	00000013 __FUNCTION__$142
00000000 l     F .text.op_u64_LessThan_ss	00000076 op_u64_LessThan_ss
00000000 l    d  .text.op_u64_LessThan_sr	00000000 .text.op_u64_LessThan_sr
00000000 l     O .rodata.__FUNCTION__$141	00000013 __FUNCTION__$141
00000000 l     F .text.op_u64_LessThan_sr	00000056 op_u64_LessThan_sr
00000000 l    d  .text.op_u64_LessThan_rs	00000000 .text.op_u64_LessThan_rs
00000000 l     O .rodata.__FUNCTION__$140	00000013 __FUNCTION__$140
00000000 l     F .text.op_u64_LessThan_rs	00000056 op_u64_LessThan_rs
00000000 l    d  .text.op_i64_LessThan_ss	00000000 .text.op_i64_LessThan_ss
00000000 l     O .rodata.__FUNCTION__$139	00000013 __FUNCTION__$139
00000000 l     F .text.op_i64_LessThan_ss	00000076 op_i64_LessThan_ss
00000000 l    d  .text.op_i64_LessThan_sr	00000000 .text.op_i64_LessThan_sr
00000000 l     O .rodata.__FUNCTION__$138	00000013 __FUNCTION__$138
00000000 l     F .text.op_i64_LessThan_sr	00000056 op_i64_LessThan_sr
00000000 l    d  .text.op_i64_LessThan_rs	00000000 .text.op_i64_LessThan_rs
00000000 l     O .rodata.__FUNCTION__$137	00000013 __FUNCTION__$137
00000000 l     F .text.op_i64_LessThan_rs	00000056 op_i64_LessThan_rs
00000000 l    d  .text.op_i64_NotEqual_ss	00000000 .text.op_i64_NotEqual_ss
00000000 l     O .rodata.__FUNCTION__$136	00000013 __FUNCTION__$136
00000000 l     F .text.op_i64_NotEqual_ss	00000072 op_i64_NotEqual_ss
00000000 l    d  .text.op_i64_NotEqual_rs	00000000 .text.op_i64_NotEqual_rs
00000000 l     O .rodata.__FUNCTION__$135	00000013 __FUNCTION__$135
00000000 l     F .text.op_i64_NotEqual_rs	00000054 op_i64_NotEqual_rs
00000000 l    d  .text.op_i64_Equal_ss	00000000 .text.op_i64_Equal_ss
00000000 l     O .rodata.__FUNCTION__$134	00000010 __FUNCTION__$134
00000000 l     F .text.op_i64_Equal_ss	00000072 op_i64_Equal_ss
00000000 l    d  .text.op_i64_Equal_rs	00000000 .text.op_i64_Equal_rs
00000000 l     O .rodata.__FUNCTION__$133	00000010 __FUNCTION__$133
00000000 l     F .text.op_i64_Equal_rs	00000054 op_i64_Equal_rs
00000000 l    d  .text.op_i64_EqualToZero_s	00000000 .text.op_i64_EqualToZero_s
00000000 l     O .rodata.__FUNCTION__$132	00000015 __FUNCTION__$132
00000000 l     F .text.op_i64_EqualToZero_s	0000004c op_i64_EqualToZero_s
00000000 l    d  .text.op_i64_EqualToZero_r	00000000 .text.op_i64_EqualToZero_r
00000000 l     O .rodata.__FUNCTION__$131	00000015 __FUNCTION__$131
00000000 l     F .text.op_i64_EqualToZero_r	0000002a op_i64_EqualToZero_r
00000000 l    d  .text.op_u32_GreaterThanOrEqual_ss	00000000 .text.op_u32_GreaterThanOrEqual_ss
00000000 l     O .rodata.__FUNCTION__$130	0000001d __FUNCTION__$130
00000000 l     F .text.op_u32_GreaterThanOrEqual_ss	00000068 op_u32_GreaterThanOrEqual_ss
00000000 l    d  .text.op_u32_GreaterThanOrEqual_sr	00000000 .text.op_u32_GreaterThanOrEqual_sr
00000000 l     O .rodata.__FUNCTION__$129	0000001d __FUNCTION__$129
00000000 l     F .text.op_u32_GreaterThanOrEqual_sr	0000004c op_u32_GreaterThanOrEqual_sr
00000000 l    d  .text.op_u32_GreaterThanOrEqual_rs	00000000 .text.op_u32_GreaterThanOrEqual_rs
00000000 l     O .rodata.__FUNCTION__$128	0000001d __FUNCTION__$128
00000000 l     F .text.op_u32_GreaterThanOrEqual_rs	0000004c op_u32_GreaterThanOrEqual_rs
00000000 l    d  .text.op_i32_GreaterThanOrEqual_ss	00000000 .text.op_i32_GreaterThanOrEqual_ss
00000000 l     O .rodata.__FUNCTION__$127	0000001d __FUNCTION__$127
00000000 l     F .text.op_i32_GreaterThanOrEqual_ss	00000068 op_i32_GreaterThanOrEqual_ss
00000000 l    d  .text.op_i32_GreaterThanOrEqual_sr	00000000 .text.op_i32_GreaterThanOrEqual_sr
00000000 l     O .rodata.__FUNCTION__$126	0000001d __FUNCTION__$126
00000000 l     F .text.op_i32_GreaterThanOrEqual_sr	0000004c op_i32_GreaterThanOrEqual_sr
00000000 l    d  .text.op_i32_GreaterThanOrEqual_rs	00000000 .text.op_i32_GreaterThanOrEqual_rs
00000000 l     O .rodata.__FUNCTION__$125	0000001d __FUNCTION__$125
00000000 l     F .text.op_i32_GreaterThanOrEqual_rs	0000004c op_i32_GreaterThanOrEqual_rs
00000000 l    d  .text.op_u32_LessThanOrEqual_ss	00000000 .text.op_u32_LessThanOrEqual_ss
00000000 l     O .rodata.__FUNCTION__$124	0000001a __FUNCTION__$124
00000000 l     F .text.op_u32_LessThanOrEqual_ss	00000068 op_u32_LessThanOrEqual_ss
00000000 l    d  .text.op_u32_LessThanOrEqual_sr	00000000 .text.op_u32_LessThanOrEqual_sr
00000000 l     O .rodata.__FUNCTION__$123	0000001a __FUNCTION__$123
00000000 l     F .text.op_u32_LessThanOrEqual_sr	0000004c op_u32_LessThanOrEqual_sr
00000000 l    d  .text.op_u32_LessThanOrEqual_rs	00000000 .text.op_u32_LessThanOrEqual_rs
00000000 l     O .rodata.__FUNCTION__$122	0000001a __FUNCTION__$122
00000000 l     F .text.op_u32_LessThanOrEqual_rs	0000004c op_u32_LessThanOrEqual_rs
00000000 l    d  .text.op_i32_LessThanOrEqual_ss	00000000 .text.op_i32_LessThanOrEqual_ss
00000000 l     O .rodata.__FUNCTION__$121	0000001a __FUNCTION__$121
00000000 l     F .text.op_i32_LessThanOrEqual_ss	00000068 op_i32_LessThanOrEqual_ss
00000000 l    d  .text.op_i32_LessThanOrEqual_sr	00000000 .text.op_i32_LessThanOrEqual_sr
00000000 l     O .rodata.__FUNCTION__$120	0000001a __FUNCTION__$120
00000000 l     F .text.op_i32_LessThanOrEqual_sr	0000004c op_i32_LessThanOrEqual_sr
00000000 l    d  .text.op_i32_LessThanOrEqual_rs	00000000 .text.op_i32_LessThanOrEqual_rs
00000000 l     O .rodata.__FUNCTION__$119	0000001a __FUNCTION__$119
00000000 l     F .text.op_i32_LessThanOrEqual_rs	0000004c op_i32_LessThanOrEqual_rs
00000000 l    d  .text.op_u32_GreaterThan_ss	00000000 .text.op_u32_GreaterThan_ss
00000000 l     O .rodata.__FUNCTION__$118	00000016 __FUNCTION__$118
00000000 l     F .text.op_u32_GreaterThan_ss	00000068 op_u32_GreaterThan_ss
00000000 l    d  .text.op_u32_GreaterThan_sr	00000000 .text.op_u32_GreaterThan_sr
00000000 l     O .rodata.__FUNCTION__$117	00000016 __FUNCTION__$117
00000000 l     F .text.op_u32_GreaterThan_sr	0000004c op_u32_GreaterThan_sr
00000000 l    d  .text.op_u32_GreaterThan_rs	00000000 .text.op_u32_GreaterThan_rs
00000000 l     O .rodata.__FUNCTION__$116	00000016 __FUNCTION__$116
00000000 l     F .text.op_u32_GreaterThan_rs	0000004c op_u32_GreaterThan_rs
00000000 l    d  .text.op_i32_GreaterThan_ss	00000000 .text.op_i32_GreaterThan_ss
00000000 l     O .rodata.__FUNCTION__$115	00000016 __FUNCTION__$115
00000000 l     F .text.op_i32_GreaterThan_ss	00000068 op_i32_GreaterThan_ss
00000000 l    d  .text.op_i32_GreaterThan_sr	00000000 .text.op_i32_GreaterThan_sr
00000000 l     O .rodata.__FUNCTION__$114	00000016 __FUNCTION__$114
00000000 l     F .text.op_i32_GreaterThan_sr	0000004c op_i32_GreaterThan_sr
00000000 l    d  .text.op_i32_GreaterThan_rs	00000000 .text.op_i32_GreaterThan_rs
00000000 l     O .rodata.__FUNCTION__$113	00000016 __FUNCTION__$113
00000000 l     F .text.op_i32_GreaterThan_rs	0000004c op_i32_GreaterThan_rs
00000000 l    d  .text.op_u32_LessThan_ss	00000000 .text.op_u32_LessThan_ss
00000000 l     O .rodata.__FUNCTION__$112	00000013 __FUNCTION__$112
00000000 l     F .text.op_u32_LessThan_ss	00000068 op_u32_LessThan_ss
00000000 l    d  .text.op_u32_LessThan_sr	00000000 .text.op_u32_LessThan_sr
00000000 l     O .rodata.__FUNCTION__$111	00000013 __FUNCTION__$111
00000000 l     F .text.op_u32_LessThan_sr	0000004c op_u32_LessThan_sr
00000000 l    d  .text.op_u32_LessThan_rs	00000000 .text.op_u32_LessThan_rs
00000000 l     O .rodata.__FUNCTION__$110	00000013 __FUNCTION__$110
00000000 l     F .text.op_u32_LessThan_rs	0000004c op_u32_LessThan_rs
00000000 l    d  .text.op_i32_LessThan_ss	00000000 .text.op_i32_LessThan_ss
00000000 l     O .rodata.__FUNCTION__$109	00000013 __FUNCTION__$109
00000000 l     F .text.op_i32_LessThan_ss	00000068 op_i32_LessThan_ss
00000000 l    d  .text.op_i32_LessThan_sr	00000000 .text.op_i32_LessThan_sr
00000000 l     O .rodata.__FUNCTION__$108	00000013 __FUNCTION__$108
00000000 l     F .text.op_i32_LessThan_sr	0000004c op_i32_LessThan_sr
00000000 l    d  .text.op_i32_LessThan_rs	00000000 .text.op_i32_LessThan_rs
00000000 l     O .rodata.__FUNCTION__$107	00000013 __FUNCTION__$107
00000000 l     F .text.op_i32_LessThan_rs	0000004c op_i32_LessThan_rs
00000000 l    d  .text.op_i32_NotEqual_ss	00000000 .text.op_i32_NotEqual_ss
00000000 l     O .rodata.__FUNCTION__$106	00000013 __FUNCTION__$106
00000000 l     F .text.op_i32_NotEqual_ss	00000069 op_i32_NotEqual_ss
00000000 l    d  .text.op_i32_NotEqual_rs	00000000 .text.op_i32_NotEqual_rs
00000000 l     O .rodata.__FUNCTION__$105	00000013 __FUNCTION__$105
00000000 l     F .text.op_i32_NotEqual_rs	00000049 op_i32_NotEqual_rs
00000000 l    d  .text.op_i32_Equal_ss	00000000 .text.op_i32_Equal_ss
00000000 l     O .rodata.__FUNCTION__$104	00000010 __FUNCTION__$104
00000000 l     F .text.op_i32_Equal_ss	00000069 op_i32_Equal_ss
00000000 l    d  .text.op_i32_Equal_rs	00000000 .text.op_i32_Equal_rs
00000000 l     O .rodata.__FUNCTION__$103	00000010 __FUNCTION__$103
00000000 l     F .text.op_i32_Equal_rs	00000049 op_i32_Equal_rs
00000000 l    d  .text.op_i32_EqualToZero_s	00000000 .text.op_i32_EqualToZero_s
00000000 l     O .rodata.__FUNCTION__$102	00000015 __FUNCTION__$102
00000000 l     F .text.op_i32_EqualToZero_s	00000046 op_i32_EqualToZero_s
00000000 l    d  .text.op_i32_EqualToZero_r	00000000 .text.op_i32_EqualToZero_r
00000000 l     O .rodata.__FUNCTION__$101	00000015 __FUNCTION__$101
00000000 l     F .text.op_i32_EqualToZero_r	00000028 op_i32_EqualToZero_r
00000000 l    d  .rodata.op_Const32.str1.4	00000000 .rodata.op_Const32.str1.4
00000000 l    d  .text.op_Const32	00000000 .text.op_Const32
00000000 l     O .bss.ERROR_POINTER	00000008 ERROR_POINTER
00000000 l     O .rodata.__FUNCTION__$99	0000000b __FUNCTION__$99
00000000 l     F .text.op_Const32	000000db op_Const32
00000000 l    d  .text.op_MemSize	00000000 .text.op_MemSize
00000000 l     O .rodata.__FUNCTION__$97	0000000b __FUNCTION__$97
00000000 l     F .text.op_MemSize	00000024 op_MemSize
00000000 l    d  .text.op_BranchIf_s	00000000 .text.op_BranchIf_s
00000000 l     O .rodata.__FUNCTION__$35	0000000e __FUNCTION__$35
00000000 l     F .text.op_BranchIf_s	0000008c op_BranchIf_s
00000000 l    d  .text.op_BranchIf_r	00000000 .text.op_BranchIf_r
00000000 l     O .rodata.__FUNCTION__$34	0000000e __FUNCTION__$34
00000000 l     F .text.op_BranchIf_r	00000061 op_BranchIf_r
00000000 l    d  .text.op_u64_TruncSat_f64_s_s	00000000 .text.op_u64_TruncSat_f64_s_s
00000000 l     O .rodata.__FUNCTION__$31	00000018 __FUNCTION__$31
00000000 l     F .text.op_u64_TruncSat_f64_s_s	000000c3 op_u64_TruncSat_f64_s_s
00000000 l    d  .text.op_u64_TruncSat_f64_s_r	00000000 .text.op_u64_TruncSat_f64_s_r
00000000 l     O .rodata.__FUNCTION__$30	00000018 __FUNCTION__$30
00000000 l     F .text.op_u64_TruncSat_f64_s_r	000000a7 op_u64_TruncSat_f64_s_r
00000000 l    d  .text.op_u64_TruncSat_f64_r_s	00000000 .text.op_u64_TruncSat_f64_r_s
00000000 l     O .rodata.__FUNCTION__$29	00000018 __FUNCTION__$29
00000000 l     F .text.op_u64_TruncSat_f64_r_s	00000098 op_u64_TruncSat_f64_r_s
00000000 l    d  .text.op_u64_TruncSat_f64_r_r	00000000 .text.op_u64_TruncSat_f64_r_r
00000000 l     O .rodata.__FUNCTION__$28	00000018 __FUNCTION__$28
00000000 l     F .text.op_u64_TruncSat_f64_r_r	0000008c op_u64_TruncSat_f64_r_r
00000000 l    d  .text.op_i64_TruncSat_f64_s_s	00000000 .text.op_i64_TruncSat_f64_s_s
00000000 l     O .rodata.__FUNCTION__$27	00000018 __FUNCTION__$27
00000000 l     F .text.op_i64_TruncSat_f64_s_s	000000d0 op_i64_TruncSat_f64_s_s
00000000 l    d  .text.op_i64_TruncSat_f64_s_r	00000000 .text.op_i64_TruncSat_f64_s_r
00000000 l     O .rodata.__FUNCTION__$26	00000018 __FUNCTION__$26
00000000 l     F .text.op_i64_TruncSat_f64_s_r	000000b0 op_i64_TruncSat_f64_s_r
00000000 l    d  .text.op_i64_TruncSat_f64_r_s	00000000 .text.op_i64_TruncSat_f64_r_s
00000000 l     O .rodata.__FUNCTION__$25	00000018 __FUNCTION__$25
00000000 l     F .text.op_i64_TruncSat_f64_r_s	000000a1 op_i64_TruncSat_f64_r_s
00000000 l    d  .text.op_i64_TruncSat_f64_r_r	00000000 .text.op_i64_TruncSat_f64_r_r
00000000 l     O .rodata.__FUNCTION__$24	00000018 __FUNCTION__$24
00000000 l     F .text.op_i64_TruncSat_f64_r_r	00000095 op_i64_TruncSat_f64_r_r
00000000 l    d  .text.op_u64_TruncSat_f32_s_s	00000000 .text.op_u64_TruncSat_f32_s_s
00000000 l     O .rodata.__FUNCTION__$23	00000018 __FUNCTION__$23
00000000 l     F .text.op_u64_TruncSat_f32_s_s	0000009c op_u64_TruncSat_f32_s_s
00000000 l    d  .text.op_u64_TruncSat_f32_s_r	00000000 .text.op_u64_TruncSat_f32_s_r
00000000 l     O .rodata.__FUNCTION__$22	00000018 __FUNCTION__$22
00000000 l     F .text.op_u64_TruncSat_f32_s_r	00000087 op_u64_TruncSat_f32_s_r
00000000 l    d  .text.op_u64_TruncSat_f32_r_s	00000000 .text.op_u64_TruncSat_f32_r_s
00000000 l     O .rodata.__FUNCTION__$21	00000018 __FUNCTION__$21
00000000 l     F .text.op_u64_TruncSat_f32_r_s	0000007b op_u64_TruncSat_f32_r_s
00000000 l    d  .text.op_u64_TruncSat_f32_r_r	00000000 .text.op_u64_TruncSat_f32_r_r
00000000 l     O .rodata.__FUNCTION__$20	00000018 __FUNCTION__$20
00000000 l     F .text.op_u64_TruncSat_f32_r_r	00000079 op_u64_TruncSat_f32_r_r
00000000 l    d  .text.op_i64_TruncSat_f32_s_s	00000000 .text.op_i64_TruncSat_f32_s_s
00000000 l     O .rodata.__FUNCTION__$19	00000018 __FUNCTION__$19
00000000 l     F .text.op_i64_TruncSat_f32_s_s	000000a5 op_i64_TruncSat_f32_s_s
00000000 l    d  .text.op_i64_TruncSat_f32_s_r	00000000 .text.op_i64_TruncSat_f32_s_r
00000000 l     O .rodata.__FUNCTION__$18	00000018 __FUNCTION__$18
00000000 l     F .text.op_i64_TruncSat_f32_s_r	00000090 op_i64_TruncSat_f32_s_r
00000000 l    d  .text.op_i64_TruncSat_f32_r_s	00000000 .text.op_i64_TruncSat_f32_r_s
00000000 l     O .rodata.__FUNCTION__$17	00000018 __FUNCTION__$17
00000000 l     F .text.op_i64_TruncSat_f32_r_s	00000084 op_i64_TruncSat_f32_r_s
00000000 l    d  .text.op_i64_TruncSat_f32_r_r	00000000 .text.op_i64_TruncSat_f32_r_r
00000000 l     O .rodata.__FUNCTION__$16	00000018 __FUNCTION__$16
00000000 l     F .text.op_i64_TruncSat_f32_r_r	00000084 op_i64_TruncSat_f32_r_r
00000000 l    d  .text.op_u32_TruncSat_f64_s_s	00000000 .text.op_u32_TruncSat_f64_s_s
00000000 l     O .rodata.__FUNCTION__$15	00000018 __FUNCTION__$15
00000000 l     F .text.op_u32_TruncSat_f64_s_s	000000bd op_u32_TruncSat_f64_s_s
00000000 l    d  .text.op_u32_TruncSat_f64_s_r	00000000 .text.op_u32_TruncSat_f64_s_r
00000000 l     O .rodata.__FUNCTION__$14	00000018 __FUNCTION__$14
00000000 l     F .text.op_u32_TruncSat_f64_s_r	0000009f op_u32_TruncSat_f64_s_r
00000000 l    d  .text.op_u32_TruncSat_f64_r_s	00000000 .text.op_u32_TruncSat_f64_r_s
00000000 l     O .rodata.__FUNCTION__$13	00000018 __FUNCTION__$13
00000000 l     F .text.op_u32_TruncSat_f64_r_s	0000009c op_u32_TruncSat_f64_r_s
00000000 l    d  .text.op_u32_TruncSat_f64_r_r	00000000 .text.op_u32_TruncSat_f64_r_r
00000000 l     O .rodata.__FUNCTION__$12	00000018 __FUNCTION__$12
00000000 l     F .text.op_u32_TruncSat_f64_r_r	00000074 op_u32_TruncSat_f64_r_r
00000000 l    d  .text.op_i32_TruncSat_f64_s_s	00000000 .text.op_i32_TruncSat_f64_s_s
00000000 l     O .rodata.__FUNCTION__$11	00000018 __FUNCTION__$11
00000000 l     F .text.op_i32_TruncSat_f64_s_s	000000c2 op_i32_TruncSat_f64_s_s
00000000 l    d  .text.op_i32_TruncSat_f64_s_r	00000000 .text.op_i32_TruncSat_f64_s_r
00000000 l     O .rodata.__FUNCTION__$10	00000018 __FUNCTION__$10
00000000 l     F .text.op_i32_TruncSat_f64_s_r	0000009a op_i32_TruncSat_f64_s_r
00000000 l    d  .text.op_i32_TruncSat_f64_r_s	00000000 .text.op_i32_TruncSat_f64_r_s
00000000 l     O .rodata.__FUNCTION__$9	00000018 __FUNCTION__$9
00000000 l     F .text.op_i32_TruncSat_f64_r_s	000000a8 op_i32_TruncSat_f64_r_s
00000000 l    d  .text.op_i32_TruncSat_f64_r_r	00000000 .text.op_i32_TruncSat_f64_r_r
00000000 l     O .rodata.__FUNCTION__$8	00000018 __FUNCTION__$8
00000000 l     F .text.op_i32_TruncSat_f64_r_r	00000099 op_i32_TruncSat_f64_r_r
00000000 l    d  .text.op_u32_TruncSat_f32_s_s	00000000 .text.op_u32_TruncSat_f32_s_s
00000000 l     O .rodata.__FUNCTION__$7	00000018 __FUNCTION__$7
00000000 l     F .text.op_u32_TruncSat_f32_s_s	0000008e op_u32_TruncSat_f32_s_s
00000000 l    d  .text.op_u32_TruncSat_f32_s_r	00000000 .text.op_u32_TruncSat_f32_s_r
00000000 l     O .rodata.__FUNCTION__$6	00000018 __FUNCTION__$6
00000000 l     F .text.op_u32_TruncSat_f32_s_r	00000082 op_u32_TruncSat_f32_s_r
00000000 l    d  .text.op_u32_TruncSat_f32_r_s	00000000 .text.op_u32_TruncSat_f32_r_s
00000000 l     O .rodata.__FUNCTION__$5	00000018 __FUNCTION__$5
00000000 l     F .text.op_u32_TruncSat_f32_r_s	00000073 op_u32_TruncSat_f32_r_s
00000000 l    d  .text.op_u32_TruncSat_f32_r_r	00000000 .text.op_u32_TruncSat_f32_r_r
00000000 l     O .rodata.__FUNCTION__$4	00000018 __FUNCTION__$4
00000000 l     F .text.op_u32_TruncSat_f32_r_r	00000074 op_u32_TruncSat_f32_r_r
00000000 l    d  .text.op_i32_TruncSat_f32_s_s	00000000 .text.op_i32_TruncSat_f32_s_s
00000000 l     O .rodata.__FUNCTION__$3	00000018 __FUNCTION__$3
00000000 l     F .text.op_i32_TruncSat_f32_s_s	00000095 op_i32_TruncSat_f32_s_s
00000000 l    d  .text.op_i32_TruncSat_f32_s_r	00000000 .text.op_i32_TruncSat_f32_s_r
00000000 l     O .rodata.__FUNCTION__$2	00000018 __FUNCTION__$2
00000000 l     F .text.op_i32_TruncSat_f32_s_r	0000008a op_i32_TruncSat_f32_s_r
00000000 l    d  .text.op_i32_TruncSat_f32_r_s	00000000 .text.op_i32_TruncSat_f32_r_s
00000000 l     O .rodata.__FUNCTION__$1	00000018 __FUNCTION__$1
00000000 l     F .text.op_i32_TruncSat_f32_r_s	0000007c op_i32_TruncSat_f32_r_s
00000000 l    d  .text.op_i32_TruncSat_f32_r_r	00000000 .text.op_i32_TruncSat_f32_r_r
00000000 l     O .rodata.__FUNCTION__$0	00000018 __FUNCTION__$0
00000000 l     F .text.op_i32_TruncSat_f32_r_r	00000080 op_i32_TruncSat_f32_r_r
00000000 l    d  .rodata.op_MemCopy.str1.4	00000000 .rodata.op_MemCopy.str1.4
00000000 l    d  .text.op_MemCopy	00000000 .text.op_MemCopy
00000000 l     O .rodata.__FUNCTION__$481	0000000b __FUNCTION__$481
00000000 l     F .text.op_MemCopy	000000ed op_MemCopy
00000000 l    d  .rodata.op_Const64.str1.4	00000000 .rodata.op_Const64.str1.4
00000000 l    d  .text.op_Const64	00000000 .text.op_Const64
00000000 l     O .rodata.__FUNCTION__$100	0000000b __FUNCTION__$100
00000000 l     F .text.op_Const64	00000164 op_Const64
00000000 l    d  .text.op_i64_Store_i32_ss	00000000 .text.op_i64_Store_i32_ss
00000000 l     O .rodata.__FUNCTION__$96	00000014 __FUNCTION__$96
00000000 l     F .text.op_i64_Store_i32_ss	0000008c op_i64_Store_i32_ss
00000000 l    d  .text.op_i64_Store_i32_sr	00000000 .text.op_i64_Store_i32_sr
00000000 l     O .rodata.__FUNCTION__$95	00000014 __FUNCTION__$95
00000000 l     F .text.op_i64_Store_i32_sr	00000068 op_i64_Store_i32_sr
00000000 l    d  .text.op_i64_Store_i32_rs	00000000 .text.op_i64_Store_i32_rs
00000000 l     O .rodata.__FUNCTION__$94	00000014 __FUNCTION__$94
00000000 l     F .text.op_i64_Store_i32_rs	00000068 op_i64_Store_i32_rs
00000000 l    d  .text.op_i64_Store_i16_ss	00000000 .text.op_i64_Store_i16_ss
00000000 l     O .rodata.__FUNCTION__$93	00000014 __FUNCTION__$93
00000000 l     F .text.op_i64_Store_i16_ss	0000008c op_i64_Store_i16_ss
00000000 l    d  .text.op_i64_Store_i16_sr	00000000 .text.op_i64_Store_i16_sr
00000000 l     O .rodata.__FUNCTION__$92	00000014 __FUNCTION__$92
00000000 l     F .text.op_i64_Store_i16_sr	00000068 op_i64_Store_i16_sr
00000000 l    d  .text.op_i64_Store_i16_rs	00000000 .text.op_i64_Store_i16_rs
00000000 l     O .rodata.__FUNCTION__$91	00000014 __FUNCTION__$91
00000000 l     F .text.op_i64_Store_i16_rs	00000068 op_i64_Store_i16_rs
00000000 l    d  .text.op_i64_Store_u8_ss	00000000 .text.op_i64_Store_u8_ss
00000000 l     O .rodata.__FUNCTION__$90	00000013 __FUNCTION__$90
00000000 l     F .text.op_i64_Store_u8_ss	0000008c op_i64_Store_u8_ss
00000000 l    d  .text.op_i64_Store_u8_sr	00000000 .text.op_i64_Store_u8_sr
00000000 l     O .rodata.__FUNCTION__$89	00000013 __FUNCTION__$89
00000000 l     F .text.op_i64_Store_u8_sr	00000068 op_i64_Store_u8_sr
00000000 l    d  .text.op_i64_Store_u8_rs	00000000 .text.op_i64_Store_u8_rs
00000000 l     O .rodata.__FUNCTION__$88	00000013 __FUNCTION__$88
00000000 l     F .text.op_i64_Store_u8_rs	00000068 op_i64_Store_u8_rs
00000000 l    d  .text.op_i32_Store_i16_ss	00000000 .text.op_i32_Store_i16_ss
00000000 l     O .rodata.__FUNCTION__$87	00000014 __FUNCTION__$87
00000000 l     F .text.op_i32_Store_i16_ss	0000008c op_i32_Store_i16_ss
00000000 l    d  .text.op_i32_Store_i16_sr	00000000 .text.op_i32_Store_i16_sr
00000000 l     O .rodata.__FUNCTION__$86	00000014 __FUNCTION__$86
00000000 l     F .text.op_i32_Store_i16_sr	00000068 op_i32_Store_i16_sr
00000000 l    d  .text.op_i32_Store_i16_rs	00000000 .text.op_i32_Store_i16_rs
00000000 l     O .rodata.__FUNCTION__$85	00000014 __FUNCTION__$85
00000000 l     F .text.op_i32_Store_i16_rs	00000068 op_i32_Store_i16_rs
00000000 l    d  .text.op_i32_Store_u8_ss	00000000 .text.op_i32_Store_u8_ss
00000000 l     O .rodata.__FUNCTION__$84	00000013 __FUNCTION__$84
00000000 l     F .text.op_i32_Store_u8_ss	0000008c op_i32_Store_u8_ss
00000000 l    d  .text.op_i32_Store_u8_sr	00000000 .text.op_i32_Store_u8_sr
00000000 l     O .rodata.__FUNCTION__$83	00000013 __FUNCTION__$83
00000000 l     F .text.op_i32_Store_u8_sr	00000068 op_i32_Store_u8_sr
00000000 l    d  .text.op_i32_Store_u8_rs	00000000 .text.op_i32_Store_u8_rs
00000000 l     O .rodata.__FUNCTION__$82	00000013 __FUNCTION__$82
00000000 l     F .text.op_i32_Store_u8_rs	00000068 op_i32_Store_u8_rs
00000000 l    d  .text.op_f64_Store_f64_rr	00000000 .text.op_f64_Store_f64_rr
00000000 l     O .rodata.__FUNCTION__$81	00000014 __FUNCTION__$81
00000000 l     F .text.op_f64_Store_f64_rr	00000050 op_f64_Store_f64_rr
00000000 l    d  .text.op_f64_Store_f64_ss	00000000 .text.op_f64_Store_f64_ss
00000000 l     O .rodata.__FUNCTION__$80	00000014 __FUNCTION__$80
00000000 l     F .text.op_f64_Store_f64_ss	00000094 op_f64_Store_f64_ss
00000000 l    d  .text.op_f64_Store_f64_sr	00000000 .text.op_f64_Store_f64_sr
00000000 l     O .rodata.__FUNCTION__$79	00000014 __FUNCTION__$79
00000000 l     F .text.op_f64_Store_f64_sr	00000074 op_f64_Store_f64_sr
00000000 l    d  .text.op_f64_Store_f64_rs	00000000 .text.op_f64_Store_f64_rs
00000000 l     O .rodata.__FUNCTION__$78	00000014 __FUNCTION__$78
00000000 l     F .text.op_f64_Store_f64_rs	00000070 op_f64_Store_f64_rs
00000000 l    d  .text.op_f32_Store_f32_rr	00000000 .text.op_f32_Store_f32_rr
00000000 l     O .rodata.__FUNCTION__$77	00000014 __FUNCTION__$77
00000000 l     F .text.op_f32_Store_f32_rr	0000005c op_f32_Store_f32_rr
00000000 l    d  .text.op_f32_Store_f32_ss	00000000 .text.op_f32_Store_f32_ss
00000000 l     O .rodata.__FUNCTION__$76	00000014 __FUNCTION__$76
00000000 l     F .text.op_f32_Store_f32_ss	00000090 op_f32_Store_f32_ss
00000000 l    d  .text.op_f32_Store_f32_sr	00000000 .text.op_f32_Store_f32_sr
00000000 l     O .rodata.__FUNCTION__$75	00000014 __FUNCTION__$75
00000000 l     F .text.op_f32_Store_f32_sr	00000070 op_f32_Store_f32_sr
00000000 l    d  .text.op_f32_Store_f32_rs	00000000 .text.op_f32_Store_f32_rs
00000000 l     O .rodata.__FUNCTION__$74	00000014 __FUNCTION__$74
00000000 l     F .text.op_f32_Store_f32_rs	00000078 op_f32_Store_f32_rs
00000000 l    d  .text.op_i64_Store_i64_ss	00000000 .text.op_i64_Store_i64_ss
00000000 l     O .rodata.__FUNCTION__$73	00000014 __FUNCTION__$73
00000000 l     F .text.op_i64_Store_i64_ss	00000094 op_i64_Store_i64_ss
00000000 l    d  .text.op_i64_Store_i64_sr	00000000 .text.op_i64_Store_i64_sr
00000000 l     O .rodata.__FUNCTION__$72	00000014 __FUNCTION__$72
00000000 l     F .text.op_i64_Store_i64_sr	00000074 op_i64_Store_i64_sr
00000000 l    d  .text.op_i64_Store_i64_rs	00000000 .text.op_i64_Store_i64_rs
00000000 l     O .rodata.__FUNCTION__$71	00000014 __FUNCTION__$71
00000000 l     F .text.op_i64_Store_i64_rs	00000068 op_i64_Store_i64_rs
00000000 l    d  .text.op_i32_Store_i32_ss	00000000 .text.op_i32_Store_i32_ss
00000000 l     O .rodata.__FUNCTION__$70	00000014 __FUNCTION__$70
00000000 l     F .text.op_i32_Store_i32_ss	0000008c op_i32_Store_i32_ss
00000000 l    d  .text.op_i32_Store_i32_sr	00000000 .text.op_i32_Store_i32_sr
00000000 l     O .rodata.__FUNCTION__$69	00000014 __FUNCTION__$69
00000000 l     F .text.op_i32_Store_i32_sr	00000068 op_i32_Store_i32_sr
00000000 l    d  .text.op_i32_Store_i32_rs	00000000 .text.op_i32_Store_i32_rs
00000000 l     O .rodata.__FUNCTION__$68	00000014 __FUNCTION__$68
00000000 l     F .text.op_i32_Store_i32_rs	00000068 op_i32_Store_i32_rs
00000000 l    d  .text.op_i64_Load_u32_s	00000000 .text.op_i64_Load_u32_s
00000000 l     O .rodata.__FUNCTION__$67	00000012 __FUNCTION__$67
00000000 l     F .text.op_i64_Load_u32_s	00000064 op_i64_Load_u32_s
00000000 l    d  .text.op_i64_Load_u32_r	00000000 .text.op_i64_Load_u32_r
00000000 l     O .rodata.__FUNCTION__$66	00000012 __FUNCTION__$66
00000000 l     F .text.op_i64_Load_u32_r	00000048 op_i64_Load_u32_r
00000000 l    d  .text.op_i64_Load_i32_s	00000000 .text.op_i64_Load_i32_s
00000000 l     O .rodata.__FUNCTION__$65	00000012 __FUNCTION__$65
00000000 l     F .text.op_i64_Load_i32_s	00000068 op_i64_Load_i32_s
00000000 l    d  .text.op_i64_Load_i32_r	00000000 .text.op_i64_Load_i32_r
00000000 l     O .rodata.__FUNCTION__$64	00000012 __FUNCTION__$64
00000000 l     F .text.op_i64_Load_i32_r	0000004a op_i64_Load_i32_r
00000000 l    d  .text.op_i64_Load_u16_s	00000000 .text.op_i64_Load_u16_s
00000000 l     O .rodata.__FUNCTION__$63	00000012 __FUNCTION__$63
00000000 l     F .text.op_i64_Load_u16_s	00000065 op_i64_Load_u16_s
00000000 l    d  .text.op_i64_Load_u16_r	00000000 .text.op_i64_Load_u16_r
00000000 l     O .rodata.__FUNCTION__$62	00000012 __FUNCTION__$62
00000000 l     F .text.op_i64_Load_u16_r	00000048 op_i64_Load_u16_r
00000000 l    d  .text.op_i64_Load_i16_s	00000000 .text.op_i64_Load_i16_s
00000000 l     O .rodata.__FUNCTION__$61	00000012 __FUNCTION__$61
00000000 l     F .text.op_i64_Load_i16_s	00000068 op_i64_Load_i16_s
00000000 l    d  .text.op_i64_Load_i16_r	00000000 .text.op_i64_Load_i16_r
00000000 l     O .rodata.__FUNCTION__$60	00000012 __FUNCTION__$60
00000000 l     F .text.op_i64_Load_i16_r	0000004c op_i64_Load_i16_r
00000000 l    d  .text.op_i64_Load_u8_s	00000000 .text.op_i64_Load_u8_s
00000000 l     O .rodata.__FUNCTION__$59	00000011 __FUNCTION__$59
00000000 l     F .text.op_i64_Load_u8_s	00000065 op_i64_Load_u8_s
00000000 l    d  .text.op_i64_Load_u8_r	00000000 .text.op_i64_Load_u8_r
00000000 l     O .rodata.__FUNCTION__$58	00000011 __FUNCTION__$58
00000000 l     F .text.op_i64_Load_u8_r	00000048 op_i64_Load_u8_r
00000000 l    d  .text.op_i64_Load_i8_s	00000000 .text.op_i64_Load_i8_s
00000000 l     O .rodata.__FUNCTION__$57	00000011 __FUNCTION__$57
00000000 l     F .text.op_i64_Load_i8_s	0000006c op_i64_Load_i8_s
00000000 l    d  .text.op_i64_Load_i8_r	00000000 .text.op_i64_Load_i8_r
00000000 l     O .rodata.__FUNCTION__$56	00000011 __FUNCTION__$56
00000000 l     F .text.op_i64_Load_i8_r	0000004e op_i64_Load_i8_r
00000000 l    d  .text.op_i32_Load_u16_s	00000000 .text.op_i32_Load_u16_s
00000000 l     O .rodata.__FUNCTION__$55	00000012 __FUNCTION__$55
00000000 l     F .text.op_i32_Load_u16_s	00000065 op_i32_Load_u16_s
00000000 l    d  .text.op_i32_Load_u16_r	00000000 .text.op_i32_Load_u16_r
00000000 l     O .rodata.__FUNCTION__$54	00000012 __FUNCTION__$54
00000000 l     F .text.op_i32_Load_u16_r	00000048 op_i32_Load_u16_r
00000000 l    d  .text.op_i32_Load_i16_s	00000000 .text.op_i32_Load_i16_s
00000000 l     O .rodata.__FUNCTION__$53	00000012 __FUNCTION__$53
00000000 l     F .text.op_i32_Load_i16_s	00000068 op_i32_Load_i16_s
00000000 l    d  .text.op_i32_Load_i16_r	00000000 .text.op_i32_Load_i16_r
00000000 l     O .rodata.__FUNCTION__$52	00000012 __FUNCTION__$52
00000000 l     F .text.op_i32_Load_i16_r	0000004c op_i32_Load_i16_r
00000000 l    d  .text.op_i32_Load_u8_s	00000000 .text.op_i32_Load_u8_s
00000000 l     O .rodata.__FUNCTION__$51	00000011 __FUNCTION__$51
00000000 l     F .text.op_i32_Load_u8_s	00000065 op_i32_Load_u8_s
00000000 l    d  .text.op_i32_Load_u8_r	00000000 .text.op_i32_Load_u8_r
00000000 l     O .rodata.__FUNCTION__$50	00000011 __FUNCTION__$50
00000000 l     F .text.op_i32_Load_u8_r	00000048 op_i32_Load_u8_r
00000000 l    d  .text.op_i32_Load_i8_s	00000000 .text.op_i32_Load_i8_s
00000000 l     O .rodata.__FUNCTION__$49	00000011 __FUNCTION__$49
00000000 l     F .text.op_i32_Load_i8_s	0000006c op_i32_Load_i8_s
00000000 l    d  .text.op_i32_Load_i8_r	00000000 .text.op_i32_Load_i8_r
00000000 l     O .rodata.__FUNCTION__$48	00000011 __FUNCTION__$48
00000000 l     F .text.op_i32_Load_i8_r	0000004e op_i32_Load_i8_r
00000000 l    d  .text.op_f64_Load_f64_s	00000000 .text.op_f64_Load_f64_s
00000000 l     O .rodata.__FUNCTION__$47	00000012 __FUNCTION__$47
00000000 l     F .text.op_f64_Load_f64_s	00000062 op_f64_Load_f64_s
00000000 l    d  .text.op_f64_Load_f64_r	00000000 .text.op_f64_Load_f64_r
00000000 l     O .rodata.__FUNCTION__$46	00000012 __FUNCTION__$46
00000000 l     F .text.op_f64_Load_f64_r	00000042 op_f64_Load_f64_r
00000000 l    d  .text.op_f32_Load_f32_s	00000000 .text.op_f32_Load_f32_s
00000000 l     O .rodata.__FUNCTION__$45	00000012 __FUNCTION__$45
00000000 l     F .text.op_f32_Load_f32_s	00000066 op_f32_Load_f32_s
00000000 l    d  .text.op_f32_Load_f32_r	00000000 .text.op_f32_Load_f32_r
00000000 l     O .rodata.__FUNCTION__$44	00000012 __FUNCTION__$44
00000000 l     F .text.op_f32_Load_f32_r	00000046 op_f32_Load_f32_r
00000000 l    d  .text.op_i64_Load_i64_s	00000000 .text.op_i64_Load_i64_s
00000000 l     O .rodata.__FUNCTION__$43	00000012 __FUNCTION__$43
00000000 l     F .text.op_i64_Load_i64_s	00000064 op_i64_Load_i64_s
00000000 l    d  .text.op_i64_Load_i64_r	00000000 .text.op_i64_Load_i64_r
00000000 l     O .rodata.__FUNCTION__$42	00000012 __FUNCTION__$42
00000000 l     F .text.op_i64_Load_i64_r	00000048 op_i64_Load_i64_r
00000000 l    d  .text.op_i32_Load_i32_s	00000000 .text.op_i32_Load_i32_s
00000000 l     O .rodata.__FUNCTION__$41	00000012 __FUNCTION__$41
00000000 l     F .text.op_i32_Load_i32_s	00000068 op_i32_Load_i32_s
00000000 l    d  .text.op_i32_Load_i32_r	00000000 .text.op_i32_Load_i32_r
00000000 l     O .rodata.__FUNCTION__$40	00000012 __FUNCTION__$40
00000000 l     F .text.op_i32_Load_i32_r	0000004a op_i32_Load_i32_r
00000000 l    d  .rodata.op_MemFill.str1.4	00000000 .rodata.op_MemFill.str1.4
00000000 l    d  .text.op_MemFill	00000000 .text.op_MemFill
00000000 l     O .rodata.__FUNCTION__$480	0000000b __FUNCTION__$480
00000000 l     F .text.op_MemFill	000000ed op_MemFill
00000000 l    d  .text.op_Entry	00000000 .text.op_Entry
00000000 l     O .rodata.__FUNCTION__$448	00000009 __FUNCTION__$448
00000000 l     F .text.op_Entry	00000077 op_Entry
00000000 l    d  .rodata.EnsureCodePageNumLines.str1.4	00000000 .rodata.EnsureCodePageNumLines.str1.4
00000000 l    d  .text.EnsureCodePageNumLines	00000000 .text.EnsureCodePageNumLines
00000000 l     F .text.EnsureCodePageNumLines	0000009c EnsureCodePageNumLines
00000000 l    d  .rodata.EmitOp.str1.4	00000000 .rodata.EmitOp.str1.4
00000000 l    d  .text.EmitOp	00000000 .text.EmitOp
00000000 l     F .text.EmitOp	0000004e EmitOp
00000000 l    d  .rodata.Pop.str1.4	00000000 .rodata.Pop.str1.4
00000000 l    d  .text.Pop	00000000 .text.Pop
00000000 l     F .text.Pop	0000012d Pop
00000000 l    d  .text.op_f64_CopySign_ss	00000000 .text.op_f64_CopySign_ss
00000000 l     O .rodata.__FUNCTION__$346	00000013 __FUNCTION__$346
00000000 l     F .text.op_f64_CopySign_ss	00000070 op_f64_CopySign_ss
00000000 l    d  .text.op_f64_CopySign_sr	00000000 .text.op_f64_CopySign_sr
00000000 l     O .rodata.__FUNCTION__$345	00000013 __FUNCTION__$345
00000000 l     F .text.op_f64_CopySign_sr	00000056 op_f64_CopySign_sr
00000000 l    d  .text.op_f64_CopySign_rs	00000000 .text.op_f64_CopySign_rs
00000000 l     O .rodata.__FUNCTION__$344	00000013 __FUNCTION__$344
00000000 l     F .text.op_f64_CopySign_rs	0000004e op_f64_CopySign_rs
00000000 l    d  .text.op_f64_Max_ss	00000000 .text.op_f64_Max_ss
00000000 l     O .rodata.__FUNCTION__$343	0000000e __FUNCTION__$343
00000000 l     F .text.op_f64_Max_ss	000000cc op_f64_Max_ss
00000000 l    d  .text.op_f64_Sqrt_s	00000000 .text.op_f64_Sqrt_s
00000000 l     O .rodata.__FUNCTION__$329	0000000e __FUNCTION__$329
00000000 l     F .text.op_f64_Sqrt_s	00000049 op_f64_Sqrt_s
00000000 l    d  .text.op_f64_Sqrt_r	00000000 .text.op_f64_Sqrt_r
00000000 l     O .rodata.__FUNCTION__$328	0000000e __FUNCTION__$328
00000000 l     F .text.op_f64_Sqrt_r	0000002a op_f64_Sqrt_r
00000000 l    d  .text.op_f64_Nearest_s	00000000 .text.op_f64_Nearest_s
00000000 l     O .rodata.__FUNCTION__$327	00000011 __FUNCTION__$327
00000000 l     F .text.op_f64_Nearest_s	00000049 op_f64_Nearest_s
00000000 l    d  .text.op_f64_Nearest_r	00000000 .text.op_f64_Nearest_r
00000000 l     O .rodata.__FUNCTION__$326	00000011 __FUNCTION__$326
00000000 l     F .text.op_f64_Nearest_r	0000002a op_f64_Nearest_r
00000000 l    d  .text.op_f64_Trunc_s	00000000 .text.op_f64_Trunc_s
00000000 l     O .rodata.__FUNCTION__$325	0000000f __FUNCTION__$325
00000000 l     F .text.op_f64_Trunc_s	00000049 op_f64_Trunc_s
00000000 l    d  .text.op_f64_Trunc_r	00000000 .text.op_f64_Trunc_r
00000000 l     O .rodata.__FUNCTION__$324	0000000f __FUNCTION__$324
00000000 l     F .text.op_f64_Trunc_r	0000002a op_f64_Trunc_r
00000000 l    d  .text.op_f64_Floor_s	00000000 .text.op_f64_Floor_s
00000000 l     O .rodata.__FUNCTION__$323	0000000f __FUNCTION__$323
00000000 l     F .text.op_f64_Floor_s	00000049 op_f64_Floor_s
00000000 l    d  .text.op_f64_Floor_r	00000000 .text.op_f64_Floor_r
00000000 l     O .rodata.__FUNCTION__$322	0000000f __FUNCTION__$322
00000000 l     F .text.op_f64_Floor_r	0000002a op_f64_Floor_r
00000000 l    d  .text.op_f64_Ceil_s	00000000 .text.op_f64_Ceil_s
00000000 l     O .rodata.__FUNCTION__$321	0000000e __FUNCTION__$321
00000000 l     F .text.op_f64_Ceil_s	00000049 op_f64_Ceil_s
00000000 l    d  .text.op_f64_Ceil_r	00000000 .text.op_f64_Ceil_r
00000000 l     O .rodata.__FUNCTION__$320	0000000e __FUNCTION__$320
00000000 l     F .text.op_f64_Ceil_r	0000002a op_f64_Ceil_r
00000000 l    d  .text.op_f32_CopySign_ss	00000000 .text.op_f32_CopySign_ss
00000000 l     O .rodata.__FUNCTION__$315	00000013 __FUNCTION__$315
00000000 l     F .text.op_f32_CopySign_ss	00000072 op_f32_CopySign_ss
00000000 l    d  .text.op_f32_CopySign_sr	00000000 .text.op_f32_CopySign_sr
00000000 l     O .rodata.__FUNCTION__$314	00000013 __FUNCTION__$314
00000000 l     F .text.op_f32_CopySign_sr	00000064 op_f32_CopySign_sr
00000000 l    d  .text.op_f32_CopySign_rs	00000000 .text.op_f32_CopySign_rs
00000000 l     O .rodata.__FUNCTION__$313	00000013 __FUNCTION__$313
00000000 l     F .text.op_f32_CopySign_rs	0000005e op_f32_CopySign_rs
00000000 l    d  .text.op_f32_Sqrt_s	00000000 .text.op_f32_Sqrt_s
00000000 l     O .rodata.__FUNCTION__$298	0000000e __FUNCTION__$298
00000000 l     F .text.op_f32_Sqrt_s	0000004c op_f32_Sqrt_s
00000000 l    d  .text.op_f32_Sqrt_r	00000000 .text.op_f32_Sqrt_r
00000000 l     O .rodata.__FUNCTION__$297	0000000e __FUNCTION__$297
00000000 l     F .text.op_f32_Sqrt_r	00000036 op_f32_Sqrt_r
00000000 l    d  .text.op_f32_Nearest_s	00000000 .text.op_f32_Nearest_s
00000000 l     O .rodata.__FUNCTION__$296	00000011 __FUNCTION__$296
00000000 l     F .text.op_f32_Nearest_s	0000004c op_f32_Nearest_s
00000000 l    d  .text.op_f32_Nearest_r	00000000 .text.op_f32_Nearest_r
00000000 l     O .rodata.__FUNCTION__$295	00000011 __FUNCTION__$295
00000000 l     F .text.op_f32_Nearest_r	00000036 op_f32_Nearest_r
00000000 l    d  .text.op_f32_Trunc_s	00000000 .text.op_f32_Trunc_s
00000000 l     O .rodata.__FUNCTION__$294	0000000f __FUNCTION__$294
00000000 l     F .text.op_f32_Trunc_s	0000004c op_f32_Trunc_s
00000000 l    d  .text.op_f32_Trunc_r	00000000 .text.op_f32_Trunc_r
00000000 l     O .rodata.__FUNCTION__$293	0000000f __FUNCTION__$293
00000000 l     F .text.op_f32_Trunc_r	00000036 op_f32_Trunc_r
00000000 l    d  .text.op_f32_Floor_s	00000000 .text.op_f32_Floor_s
00000000 l     O .rodata.__FUNCTION__$292	0000000f __FUNCTION__$292
00000000 l     F .text.op_f32_Floor_s	0000004c op_f32_Floor_s
00000000 l    d  .text.op_f32_Floor_r	00000000 .text.op_f32_Floor_r
00000000 l     O .rodata.__FUNCTION__$291	0000000f __FUNCTION__$291
00000000 l     F .text.op_f32_Floor_r	00000036 op_f32_Floor_r
00000000 l    d  .text.op_f32_Ceil_s	00000000 .text.op_f32_Ceil_s
00000000 l     O .rodata.__FUNCTION__$290	0000000e __FUNCTION__$290
00000000 l     F .text.op_f32_Ceil_s	0000004c op_f32_Ceil_s
00000000 l    d  .text.op_f32_Ceil_r	00000000 .text.op_f32_Ceil_r
00000000 l     O .rodata.__FUNCTION__$289	0000000e __FUNCTION__$289
00000000 l     F .text.op_f32_Ceil_r	00000036 op_f32_Ceil_r
00000000 l    d  .text.op_u64_Popcnt_s	00000000 .text.op_u64_Popcnt_s
00000000 l     O .rodata.__FUNCTION__$244	00000010 __FUNCTION__$244
00000000 l     F .text.op_u64_Popcnt_s	0000004e op_u64_Popcnt_s
00000000 l    d  .text.op_u64_Popcnt_r	00000000 .text.op_u64_Popcnt_r
00000000 l     O .rodata.__FUNCTION__$243	00000010 __FUNCTION__$243
00000000 l     F .text.op_u64_Popcnt_r	00000030 op_u64_Popcnt_r
00000000 l    d  .text.op_u64_Ctz_s	00000000 .text.op_u64_Ctz_s
00000000 l     O .rodata.__FUNCTION__$242	0000000d __FUNCTION__$242
00000000 l     F .text.op_u64_Ctz_s	00000059 op_u64_Ctz_s
00000000 l    d  .text.op_u64_Ctz_r	00000000 .text.op_u64_Ctz_r
00000000 l     O .rodata.__FUNCTION__$241	0000000d __FUNCTION__$241
00000000 l     F .text.op_u64_Ctz_r	00000039 op_u64_Ctz_r
00000000 l    d  .text.op_u64_Clz_s	00000000 .text.op_u64_Clz_s
00000000 l     O .rodata.__FUNCTION__$240	0000000d __FUNCTION__$240
00000000 l     F .text.op_u64_Clz_s	00000059 op_u64_Clz_s
00000000 l    d  .text.op_u64_Clz_r	00000000 .text.op_u64_Clz_r
00000000 l     O .rodata.__FUNCTION__$239	0000000d __FUNCTION__$239
00000000 l     F .text.op_u64_Clz_r	0000004d op_u64_Clz_r
00000000 l    d  .text.op_u32_Popcnt_s	00000000 .text.op_u32_Popcnt_s
00000000 l     O .rodata.__FUNCTION__$198	00000010 __FUNCTION__$198
00000000 l     F .text.op_u32_Popcnt_s	0000004a op_u32_Popcnt_s
00000000 l    d  .text.op_u32_Popcnt_r	00000000 .text.op_u32_Popcnt_r
00000000 l     O .rodata.__FUNCTION__$197	00000010 __FUNCTION__$197
00000000 l     F .text.op_u32_Popcnt_r	0000002e op_u32_Popcnt_r
00000000 l    d  .text.op_u32_Ctz_s	00000000 .text.op_u32_Ctz_s
00000000 l     O .rodata.__FUNCTION__$196	0000000d __FUNCTION__$196
00000000 l     F .text.op_u32_Ctz_s	00000057 op_u32_Ctz_s
00000000 l    d  .text.op_u32_Ctz_r	00000000 .text.op_u32_Ctz_r
00000000 l     O .rodata.__FUNCTION__$195	0000000d __FUNCTION__$195
00000000 l     F .text.op_u32_Ctz_r	00000050 op_u32_Ctz_r
00000000 l    d  .text.op_u32_Clz_s	00000000 .text.op_u32_Clz_s
00000000 l     O .rodata.__FUNCTION__$194	0000000d __FUNCTION__$194
00000000 l     F .text.op_u32_Clz_s	0000004b op_u32_Clz_s
00000000 l    d  .text.op_u32_Clz_r	00000000 .text.op_u32_Clz_r
00000000 l     O .rodata.__FUNCTION__$193	0000000d __FUNCTION__$193
00000000 l     F .text.op_u32_Clz_r	00000044 op_u32_Clz_r
00000000 l    d  .text.op_MemGrow	00000000 .text.op_MemGrow
00000000 l     O .rodata.__FUNCTION__$98	0000000b __FUNCTION__$98
00000000 l     F .text.op_MemGrow	00000041 op_MemGrow
00000000 l    d  .rodata.ReadBlockType.str1.4	00000000 .rodata.ReadBlockType.str1.4
00000000 l    d  .text.ReadBlockType	00000000 .text.ReadBlockType
00000000 l     O .rodata.c_waTypes	00000018 c_waTypes
00000000 l     F .text.ReadBlockType	000000a5 ReadBlockType
00000000 l    d  .text.op_f64_Min_ss	00000000 .text.op_f64_Min_ss
00000000 l     O .rodata.__FUNCTION__$341	0000000e __FUNCTION__$341
00000000 l     F .text.op_f64_Min_ss	000000cc op_f64_Min_ss
00000000 l    d  .text.op_f32_Max_ss	00000000 .text.op_f32_Max_ss
00000000 l     O .rodata.__FUNCTION__$312	0000000e __FUNCTION__$312
00000000 l     F .text.op_f32_Max_ss	000000b9 op_f32_Max_ss
00000000 l    d  .text.op_f32_Min_ss	00000000 .text.op_f32_Min_ss
00000000 l     O .rodata.__FUNCTION__$310	0000000e __FUNCTION__$310
00000000 l     F .text.op_f32_Min_ss	000000b9 op_f32_Min_ss
00000000 l    d  .text.Call$constprop$0	00000000 .text.Call$constprop$0
00000000 l     O .rodata.__FUNCTION__$38	00000005 __FUNCTION__$38
00000000 l     F .text.Call$constprop$0	0000003c Call$constprop$0
00000000 l    d  .text.op_Call	00000000 .text.op_Call
00000000 l     O .rodata.__FUNCTION__$37	00000008 __FUNCTION__$37
00000000 l     F .text.op_Call	0000005e op_Call
00000000 l    d  .text.EmitSlotOffset$isra$0	00000000 .text.EmitSlotOffset$isra$0
00000000 l     F .text.EmitSlotOffset$isra$0	00000012 EmitSlotOffset$isra$0
00000000 l    d  .text.EmitConstant32$isra$0	00000000 .text.EmitConstant32$isra$0
00000000 l     F .text.EmitConstant32$isra$0	00000012 EmitConstant32$isra$0
00000000 l    d  .text.op_f64_Min_rs	00000000 .text.op_f64_Min_rs
00000000 l     O .rodata.__FUNCTION__$340	0000000e __FUNCTION__$340
00000000 l     F .text.op_f64_Min_rs	000000ad op_f64_Min_rs
00000000 l    d  .text.op_f64_Max_rs	00000000 .text.op_f64_Max_rs
00000000 l     O .rodata.__FUNCTION__$342	0000000e __FUNCTION__$342
00000000 l     F .text.op_f64_Max_rs	000000ad op_f64_Max_rs
00000000 l    d  .text.op_f32_Min_rs	00000000 .text.op_f32_Min_rs
00000000 l     O .rodata.__FUNCTION__$309	0000000e __FUNCTION__$309
00000000 l     F .text.op_f32_Min_rs	000000a5 op_f32_Min_rs
00000000 l    d  .text.op_f32_Max_rs	00000000 .text.op_f32_Max_rs
00000000 l     O .rodata.__FUNCTION__$311	0000000e __FUNCTION__$311
00000000 l     F .text.op_f32_Max_rs	000000a5 op_f32_Max_rs
00000000 l    d  .rodata.AllocateSlotsWithinRange.str1.4	00000000 .rodata.AllocateSlotsWithinRange.str1.4
00000000 l    d  .text.AllocateSlotsWithinRange	00000000 .text.AllocateSlotsWithinRange
00000000 l     F .text.AllocateSlotsWithinRange	000000c1 AllocateSlotsWithinRange
00000000 l    d  .text.PreserveRegisterIfOccupied	00000000 .text.PreserveRegisterIfOccupied
00000000 l     O .rodata.c_setSetOps	00000014 c_setSetOps
00000000 l     F .text.PreserveRegisterIfOccupied	00000081 PreserveRegisterIfOccupied
00000000 l    d  .rodata.FindReferencedLocalWithinCurrentBlock.str1.4	00000000 .rodata.FindReferencedLocalWithinCurrentBlock.str1.4
00000000 l    d  .text.FindReferencedLocalWithinCurrentBlock	00000000 .text.FindReferencedLocalWithinCurrentBlock
00000000 l     F .text.FindReferencedLocalWithinCurrentBlock	000000fd FindReferencedLocalWithinCurrentBlock
00000000 l    d  .rodata.PreserveArgsAndLocals.str1.4	00000000 .rodata.PreserveArgsAndLocals.str1.4
00000000 l    d  .text.PreserveArgsAndLocals	00000000 .text.PreserveArgsAndLocals
00000000 l     F .text.PreserveArgsAndLocals	000000f8 PreserveArgsAndLocals
00000000 l    d  .text.CopyStackIndexToSlot	00000000 .text.CopyStackIndexToSlot
00000000 l     F .text.CopyStackIndexToSlot	000000d6 CopyStackIndexToSlot
00000000 l    d  .rodata.CopyStackSlotsR.str1.4	00000000 .rodata.CopyStackSlotsR.str1.4
00000000 l    d  .text.CopyStackSlotsR	00000000 .text.CopyStackSlotsR
00000000 l     F .text.CopyStackSlotsR	00000258 CopyStackSlotsR
00000000 l    d  .rodata.ReturnValues.str1.4	00000000 .rodata.ReturnValues.str1.4
00000000 l    d  .text.ReturnValues	00000000 .text.ReturnValues
00000000 l     F .text.ReturnValues	0000012b ReturnValues
00000000 l    d  .text.Compile_End	00000000 .text.Compile_End
00000000 l     F .text.Compile_End	00000030 Compile_End
00000000 l    d  .rodata.Compile_Memory_Size.str1.4	00000000 .rodata.Compile_Memory_Size.str1.4
00000000 l    d  .text.Compile_Memory_Size	00000000 .text.Compile_Memory_Size
00000000 l     F .text.Compile_Memory_Size	000000a0 Compile_Memory_Size
00000000 l    d  .rodata.Compile_GetLocal.str1.4	00000000 .rodata.Compile_GetLocal.str1.4
00000000 l    d  .text.Compile_GetLocal	00000000 .text.Compile_GetLocal
00000000 l     F .text.Compile_GetLocal	000000d9 Compile_GetLocal
00000000 l    d  .rodata.PushBlockResults.str1.4	00000000 .rodata.PushBlockResults.str1.4
00000000 l    d  .text.PushBlockResults	00000000 .text.PushBlockResults
00000000 l     F .text.PushBlockResults	0000013b PushBlockResults
00000000 l    d  .rodata.CompileCallArgsAndReturn.str1.4	00000000 .rodata.CompileCallArgsAndReturn.str1.4
00000000 l    d  .text.CompileCallArgsAndReturn	00000000 .text.CompileCallArgsAndReturn
00000000 l     F .text.CompileCallArgsAndReturn	00000265 CompileCallArgsAndReturn
00000000 l    d  .rodata.Compile_CallIndirect.str1.4	00000000 .rodata.Compile_CallIndirect.str1.4
00000000 l    d  .text.Compile_CallIndirect	00000000 .text.Compile_CallIndirect
00000000 l     F .text.op_CallIndirect	000000de op_CallIndirect
00000000 l     F .text.Compile_CallIndirect	0000018f Compile_CallIndirect
00000000 l    d  .rodata.Compile_Call.str1.4	00000000 .rodata.Compile_Call.str1.4
00000000 l    d  .text.Compile_Call	00000000 .text.Compile_Call
00000000 l     F .text.op_Compile	0000007b op_Compile
00000000 l     F .text.Compile_Call	000000a4 Compile_Call
00000000 l    d  .rodata.Compile_Unreachable.str1.4	00000000 .rodata.Compile_Unreachable.str1.4
00000000 l    d  .text.Compile_Unreachable	00000000 .text.Compile_Unreachable
00000000 l     F .text.Compile_Unreachable	00000176 Compile_Unreachable
00000000 l    d  .text.CopyStackTopToRegister$constprop$0	00000000 .text.CopyStackTopToRegister$constprop$0
00000000 l     O .rodata.c_setRegisterOps	00000014 c_setRegisterOps
00000000 l     F .text.CopyStackTopToRegister$constprop$0	00000136 CopyStackTopToRegister$constprop$0
00000000 l    d  .text.ResolveBlockResults	00000000 .text.ResolveBlockResults
00000000 l     F .text.ResolveBlockResults	00000118 ResolveBlockResults
00000000 l    d  .rodata.Compile_BranchTable.str1.4	00000000 .rodata.Compile_BranchTable.str1.4
00000000 l    d  .text.Compile_BranchTable	00000000 .text.Compile_BranchTable
00000000 l     F .text.Compile_BranchTable	0000035a Compile_BranchTable
00000000 l    d  .text.Compile_Memory_CopyFill	00000000 .text.Compile_Memory_CopyFill
00000000 l     F .text.Compile_Memory_CopyFill	00000270 Compile_Memory_CopyFill
00000000 l    d  .text.Compile_Memory_Grow	00000000 .text.Compile_Memory_Grow
00000000 l     F .text.Compile_Memory_Grow	000000d4 Compile_Memory_Grow
00000000 l    d  .text.Compile_Return	00000000 .text.Compile_Return
00000000 l     F .text.Compile_Return	0000019e Compile_Return
00000000 l    d  .text.Compile_Convert	00000000 .text.Compile_Convert
00000000 l     F .text.Compile_Convert	0000030a Compile_Convert
00000000 l    d  .text.Compile_SetLocal	00000000 .text.Compile_SetLocal
00000000 l     O .rodata.c_preserveSetSlot	00000014 c_preserveSetSlot
00000000 l     F .text.Compile_SetLocal	00000292 Compile_SetLocal
00000000 l    d  .text.Compile_GetSetGlobal	00000000 .text.Compile_GetSetGlobal
00000000 l     O .rodata.c_setGlobalOps	00000014 c_setGlobalOps
00000000 l     F .text.Compile_GetSetGlobal	000002c1 Compile_GetSetGlobal
00000000 l    d  .rodata.Compile_Operator.str1.4	00000000 .rodata.Compile_Operator.str1.4
00000000 l    d  .text.Compile_Operator	00000000 .text.Compile_Operator
00000000 l     F .text.Compile_Operator	00000502 Compile_Operator
00000000 l    d  .rodata.Compile_Load_Store.str1.4	00000000 .rodata.Compile_Load_Store.str1.4
00000000 l    d  .text.Compile_Load_Store	00000000 .text.Compile_Load_Store
00000000 l     F .text.Compile_Load_Store	000000b6 Compile_Load_Store
00000000 l    d  .text.Compile_Drop	00000000 .text.Compile_Drop
00000000 l     F .text.Compile_Drop	0000012d Compile_Drop
00000000 l    d  .text.Compile_Select	00000000 .text.Compile_Select
00000000 l     O .rodata.c_fpSelectOps	00000030 c_fpSelectOps
00000000 l     O .rodata.c_intSelectOps	00000020 c_intSelectOps
00000000 l     F .text.Compile_Select	000006b6 Compile_Select
00000000 l    d  .rodata.PushConst.str1.4	00000000 .rodata.PushConst.str1.4
00000000 l    d  .text.PushConst	00000000 .text.PushConst
00000000 l     F .text.PushConst	00000401 PushConst
00000000 l    d  .rodata.Compile_Const_f64.str1.4	00000000 .rodata.Compile_Const_f64.str1.4
00000000 l    d  .text.Compile_Const_f64	00000000 .text.Compile_Const_f64
00000000 l     F .text.Compile_Const_f64	0000004e Compile_Const_f64
00000000 l    d  .rodata.Compile_Const_f32.str1.4	00000000 .rodata.Compile_Const_f32.str1.4
00000000 l    d  .text.Compile_Const_f32	00000000 .text.Compile_Const_f32
00000000 l     F .text.Compile_Const_f32	00000056 Compile_Const_f32
00000000 l    d  .rodata.Compile_Const_i64.str1.4	00000000 .rodata.Compile_Const_i64.str1.4
00000000 l    d  .text.Compile_Const_i64	00000000 .text.Compile_Const_i64
00000000 l     F .text.Compile_Const_i64	0000004a Compile_Const_i64
00000000 l    d  .rodata.Compile_Const_i32.str1.4	00000000 .rodata.Compile_Const_i32.str1.4
00000000 l    d  .text.Compile_Const_i32	00000000 .text.Compile_Const_i32
00000000 l     F .text.Compile_Const_i32	0000004b Compile_Const_i32
00000000 l    d  .text.Compile_Branch	00000000 .text.Compile_Branch
00000000 l     F .text.Compile_Branch	000009d6 Compile_Branch
00000000 l    d  .text.GetMaxUsedSlotPlusOne	00000000 .text.GetMaxUsedSlotPlusOne
00000000 l    d  .text.AddTrapRecord	00000000 .text.AddTrapRecord
00000000 l    d  .rodata.CompileRawFunction.str1.4	00000000 .rodata.CompileRawFunction.str1.4
00000000 l    d  .text.CompileRawFunction	00000000 .text.CompileRawFunction
00000000 l    d  .text.GetOpInfo	00000000 .text.GetOpInfo
00000000 l    d  .text.CompileBlockStatements	00000000 .text.CompileBlockStatements
00000000 l    d  .rodata.CompileFunction$part$0.str1.4	00000000 .rodata.CompileFunction$part$0.str1.4
00000000 l    d  .text.CompileFunction$part$0	00000000 .text.CompileFunction$part$0
00000000 l     F .text.CompileFunction$part$0	0000051f CompileFunction$part$0
00000000 l    d  .rodata.op_Compile.str1.4	00000000 .rodata.op_Compile.str1.4
00000000 l    d  .text.op_Compile	00000000 .text.op_Compile
00000000 l     O .rodata.__FUNCTION__$447	0000000b __FUNCTION__$447
00000000 l    d  .text.op_CallIndirect	00000000 .text.op_CallIndirect
00000000 l     O .rodata.__FUNCTION__$39	00000010 __FUNCTION__$39
00000000 l    d  .rodata.CompileBlock.str1.4	00000000 .rodata.CompileBlock.str1.4
00000000 l    d  .text.CompileBlock	00000000 .text.CompileBlock
00000000 l    d  .rodata.Compile_LoopOrBlock.str1.4	00000000 .rodata.Compile_LoopOrBlock.str1.4
00000000 l    d  .text.Compile_LoopOrBlock	00000000 .text.Compile_LoopOrBlock
00000000 l     F .text.Compile_LoopOrBlock	0000017a Compile_LoopOrBlock
00000000 l    d  .text.Compile_If	00000000 .text.Compile_If
00000000 l     F .text.Compile_If	000002de Compile_If
00000000 l    d  .text.CompileFunction	00000000 .text.CompileFunction
00000000 l    d  .rodata.__FUNCTION__$0	00000000 .rodata.__FUNCTION__$0
00000000 l    d  .rodata.__FUNCTION__$1	00000000 .rodata.__FUNCTION__$1
00000000 l    d  .rodata.__FUNCTION__$2	00000000 .rodata.__FUNCTION__$2
00000000 l    d  .rodata.__FUNCTION__$3	00000000 .rodata.__FUNCTION__$3
00000000 l    d  .rodata.__FUNCTION__$4	00000000 .rodata.__FUNCTION__$4
00000000 l    d  .rodata.__FUNCTION__$5	00000000 .rodata.__FUNCTION__$5
00000000 l    d  .rodata.__FUNCTION__$6	00000000 .rodata.__FUNCTION__$6
00000000 l    d  .rodata.__FUNCTION__$7	00000000 .rodata.__FUNCTION__$7
00000000 l    d  .rodata.__FUNCTION__$8	00000000 .rodata.__FUNCTION__$8
00000000 l    d  .rodata.__FUNCTION__$9	00000000 .rodata.__FUNCTION__$9
00000000 l    d  .rodata.__FUNCTION__$10	00000000 .rodata.__FUNCTION__$10
00000000 l    d  .rodata.__FUNCTION__$11	00000000 .rodata.__FUNCTION__$11
00000000 l    d  .rodata.__FUNCTION__$12	00000000 .rodata.__FUNCTION__$12
00000000 l    d  .rodata.__FUNCTION__$13	00000000 .rodata.__FUNCTION__$13
00000000 l    d  .rodata.__FUNCTION__$14	00000000 .rodata.__FUNCTION__$14
00000000 l    d  .rodata.__FUNCTION__$15	00000000 .rodata.__FUNCTION__$15
00000000 l    d  .rodata.__FUNCTION__$16	00000000 .rodata.__FUNCTION__$16
00000000 l    d  .rodata.__FUNCTION__$17	00000000 .rodata.__FUNCTION__$17
00000000 l    d  .rodata.__FUNCTION__$18	00000000 .rodata.__FUNCTION__$18
00000000 l    d  .rodata.__FUNCTION__$19	00000000 .rodata.__FUNCTION__$19
00000000 l    d  .rodata.__FUNCTION__$20	00000000 .rodata.__FUNCTION__$20
00000000 l    d  .rodata.__FUNCTION__$21	00000000 .rodata.__FUNCTION__$21
00000000 l    d  .rodata.__FUNCTION__$22	00000000 .rodata.__FUNCTION__$22
00000000 l    d  .rodata.__FUNCTION__$23	00000000 .rodata.__FUNCTION__$23
00000000 l    d  .rodata.__FUNCTION__$24	00000000 .rodata.__FUNCTION__$24
00000000 l    d  .rodata.__FUNCTION__$25	00000000 .rodata.__FUNCTION__$25
00000000 l    d  .rodata.__FUNCTION__$26	00000000 .rodata.__FUNCTION__$26
00000000 l    d  .rodata.__FUNCTION__$27	00000000 .rodata.__FUNCTION__$27
00000000 l    d  .rodata.__FUNCTION__$28	00000000 .rodata.__FUNCTION__$28
00000000 l    d  .rodata.__FUNCTION__$29	00000000 .rodata.__FUNCTION__$29
00000000 l    d  .rodata.__FUNCTION__$30	00000000 .rodata.__FUNCTION__$30
00000000 l    d  .rodata.__FUNCTION__$31	00000000 .rodata.__FUNCTION__$31
00000000 l    d  .rodata.__FUNCTION__$32	00000000 .rodata.__FUNCTION__$32
00000000 l    d  .rodata.__FUNCTION__$33	00000000 .rodata.__FUNCTION__$33
00000000 l    d  .rodata.__FUNCTION__$34	00000000 .rodata.__FUNCTION__$34
00000000 l    d  .rodata.__FUNCTION__$35	00000000 .rodata.__FUNCTION__$35
00000000 l    d  .rodata.__FUNCTION__$36	00000000 .rodata.__FUNCTION__$36
00000000 l    d  .rodata.__FUNCTION__$37	00000000 .rodata.__FUNCTION__$37
00000000 l    d  .rodata.__FUNCTION__$38	00000000 .rodata.__FUNCTION__$38
00000000 l    d  .rodata.__FUNCTION__$39	00000000 .rodata.__FUNCTION__$39
00000000 l    d  .rodata.__FUNCTION__$40	00000000 .rodata.__FUNCTION__$40
00000000 l    d  .rodata.__FUNCTION__$41	00000000 .rodata.__FUNCTION__$41
00000000 l    d  .rodata.__FUNCTION__$42	00000000 .rodata.__FUNCTION__$42
00000000 l    d  .rodata.__FUNCTION__$43	00000000 .rodata.__FUNCTION__$43
00000000 l    d  .rodata.__FUNCTION__$44	00000000 .rodata.__FUNCTION__$44
00000000 l    d  .rodata.__FUNCTION__$45	00000000 .rodata.__FUNCTION__$45
00000000 l    d  .rodata.__FUNCTION__$46	00000000 .rodata.__FUNCTION__$46
00000000 l    d  .rodata.__FUNCTION__$47	00000000 .rodata.__FUNCTION__$47
00000000 l    d  .rodata.__FUNCTION__$48	00000000 .rodata.__FUNCTION__$48
00000000 l    d  .rodata.__FUNCTION__$49	00000000 .rodata.__FUNCTION__$49
00000000 l    d  .rodata.__FUNCTION__$50	00000000 .rodata.__FUNCTION__$50
00000000 l    d  .rodata.__FUNCTION__$51	00000000 .rodata.__FUNCTION__$51
00000000 l    d  .rodata.__FUNCTION__$52	00000000 .rodata.__FUNCTION__$52
00000000 l    d  .rodata.__FUNCTION__$53	00000000 .rodata.__FUNCTION__$53
00000000 l    d  .rodata.__FUNCTION__$54	00000000 .rodata.__FUNCTION__$54
00000000 l    d  .rodata.__FUNCTION__$55	00000000 .rodata.__FUNCTION__$55
00000000 l    d  .rodata.__FUNCTION__$56	00000000 .rodata.__FUNCTION__$56
00000000 l    d  .rodata.__FUNCTION__$57	00000000 .rodata.__FUNCTION__$57
00000000 l    d  .rodata.__FUNCTION__$58	00000000 .rodata.__FUNCTION__$58
00000000 l    d  .rodata.__FUNCTION__$59	00000000 .rodata.__FUNCTION__$59
00000000 l    d  .rodata.__FUNCTION__$60	00000000 .rodata.__FUNCTION__$60
00000000 l    d  .rodata.__FUNCTION__$61	00000000 .rodata.__FUNCTION__$61
00000000 l    d  .rodata.__FUNCTION__$62	00000000 .rodata.__FUNCTION__$62
00000000 l    d  .rodata.__FUNCTION__$63	00000000 .rodata.__FUNCTION__$63
00000000 l    d  .rodata.__FUNCTION__$64	00000000 .rodata.__FUNCTION__$64
00000000 l    d  .rodata.__FUNCTION__$65	00000000 .rodata.__FUNCTION__$65
00000000 l    d  .rodata.__FUNCTION__$66	00000000 .rodata.__FUNCTION__$66
00000000 l    d  .rodata.__FUNCTION__$67	00000000 .rodata.__FUNCTION__$67
00000000 l    d  .rodata.__FUNCTION__$68	00000000 .rodata.__FUNCTION__$68
00000000 l    d  .rodata.__FUNCTION__$69	00000000 .rodata.__FUNCTION__$69
00000000 l    d  .rodata.__FUNCTION__$70	00000000 .rodata.__FUNCTION__$70
00000000 l    d  .rodata.__FUNCTION__$71	00000000 .rodata.__FUNCTION__$71
00000000 l    d  .rodata.__FUNCTION__$72	00000000 .rodata.__FUNCTION__$72
00000000 l    d  .rodata.__FUNCTION__$73	00000000 .rodata.__FUNCTION__$73
00000000 l    d  .rodata.__FUNCTION__$74	00000000 .rodata.__FUNCTION__$74
00000000 l    d  .rodata.__FUNCTION__$75	00000000 .rodata.__FUNCTION__$75
00000000 l    d  .rodata.__FUNCTION__$76	00000000 .rodata.__FUNCTION__$76
00000000 l    d  .rodata.__FUNCTION__$77	00000000 .rodata.__FUNCTION__$77
00000000 l    d  .rodata.__FUNCTION__$78	00000000 .rodata.__FUNCTION__$78
00000000 l    d  .rodata.__FUNCTION__$79	00000000 .rodata.__FUNCTION__$79
00000000 l    d  .rodata.__FUNCTION__$80	00000000 .rodata.__FUNCTION__$80
00000000 l    d  .rodata.__FUNCTION__$81	00000000 .rodata.__FUNCTION__$81
00000000 l    d  .rodata.__FUNCTION__$82	00000000 .rodata.__FUNCTION__$82
00000000 l    d  .rodata.__FUNCTION__$83	00000000 .rodata.__FUNCTION__$83
00000000 l    d  .rodata.__FUNCTION__$84	00000000 .rodata.__FUNCTION__$84
00000000 l    d  .rodata.__FUNCTION__$85	00000000 .rodata.__FUNCTION__$85
00000000 l    d  .rodata.__FUNCTION__$86	00000000 .rodata.__FUNCTION__$86
00000000 l    d  .rodata.__FUNCTION__$87	00000000 .rodata.__FUNCTION__$87
00000000 l    d  .rodata.__FUNCTION__$88	00000000 .rodata.__FUNCTION__$88
00000000 l    d  .rodata.__FUNCTION__$89	00000000 .rodata.__FUNCTION__$89
00000000 l    d  .rodata.__FUNCTION__$90	00000000 .rodata.__FUNCTION__$90
00000000 l    d  .rodata.__FUNCTION__$91	00000000 .rodata.__FUNCTION__$91
00000000 l    d  .rodata.__FUNCTION__$92	00000000 .rodata.__FUNCTION__$92
00000000 l    d  .rodata.__FUNCTION__$93	00000000 .rodata.__FUNCTION__$93
00000000 l    d  .rodata.__FUNCTION__$94	00000000 .rodata.__FUNCTION__$94
00000000 l    d  .rodata.__FUNCTION__$95	00000000 .rodata.__FUNCTION__$95
00000000 l    d  .rodata.__FUNCTION__$96	00000000 .rodata.__FUNCTION__$96
00000000 l    d  .rodata.__FUNCTION__$97	00000000 .rodata.__FUNCTION__$97
00000000 l    d  .rodata.__FUNCTION__$98	00000000 .rodata.__FUNCTION__$98
00000000 l    d  .rodata.__FUNCTION__$99	00000000 .rodata.__FUNCTION__$99
00000000 l    d  .rodata.__FUNCTION__$100	00000000 .rodata.__FUNCTION__$100
00000000 l    d  .rodata.__FUNCTION__$101	00000000 .rodata.__FUNCTION__$101
00000000 l    d  .rodata.__FUNCTION__$102	00000000 .rodata.__FUNCTION__$102
00000000 l    d  .rodata.__FUNCTION__$103	00000000 .rodata.__FUNCTION__$103
00000000 l    d  .rodata.__FUNCTION__$104	00000000 .rodata.__FUNCTION__$104
00000000 l    d  .rodata.__FUNCTION__$105	00000000 .rodata.__FUNCTION__$105
00000000 l    d  .rodata.__FUNCTION__$106	00000000 .rodata.__FUNCTION__$106
00000000 l    d  .rodata.__FUNCTION__$107	00000000 .rodata.__FUNCTION__$107
00000000 l    d  .rodata.__FUNCTION__$108	00000000 .rodata.__FUNCTION__$108
00000000 l    d  .rodata.__FUNCTION__$109	00000000 .rodata.__FUNCTION__$109
00000000 l    d  .rodata.__FUNCTION__$110	00000000 .rodata.__FUNCTION__$110
00000000 l    d  .rodata.__FUNCTION__$111	00000000 .rodata.__FUNCTION__$111
00000000 l    d  .rodata.__FUNCTION__$112	00000000 .rodata.__FUNCTION__$112
00000000 l    d  .rodata.__FUNCTION__$113	00000000 .rodata.__FUNCTION__$113
00000000 l    d  .rodata.__FUNCTION__$114	00000000 .rodata.__FUNCTION__$114
00000000 l    d  .rodata.__FUNCTION__$115	00000000 .rodata.__FUNCTION__$115
00000000 l    d  .rodata.__FUNCTION__$116	00000000 .rodata.__FUNCTION__$116
00000000 l    d  .rodata.__FUNCTION__$117	00000000 .rodata.__FUNCTION__$117
00000000 l    d  .rodata.__FUNCTION__$118	00000000 .rodata.__FUNCTION__$118
00000000 l    d  .rodata.__FUNCTION__$119	00000000 .rodata.__FUNCTION__$119
00000000 l    d  .rodata.__FUNCTION__$120	00000000 .rodata.__FUNCTION__$120
00000000 l    d  .rodata.__FUNCTION__$121	00000000 .rodata.__FUNCTION__$121
00000000 l    d  .rodata.__FUNCTION__$122	00000000 .rodata.__FUNCTION__$122
00000000 l    d  .rodata.__FUNCTION__$123	00000000 .rodata.__FUNCTION__$123
00000000 l    d  .rodata.__FUNCTION__$124	00000000 .rodata.__FUNCTION__$124
00000000 l    d  .rodata.__FUNCTION__$125	00000000 .rodata.__FUNCTION__$125
00000000 l    d  .rodata.__FUNCTION__$126	00000000 .rodata.__FUNCTION__$126
00000000 l    d  .rodata.__FUNCTION__$127	00000000 .rodata.__FUNCTION__$127
00000000 l    d  .rodata.__FUNCTION__$128	00000000 .rodata.__FUNCTION__$128
00000000 l    d  .rodata.__FUNCTION__$129	00000000 .rodata.__FUNCTION__$129
00000000 l    d  .rodata.__FUNCTION__$130	00000000 .rodata.__FUNCTION__$130
00000000 l    d  .rodata.__FUNCTION__$131	00000000 .rodata.__FUNCTION__$131
00000000 l    d  .rodata.__FUNCTION__$132	00000000 .rodata.__FUNCTION__$132
00000000 l    d  .rodata.__FUNCTION__$133	00000000 .rodata.__FUNCTION__$133
00000000 l    d  .rodata.__FUNCTION__$134	00000000 .rodata.__FUNCTION__$134
00000000 l    d  .rodata.__FUNCTION__$135	00000000 .rodata.__FUNCTION__$135
00000000 l    d  .rodata.__FUNCTION__$136	00000000 .rodata.__FUNCTION__$136
00000000 l    d  .rodata.__FUNCTION__$137	00000000 .rodata.__FUNCTION__$137
00000000 l    d  .rodata.__FUNCTION__$138	00000000 .rodata.__FUNCTION__$138
00000000 l    d  .rodata.__FUNCTION__$139	00000000 .rodata.__FUNCTION__$139
00000000 l    d  .rodata.__FUNCTION__$140	00000000 .rodata.__FUNCTION__$140
00000000 l    d  .rodata.__FUNCTION__$141	00000000 .rodata.__FUNCTION__$141
00000000 l    d  .rodata.__FUNCTION__$142	00000000 .rodata.__FUNCTION__$142
00000000 l    d  .rodata.__FUNCTION__$143	00000000 .rodata.__FUNCTION__$143
00000000 l    d  .rodata.__FUNCTION__$144	00000000 .rodata.__FUNCTION__$144
00000000 l    d  .rodata.__FUNCTION__$145	00000000 .rodata.__FUNCTION__$145
00000000 l    d  .rodata.__FUNCTION__$146	00000000 .rodata.__FUNCTION__$146
00000000 l    d  .rodata.__FUNCTION__$147	00000000 .rodata.__FUNCTION__$147
00000000 l    d  .rodata.__FUNCTION__$148	00000000 .rodata.__FUNCTION__$148
00000000 l    d  .rodata.__FUNCTION__$149	00000000 .rodata.__FUNCTION__$149
00000000 l    d  .rodata.__FUNCTION__$150	00000000 .rodata.__FUNCTION__$150
00000000 l    d  .rodata.__FUNCTION__$151	00000000 .rodata.__FUNCTION__$151
00000000 l    d  .rodata.__FUNCTION__$152	00000000 .rodata.__FUNCTION__$152
00000000 l    d  .rodata.__FUNCTION__$153	00000000 .rodata.__FUNCTION__$153
00000000 l    d  .rodata.__FUNCTION__$154	00000000 .rodata.__FUNCTION__$154
00000000 l    d  .rodata.__FUNCTION__$155	00000000 .rodata.__FUNCTION__$155
00000000 l    d  .rodata.__FUNCTION__$156	00000000 .rodata.__FUNCTION__$156
00000000 l    d  .rodata.__FUNCTION__$157	00000000 .rodata.__FUNCTION__$157
00000000 l    d  .rodata.__FUNCTION__$158	00000000 .rodata.__FUNCTION__$158
00000000 l    d  .rodata.__FUNCTION__$159	00000000 .rodata.__FUNCTION__$159
00000000 l    d  .rodata.__FUNCTION__$160	00000000 .rodata.__FUNCTION__$160
00000000 l    d  .rodata.__FUNCTION__$161	00000000 .rodata.__FUNCTION__$161
00000000 l    d  .rodata.__FUNCTION__$162	00000000 .rodata.__FUNCTION__$162
00000000 l    d  .rodata.__FUNCTION__$163	00000000 .rodata.__FUNCTION__$163
00000000 l    d  .rodata.__FUNCTION__$164	00000000 .rodata.__FUNCTION__$164
00000000 l    d  .rodata.__FUNCTION__$165	00000000 .rodata.__FUNCTION__$165
00000000 l    d  .rodata.__FUNCTION__$166	00000000 .rodata.__FUNCTION__$166
00000000 l    d  .rodata.__FUNCTION__$167	00000000 .rodata.__FUNCTION__$167
00000000 l    d  .rodata.__FUNCTION__$168	00000000 .rodata.__FUNCTION__$168
00000000 l    d  .rodata.__FUNCTION__$169	00000000 .rodata.__FUNCTION__$169
00000000 l    d  .rodata.__FUNCTION__$170	00000000 .rodata.__FUNCTION__$170
00000000 l    d  .rodata.__FUNCTION__$171	00000000 .rodata.__FUNCTION__$171
00000000 l    d  .rodata.__FUNCTION__$172	00000000 .rodata.__FUNCTION__$172
00000000 l    d  .rodata.__FUNCTION__$173	00000000 .rodata.__FUNCTION__$173
00000000 l    d  .rodata.__FUNCTION__$174	00000000 .rodata.__FUNCTION__$174
00000000 l    d  .rodata.__FUNCTION__$175	00000000 .rodata.__FUNCTION__$175
00000000 l    d  .rodata.__FUNCTION__$176	00000000 .rodata.__FUNCTION__$176
00000000 l    d  .rodata.__FUNCTION__$177	00000000 .rodata.__FUNCTION__$177
00000000 l    d  .rodata.__FUNCTION__$178	00000000 .rodata.__FUNCTION__$178
00000000 l    d  .rodata.__FUNCTION__$179	00000000 .rodata.__FUNCTION__$179
00000000 l    d  .rodata.__FUNCTION__$180	00000000 .rodata.__FUNCTION__$180
00000000 l    d  .rodata.__FUNCTION__$181	00000000 .rodata.__FUNCTION__$181
00000000 l    d  .rodata.__FUNCTION__$182	00000000 .rodata.__FUNCTION__$182
00000000 l    d  .rodata.__FUNCTION__$183	00000000 .rodata.__FUNCTION__$183
00000000 l    d  .rodata.__FUNCTION__$184	00000000 .rodata.__FUNCTION__$184
00000000 l    d  .rodata.__FUNCTION__$185	00000000 .rodata.__FUNCTION__$185
00000000 l    d  .rodata.__FUNCTION__$186	00000000 .rodata.__FUNCTION__$186
00000000 l    d  .rodata.__FUNCTION__$187	00000000 .rodata.__FUNCTION__$187
00000000 l    d  .rodata.__FUNCTION__$188	00000000 .rodata.__FUNCTION__$188
00000000 l    d  .rodata.__FUNCTION__$189	00000000 .rodata.__FUNCTION__$189
00000000 l    d  .rodata.__FUNCTION__$190	00000000 .rodata.__FUNCTION__$190
00000000 l    d  .rodata.__FUNCTION__$191	00000000 .rodata.__FUNCTION__$191
00000000 l    d  .rodata.__FUNCTION__$192	00000000 .rodata.__FUNCTION__$192
00000000 l    d  .rodata.__FUNCTION__$193	00000000 .rodata.__FUNCTION__$193
00000000 l    d  .rodata.__FUNCTION__$194	00000000 .rodata.__FUNCTION__$194
00000000 l    d  .rodata.__FUNCTION__$195	00000000 .rodata.__FUNCTION__$195
00000000 l    d  .rodata.__FUNCTION__$196	00000000 .rodata.__FUNCTION__$196
00000000 l    d  .rodata.__FUNCTION__$197	00000000 .rodata.__FUNCTION__$197
00000000 l    d  .rodata.__FUNCTION__$198	00000000 .rodata.__FUNCTION__$198
00000000 l    d  .rodata.__FUNCTION__$199	00000000 .rodata.__FUNCTION__$199
00000000 l    d  .rodata.__FUNCTION__$200	00000000 .rodata.__FUNCTION__$200
00000000 l    d  .rodata.__FUNCTION__$201	00000000 .rodata.__FUNCTION__$201
00000000 l    d  .rodata.__FUNCTION__$202	00000000 .rodata.__FUNCTION__$202
00000000 l    d  .rodata.__FUNCTION__$203	00000000 .rodata.__FUNCTION__$203
00000000 l    d  .rodata.__FUNCTION__$204	00000000 .rodata.__FUNCTION__$204
00000000 l    d  .rodata.__FUNCTION__$205	00000000 .rodata.__FUNCTION__$205
00000000 l    d  .rodata.__FUNCTION__$206	00000000 .rodata.__FUNCTION__$206
00000000 l    d  .rodata.__FUNCTION__$207	00000000 .rodata.__FUNCTION__$207
00000000 l    d  .rodata.__FUNCTION__$208	00000000 .rodata.__FUNCTION__$208
00000000 l    d  .rodata.__FUNCTION__$209	00000000 .rodata.__FUNCTION__$209
00000000 l    d  .rodata.__FUNCTION__$210	00000000 .rodata.__FUNCTION__$210
00000000 l    d  .rodata.__FUNCTION__$211	00000000 .rodata.__FUNCTION__$211
00000000 l    d  .rodata.__FUNCTION__$212	00000000 .rodata.__FUNCTION__$212
00000000 l    d  .rodata.__FUNCTION__$213	00000000 .rodata.__FUNCTION__$213
00000000 l    d  .rodata.__FUNCTION__$214	00000000 .rodata.__FUNCTION__$214
00000000 l    d  .rodata.__FUNCTION__$215	00000000 .rodata.__FUNCTION__$215
00000000 l    d  .rodata.__FUNCTION__$216	00000000 .rodata.__FUNCTION__$216
00000000 l    d  .rodata.__FUNCTION__$217	00000000 .rodata.__FUNCTION__$217
00000000 l    d  .rodata.__FUNCTION__$218	00000000 .rodata.__FUNCTION__$218
00000000 l    d  .rodata.__FUNCTION__$219	00000000 .rodata.__FUNCTION__$219
00000000 l    d  .rodata.__FUNCTION__$220	00000000 .rodata.__FUNCTION__$220
00000000 l    d  .rodata.__FUNCTION__$221	00000000 .rodata.__FUNCTION__$221
00000000 l    d  .rodata.__FUNCTION__$222	00000000 .rodata.__FUNCTION__$222
00000000 l    d  .rodata.__FUNCTION__$223	00000000 .rodata.__FUNCTION__$223
00000000 l    d  .rodata.__FUNCTION__$224	00000000 .rodata.__FUNCTION__$224
00000000 l    d  .rodata.__FUNCTION__$225	00000000 .rodata.__FUNCTION__$225
00000000 l    d  .rodata.__FUNCTION__$226	00000000 .rodata.__FUNCTION__$226
00000000 l    d  .rodata.__FUNCTION__$227	00000000 .rodata.__FUNCTION__$227
00000000 l    d  .rodata.__FUNCTION__$228	00000000 .rodata.__FUNCTION__$228
00000000 l    d  .rodata.__FUNCTION__$229	00000000 .rodata.__FUNCTION__$229
00000000 l    d  .rodata.__FUNCTION__$230	00000000 .rodata.__FUNCTION__$230
00000000 l    d  .rodata.__FUNCTION__$231	00000000 .rodata.__FUNCTION__$231
00000000 l    d  .rodata.__FUNCTION__$232	00000000 .rodata.__FUNCTION__$232
00000000 l    d  .rodata.__FUNCTION__$233	00000000 .rodata.__FUNCTION__$233
00000000 l    d  .rodata.__FUNCTION__$234	00000000 .rodata.__FUNCTION__$234
00000000 l    d  .rodata.__FUNCTION__$235	00000000 .rodata.__FUNCTION__$235
00000000 l    d  .rodata.__FUNCTION__$236	00000000 .rodata.__FUNCTION__$236
00000000 l    d  .rodata.__FUNCTION__$237	00000000 .rodata.__FUNCTION__$237
00000000 l    d  .rodata.__FUNCTION__$238	00000000 .rodata.__FUNCTION__$238
00000000 l    d  .rodata.__FUNCTION__$239	00000000 .rodata.__FUNCTION__$239
00000000 l    d  .rodata.__FUNCTION__$240	00000000 .rodata.__FUNCTION__$240
00000000 l    d  .rodata.__FUNCTION__$241	00000000 .rodata.__FUNCTION__$241
00000000 l    d  .rodata.__FUNCTION__$242	00000000 .rodata.__FUNCTION__$242
00000000 l    d  .rodata.__FUNCTION__$243	00000000 .rodata.__FUNCTION__$243
00000000 l    d  .rodata.__FUNCTION__$244	00000000 .rodata.__FUNCTION__$244
00000000 l    d  .rodata.__FUNCTION__$245	00000000 .rodata.__FUNCTION__$245
00000000 l    d  .rodata.__FUNCTION__$246	00000000 .rodata.__FUNCTION__$246
00000000 l    d  .rodata.__FUNCTION__$247	00000000 .rodata.__FUNCTION__$247
00000000 l    d  .rodata.__FUNCTION__$248	00000000 .rodata.__FUNCTION__$248
00000000 l    d  .rodata.__FUNCTION__$249	00000000 .rodata.__FUNCTION__$249
00000000 l    d  .rodata.__FUNCTION__$250	00000000 .rodata.__FUNCTION__$250
00000000 l    d  .rodata.__FUNCTION__$251	00000000 .rodata.__FUNCTION__$251
00000000 l    d  .rodata.__FUNCTION__$252	00000000 .rodata.__FUNCTION__$252
00000000 l    d  .rodata.__FUNCTION__$253	00000000 .rodata.__FUNCTION__$253
00000000 l    d  .rodata.__FUNCTION__$254	00000000 .rodata.__FUNCTION__$254
00000000 l    d  .rodata.__FUNCTION__$255	00000000 .rodata.__FUNCTION__$255
00000000 l    d  .rodata.__FUNCTION__$256	00000000 .rodata.__FUNCTION__$256
00000000 l    d  .rodata.__FUNCTION__$257	00000000 .rodata.__FUNCTION__$257
00000000 l    d  .rodata.__FUNCTION__$258	00000000 .rodata.__FUNCTION__$258
00000000 l    d  .rodata.__FUNCTION__$259	00000000 .rodata.__FUNCTION__$259
00000000 l    d  .rodata.__FUNCTION__$260	00000000 .rodata.__FUNCTION__$260
00000000 l    d  .rodata.__FUNCTION__$261	00000000 .rodata.__FUNCTION__$261
00000000 l    d  .rodata.__FUNCTION__$262	00000000 .rodata.__FUNCTION__$262
00000000 l    d  .rodata.__FUNCTION__$263	00000000 .rodata.__FUNCTION__$263
00000000 l    d  .rodata.__FUNCTION__$264	00000000 .rodata.__FUNCTION__$264
00000000 l    d  .rodata.__FUNCTION__$265	00000000 .rodata.__FUNCTION__$265
00000000 l    d  .rodata.__FUNCTION__$266	00000000 .rodata.__FUNCTION__$266
00000000 l    d  .rodata.__FUNCTION__$267	00000000 .rodata.__FUNCTION__$267
00000000 l    d  .rodata.__FUNCTION__$268	00000000 .rodata.__FUNCTION__$268
00000000 l    d  .rodata.__FUNCTION__$269	00000000 .rodata.__FUNCTION__$269
00000000 l    d  .rodata.__FUNCTION__$270	00000000 .rodata.__FUNCTION__$270
00000000 l    d  .rodata.__FUNCTION__$271	00000000 .rodata.__FUNCTION__$271
00000000 l    d  .rodata.__FUNCTION__$272	00000000 .rodata.__FUNCTION__$272
00000000 l    d  .rodata.__FUNCTION__$273	00000000 .rodata.__FUNCTION__$273
00000000 l    d  .rodata.__FUNCTION__$274	00000000 .rodata.__FUNCTION__$274
00000000 l    d  .rodata.__FUNCTION__$275	00000000 .rodata.__FUNCTION__$275
00000000 l    d  .rodata.__FUNCTION__$276	00000000 .rodata.__FUNCTION__$276
00000000 l    d  .rodata.__FUNCTION__$277	00000000 .rodata.__FUNCTION__$277
00000000 l    d  .rodata.__FUNCTION__$278	00000000 .rodata.__FUNCTION__$278
00000000 l    d  .rodata.__FUNCTION__$279	00000000 .rodata.__FUNCTION__$279
00000000 l    d  .rodata.__FUNCTION__$280	00000000 .rodata.__FUNCTION__$280
00000000 l    d  .rodata.__FUNCTION__$281	00000000 .rodata.__FUNCTION__$281
00000000 l    d  .rodata.__FUNCTION__$282	00000000 .rodata.__FUNCTION__$282
00000000 l    d  .rodata.__FUNCTION__$283	00000000 .rodata.__FUNCTION__$283
00000000 l    d  .rodata.__FUNCTION__$284	00000000 .rodata.__FUNCTION__$284
00000000 l    d  .rodata.__FUNCTION__$285	00000000 .rodata.__FUNCTION__$285
00000000 l    d  .rodata.__FUNCTION__$286	00000000 .rodata.__FUNCTION__$286
00000000 l    d  .rodata.__FUNCTION__$287	00000000 .rodata.__FUNCTION__$287
00000000 l    d  .rodata.__FUNCTION__$288	00000000 .rodata.__FUNCTION__$288
00000000 l    d  .rodata.__FUNCTION__$289	00000000 .rodata.__FUNCTION__$289
00000000 l    d  .rodata.__FUNCTION__$290	00000000 .rodata.__FUNCTION__$290
00000000 l    d  .rodata.__FUNCTION__$291	00000000 .rodata.__FUNCTION__$291
00000000 l    d  .rodata.__FUNCTION__$292	00000000 .rodata.__FUNCTION__$292
00000000 l    d  .rodata.__FUNCTION__$293	00000000 .rodata.__FUNCTION__$293
00000000 l    d  .rodata.__FUNCTION__$294	00000000 .rodata.__FUNCTION__$294
00000000 l    d  .rodata.__FUNCTION__$295	00000000 .rodata.__FUNCTION__$295
00000000 l    d  .rodata.__FUNCTION__$296	00000000 .rodata.__FUNCTION__$296
00000000 l    d  .rodata.__FUNCTION__$297	00000000 .rodata.__FUNCTION__$297
00000000 l    d  .rodata.__FUNCTION__$298	00000000 .rodata.__FUNCTION__$298
00000000 l    d  .rodata.__FUNCTION__$299	00000000 .rodata.__FUNCTION__$299
00000000 l    d  .rodata.__FUNCTION__$300	00000000 .rodata.__FUNCTION__$300
00000000 l    d  .rodata.__FUNCTION__$301	00000000 .rodata.__FUNCTION__$301
00000000 l    d  .rodata.__FUNCTION__$302	00000000 .rodata.__FUNCTION__$302
00000000 l    d  .rodata.__FUNCTION__$303	00000000 .rodata.__FUNCTION__$303
00000000 l    d  .rodata.__FUNCTION__$304	00000000 .rodata.__FUNCTION__$304
00000000 l    d  .rodata.__FUNCTION__$305	00000000 .rodata.__FUNCTION__$305
00000000 l    d  .rodata.__FUNCTION__$306	00000000 .rodata.__FUNCTION__$306
00000000 l    d  .rodata.__FUNCTION__$307	00000000 .rodata.__FUNCTION__$307
00000000 l    d  .rodata.__FUNCTION__$308	00000000 .rodata.__FUNCTION__$308
00000000 l    d  .rodata.__FUNCTION__$309	00000000 .rodata.__FUNCTION__$309
00000000 l    d  .rodata.__FUNCTION__$310	00000000 .rodata.__FUNCTION__$310
00000000 l    d  .rodata.__FUNCTION__$311	00000000 .rodata.__FUNCTION__$311
00000000 l    d  .rodata.__FUNCTION__$312	00000000 .rodata.__FUNCTION__$312
00000000 l    d  .rodata.__FUNCTION__$313	00000000 .rodata.__FUNCTION__$313
00000000 l    d  .rodata.__FUNCTION__$314	00000000 .rodata.__FUNCTION__$314
00000000 l    d  .rodata.__FUNCTION__$315	00000000 .rodata.__FUNCTION__$315
00000000 l    d  .rodata.__FUNCTION__$316	00000000 .rodata.__FUNCTION__$316
00000000 l    d  .rodata.__FUNCTION__$317	00000000 .rodata.__FUNCTION__$317
00000000 l    d  .rodata.__FUNCTION__$318	00000000 .rodata.__FUNCTION__$318
00000000 l    d  .rodata.__FUNCTION__$319	00000000 .rodata.__FUNCTION__$319
00000000 l    d  .rodata.__FUNCTION__$320	00000000 .rodata.__FUNCTION__$320
00000000 l    d  .rodata.__FUNCTION__$321	00000000 .rodata.__FUNCTION__$321
00000000 l    d  .rodata.__FUNCTION__$322	00000000 .rodata.__FUNCTION__$322
00000000 l    d  .rodata.__FUNCTION__$323	00000000 .rodata.__FUNCTION__$323
00000000 l    d  .rodata.__FUNCTION__$324	00000000 .rodata.__FUNCTION__$324
00000000 l    d  .rodata.__FUNCTION__$325	00000000 .rodata.__FUNCTION__$325
00000000 l    d  .rodata.__FUNCTION__$326	00000000 .rodata.__FUNCTION__$326
00000000 l    d  .rodata.__FUNCTION__$327	00000000 .rodata.__FUNCTION__$327
00000000 l    d  .rodata.__FUNCTION__$328	00000000 .rodata.__FUNCTION__$328
00000000 l    d  .rodata.__FUNCTION__$329	00000000 .rodata.__FUNCTION__$329
00000000 l    d  .rodata.__FUNCTION__$330	00000000 .rodata.__FUNCTION__$330
00000000 l    d  .rodata.__FUNCTION__$331	00000000 .rodata.__FUNCTION__$331
00000000 l    d  .rodata.__FUNCTION__$332	00000000 .rodata.__FUNCTION__$332
00000000 l    d  .rodata.__FUNCTION__$333	00000000 .rodata.__FUNCTION__$333
00000000 l    d  .rodata.__FUNCTION__$334	00000000 .rodata.__FUNCTION__$334
00000000 l    d  .rodata.__FUNCTION__$335	00000000 .rodata.__FUNCTION__$335
00000000 l    d  .rodata.__FUNCTION__$336	00000000 .rodata.__FUNCTION__$336
00000000 l    d  .rodata.__FUNCTION__$337	00000000 .rodata.__FUNCTION__$337
00000000 l    d  .rodata.__FUNCTION__$338	00000000 .rodata.__FUNCTION__$338
00000000 l    d  .rodata.__FUNCTION__$339	00000000 .rodata.__FUNCTION__$339
00000000 l    d  .rodata.__FUNCTION__$340	00000000 .rodata.__FUNCTION__$340
00000000 l    d  .rodata.__FUNCTION__$341	00000000 .rodata.__FUNCTION__$341
00000000 l    d  .rodata.__FUNCTION__$342	00000000 .rodata.__FUNCTION__$342
00000000 l    d  .rodata.__FUNCTION__$343	00000000 .rodata.__FUNCTION__$343
00000000 l    d  .rodata.__FUNCTION__$344	00000000 .rodata.__FUNCTION__$344
00000000 l    d  .rodata.__FUNCTION__$345	00000000 .rodata.__FUNCTION__$345
00000000 l    d  .rodata.__FUNCTION__$346	00000000 .rodata.__FUNCTION__$346
00000000 l    d  .rodata.__FUNCTION__$347	00000000 .rodata.__FUNCTION__$347
00000000 l    d  .rodata.__FUNCTION__$348	00000000 .rodata.__FUNCTION__$348
00000000 l    d  .rodata.__FUNCTION__$349	00000000 .rodata.__FUNCTION__$349
00000000 l    d  .rodata.__FUNCTION__$350	00000000 .rodata.__FUNCTION__$350
00000000 l    d  .rodata.__FUNCTION__$351	00000000 .rodata.__FUNCTION__$351
00000000 l    d  .rodata.__FUNCTION__$352	00000000 .rodata.__FUNCTION__$352
00000000 l    d  .rodata.__FUNCTION__$353	00000000 .rodata.__FUNCTION__$353
00000000 l    d  .rodata.__FUNCTION__$354	00000000 .rodata.__FUNCTION__$354
00000000 l    d  .rodata.__FUNCTION__$355	00000000 .rodata.__FUNCTION__$355
00000000 l    d  .rodata.__FUNCTION__$356	00000000 .rodata.__FUNCTION__$356
00000000 l    d  .rodata.__FUNCTION__$357	00000000 .rodata.__FUNCTION__$357
00000000 l    d  .rodata.__FUNCTION__$358	00000000 .rodata.__FUNCTION__$358
00000000 l    d  .rodata.__FUNCTION__$359	00000000 .rodata.__FUNCTION__$359
00000000 l    d  .rodata.__FUNCTION__$360	00000000 .rodata.__FUNCTION__$360
00000000 l    d  .rodata.__FUNCTION__$361	00000000 .rodata.__FUNCTION__$361
00000000 l    d  .rodata.__FUNCTION__$362	00000000 .rodata.__FUNCTION__$362
00000000 l    d  .rodata.__FUNCTION__$363	00000000 .rodata.__FUNCTION__$363
00000000 l    d  .rodata.__FUNCTION__$364	00000000 .rodata.__FUNCTION__$364
00000000 l    d  .rodata.__FUNCTION__$365	00000000 .rodata.__FUNCTION__$365
00000000 l    d  .rodata.__FUNCTION__$366	00000000 .rodata.__FUNCTION__$366
00000000 l    d  .rodata.__FUNCTION__$367	00000000 .rodata.__FUNCTION__$367
00000000 l    d  .rodata.__FUNCTION__$368	00000000 .rodata.__FUNCTION__$368
00000000 l    d  .rodata.__FUNCTION__$369	00000000 .rodata.__FUNCTION__$369
00000000 l    d  .rodata.__FUNCTION__$370	00000000 .rodata.__FUNCTION__$370
00000000 l    d  .rodata.__FUNCTION__$371	00000000 .rodata.__FUNCTION__$371
00000000 l    d  .rodata.__FUNCTION__$372	00000000 .rodata.__FUNCTION__$372
00000000 l    d  .rodata.__FUNCTION__$373	00000000 .rodata.__FUNCTION__$373
00000000 l    d  .rodata.__FUNCTION__$374	00000000 .rodata.__FUNCTION__$374
00000000 l    d  .rodata.__FUNCTION__$375	00000000 .rodata.__FUNCTION__$375
00000000 l    d  .rodata.__FUNCTION__$376	00000000 .rodata.__FUNCTION__$376
00000000 l    d  .rodata.__FUNCTION__$377	00000000 .rodata.__FUNCTION__$377
00000000 l    d  .rodata.__FUNCTION__$378	00000000 .rodata.__FUNCTION__$378
00000000 l    d  .rodata.__FUNCTION__$379	00000000 .rodata.__FUNCTION__$379
00000000 l    d  .rodata.__FUNCTION__$380	00000000 .rodata.__FUNCTION__$380
00000000 l    d  .rodata.__FUNCTION__$381	00000000 .rodata.__FUNCTION__$381
00000000 l    d  .rodata.__FUNCTION__$382	00000000 .rodata.__FUNCTION__$382
00000000 l    d  .rodata.__FUNCTION__$383	00000000 .rodata.__FUNCTION__$383
00000000 l    d  .rodata.__FUNCTION__$384	00000000 .rodata.__FUNCTION__$384
00000000 l    d  .rodata.__FUNCTION__$385	00000000 .rodata.__FUNCTION__$385
00000000 l    d  .rodata.__FUNCTION__$386	00000000 .rodata.__FUNCTION__$386
00000000 l    d  .rodata.__FUNCTION__$387	00000000 .rodata.__FUNCTION__$387
00000000 l    d  .rodata.__FUNCTION__$388	00000000 .rodata.__FUNCTION__$388
00000000 l    d  .rodata.__FUNCTION__$389	00000000 .rodata.__FUNCTION__$389
00000000 l    d  .rodata.__FUNCTION__$390	00000000 .rodata.__FUNCTION__$390
00000000 l    d  .rodata.__FUNCTION__$391	00000000 .rodata.__FUNCTION__$391
00000000 l    d  .rodata.__FUNCTION__$392	00000000 .rodata.__FUNCTION__$392
00000000 l    d  .rodata.__FUNCTION__$393	00000000 .rodata.__FUNCTION__$393
00000000 l    d  .rodata.__FUNCTION__$394	00000000 .rodata.__FUNCTION__$394
00000000 l    d  .rodata.__FUNCTION__$395	00000000 .rodata.__FUNCTION__$395
00000000 l    d  .rodata.__FUNCTION__$396	00000000 .rodata.__FUNCTION__$396
00000000 l    d  .rodata.__FUNCTION__$397	00000000 .rodata.__FUNCTION__$397
00000000 l    d  .rodata.__FUNCTION__$398	00000000 .rodata.__FUNCTION__$398
00000000 l    d  .rodata.__FUNCTION__$399	00000000 .rodata.__FUNCTION__$399
00000000 l    d  .rodata.__FUNCTION__$400	00000000 .rodata.__FUNCTION__$400
00000000 l    d  .rodata.__FUNCTION__$401	00000000 .rodata.__FUNCTION__$401
00000000 l    d  .rodata.__FUNCTION__$402	00000000 .rodata.__FUNCTION__$402
00000000 l    d  .rodata.__FUNCTION__$403	00000000 .rodata.__FUNCTION__$403
00000000 l    d  .rodata.__FUNCTION__$404	00000000 .rodata.__FUNCTION__$404
00000000 l    d  .rodata.__FUNCTION__$405	00000000 .rodata.__FUNCTION__$405
00000000 l    d  .rodata.__FUNCTION__$406	00000000 .rodata.__FUNCTION__$406
00000000 l    d  .rodata.__FUNCTION__$407	00000000 .rodata.__FUNCTION__$407
00000000 l    d  .rodata.__FUNCTION__$408	00000000 .rodata.__FUNCTION__$408
00000000 l    d  .rodata.__FUNCTION__$409	00000000 .rodata.__FUNCTION__$409
00000000 l    d  .rodata.__FUNCTION__$410	00000000 .rodata.__FUNCTION__$410
00000000 l    d  .rodata.__FUNCTION__$411	00000000 .rodata.__FUNCTION__$411
00000000 l    d  .rodata.__FUNCTION__$412	00000000 .rodata.__FUNCTION__$412
00000000 l    d  .rodata.__FUNCTION__$413	00000000 .rodata.__FUNCTION__$413
00000000 l    d  .rodata.__FUNCTION__$414	00000000 .rodata.__FUNCTION__$414
00000000 l    d  .rodata.__FUNCTION__$415	00000000 .rodata.__FUNCTION__$415
00000000 l    d  .rodata.__FUNCTION__$416	00000000 .rodata.__FUNCTION__$416
00000000 l    d  .rodata.__FUNCTION__$417	00000000 .rodata.__FUNCTION__$417
00000000 l    d  .rodata.__FUNCTION__$418	00000000 .rodata.__FUNCTION__$418
00000000 l    d  .rodata.__FUNCTION__$419	00000000 .rodata.__FUNCTION__$419
00000000 l    d  .rodata.__FUNCTION__$420	00000000 .rodata.__FUNCTION__$420
00000000 l    d  .rodata.__FUNCTION__$421	00000000 .rodata.__FUNCTION__$421
00000000 l    d  .rodata.__FUNCTION__$422	00000000 .rodata.__FUNCTION__$422
00000000 l    d  .rodata.__FUNCTION__$423	00000000 .rodata.__FUNCTION__$423
00000000 l    d  .rodata.__FUNCTION__$424	00000000 .rodata.__FUNCTION__$424
00000000 l    d  .rodata.__FUNCTION__$425	00000000 .rodata.__FUNCTION__$425
00000000 l    d  .rodata.__FUNCTION__$426	00000000 .rodata.__FUNCTION__$426
00000000 l    d  .rodata.__FUNCTION__$427	00000000 .rodata.__FUNCTION__$427
00000000 l    d  .rodata.__FUNCTION__$428	00000000 .rodata.__FUNCTION__$428
00000000 l    d  .rodata.__FUNCTION__$429	00000000 .rodata.__FUNCTION__$429
00000000 l    d  .rodata.__FUNCTION__$430	00000000 .rodata.__FUNCTION__$430
00000000 l    d  .rodata.__FUNCTION__$431	00000000 .rodata.__FUNCTION__$431
00000000 l    d  .rodata.__FUNCTION__$432	00000000 .rodata.__FUNCTION__$432
00000000 l    d  .rodata.__FUNCTION__$433	00000000 .rodata.__FUNCTION__$433
00000000 l    d  .rodata.__FUNCTION__$434	00000000 .rodata.__FUNCTION__$434
00000000 l    d  .rodata.__FUNCTION__$435	00000000 .rodata.__FUNCTION__$435
00000000 l    d  .rodata.__FUNCTION__$436	00000000 .rodata.__FUNCTION__$436
00000000 l    d  .rodata.__FUNCTION__$437	00000000 .rodata.__FUNCTION__$437
00000000 l    d  .rodata.__FUNCTION__$438	00000000 .rodata.__FUNCTION__$438
00000000 l    d  .rodata.__FUNCTION__$439	00000000 .rodata.__FUNCTION__$439
00000000 l    d  .rodata.__FUNCTION__$440	00000000 .rodata.__FUNCTION__$440
00000000 l    d  .rodata.__FUNCTION__$441	00000000 .rodata.__FUNCTION__$441
00000000 l    d  .rodata.__FUNCTION__$442	00000000 .rodata.__FUNCTION__$442
00000000 l    d  .rodata.__FUNCTION__$443	00000000 .rodata.__FUNCTION__$443
00000000 l    d  .rodata.__FUNCTION__$444	00000000 .rodata.__FUNCTION__$444
00000000 l    d  .rodata.__FUNCTION__$445	00000000 .rodata.__FUNCTION__$445
00000000 l    d  .rodata.__FUNCTION__$446	00000000 .rodata.__FUNCTION__$446
00000000 l    d  .rodata.__FUNCTION__$447	00000000 .rodata.__FUNCTION__$447
00000000 l    d  .rodata.__FUNCTION__$448	00000000 .rodata.__FUNCTION__$448
00000000 l    d  .rodata.__FUNCTION__$449	00000000 .rodata.__FUNCTION__$449
00000000 l    d  .rodata.__FUNCTION__$450	00000000 .rodata.__FUNCTION__$450
00000000 l    d  .rodata.__FUNCTION__$451	00000000 .rodata.__FUNCTION__$451
00000000 l    d  .rodata.__FUNCTION__$452	00000000 .rodata.__FUNCTION__$452
00000000 l    d  .rodata.__FUNCTION__$453	00000000 .rodata.__FUNCTION__$453
00000000 l    d  .rodata.__FUNCTION__$454	00000000 .rodata.__FUNCTION__$454
00000000 l    d  .rodata.__FUNCTION__$455	00000000 .rodata.__FUNCTION__$455
00000000 l    d  .rodata.__FUNCTION__$456	00000000 .rodata.__FUNCTION__$456
00000000 l    d  .rodata.__FUNCTION__$457	00000000 .rodata.__FUNCTION__$457
00000000 l    d  .rodata.__FUNCTION__$458	00000000 .rodata.__FUNCTION__$458
00000000 l    d  .rodata.__FUNCTION__$459	00000000 .rodata.__FUNCTION__$459
00000000 l    d  .rodata.__FUNCTION__$460	00000000 .rodata.__FUNCTION__$460
00000000 l    d  .rodata.__FUNCTION__$461	00000000 .rodata.__FUNCTION__$461
00000000 l    d  .rodata.__FUNCTION__$462	00000000 .rodata.__FUNCTION__$462
00000000 l    d  .rodata.__FUNCTION__$463	00000000 .rodata.__FUNCTION__$463
00000000 l    d  .rodata.__FUNCTION__$464	00000000 .rodata.__FUNCTION__$464
00000000 l    d  .rodata.__FUNCTION__$465	00000000 .rodata.__FUNCTION__$465
00000000 l    d  .rodata.__FUNCTION__$466	00000000 .rodata.__FUNCTION__$466
00000000 l    d  .rodata.__FUNCTION__$467	00000000 .rodata.__FUNCTION__$467
00000000 l    d  .rodata.__FUNCTION__$468	00000000 .rodata.__FUNCTION__$468
00000000 l    d  .rodata.__FUNCTION__$469	00000000 .rodata.__FUNCTION__$469
00000000 l    d  .rodata.__FUNCTION__$470	00000000 .rodata.__FUNCTION__$470
00000000 l    d  .rodata.__FUNCTION__$471	00000000 .rodata.__FUNCTION__$471
00000000 l    d  .rodata.__FUNCTION__$472	00000000 .rodata.__FUNCTION__$472
00000000 l    d  .rodata.__FUNCTION__$473	00000000 .rodata.__FUNCTION__$473
00000000 l    d  .rodata.__FUNCTION__$474	00000000 .rodata.__FUNCTION__$474
00000000 l    d  .rodata.__FUNCTION__$475	00000000 .rodata.__FUNCTION__$475
00000000 l    d  .rodata.__FUNCTION__$476	00000000 .rodata.__FUNCTION__$476
00000000 l    d  .rodata.__FUNCTION__$477	00000000 .rodata.__FUNCTION__$477
00000000 l    d  .rodata.__FUNCTION__$478	00000000 .rodata.__FUNCTION__$478
00000000 l    d  .rodata.__FUNCTION__$479	00000000 .rodata.__FUNCTION__$479
00000000 l    d  .rodata.__FUNCTION__$480	00000000 .rodata.__FUNCTION__$480
00000000 l    d  .rodata.__FUNCTION__$481	00000000 .rodata.__FUNCTION__$481
00000000 l    d  .rodata.__FUNCTION__$482	00000000 .rodata.__FUNCTION__$482
00000000 l    d  .rodata.__FUNCTION__$483	00000000 .rodata.__FUNCTION__$483
00000000 l    d  .rodata.__FUNCTION__$484	00000000 .rodata.__FUNCTION__$484
00000000 l    d  .rodata.__FUNCTION__$485	00000000 .rodata.__FUNCTION__$485
00000000 l    d  .rodata.__FUNCTION__$486	00000000 .rodata.__FUNCTION__$486
00000000 l    d  .rodata.__FUNCTION__$487	00000000 .rodata.__FUNCTION__$487
00000000 l    d  .rodata.__FUNCTION__$488	00000000 .rodata.__FUNCTION__$488
00000000 l    d  .rodata.__FUNCTION__$489	00000000 .rodata.__FUNCTION__$489
00000000 l    d  .rodata.__FUNCTION__$490	00000000 .rodata.__FUNCTION__$490
00000000 l    d  .rodata.__FUNCTION__$491	00000000 .rodata.__FUNCTION__$491
00000000 l    d  .rodata.__FUNCTION__$492	00000000 .rodata.__FUNCTION__$492
00000000 l    d  .rodata.__FUNCTION__$493	00000000 .rodata.__FUNCTION__$493
00000000 l    d  .rodata.__FUNCTION__$494	00000000 .rodata.__FUNCTION__$494
00000000 l    d  .rodata.__FUNCTION__$495	00000000 .rodata.__FUNCTION__$495
00000000 l    d  .rodata.__FUNCTION__$496	00000000 .rodata.__FUNCTION__$496
00000000 l    d  .rodata.__FUNCTION__$497	00000000 .rodata.__FUNCTION__$497
00000000 l    d  .rodata.__FUNCTION__$498	00000000 .rodata.__FUNCTION__$498
00000000 l    d  .rodata.__FUNCTION__$499	00000000 .rodata.__FUNCTION__$499
00000000 l    d  .rodata.__FUNCTION__$500	00000000 .rodata.__FUNCTION__$500
00000000 l    d  .rodata.WASM_DEBUG_CompileFunction	00000000 .rodata.WASM_DEBUG_CompileFunction
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.c_operationsFC	00000000 .rodata.c_operationsFC
00000000 l    d  .dram1.3	00000000 .dram1.3
00000000 l    d  .rodata.c_fpSelectOps	00000000 .rodata.c_fpSelectOps
00000000 l    d  .rodata.c_intSelectOps	00000000 .rodata.c_intSelectOps
00000000 l    d  .rodata.c_setRegisterOps	00000000 .rodata.c_setRegisterOps
00000000 l    d  .rodata.c_setGlobalOps	00000000 .rodata.c_setGlobalOps
00000000 l    d  .rodata.c_setSetOps	00000000 .rodata.c_setSetOps
00000000 l    d  .rodata.c_preserveSetSlot	00000000 .rodata.c_preserveSetSlot
00000000 l    d  .rodata.WASM_DEBUG_Const	00000000 .rodata.WASM_DEBUG_Const
00000000 l    d  .rodata.WASM_DEBUG_ContinueLoopIf	00000000 .rodata.WASM_DEBUG_ContinueLoopIf
00000000 l    d  .rodata.WASM_DEBUG_ContinueLoop	00000000 .rodata.WASM_DEBUG_ContinueLoop
00000000 l    d  .rodata.WASM_DEBUG_BanchIf	00000000 .rodata.WASM_DEBUG_BanchIf
00000000 l    d  .rodata.WASM_DEBUG_Loop	00000000 .rodata.WASM_DEBUG_Loop
00000000 l    d  .rodata.WASM_MemFill_DisableCheck	00000000 .rodata.WASM_MemFill_DisableCheck
00000000 l    d  .rodata.WASM_DEBUG_MemFill	00000000 .rodata.WASM_DEBUG_MemFill
00000000 l    d  .rodata.WASM_MemCopy_DisableCheck	00000000 .rodata.WASM_MemCopy_DisableCheck
00000000 l    d  .rodata.WASM_DEBUG_MemCopy	00000000 .rodata.WASM_DEBUG_MemCopy
00000000 l    d  .rodata.WASM_DEBUG_MemGrow	00000000 .rodata.WASM_DEBUG_MemGrow
00000000 l    d  .rodata.WASM_DEBUG_CallRawFunction	00000000 .rodata.WASM_DEBUG_CallRawFunction
00000000 l    d  .rodata.c_waTypes	00000000 .rodata.c_waTypes
00000000 l    d  .bss.ERROR_POINTER	00000000 .bss.ERROR_POINTER
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .literal.EmitPointer	00000000 .literal.EmitPointer
00000000 l    d  .literal.ReservePointer	00000000 .literal.ReservePointer
00000000 l    d  .literal.op_ContinueLoop	00000000 .literal.op_ContinueLoop
00000000 l    d  .literal.op_BranchTable	00000000 .literal.op_BranchTable
00000000 l    d  .literal.op_Branch	00000000 .literal.op_Branch
00000000 l    d  .literal.op_Unsupported	00000000 .literal.op_Unsupported
00000000 l    d  .literal.op_Loop	00000000 .literal.op_Loop
00000000 l    d  .literal.op_Unreachable	00000000 .literal.op_Unreachable
00000000 l    d  .literal.op_CallRawFunction	00000000 .literal.op_CallRawFunction
00000000 l    d  .literal.profileOp	00000000 .literal.profileOp
00000000 l    d  .literal.op_PreserveSetSlot_f64	00000000 .literal.op_PreserveSetSlot_f64
00000000 l    d  .literal.op_PreserveSetSlot_f32	00000000 .literal.op_PreserveSetSlot_f32
00000000 l    d  .literal.op_PreserveSetSlot_i64	00000000 .literal.op_PreserveSetSlot_i64
00000000 l    d  .literal.op_PreserveSetSlot_i32	00000000 .literal.op_PreserveSetSlot_i32
00000000 l    d  .literal.op_SetSlot_f64	00000000 .literal.op_SetSlot_f64
00000000 l    d  .literal.op_SetSlot_f32	00000000 .literal.op_SetSlot_f32
00000000 l    d  .literal.op_SetSlot_i64	00000000 .literal.op_SetSlot_i64
00000000 l    d  .literal.op_SetSlot_i32	00000000 .literal.op_SetSlot_i32
00000000 l    d  .literal.op_SetRegister_f64	00000000 .literal.op_SetRegister_f64
00000000 l    d  .literal.op_SetRegister_f32	00000000 .literal.op_SetRegister_f32
00000000 l    d  .literal.op_SetRegister_i64	00000000 .literal.op_SetRegister_i64
00000000 l    d  .literal.op_SetRegister_i32	00000000 .literal.op_SetRegister_i32
00000000 l    d  .literal.op_SetGlobal_s64	00000000 .literal.op_SetGlobal_s64
00000000 l    d  .literal.op_SetGlobal_s32	00000000 .literal.op_SetGlobal_s32
00000000 l    d  .literal.op_SetGlobal_f64	00000000 .literal.op_SetGlobal_f64
00000000 l    d  .literal.op_SetGlobal_f32	00000000 .literal.op_SetGlobal_f32
00000000 l    d  .literal.op_SetGlobal_i64	00000000 .literal.op_SetGlobal_i64
00000000 l    d  .literal.op_SetGlobal_i32	00000000 .literal.op_SetGlobal_i32
00000000 l    d  .literal.op_Select_f64_rsr	00000000 .literal.op_Select_f64_rsr
00000000 l    d  .literal.op_Select_f64_rrs	00000000 .literal.op_Select_f64_rrs
00000000 l    d  .literal.op_Select_f64_rss	00000000 .literal.op_Select_f64_rss
00000000 l    d  .literal.op_Select_f64_ssr	00000000 .literal.op_Select_f64_ssr
00000000 l    d  .literal.op_Select_f64_srs	00000000 .literal.op_Select_f64_srs
00000000 l    d  .literal.op_Select_f64_sss	00000000 .literal.op_Select_f64_sss
00000000 l    d  .literal.op_Select_f32_rsr	00000000 .literal.op_Select_f32_rsr
00000000 l    d  .literal.op_Select_f32_rrs	00000000 .literal.op_Select_f32_rrs
00000000 l    d  .literal.op_Select_f32_rss	00000000 .literal.op_Select_f32_rss
00000000 l    d  .literal.op_Select_f32_ssr	00000000 .literal.op_Select_f32_ssr
00000000 l    d  .literal.op_Select_f32_srs	00000000 .literal.op_Select_f32_srs
00000000 l    d  .literal.op_Select_f32_sss	00000000 .literal.op_Select_f32_sss
00000000 l    d  .literal.op_Select_i64_sss	00000000 .literal.op_Select_i64_sss
00000000 l    d  .literal.op_Select_i64_ssr	00000000 .literal.op_Select_i64_ssr
00000000 l    d  .literal.op_Select_i64_srs	00000000 .literal.op_Select_i64_srs
00000000 l    d  .literal.op_Select_i64_rss	00000000 .literal.op_Select_i64_rss
00000000 l    d  .literal.op_Select_i32_sss	00000000 .literal.op_Select_i32_sss
00000000 l    d  .literal.op_Select_i32_ssr	00000000 .literal.op_Select_i32_ssr
00000000 l    d  .literal.op_Select_i32_srs	00000000 .literal.op_Select_i32_srs
00000000 l    d  .literal.op_Select_i32_rss	00000000 .literal.op_Select_i32_rss
00000000 l    d  .literal.op_BranchIfPrologue_r	00000000 .literal.op_BranchIfPrologue_r
00000000 l    d  .literal.op_If_r	00000000 .literal.op_If_r
00000000 l    d  .literal.op_PreserveCopySlot_64	00000000 .literal.op_PreserveCopySlot_64
00000000 l    d  .literal.op_CopySlot_64	00000000 .literal.op_CopySlot_64
00000000 l    d  .literal.op_BranchIfPrologue_s	00000000 .literal.op_BranchIfPrologue_s
00000000 l    d  .literal.op_If_s	00000000 .literal.op_If_s
00000000 l    d  .literal.op_PreserveCopySlot_32	00000000 .literal.op_PreserveCopySlot_32
00000000 l    d  .literal.op_CopySlot_32	00000000 .literal.op_CopySlot_32
00000000 l    d  .literal.op_ContinueLoopIf	00000000 .literal.op_ContinueLoopIf
00000000 l    d  .literal.op_GetGlobal_s64	00000000 .literal.op_GetGlobal_s64
00000000 l    d  .literal.op_GetGlobal_s32	00000000 .literal.op_GetGlobal_s32
00000000 l    d  .literal.op_i64_Extend32_s_s	00000000 .literal.op_i64_Extend32_s_s
00000000 l    d  .literal.op_i64_Extend32_s_r	00000000 .literal.op_i64_Extend32_s_r
00000000 l    d  .literal.op_i64_Extend16_s_s	00000000 .literal.op_i64_Extend16_s_s
00000000 l    d  .literal.op_i64_Extend16_s_r	00000000 .literal.op_i64_Extend16_s_r
00000000 l    d  .literal.op_i64_Extend8_s_s	00000000 .literal.op_i64_Extend8_s_s
00000000 l    d  .literal.op_i64_Extend8_s_r	00000000 .literal.op_i64_Extend8_s_r
00000000 l    d  .literal.op_i32_Extend16_s_s	00000000 .literal.op_i32_Extend16_s_s
00000000 l    d  .literal.op_i32_Extend16_s_r	00000000 .literal.op_i32_Extend16_s_r
00000000 l    d  .literal.op_i32_Extend8_s_s	00000000 .literal.op_i32_Extend8_s_s
00000000 l    d  .literal.op_i32_Extend8_s_r	00000000 .literal.op_i32_Extend8_s_r
00000000 l    d  .literal.op_f64_Reinterpret_i64_s_s	00000000 .literal.op_f64_Reinterpret_i64_s_s
00000000 l    d  .literal.op_f64_Reinterpret_i64_s_r	00000000 .literal.op_f64_Reinterpret_i64_s_r
00000000 l    d  .literal.op_f64_Reinterpret_i64_r_s	00000000 .literal.op_f64_Reinterpret_i64_r_s
00000000 l    d  .literal.op_f64_Reinterpret_i64_r_r	00000000 .literal.op_f64_Reinterpret_i64_r_r
00000000 l    d  .literal.op_f32_Reinterpret_i32_s_s	00000000 .literal.op_f32_Reinterpret_i32_s_s
00000000 l    d  .literal.op_f32_Reinterpret_i32_s_r	00000000 .literal.op_f32_Reinterpret_i32_s_r
00000000 l    d  .literal.op_f32_Reinterpret_i32_r_s	00000000 .literal.op_f32_Reinterpret_i32_r_s
00000000 l    d  .literal.op_f32_Reinterpret_i32_r_r	00000000 .literal.op_f32_Reinterpret_i32_r_r
00000000 l    d  .literal.op_i64_Reinterpret_f64_s_s	00000000 .literal.op_i64_Reinterpret_f64_s_s
00000000 l    d  .literal.op_i64_Reinterpret_f64_s_r	00000000 .literal.op_i64_Reinterpret_f64_s_r
00000000 l    d  .literal.op_i64_Reinterpret_f64_r_s	00000000 .literal.op_i64_Reinterpret_f64_r_s
00000000 l    d  .literal.op_i64_Reinterpret_f64_r_r	00000000 .literal.op_i64_Reinterpret_f64_r_r
00000000 l    d  .literal.op_i32_Reinterpret_f32_s_s	00000000 .literal.op_i32_Reinterpret_f32_s_s
00000000 l    d  .literal.op_i32_Reinterpret_f32_s_r	00000000 .literal.op_i32_Reinterpret_f32_s_r
00000000 l    d  .literal.op_i32_Reinterpret_f32_r_s	00000000 .literal.op_i32_Reinterpret_f32_r_s
00000000 l    d  .literal.op_i32_Reinterpret_f32_r_r	00000000 .literal.op_i32_Reinterpret_f32_r_r
00000000 l    d  .literal.op_f64_Promote_f32_s	00000000 .literal.op_f64_Promote_f32_s
00000000 l    d  .literal.op_f64_Promote_f32_r	00000000 .literal.op_f64_Promote_f32_r
00000000 l    d  .literal.op_f64_Convert_u64_s_s	00000000 .literal.op_f64_Convert_u64_s_s
00000000 l    d  .literal.op_f64_Convert_u64_s_r	00000000 .literal.op_f64_Convert_u64_s_r
00000000 l    d  .literal.op_f64_Convert_u64_r_s	00000000 .literal.op_f64_Convert_u64_r_s
00000000 l    d  .literal.op_f64_Convert_u64_r_r	00000000 .literal.op_f64_Convert_u64_r_r
00000000 l    d  .literal.op_f64_Convert_i64_s_s	00000000 .literal.op_f64_Convert_i64_s_s
00000000 l    d  .literal.op_f64_Convert_i64_s_r	00000000 .literal.op_f64_Convert_i64_s_r
00000000 l    d  .literal.op_f64_Convert_i64_r_s	00000000 .literal.op_f64_Convert_i64_r_s
00000000 l    d  .literal.op_f64_Convert_i64_r_r	00000000 .literal.op_f64_Convert_i64_r_r
00000000 l    d  .literal.op_f64_Convert_u32_s_s	00000000 .literal.op_f64_Convert_u32_s_s
00000000 l    d  .literal.op_f64_Convert_u32_s_r	00000000 .literal.op_f64_Convert_u32_s_r
00000000 l    d  .literal.op_f64_Convert_u32_r_s	00000000 .literal.op_f64_Convert_u32_r_s
00000000 l    d  .literal.op_f64_Convert_u32_r_r	00000000 .literal.op_f64_Convert_u32_r_r
00000000 l    d  .literal.op_f64_Convert_i32_s_s	00000000 .literal.op_f64_Convert_i32_s_s
00000000 l    d  .literal.op_f64_Convert_i32_s_r	00000000 .literal.op_f64_Convert_i32_s_r
00000000 l    d  .literal.op_f64_Convert_i32_r_s	00000000 .literal.op_f64_Convert_i32_r_s
00000000 l    d  .literal.op_f64_Convert_i32_r_r	00000000 .literal.op_f64_Convert_i32_r_r
00000000 l    d  .literal.op_f32_Demote_f64_s	00000000 .literal.op_f32_Demote_f64_s
00000000 l    d  .literal.op_f32_Demote_f64_r	00000000 .literal.op_f32_Demote_f64_r
00000000 l    d  .literal.op_f32_Convert_u64_s_s	00000000 .literal.op_f32_Convert_u64_s_s
00000000 l    d  .literal.op_f32_Convert_u64_s_r	00000000 .literal.op_f32_Convert_u64_s_r
00000000 l    d  .literal.op_f32_Convert_u64_r_s	00000000 .literal.op_f32_Convert_u64_r_s
00000000 l    d  .literal.op_f32_Convert_u64_r_r	00000000 .literal.op_f32_Convert_u64_r_r
00000000 l    d  .literal.op_f32_Convert_i64_s_s	00000000 .literal.op_f32_Convert_i64_s_s
00000000 l    d  .literal.op_f32_Convert_i64_s_r	00000000 .literal.op_f32_Convert_i64_s_r
00000000 l    d  .literal.op_f32_Convert_i64_r_s	00000000 .literal.op_f32_Convert_i64_r_s
00000000 l    d  .literal.op_f32_Convert_i64_r_r	00000000 .literal.op_f32_Convert_i64_r_r
00000000 l    d  .literal.op_f32_Convert_u32_s_s	00000000 .literal.op_f32_Convert_u32_s_s
00000000 l    d  .literal.op_f32_Convert_u32_s_r	00000000 .literal.op_f32_Convert_u32_s_r
00000000 l    d  .literal.op_f32_Convert_u32_r_s	00000000 .literal.op_f32_Convert_u32_r_s
00000000 l    d  .literal.op_f32_Convert_u32_r_r	00000000 .literal.op_f32_Convert_u32_r_r
00000000 l    d  .literal.op_f32_Convert_i32_s_s	00000000 .literal.op_f32_Convert_i32_s_s
00000000 l    d  .literal.op_f32_Convert_i32_s_r	00000000 .literal.op_f32_Convert_i32_s_r
00000000 l    d  .literal.op_f32_Convert_i32_r_s	00000000 .literal.op_f32_Convert_i32_r_s
00000000 l    d  .literal.op_f32_Convert_i32_r_r	00000000 .literal.op_f32_Convert_i32_r_r
00000000 l    d  .literal.op_u64_Trunc_f64_s_s	00000000 .literal.op_u64_Trunc_f64_s_s
00000000 l    d  .literal.op_u64_Trunc_f64_s_r	00000000 .literal.op_u64_Trunc_f64_s_r
00000000 l    d  .literal.op_u64_Trunc_f64_r_s	00000000 .literal.op_u64_Trunc_f64_r_s
00000000 l    d  .literal.op_u64_Trunc_f64_r_r	00000000 .literal.op_u64_Trunc_f64_r_r
00000000 l    d  .literal.op_i64_Trunc_f64_s_s	00000000 .literal.op_i64_Trunc_f64_s_s
00000000 l    d  .literal.op_i64_Trunc_f64_s_r	00000000 .literal.op_i64_Trunc_f64_s_r
00000000 l    d  .literal.op_i64_Trunc_f64_r_s	00000000 .literal.op_i64_Trunc_f64_r_s
00000000 l    d  .literal.op_i64_Trunc_f64_r_r	00000000 .literal.op_i64_Trunc_f64_r_r
00000000 l    d  .literal.op_u64_Trunc_f32_s_s	00000000 .literal.op_u64_Trunc_f32_s_s
00000000 l    d  .literal.op_u64_Trunc_f32_s_r	00000000 .literal.op_u64_Trunc_f32_s_r
00000000 l    d  .literal.op_u64_Trunc_f32_r_s	00000000 .literal.op_u64_Trunc_f32_r_s
00000000 l    d  .literal.op_u64_Trunc_f32_r_r	00000000 .literal.op_u64_Trunc_f32_r_r
00000000 l    d  .literal.op_i64_Trunc_f32_s_s	00000000 .literal.op_i64_Trunc_f32_s_s
00000000 l    d  .literal.op_i64_Trunc_f32_s_r	00000000 .literal.op_i64_Trunc_f32_s_r
00000000 l    d  .literal.op_i64_Trunc_f32_r_s	00000000 .literal.op_i64_Trunc_f32_r_s
00000000 l    d  .literal.op_i64_Trunc_f32_r_r	00000000 .literal.op_i64_Trunc_f32_r_r
00000000 l    d  .literal.op_i64_Extend_u32_s	00000000 .literal.op_i64_Extend_u32_s
00000000 l    d  .literal.op_i64_Extend_u32_r	00000000 .literal.op_i64_Extend_u32_r
00000000 l    d  .literal.op_i64_Extend_i32_s	00000000 .literal.op_i64_Extend_i32_s
00000000 l    d  .literal.op_i64_Extend_i32_r	00000000 .literal.op_i64_Extend_i32_r
00000000 l    d  .literal.op_u32_Trunc_f64_s_s	00000000 .literal.op_u32_Trunc_f64_s_s
00000000 l    d  .literal.op_u32_Trunc_f64_s_r	00000000 .literal.op_u32_Trunc_f64_s_r
00000000 l    d  .literal.op_u32_Trunc_f64_r_s	00000000 .literal.op_u32_Trunc_f64_r_s
00000000 l    d  .literal.op_u32_Trunc_f64_r_r	00000000 .literal.op_u32_Trunc_f64_r_r
00000000 l    d  .literal.op_i32_Trunc_f64_s_s	00000000 .literal.op_i32_Trunc_f64_s_s
00000000 l    d  .literal.op_i32_Trunc_f64_s_r	00000000 .literal.op_i32_Trunc_f64_s_r
00000000 l    d  .literal.op_i32_Trunc_f64_r_s	00000000 .literal.op_i32_Trunc_f64_r_s
00000000 l    d  .literal.op_i32_Trunc_f64_r_r	00000000 .literal.op_i32_Trunc_f64_r_r
00000000 l    d  .literal.op_u32_Trunc_f32_s_s	00000000 .literal.op_u32_Trunc_f32_s_s
00000000 l    d  .literal.op_u32_Trunc_f32_s_r	00000000 .literal.op_u32_Trunc_f32_s_r
00000000 l    d  .literal.op_u32_Trunc_f32_r_s	00000000 .literal.op_u32_Trunc_f32_r_s
00000000 l    d  .literal.op_u32_Trunc_f32_r_r	00000000 .literal.op_u32_Trunc_f32_r_r
00000000 l    d  .literal.op_i32_Trunc_f32_s_s	00000000 .literal.op_i32_Trunc_f32_s_s
00000000 l    d  .literal.op_i32_Trunc_f32_s_r	00000000 .literal.op_i32_Trunc_f32_s_r
00000000 l    d  .literal.op_i32_Trunc_f32_r_s	00000000 .literal.op_i32_Trunc_f32_r_s
00000000 l    d  .literal.op_i32_Trunc_f32_r_r	00000000 .literal.op_i32_Trunc_f32_r_r
00000000 l    d  .literal.op_i32_Wrap_i64_s	00000000 .literal.op_i32_Wrap_i64_s
00000000 l    d  .literal.op_i32_Wrap_i64_r	00000000 .literal.op_i32_Wrap_i64_r
00000000 l    d  .literal.op_f64_Divide_ss	00000000 .literal.op_f64_Divide_ss
00000000 l    d  .literal.op_f64_Divide_sr	00000000 .literal.op_f64_Divide_sr
00000000 l    d  .literal.op_f64_Divide_rs	00000000 .literal.op_f64_Divide_rs
00000000 l    d  .literal.op_f64_Multiply_ss	00000000 .literal.op_f64_Multiply_ss
00000000 l    d  .literal.op_f64_Multiply_rs	00000000 .literal.op_f64_Multiply_rs
00000000 l    d  .literal.op_f64_Subtract_ss	00000000 .literal.op_f64_Subtract_ss
00000000 l    d  .literal.op_f64_Subtract_sr	00000000 .literal.op_f64_Subtract_sr
00000000 l    d  .literal.op_f64_Subtract_rs	00000000 .literal.op_f64_Subtract_rs
00000000 l    d  .literal.op_f64_Add_ss	00000000 .literal.op_f64_Add_ss
00000000 l    d  .literal.op_f64_Add_rs	00000000 .literal.op_f64_Add_rs
00000000 l    d  .literal.op_f64_Negate_s	00000000 .literal.op_f64_Negate_s
00000000 l    d  .literal.op_f64_Negate_r	00000000 .literal.op_f64_Negate_r
00000000 l    d  .literal.op_f64_Abs_s	00000000 .literal.op_f64_Abs_s
00000000 l    d  .literal.op_f64_Abs_r	00000000 .literal.op_f64_Abs_r
00000000 l    d  .literal.op_f32_Divide_ss	00000000 .literal.op_f32_Divide_ss
00000000 l    d  .literal.op_f32_Divide_sr	00000000 .literal.op_f32_Divide_sr
00000000 l    d  .literal.op_f32_Divide_rs	00000000 .literal.op_f32_Divide_rs
00000000 l    d  .literal.op_f32_Multiply_ss	00000000 .literal.op_f32_Multiply_ss
00000000 l    d  .literal.op_f32_Multiply_rs	00000000 .literal.op_f32_Multiply_rs
00000000 l    d  .literal.op_f32_Subtract_ss	00000000 .literal.op_f32_Subtract_ss
00000000 l    d  .literal.op_f32_Subtract_sr	00000000 .literal.op_f32_Subtract_sr
00000000 l    d  .literal.op_f32_Subtract_rs	00000000 .literal.op_f32_Subtract_rs
00000000 l    d  .literal.op_f32_Add_ss	00000000 .literal.op_f32_Add_ss
00000000 l    d  .literal.op_f32_Add_rs	00000000 .literal.op_f32_Add_rs
00000000 l    d  .literal.op_f32_Negate_s	00000000 .literal.op_f32_Negate_s
00000000 l    d  .literal.op_f32_Negate_r	00000000 .literal.op_f32_Negate_r
00000000 l    d  .literal.op_f32_Abs_s	00000000 .literal.op_f32_Abs_s
00000000 l    d  .literal.op_f32_Abs_r	00000000 .literal.op_f32_Abs_r
00000000 l    d  .literal.op_u64_Rotr_ss	00000000 .literal.op_u64_Rotr_ss
00000000 l    d  .literal.op_u64_Rotr_sr	00000000 .literal.op_u64_Rotr_sr
00000000 l    d  .literal.op_u64_Rotr_rs	00000000 .literal.op_u64_Rotr_rs
00000000 l    d  .literal.op_u64_Rotl_ss	00000000 .literal.op_u64_Rotl_ss
00000000 l    d  .literal.op_u64_Rotl_sr	00000000 .literal.op_u64_Rotl_sr
00000000 l    d  .literal.op_u64_Rotl_rs	00000000 .literal.op_u64_Rotl_rs
00000000 l    d  .literal.op_u64_ShiftRight_ss	00000000 .literal.op_u64_ShiftRight_ss
00000000 l    d  .literal.op_u64_ShiftRight_sr	00000000 .literal.op_u64_ShiftRight_sr
00000000 l    d  .literal.op_u64_ShiftRight_rs	00000000 .literal.op_u64_ShiftRight_rs
00000000 l    d  .literal.op_i64_ShiftRight_ss	00000000 .literal.op_i64_ShiftRight_ss
00000000 l    d  .literal.op_i64_ShiftRight_sr	00000000 .literal.op_i64_ShiftRight_sr
00000000 l    d  .literal.op_i64_ShiftRight_rs	00000000 .literal.op_i64_ShiftRight_rs
00000000 l    d  .literal.op_u64_ShiftLeft_ss	00000000 .literal.op_u64_ShiftLeft_ss
00000000 l    d  .literal.op_u64_ShiftLeft_sr	00000000 .literal.op_u64_ShiftLeft_sr
00000000 l    d  .literal.op_u64_ShiftLeft_rs	00000000 .literal.op_u64_ShiftLeft_rs
00000000 l    d  .literal.op_u64_Xor_ss	00000000 .literal.op_u64_Xor_ss
00000000 l    d  .literal.op_u64_Xor_rs	00000000 .literal.op_u64_Xor_rs
00000000 l    d  .literal.op_u64_Or_ss	00000000 .literal.op_u64_Or_ss
00000000 l    d  .literal.op_u64_Or_rs	00000000 .literal.op_u64_Or_rs
00000000 l    d  .literal.op_u64_And_ss	00000000 .literal.op_u64_And_ss
00000000 l    d  .literal.op_u64_And_rs	00000000 .literal.op_u64_And_rs
00000000 l    d  .literal.op_u64_Remainder_ss	00000000 .literal.op_u64_Remainder_ss
00000000 l    d  .literal.op_u64_Remainder_sr	00000000 .literal.op_u64_Remainder_sr
00000000 l    d  .literal.op_u64_Remainder_rs	00000000 .literal.op_u64_Remainder_rs
00000000 l    d  .literal.op_i64_Remainder_ss	00000000 .literal.op_i64_Remainder_ss
00000000 l    d  .literal.op_i64_Remainder_sr	00000000 .literal.op_i64_Remainder_sr
00000000 l    d  .literal.op_i64_Remainder_rs	00000000 .literal.op_i64_Remainder_rs
00000000 l    d  .literal.op_u64_Divide_ss	00000000 .literal.op_u64_Divide_ss
00000000 l    d  .literal.op_u64_Divide_sr	00000000 .literal.op_u64_Divide_sr
00000000 l    d  .literal.op_u64_Divide_rs	00000000 .literal.op_u64_Divide_rs
00000000 l    d  .literal.op_i64_Divide_ss	00000000 .literal.op_i64_Divide_ss
00000000 l    d  .literal.op_i64_Divide_sr	00000000 .literal.op_i64_Divide_sr
00000000 l    d  .literal.op_i64_Divide_rs	00000000 .literal.op_i64_Divide_rs
00000000 l    d  .literal.op_i64_Multiply_ss	00000000 .literal.op_i64_Multiply_ss
00000000 l    d  .literal.op_i64_Multiply_rs	00000000 .literal.op_i64_Multiply_rs
00000000 l    d  .literal.op_i64_Subtract_ss	00000000 .literal.op_i64_Subtract_ss
00000000 l    d  .literal.op_i64_Subtract_sr	00000000 .literal.op_i64_Subtract_sr
00000000 l    d  .literal.op_i64_Subtract_rs	00000000 .literal.op_i64_Subtract_rs
00000000 l    d  .literal.op_i64_Add_ss	00000000 .literal.op_i64_Add_ss
00000000 l    d  .literal.op_i64_Add_rs	00000000 .literal.op_i64_Add_rs
00000000 l    d  .literal.op_u32_Rotr_ss	00000000 .literal.op_u32_Rotr_ss
00000000 l    d  .literal.op_u32_Rotr_sr	00000000 .literal.op_u32_Rotr_sr
00000000 l    d  .literal.op_u32_Rotr_rs	00000000 .literal.op_u32_Rotr_rs
00000000 l    d  .literal.op_u32_Rotl_ss	00000000 .literal.op_u32_Rotl_ss
00000000 l    d  .literal.op_u32_Rotl_sr	00000000 .literal.op_u32_Rotl_sr
00000000 l    d  .literal.op_u32_Rotl_rs	00000000 .literal.op_u32_Rotl_rs
00000000 l    d  .literal.op_u32_ShiftRight_ss	00000000 .literal.op_u32_ShiftRight_ss
00000000 l    d  .literal.op_u32_ShiftRight_sr	00000000 .literal.op_u32_ShiftRight_sr
00000000 l    d  .literal.op_u32_ShiftRight_rs	00000000 .literal.op_u32_ShiftRight_rs
00000000 l    d  .literal.op_i32_ShiftRight_ss	00000000 .literal.op_i32_ShiftRight_ss
00000000 l    d  .literal.op_i32_ShiftRight_sr	00000000 .literal.op_i32_ShiftRight_sr
00000000 l    d  .literal.op_i32_ShiftRight_rs	00000000 .literal.op_i32_ShiftRight_rs
00000000 l    d  .literal.op_u32_ShiftLeft_ss	00000000 .literal.op_u32_ShiftLeft_ss
00000000 l    d  .literal.op_u32_ShiftLeft_sr	00000000 .literal.op_u32_ShiftLeft_sr
00000000 l    d  .literal.op_u32_ShiftLeft_rs	00000000 .literal.op_u32_ShiftLeft_rs
00000000 l    d  .literal.op_u32_Xor_ss	00000000 .literal.op_u32_Xor_ss
00000000 l    d  .literal.op_u32_Xor_rs	00000000 .literal.op_u32_Xor_rs
00000000 l    d  .literal.op_u32_Or_ss	00000000 .literal.op_u32_Or_ss
00000000 l    d  .literal.op_u32_Or_rs	00000000 .literal.op_u32_Or_rs
00000000 l    d  .literal.op_u32_And_ss	00000000 .literal.op_u32_And_ss
00000000 l    d  .literal.op_u32_And_rs	00000000 .literal.op_u32_And_rs
00000000 l    d  .literal.op_u32_Remainder_ss	00000000 .literal.op_u32_Remainder_ss
00000000 l    d  .literal.op_u32_Remainder_sr	00000000 .literal.op_u32_Remainder_sr
00000000 l    d  .literal.op_u32_Remainder_rs	00000000 .literal.op_u32_Remainder_rs
00000000 l    d  .literal.op_i32_Remainder_ss	00000000 .literal.op_i32_Remainder_ss
00000000 l    d  .literal.op_i32_Remainder_sr	00000000 .literal.op_i32_Remainder_sr
00000000 l    d  .literal.op_i32_Remainder_rs	00000000 .literal.op_i32_Remainder_rs
00000000 l    d  .literal.op_u32_Divide_ss	00000000 .literal.op_u32_Divide_ss
00000000 l    d  .literal.op_u32_Divide_sr	00000000 .literal.op_u32_Divide_sr
00000000 l    d  .literal.op_u32_Divide_rs	00000000 .literal.op_u32_Divide_rs
00000000 l    d  .literal.op_i32_Divide_ss	00000000 .literal.op_i32_Divide_ss
00000000 l    d  .literal.op_i32_Divide_sr	00000000 .literal.op_i32_Divide_sr
00000000 l    d  .literal.op_i32_Divide_rs	00000000 .literal.op_i32_Divide_rs
00000000 l    d  .literal.op_i32_Multiply_ss	00000000 .literal.op_i32_Multiply_ss
00000000 l    d  .literal.op_i32_Multiply_rs	00000000 .literal.op_i32_Multiply_rs
00000000 l    d  .literal.op_i32_Subtract_ss	00000000 .literal.op_i32_Subtract_ss
00000000 l    d  .literal.op_i32_Subtract_sr	00000000 .literal.op_i32_Subtract_sr
00000000 l    d  .literal.op_i32_Subtract_rs	00000000 .literal.op_i32_Subtract_rs
00000000 l    d  .literal.op_i32_Add_ss	00000000 .literal.op_i32_Add_ss
00000000 l    d  .literal.op_i32_Add_rs	00000000 .literal.op_i32_Add_rs
00000000 l    d  .literal.op_f64_GreaterThanOrEqual_ss	00000000 .literal.op_f64_GreaterThanOrEqual_ss
00000000 l    d  .literal.op_f64_GreaterThanOrEqual_sr	00000000 .literal.op_f64_GreaterThanOrEqual_sr
00000000 l    d  .literal.op_f64_GreaterThanOrEqual_rs	00000000 .literal.op_f64_GreaterThanOrEqual_rs
00000000 l    d  .literal.op_f64_LessThanOrEqual_ss	00000000 .literal.op_f64_LessThanOrEqual_ss
00000000 l    d  .literal.op_f64_LessThanOrEqual_sr	00000000 .literal.op_f64_LessThanOrEqual_sr
00000000 l    d  .literal.op_f64_LessThanOrEqual_rs	00000000 .literal.op_f64_LessThanOrEqual_rs
00000000 l    d  .literal.op_f64_GreaterThan_ss	00000000 .literal.op_f64_GreaterThan_ss
00000000 l    d  .literal.op_f64_GreaterThan_sr	00000000 .literal.op_f64_GreaterThan_sr
00000000 l    d  .literal.op_f64_GreaterThan_rs	00000000 .literal.op_f64_GreaterThan_rs
00000000 l    d  .literal.op_f64_LessThan_ss	00000000 .literal.op_f64_LessThan_ss
00000000 l    d  .literal.op_f64_LessThan_sr	00000000 .literal.op_f64_LessThan_sr
00000000 l    d  .literal.op_f64_LessThan_rs	00000000 .literal.op_f64_LessThan_rs
00000000 l    d  .literal.op_f64_NotEqual_ss	00000000 .literal.op_f64_NotEqual_ss
00000000 l    d  .literal.op_f64_NotEqual_rs	00000000 .literal.op_f64_NotEqual_rs
00000000 l    d  .literal.op_f64_Equal_ss	00000000 .literal.op_f64_Equal_ss
00000000 l    d  .literal.op_f64_Equal_rs	00000000 .literal.op_f64_Equal_rs
00000000 l    d  .literal.op_f32_GreaterThanOrEqual_ss	00000000 .literal.op_f32_GreaterThanOrEqual_ss
00000000 l    d  .literal.op_f32_GreaterThanOrEqual_sr	00000000 .literal.op_f32_GreaterThanOrEqual_sr
00000000 l    d  .literal.op_f32_GreaterThanOrEqual_rs	00000000 .literal.op_f32_GreaterThanOrEqual_rs
00000000 l    d  .literal.op_f32_LessThanOrEqual_ss	00000000 .literal.op_f32_LessThanOrEqual_ss
00000000 l    d  .literal.op_f32_LessThanOrEqual_sr	00000000 .literal.op_f32_LessThanOrEqual_sr
00000000 l    d  .literal.op_f32_LessThanOrEqual_rs	00000000 .literal.op_f32_LessThanOrEqual_rs
00000000 l    d  .literal.op_f32_GreaterThan_ss	00000000 .literal.op_f32_GreaterThan_ss
00000000 l    d  .literal.op_f32_GreaterThan_sr	00000000 .literal.op_f32_GreaterThan_sr
00000000 l    d  .literal.op_f32_GreaterThan_rs	00000000 .literal.op_f32_GreaterThan_rs
00000000 l    d  .literal.op_f32_LessThan_ss	00000000 .literal.op_f32_LessThan_ss
00000000 l    d  .literal.op_f32_LessThan_sr	00000000 .literal.op_f32_LessThan_sr
00000000 l    d  .literal.op_f32_LessThan_rs	00000000 .literal.op_f32_LessThan_rs
00000000 l    d  .literal.op_f32_NotEqual_ss	00000000 .literal.op_f32_NotEqual_ss
00000000 l    d  .literal.op_f32_NotEqual_rs	00000000 .literal.op_f32_NotEqual_rs
00000000 l    d  .literal.op_f32_Equal_ss	00000000 .literal.op_f32_Equal_ss
00000000 l    d  .literal.op_f32_Equal_rs	00000000 .literal.op_f32_Equal_rs
00000000 l    d  .literal.op_u64_GreaterThanOrEqual_ss	00000000 .literal.op_u64_GreaterThanOrEqual_ss
00000000 l    d  .literal.op_u64_GreaterThanOrEqual_sr	00000000 .literal.op_u64_GreaterThanOrEqual_sr
00000000 l    d  .literal.op_u64_GreaterThanOrEqual_rs	00000000 .literal.op_u64_GreaterThanOrEqual_rs
00000000 l    d  .literal.op_i64_GreaterThanOrEqual_ss	00000000 .literal.op_i64_GreaterThanOrEqual_ss
00000000 l    d  .literal.op_i64_GreaterThanOrEqual_sr	00000000 .literal.op_i64_GreaterThanOrEqual_sr
00000000 l    d  .literal.op_i64_GreaterThanOrEqual_rs	00000000 .literal.op_i64_GreaterThanOrEqual_rs
00000000 l    d  .literal.op_u64_LessThanOrEqual_ss	00000000 .literal.op_u64_LessThanOrEqual_ss
00000000 l    d  .literal.op_u64_LessThanOrEqual_sr	00000000 .literal.op_u64_LessThanOrEqual_sr
00000000 l    d  .literal.op_u64_LessThanOrEqual_rs	00000000 .literal.op_u64_LessThanOrEqual_rs
00000000 l    d  .literal.op_i64_LessThanOrEqual_ss	00000000 .literal.op_i64_LessThanOrEqual_ss
00000000 l    d  .literal.op_i64_LessThanOrEqual_sr	00000000 .literal.op_i64_LessThanOrEqual_sr
00000000 l    d  .literal.op_i64_LessThanOrEqual_rs	00000000 .literal.op_i64_LessThanOrEqual_rs
00000000 l    d  .literal.op_u64_GreaterThan_ss	00000000 .literal.op_u64_GreaterThan_ss
00000000 l    d  .literal.op_u64_GreaterThan_sr	00000000 .literal.op_u64_GreaterThan_sr
00000000 l    d  .literal.op_u64_GreaterThan_rs	00000000 .literal.op_u64_GreaterThan_rs
00000000 l    d  .literal.op_i64_GreaterThan_ss	00000000 .literal.op_i64_GreaterThan_ss
00000000 l    d  .literal.op_i64_GreaterThan_sr	00000000 .literal.op_i64_GreaterThan_sr
00000000 l    d  .literal.op_i64_GreaterThan_rs	00000000 .literal.op_i64_GreaterThan_rs
00000000 l    d  .literal.op_u64_LessThan_ss	00000000 .literal.op_u64_LessThan_ss
00000000 l    d  .literal.op_u64_LessThan_sr	00000000 .literal.op_u64_LessThan_sr
00000000 l    d  .literal.op_u64_LessThan_rs	00000000 .literal.op_u64_LessThan_rs
00000000 l    d  .literal.op_i64_LessThan_ss	00000000 .literal.op_i64_LessThan_ss
00000000 l    d  .literal.op_i64_LessThan_sr	00000000 .literal.op_i64_LessThan_sr
00000000 l    d  .literal.op_i64_LessThan_rs	00000000 .literal.op_i64_LessThan_rs
00000000 l    d  .literal.op_i64_NotEqual_ss	00000000 .literal.op_i64_NotEqual_ss
00000000 l    d  .literal.op_i64_NotEqual_rs	00000000 .literal.op_i64_NotEqual_rs
00000000 l    d  .literal.op_i64_Equal_ss	00000000 .literal.op_i64_Equal_ss
00000000 l    d  .literal.op_i64_Equal_rs	00000000 .literal.op_i64_Equal_rs
00000000 l    d  .literal.op_i64_EqualToZero_s	00000000 .literal.op_i64_EqualToZero_s
00000000 l    d  .literal.op_i64_EqualToZero_r	00000000 .literal.op_i64_EqualToZero_r
00000000 l    d  .literal.op_u32_GreaterThanOrEqual_ss	00000000 .literal.op_u32_GreaterThanOrEqual_ss
00000000 l    d  .literal.op_u32_GreaterThanOrEqual_sr	00000000 .literal.op_u32_GreaterThanOrEqual_sr
00000000 l    d  .literal.op_u32_GreaterThanOrEqual_rs	00000000 .literal.op_u32_GreaterThanOrEqual_rs
00000000 l    d  .literal.op_i32_GreaterThanOrEqual_ss	00000000 .literal.op_i32_GreaterThanOrEqual_ss
00000000 l    d  .literal.op_i32_GreaterThanOrEqual_sr	00000000 .literal.op_i32_GreaterThanOrEqual_sr
00000000 l    d  .literal.op_i32_GreaterThanOrEqual_rs	00000000 .literal.op_i32_GreaterThanOrEqual_rs
00000000 l    d  .literal.op_u32_LessThanOrEqual_ss	00000000 .literal.op_u32_LessThanOrEqual_ss
00000000 l    d  .literal.op_u32_LessThanOrEqual_sr	00000000 .literal.op_u32_LessThanOrEqual_sr
00000000 l    d  .literal.op_u32_LessThanOrEqual_rs	00000000 .literal.op_u32_LessThanOrEqual_rs
00000000 l    d  .literal.op_i32_LessThanOrEqual_ss	00000000 .literal.op_i32_LessThanOrEqual_ss
00000000 l    d  .literal.op_i32_LessThanOrEqual_sr	00000000 .literal.op_i32_LessThanOrEqual_sr
00000000 l    d  .literal.op_i32_LessThanOrEqual_rs	00000000 .literal.op_i32_LessThanOrEqual_rs
00000000 l    d  .literal.op_u32_GreaterThan_ss	00000000 .literal.op_u32_GreaterThan_ss
00000000 l    d  .literal.op_u32_GreaterThan_sr	00000000 .literal.op_u32_GreaterThan_sr
00000000 l    d  .literal.op_u32_GreaterThan_rs	00000000 .literal.op_u32_GreaterThan_rs
00000000 l    d  .literal.op_i32_GreaterThan_ss	00000000 .literal.op_i32_GreaterThan_ss
00000000 l    d  .literal.op_i32_GreaterThan_sr	00000000 .literal.op_i32_GreaterThan_sr
00000000 l    d  .literal.op_i32_GreaterThan_rs	00000000 .literal.op_i32_GreaterThan_rs
00000000 l    d  .literal.op_u32_LessThan_ss	00000000 .literal.op_u32_LessThan_ss
00000000 l    d  .literal.op_u32_LessThan_sr	00000000 .literal.op_u32_LessThan_sr
00000000 l    d  .literal.op_u32_LessThan_rs	00000000 .literal.op_u32_LessThan_rs
00000000 l    d  .literal.op_i32_LessThan_ss	00000000 .literal.op_i32_LessThan_ss
00000000 l    d  .literal.op_i32_LessThan_sr	00000000 .literal.op_i32_LessThan_sr
00000000 l    d  .literal.op_i32_LessThan_rs	00000000 .literal.op_i32_LessThan_rs
00000000 l    d  .literal.op_i32_NotEqual_ss	00000000 .literal.op_i32_NotEqual_ss
00000000 l    d  .literal.op_i32_NotEqual_rs	00000000 .literal.op_i32_NotEqual_rs
00000000 l    d  .literal.op_i32_Equal_ss	00000000 .literal.op_i32_Equal_ss
00000000 l    d  .literal.op_i32_Equal_rs	00000000 .literal.op_i32_Equal_rs
00000000 l    d  .literal.op_i32_EqualToZero_s	00000000 .literal.op_i32_EqualToZero_s
00000000 l    d  .literal.op_i32_EqualToZero_r	00000000 .literal.op_i32_EqualToZero_r
00000000 l    d  .literal.op_Const32	00000000 .literal.op_Const32
00000000 l    d  .literal.op_MemSize	00000000 .literal.op_MemSize
00000000 l    d  .literal.op_BranchIf_s	00000000 .literal.op_BranchIf_s
00000000 l    d  .literal.op_BranchIf_r	00000000 .literal.op_BranchIf_r
00000000 l    d  .literal.op_u64_TruncSat_f64_s_s	00000000 .literal.op_u64_TruncSat_f64_s_s
00000000 l    d  .literal.op_u64_TruncSat_f64_s_r	00000000 .literal.op_u64_TruncSat_f64_s_r
00000000 l    d  .literal.op_u64_TruncSat_f64_r_s	00000000 .literal.op_u64_TruncSat_f64_r_s
00000000 l    d  .literal.op_u64_TruncSat_f64_r_r	00000000 .literal.op_u64_TruncSat_f64_r_r
00000000 l    d  .literal.op_i64_TruncSat_f64_s_s	00000000 .literal.op_i64_TruncSat_f64_s_s
00000000 l    d  .literal.op_i64_TruncSat_f64_s_r	00000000 .literal.op_i64_TruncSat_f64_s_r
00000000 l    d  .literal.op_i64_TruncSat_f64_r_s	00000000 .literal.op_i64_TruncSat_f64_r_s
00000000 l    d  .literal.op_i64_TruncSat_f64_r_r	00000000 .literal.op_i64_TruncSat_f64_r_r
00000000 l    d  .literal.op_u64_TruncSat_f32_s_s	00000000 .literal.op_u64_TruncSat_f32_s_s
00000000 l    d  .literal.op_u64_TruncSat_f32_s_r	00000000 .literal.op_u64_TruncSat_f32_s_r
00000000 l    d  .literal.op_u64_TruncSat_f32_r_s	00000000 .literal.op_u64_TruncSat_f32_r_s
00000000 l    d  .literal.op_u64_TruncSat_f32_r_r	00000000 .literal.op_u64_TruncSat_f32_r_r
00000000 l    d  .literal.op_i64_TruncSat_f32_s_s	00000000 .literal.op_i64_TruncSat_f32_s_s
00000000 l    d  .literal.op_i64_TruncSat_f32_s_r	00000000 .literal.op_i64_TruncSat_f32_s_r
00000000 l    d  .literal.op_i64_TruncSat_f32_r_s	00000000 .literal.op_i64_TruncSat_f32_r_s
00000000 l    d  .literal.op_i64_TruncSat_f32_r_r	00000000 .literal.op_i64_TruncSat_f32_r_r
00000000 l    d  .literal.op_u32_TruncSat_f64_s_s	00000000 .literal.op_u32_TruncSat_f64_s_s
00000000 l    d  .literal.op_u32_TruncSat_f64_s_r	00000000 .literal.op_u32_TruncSat_f64_s_r
00000000 l    d  .literal.op_u32_TruncSat_f64_r_s	00000000 .literal.op_u32_TruncSat_f64_r_s
00000000 l    d  .literal.op_u32_TruncSat_f64_r_r	00000000 .literal.op_u32_TruncSat_f64_r_r
00000000 l    d  .literal.op_i32_TruncSat_f64_s_s	00000000 .literal.op_i32_TruncSat_f64_s_s
00000000 l    d  .literal.op_i32_TruncSat_f64_s_r	00000000 .literal.op_i32_TruncSat_f64_s_r
00000000 l    d  .literal.op_i32_TruncSat_f64_r_s	00000000 .literal.op_i32_TruncSat_f64_r_s
00000000 l    d  .literal.op_i32_TruncSat_f64_r_r	00000000 .literal.op_i32_TruncSat_f64_r_r
00000000 l    d  .literal.op_u32_TruncSat_f32_s_s	00000000 .literal.op_u32_TruncSat_f32_s_s
00000000 l    d  .literal.op_u32_TruncSat_f32_s_r	00000000 .literal.op_u32_TruncSat_f32_s_r
00000000 l    d  .literal.op_u32_TruncSat_f32_r_s	00000000 .literal.op_u32_TruncSat_f32_r_s
00000000 l    d  .literal.op_u32_TruncSat_f32_r_r	00000000 .literal.op_u32_TruncSat_f32_r_r
00000000 l    d  .literal.op_i32_TruncSat_f32_s_s	00000000 .literal.op_i32_TruncSat_f32_s_s
00000000 l    d  .literal.op_i32_TruncSat_f32_s_r	00000000 .literal.op_i32_TruncSat_f32_s_r
00000000 l    d  .literal.op_i32_TruncSat_f32_r_s	00000000 .literal.op_i32_TruncSat_f32_r_s
00000000 l    d  .literal.op_i32_TruncSat_f32_r_r	00000000 .literal.op_i32_TruncSat_f32_r_r
00000000 l    d  .literal.op_MemCopy	00000000 .literal.op_MemCopy
00000000 l    d  .literal.op_Const64	00000000 .literal.op_Const64
00000000 l    d  .literal.op_i64_Store_i32_ss	00000000 .literal.op_i64_Store_i32_ss
00000000 l    d  .literal.op_i64_Store_i32_sr	00000000 .literal.op_i64_Store_i32_sr
00000000 l    d  .literal.op_i64_Store_i32_rs	00000000 .literal.op_i64_Store_i32_rs
00000000 l    d  .literal.op_i64_Store_i16_ss	00000000 .literal.op_i64_Store_i16_ss
00000000 l    d  .literal.op_i64_Store_i16_sr	00000000 .literal.op_i64_Store_i16_sr
00000000 l    d  .literal.op_i64_Store_i16_rs	00000000 .literal.op_i64_Store_i16_rs
00000000 l    d  .literal.op_i64_Store_u8_ss	00000000 .literal.op_i64_Store_u8_ss
00000000 l    d  .literal.op_i64_Store_u8_sr	00000000 .literal.op_i64_Store_u8_sr
00000000 l    d  .literal.op_i64_Store_u8_rs	00000000 .literal.op_i64_Store_u8_rs
00000000 l    d  .literal.op_i32_Store_i16_ss	00000000 .literal.op_i32_Store_i16_ss
00000000 l    d  .literal.op_i32_Store_i16_sr	00000000 .literal.op_i32_Store_i16_sr
00000000 l    d  .literal.op_i32_Store_i16_rs	00000000 .literal.op_i32_Store_i16_rs
00000000 l    d  .literal.op_i32_Store_u8_ss	00000000 .literal.op_i32_Store_u8_ss
00000000 l    d  .literal.op_i32_Store_u8_sr	00000000 .literal.op_i32_Store_u8_sr
00000000 l    d  .literal.op_i32_Store_u8_rs	00000000 .literal.op_i32_Store_u8_rs
00000000 l    d  .literal.op_f64_Store_f64_rr	00000000 .literal.op_f64_Store_f64_rr
00000000 l    d  .literal.op_f64_Store_f64_ss	00000000 .literal.op_f64_Store_f64_ss
00000000 l    d  .literal.op_f64_Store_f64_sr	00000000 .literal.op_f64_Store_f64_sr
00000000 l    d  .literal.op_f64_Store_f64_rs	00000000 .literal.op_f64_Store_f64_rs
00000000 l    d  .literal.op_f32_Store_f32_rr	00000000 .literal.op_f32_Store_f32_rr
00000000 l    d  .literal.op_f32_Store_f32_ss	00000000 .literal.op_f32_Store_f32_ss
00000000 l    d  .literal.op_f32_Store_f32_sr	00000000 .literal.op_f32_Store_f32_sr
00000000 l    d  .literal.op_f32_Store_f32_rs	00000000 .literal.op_f32_Store_f32_rs
00000000 l    d  .literal.op_i64_Store_i64_ss	00000000 .literal.op_i64_Store_i64_ss
00000000 l    d  .literal.op_i64_Store_i64_sr	00000000 .literal.op_i64_Store_i64_sr
00000000 l    d  .literal.op_i64_Store_i64_rs	00000000 .literal.op_i64_Store_i64_rs
00000000 l    d  .literal.op_i32_Store_i32_ss	00000000 .literal.op_i32_Store_i32_ss
00000000 l    d  .literal.op_i32_Store_i32_sr	00000000 .literal.op_i32_Store_i32_sr
00000000 l    d  .literal.op_i32_Store_i32_rs	00000000 .literal.op_i32_Store_i32_rs
00000000 l    d  .literal.op_i64_Load_u32_s	00000000 .literal.op_i64_Load_u32_s
00000000 l    d  .literal.op_i64_Load_u32_r	00000000 .literal.op_i64_Load_u32_r
00000000 l    d  .literal.op_i64_Load_i32_s	00000000 .literal.op_i64_Load_i32_s
00000000 l    d  .literal.op_i64_Load_i32_r	00000000 .literal.op_i64_Load_i32_r
00000000 l    d  .literal.op_i64_Load_u16_s	00000000 .literal.op_i64_Load_u16_s
00000000 l    d  .literal.op_i64_Load_u16_r	00000000 .literal.op_i64_Load_u16_r
00000000 l    d  .literal.op_i64_Load_i16_s	00000000 .literal.op_i64_Load_i16_s
00000000 l    d  .literal.op_i64_Load_i16_r	00000000 .literal.op_i64_Load_i16_r
00000000 l    d  .literal.op_i64_Load_u8_s	00000000 .literal.op_i64_Load_u8_s
00000000 l    d  .literal.op_i64_Load_u8_r	00000000 .literal.op_i64_Load_u8_r
00000000 l    d  .literal.op_i64_Load_i8_s	00000000 .literal.op_i64_Load_i8_s
00000000 l    d  .literal.op_i64_Load_i8_r	00000000 .literal.op_i64_Load_i8_r
00000000 l    d  .literal.op_i32_Load_u16_s	00000000 .literal.op_i32_Load_u16_s
00000000 l    d  .literal.op_i32_Load_u16_r	00000000 .literal.op_i32_Load_u16_r
00000000 l    d  .literal.op_i32_Load_i16_s	00000000 .literal.op_i32_Load_i16_s
00000000 l    d  .literal.op_i32_Load_i16_r	00000000 .literal.op_i32_Load_i16_r
00000000 l    d  .literal.op_i32_Load_u8_s	00000000 .literal.op_i32_Load_u8_s
00000000 l    d  .literal.op_i32_Load_u8_r	00000000 .literal.op_i32_Load_u8_r
00000000 l    d  .literal.op_i32_Load_i8_s	00000000 .literal.op_i32_Load_i8_s
00000000 l    d  .literal.op_i32_Load_i8_r	00000000 .literal.op_i32_Load_i8_r
00000000 l    d  .literal.op_f64_Load_f64_s	00000000 .literal.op_f64_Load_f64_s
00000000 l    d  .literal.op_f64_Load_f64_r	00000000 .literal.op_f64_Load_f64_r
00000000 l    d  .literal.op_f32_Load_f32_s	00000000 .literal.op_f32_Load_f32_s
00000000 l    d  .literal.op_f32_Load_f32_r	00000000 .literal.op_f32_Load_f32_r
00000000 l    d  .literal.op_i64_Load_i64_s	00000000 .literal.op_i64_Load_i64_s
00000000 l    d  .literal.op_i64_Load_i64_r	00000000 .literal.op_i64_Load_i64_r
00000000 l    d  .literal.op_i32_Load_i32_s	00000000 .literal.op_i32_Load_i32_s
00000000 l    d  .literal.op_i32_Load_i32_r	00000000 .literal.op_i32_Load_i32_r
00000000 l    d  .literal.op_MemFill	00000000 .literal.op_MemFill
00000000 l    d  .literal.op_Entry	00000000 .literal.op_Entry
00000000 l    d  .literal.EnsureCodePageNumLines	00000000 .literal.EnsureCodePageNumLines
00000000 l    d  .literal.EmitOp	00000000 .literal.EmitOp
00000000 l    d  .literal.Pop	00000000 .literal.Pop
00000000 l    d  .literal.op_f64_CopySign_ss	00000000 .literal.op_f64_CopySign_ss
00000000 l    d  .literal.op_f64_CopySign_sr	00000000 .literal.op_f64_CopySign_sr
00000000 l    d  .literal.op_f64_CopySign_rs	00000000 .literal.op_f64_CopySign_rs
00000000 l    d  .literal.op_f64_Max_ss	00000000 .literal.op_f64_Max_ss
00000000 l    d  .literal.op_f64_Sqrt_s	00000000 .literal.op_f64_Sqrt_s
00000000 l    d  .literal.op_f64_Sqrt_r	00000000 .literal.op_f64_Sqrt_r
00000000 l    d  .literal.op_f64_Nearest_s	00000000 .literal.op_f64_Nearest_s
00000000 l    d  .literal.op_f64_Nearest_r	00000000 .literal.op_f64_Nearest_r
00000000 l    d  .literal.op_f64_Trunc_s	00000000 .literal.op_f64_Trunc_s
00000000 l    d  .literal.op_f64_Trunc_r	00000000 .literal.op_f64_Trunc_r
00000000 l    d  .literal.op_f64_Floor_s	00000000 .literal.op_f64_Floor_s
00000000 l    d  .literal.op_f64_Floor_r	00000000 .literal.op_f64_Floor_r
00000000 l    d  .literal.op_f64_Ceil_s	00000000 .literal.op_f64_Ceil_s
00000000 l    d  .literal.op_f64_Ceil_r	00000000 .literal.op_f64_Ceil_r
00000000 l    d  .literal.op_f32_CopySign_ss	00000000 .literal.op_f32_CopySign_ss
00000000 l    d  .literal.op_f32_CopySign_sr	00000000 .literal.op_f32_CopySign_sr
00000000 l    d  .literal.op_f32_CopySign_rs	00000000 .literal.op_f32_CopySign_rs
00000000 l    d  .literal.op_f32_Sqrt_s	00000000 .literal.op_f32_Sqrt_s
00000000 l    d  .literal.op_f32_Sqrt_r	00000000 .literal.op_f32_Sqrt_r
00000000 l    d  .literal.op_f32_Nearest_s	00000000 .literal.op_f32_Nearest_s
00000000 l    d  .literal.op_f32_Nearest_r	00000000 .literal.op_f32_Nearest_r
00000000 l    d  .literal.op_f32_Trunc_s	00000000 .literal.op_f32_Trunc_s
00000000 l    d  .literal.op_f32_Trunc_r	00000000 .literal.op_f32_Trunc_r
00000000 l    d  .literal.op_f32_Floor_s	00000000 .literal.op_f32_Floor_s
00000000 l    d  .literal.op_f32_Floor_r	00000000 .literal.op_f32_Floor_r
00000000 l    d  .literal.op_f32_Ceil_s	00000000 .literal.op_f32_Ceil_s
00000000 l    d  .literal.op_f32_Ceil_r	00000000 .literal.op_f32_Ceil_r
00000000 l    d  .literal.op_u64_Popcnt_s	00000000 .literal.op_u64_Popcnt_s
00000000 l    d  .literal.op_u64_Popcnt_r	00000000 .literal.op_u64_Popcnt_r
00000000 l    d  .literal.op_u64_Ctz_s	00000000 .literal.op_u64_Ctz_s
00000000 l    d  .literal.op_u64_Ctz_r	00000000 .literal.op_u64_Ctz_r
00000000 l    d  .literal.op_u64_Clz_s	00000000 .literal.op_u64_Clz_s
00000000 l    d  .literal.op_u64_Clz_r	00000000 .literal.op_u64_Clz_r
00000000 l    d  .literal.op_u32_Popcnt_s	00000000 .literal.op_u32_Popcnt_s
00000000 l    d  .literal.op_u32_Popcnt_r	00000000 .literal.op_u32_Popcnt_r
00000000 l    d  .literal.op_u32_Ctz_s	00000000 .literal.op_u32_Ctz_s
00000000 l    d  .literal.op_u32_Ctz_r	00000000 .literal.op_u32_Ctz_r
00000000 l    d  .literal.op_u32_Clz_s	00000000 .literal.op_u32_Clz_s
00000000 l    d  .literal.op_u32_Clz_r	00000000 .literal.op_u32_Clz_r
00000000 l    d  .literal.op_MemGrow	00000000 .literal.op_MemGrow
00000000 l    d  .literal.ReadBlockType	00000000 .literal.ReadBlockType
00000000 l    d  .literal.op_f64_Min_ss	00000000 .literal.op_f64_Min_ss
00000000 l    d  .literal.op_f32_Max_ss	00000000 .literal.op_f32_Max_ss
00000000 l    d  .literal.op_f32_Min_ss	00000000 .literal.op_f32_Min_ss
00000000 l    d  .literal.Call$constprop$0	00000000 .literal.Call$constprop$0
00000000 l    d  .literal.op_Call	00000000 .literal.op_Call
00000000 l    d  .literal.EmitSlotOffset$isra$0	00000000 .literal.EmitSlotOffset$isra$0
00000000 l    d  .literal.EmitConstant32$isra$0	00000000 .literal.EmitConstant32$isra$0
00000000 l    d  .literal.op_f64_Min_rs	00000000 .literal.op_f64_Min_rs
00000000 l    d  .literal.op_f64_Max_rs	00000000 .literal.op_f64_Max_rs
00000000 l    d  .literal.op_f32_Min_rs	00000000 .literal.op_f32_Min_rs
00000000 l    d  .literal.op_f32_Max_rs	00000000 .literal.op_f32_Max_rs
00000000 l    d  .literal.AllocateSlotsWithinRange	00000000 .literal.AllocateSlotsWithinRange
00000000 l    d  .literal.PreserveRegisterIfOccupied	00000000 .literal.PreserveRegisterIfOccupied
00000000 l    d  .literal.FindReferencedLocalWithinCurrentBlock	00000000 .literal.FindReferencedLocalWithinCurrentBlock
00000000 l    d  .literal.PreserveArgsAndLocals	00000000 .literal.PreserveArgsAndLocals
00000000 l    d  .literal.CopyStackIndexToSlot	00000000 .literal.CopyStackIndexToSlot
00000000 l    d  .literal.CopyStackSlotsR	00000000 .literal.CopyStackSlotsR
00000000 l    d  .literal.ReturnValues	00000000 .literal.ReturnValues
00000000 l    d  .literal.Compile_End	00000000 .literal.Compile_End
00000000 l    d  .literal.Compile_Memory_Size	00000000 .literal.Compile_Memory_Size
00000000 l    d  .literal.Compile_GetLocal	00000000 .literal.Compile_GetLocal
00000000 l    d  .literal.PushBlockResults	00000000 .literal.PushBlockResults
00000000 l    d  .literal.CompileCallArgsAndReturn	00000000 .literal.CompileCallArgsAndReturn
00000000 l    d  .literal.Compile_CallIndirect	00000000 .literal.Compile_CallIndirect
00000000 l    d  .literal.Compile_Call	00000000 .literal.Compile_Call
00000000 l    d  .literal.Compile_Unreachable	00000000 .literal.Compile_Unreachable
00000000 l    d  .literal.CopyStackTopToRegister$constprop$0	00000000 .literal.CopyStackTopToRegister$constprop$0
00000000 l    d  .literal.ResolveBlockResults	00000000 .literal.ResolveBlockResults
00000000 l    d  .literal.Compile_BranchTable	00000000 .literal.Compile_BranchTable
00000000 l    d  .literal.Compile_Memory_CopyFill	00000000 .literal.Compile_Memory_CopyFill
00000000 l    d  .literal.Compile_Memory_Grow	00000000 .literal.Compile_Memory_Grow
00000000 l    d  .literal.Compile_Return	00000000 .literal.Compile_Return
00000000 l    d  .literal.Compile_Convert	00000000 .literal.Compile_Convert
00000000 l    d  .literal.Compile_SetLocal	00000000 .literal.Compile_SetLocal
00000000 l    d  .literal.Compile_GetSetGlobal	00000000 .literal.Compile_GetSetGlobal
00000000 l    d  .literal.Compile_Operator	00000000 .literal.Compile_Operator
00000000 l    d  .literal.Compile_Load_Store	00000000 .literal.Compile_Load_Store
00000000 l    d  .literal.Compile_Drop	00000000 .literal.Compile_Drop
00000000 l    d  .literal.Compile_Select	00000000 .literal.Compile_Select
00000000 l    d  .literal.PushConst	00000000 .literal.PushConst
00000000 l    d  .literal.Compile_Const_f64	00000000 .literal.Compile_Const_f64
00000000 l    d  .literal.Compile_Const_f32	00000000 .literal.Compile_Const_f32
00000000 l    d  .literal.Compile_Const_i64	00000000 .literal.Compile_Const_i64
00000000 l    d  .literal.Compile_Const_i32	00000000 .literal.Compile_Const_i32
00000000 l    d  .literal.Compile_Branch	00000000 .literal.Compile_Branch
00000000 l    d  .literal.GetMaxUsedSlotPlusOne	00000000 .literal.GetMaxUsedSlotPlusOne
00000000 l    d  .literal.CompileRawFunction	00000000 .literal.CompileRawFunction
00000000 l    d  .literal.GetOpInfo	00000000 .literal.GetOpInfo
00000000 l    d  .literal.CompileBlockStatements	00000000 .literal.CompileBlockStatements
00000000 l    d  .literal.CompileFunction$part$0	00000000 .literal.CompileFunction$part$0
00000000 l    d  .literal.op_Compile	00000000 .literal.op_Compile
00000000 l    d  .literal.op_CallIndirect	00000000 .literal.op_CallIndirect
00000000 l    d  .literal.CompileBlock	00000000 .literal.CompileBlock
00000000 l    d  .literal.Compile_LoopOrBlock	00000000 .literal.Compile_LoopOrBlock
00000000 l    d  .literal.Compile_If	00000000 .literal.Compile_If
00000000 l    d  .literal.CompileFunction	00000000 .literal.CompileFunction
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .xtensa.info	00000000 .xtensa.info
00000000 l    d  .xt.lit	00000000 .xt.lit
00000000 l    d  .xt.prop	00000000 .xt.prop
00000000         *UND*	00000000 GetPagePC
00000000         *UND*	00000000 EmitWord_impl
00000000         *UND*	00000000 m3SegmentedMemAccess
00000000         *UND*	00000000 backtrace_err
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 esp_log_system_timestamp
00000000         *UND*	00000000 snprintf
00000000         *UND*	00000000 safe_printf
00000000         *UND*	00000000 free
00000000         *UND*	00000000 vTaskDelay
00000000         *UND*	00000000 backtrace
00000000         *UND*	00000000 ProfileHit
00000000         *UND*	00000000 __truncdfsf2
00000000         *UND*	00000000 __extendsfdf2
00000000         *UND*	00000000 __floatundidf
00000000         *UND*	00000000 __floatdidf
00000000         *UND*	00000000 __floatunsidf
00000000         *UND*	00000000 __floatsidf
00000000         *UND*	00000000 __floatundisf
00000000         *UND*	00000000 __floatdisf
00000000         *UND*	00000000 __unorddf2
00000000         *UND*	00000000 __ledf2
00000000         *UND*	00000000 __gedf2
00000000         *UND*	00000000 __fixunsdfdi
00000000         *UND*	00000000 __fixdfdi
00000000         *UND*	00000000 __fixunssfdi
00000000         *UND*	00000000 __fixsfdi
00000000         *UND*	00000000 __fixunsdfsi
00000000         *UND*	00000000 __fixdfsi
00000000         *UND*	00000000 __divdf3
00000000         *UND*	00000000 __muldf3
00000000         *UND*	00000000 __subdf3
00000000         *UND*	00000000 __adddf3
00000000         *UND*	00000000 __divsf3
00000000         *UND*	00000000 __umoddi3
00000000         *UND*	00000000 __moddi3
00000000         *UND*	00000000 __udivdi3
00000000         *UND*	00000000 __divdi3
00000000         *UND*	00000000 __ltdf2
00000000         *UND*	00000000 __gtdf2
00000000         *UND*	00000000 __nedf2
00000000         *UND*	00000000 __eqdf2
00000000         *UND*	00000000 m3_memcpy
00000000         *UND*	00000000 m3_memset
00000000         *UND*	00000000 NumFreeLines
00000000         *UND*	00000000 AcquireCodePageWithCapacity
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 ReleaseCodePage
00000000         *UND*	00000000 log_emit
00000000         *UND*	00000000 Is64BitType
00000000         *UND*	00000000 sqrt
00000000         *UND*	00000000 rint
00000000         *UND*	00000000 trunc
00000000         *UND*	00000000 floor
00000000         *UND*	00000000 ceil
00000000         *UND*	00000000 sqrtf
00000000         *UND*	00000000 rintf
00000000         *UND*	00000000 truncf
00000000         *UND*	00000000 floorf
00000000         *UND*	00000000 ceilf
00000000         *UND*	00000000 __popcountdi2
00000000         *UND*	00000000 __ctzdi2
00000000         *UND*	00000000 __popcountsi2
00000000         *UND*	00000000 ResizeMemory
00000000         *UND*	00000000 ReadLebSigned
00000000         *UND*	00000000 get_indention_string
00000000         *UND*	00000000 SPrintFuncTypeSignature
00000000         *UND*	00000000 NormalizeType
00000000         *UND*	00000000 m3_Yield
00000000         *UND*	00000000 EmitWord32
00000000         *UND*	00000000 IsFpType
00000000         *UND*	00000000 GetFunctionNumArgsAndLocals
00000000         *UND*	00000000 GetFuncTypeNumResults
00000000         *UND*	00000000 GetFuncTypeResultType
00000000         *UND*	00000000 ReadLEB_i7
00000000         *UND*	00000000 ReadLEB_ptr
00000000         *UND*	00000000 GetFuncTypeNumParams
00000000         *UND*	00000000 ReadLEB_u32
00000000         *UND*	00000000 Module_GetFunction
00000000         *UND*	00000000 m3_GetFunctionName
00000000         *UND*	00000000 AcquireCodePage
00000000 g     O .dram1.3	00001a94 c_operations
00000000 g     O .rodata.c_operationsFC	0000016c c_operationsFC
00000000         *UND*	00000000 IsIntType
00000000         *UND*	00000000 memcpy
00000000         *UND*	00000000 EmitWord64
00000000         *UND*	00000000 Read_f64
00000000         *UND*	00000000 Read_f32
00000000         *UND*	00000000 ReadLEB_i64
00000000         *UND*	00000000 ReadLEB_i32
00000000 g     F .text.GetMaxUsedSlotPlusOne	0000008a GetMaxUsedSlotPlusOne
00000000 g     F .text.AddTrapRecord	00000007 AddTrapRecord
00000000 g     F .text.CompileRawFunction	0000006f CompileRawFunction
00000000 g     F .text.GetOpInfo	00000039 GetOpInfo
00000000 g     F .text.CompileBlockStatements	000000d8 CompileBlockStatements
00000000         *UND*	00000000 nothing_todo
00000000         *UND*	00000000 Read_opcode
00000000         *UND*	00000000 log_opcode
00000000         *UND*	00000000 memset
00000000         *UND*	00000000 GetFunctionNumReturns
00000000         *UND*	00000000 GetFunctionNumArgs
00000000         *UND*	00000000 GetFunctionArgType
00000000         *UND*	00000000 m3_Int_CopyMem
00000000 g     F .text.CompileBlock	00000451 CompileBlock
00000000         *UND*	00000000 GetFuncTypeParamType
00000000 g     F .text.CompileFunction	00000016 CompileFunction
00000000 g     O .rodata.WASM_DEBUG_CompileFunction	00000008 WASM_DEBUG_CompileFunction
00000000 g     O .rodata.WASM_DEBUG_Const	00000001 WASM_DEBUG_Const
00000000 g     O .rodata.WASM_DEBUG_ContinueLoopIf	00000001 WASM_DEBUG_ContinueLoopIf
00000000 g     O .rodata.WASM_DEBUG_ContinueLoop	00000001 WASM_DEBUG_ContinueLoop
00000000 g     O .rodata.WASM_DEBUG_BanchIf	00000001 WASM_DEBUG_BanchIf
00000000 g     O .rodata.WASM_DEBUG_Loop	00000001 WASM_DEBUG_Loop
00000000 g     O .rodata.WASM_MemFill_DisableCheck	00000001 WASM_MemFill_DisableCheck
00000000 g     O .rodata.WASM_DEBUG_MemFill	00000001 WASM_DEBUG_MemFill
00000000 g     O .rodata.WASM_MemCopy_DisableCheck	00000001 WASM_MemCopy_DisableCheck
00000000 g     O .rodata.WASM_DEBUG_MemCopy	00000001 WASM_DEBUG_MemCopy
00000000 g     O .rodata.WASM_DEBUG_MemGrow	00000001 WASM_DEBUG_MemGrow
00000000 g     O .rodata.WASM_DEBUG_CallRawFunction	00000001 WASM_DEBUG_CallRawFunction



Disassembly of section .literal.EmitPointer:

00000000 <.literal.EmitPointer>:
	...
			0: R_XTENSA_32	GetPagePC
			4: R_XTENSA_32	EmitWord_impl

Disassembly of section .literal.ReservePointer:

00000000 <.literal.ReservePointer>:
	...
			0: R_XTENSA_32	GetPagePC
			4: R_XTENSA_32	.text.EmitPointer

Disassembly of section .literal.op_ContinueLoop:

00000000 <.literal.op_ContinueLoop>:
   0:	00000000 	
			0: R_XTENSA_32	m3SegmentedMemAccess

Disassembly of section .literal.op_BranchTable:

00000000 <.literal.op_BranchTable>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$36
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess

Disassembly of section .literal.op_Branch:

00000000 <.literal.op_Branch>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$33
			4: R_XTENSA_32	m3SegmentedMemAccess

Disassembly of section .literal.op_Unsupported:

00000000 <.literal.op_Unsupported>:
	...
			0: R_XTENSA_32	.rodata.op_Unsupported.str1.4
			4: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_Loop:

00000000 <.literal.op_Loop>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$32
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_Unreachable:

00000000 <.literal.op_Unreachable>:
   0:	00000000 	
			0: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_CallRawFunction:

00000000 <.literal.op_CallRawFunction>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.op_CallRawFunction.str1.4
   4:	00000008 	
			4: R_XTENSA_32	.rodata.op_CallRawFunction.str1.4
   8:	0000003c 	
			8: R_XTENSA_32	.rodata.op_CallRawFunction.str1.4
   c:	00000040 	
			c: R_XTENSA_32	.rodata.op_CallRawFunction.str1.4
  10:	00000800 	
	...
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	m3SegmentedMemAccess
			20: R_XTENSA_32	backtrace_err
			24: R_XTENSA_32	malloc
			28: R_XTENSA_32	esp_log_system_timestamp
			2c: R_XTENSA_32	snprintf
			30: R_XTENSA_32	safe_printf
			34: R_XTENSA_32	free
			38: R_XTENSA_32	malloc
			3c: R_XTENSA_32	esp_log_system_timestamp
			40: R_XTENSA_32	snprintf
			44: R_XTENSA_32	safe_printf
			48: R_XTENSA_32	free
			4c: R_XTENSA_32	vTaskDelay
			50: R_XTENSA_32	backtrace
			54: R_XTENSA_32	backtrace_err

Disassembly of section .literal.profileOp:

00000000 <.literal.profileOp>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$499
			4: R_XTENSA_32	ProfileHit
			8: R_XTENSA_32	m3SegmentedMemAccess

Disassembly of section .literal.op_PreserveSetSlot_f64:

00000000 <.literal.op_PreserveSetSlot_f64>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$500
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_PreserveSetSlot_f32:

00000000 <.literal.op_PreserveSetSlot_f32>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$498
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__truncdfsf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_PreserveSetSlot_i64:

00000000 <.literal.op_PreserveSetSlot_i64>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$497
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_PreserveSetSlot_i32:

00000000 <.literal.op_PreserveSetSlot_i32>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$496
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_SetSlot_f64:

00000000 <.literal.op_SetSlot_f64>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$495
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_SetSlot_f32:

00000000 <.literal.op_SetSlot_f32>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$494
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_SetSlot_i64:

00000000 <.literal.op_SetSlot_i64>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$493
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_SetSlot_i32:

00000000 <.literal.op_SetSlot_i32>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$492
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_SetRegister_f64:

00000000 <.literal.op_SetRegister_f64>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$491
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_SetRegister_f32:

00000000 <.literal.op_SetRegister_f32>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$490
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__extendsfdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_SetRegister_i64:

00000000 <.literal.op_SetRegister_i64>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$489
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_SetRegister_i32:

00000000 <.literal.op_SetRegister_i32>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$488
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_SetGlobal_s64:

00000000 <.literal.op_SetGlobal_s64>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$487
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_SetGlobal_s32:

00000000 <.literal.op_SetGlobal_s32>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$486
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_SetGlobal_f64:

00000000 <.literal.op_SetGlobal_f64>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$485
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_SetGlobal_f32:

00000000 <.literal.op_SetGlobal_f32>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$484
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	__truncdfsf2
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_SetGlobal_i64:

00000000 <.literal.op_SetGlobal_i64>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$483
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_SetGlobal_i32:

00000000 <.literal.op_SetGlobal_i32>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$482
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_f64_rsr:

00000000 <.literal.op_Select_f64_rsr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$479
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_f64_rrs:

00000000 <.literal.op_Select_f64_rrs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$478
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_f64_rss:

00000000 <.literal.op_Select_f64_rss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$477
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_f64_ssr:

00000000 <.literal.op_Select_f64_ssr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$476
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_f64_srs:

00000000 <.literal.op_Select_f64_srs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$475
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_f64_sss:

00000000 <.literal.op_Select_f64_sss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$474
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_f32_rsr:

00000000 <.literal.op_Select_f32_rsr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$473
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_f32_rrs:

00000000 <.literal.op_Select_f32_rrs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$472
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_f32_rss:

00000000 <.literal.op_Select_f32_rss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$471
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__extendsfdf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_f32_ssr:

00000000 <.literal.op_Select_f32_ssr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$470
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__truncdfsf2
			18: R_XTENSA_32	__extendsfdf2
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_f32_srs:

00000000 <.literal.op_Select_f32_srs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$469
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__truncdfsf2
			18: R_XTENSA_32	__extendsfdf2
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_f32_sss:

00000000 <.literal.op_Select_f32_sss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$468
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__extendsfdf2
			20: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_i64_sss:

00000000 <.literal.op_Select_i64_sss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$467
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_i64_ssr:

00000000 <.literal.op_Select_i64_ssr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$466
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_i64_srs:

00000000 <.literal.op_Select_i64_srs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$465
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_i64_rss:

00000000 <.literal.op_Select_i64_rss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$464
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_i32_sss:

00000000 <.literal.op_Select_i32_sss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$463
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_i32_ssr:

00000000 <.literal.op_Select_i32_ssr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$462
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_i32_srs:

00000000 <.literal.op_Select_i32_srs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$461
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Select_i32_rss:

00000000 <.literal.op_Select_i32_rss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$460
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_BranchIfPrologue_r:

00000000 <.literal.op_BranchIfPrologue_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$459
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	.text.profileOp
			c: R_XTENSA_32	m3SegmentedMemAccess

Disassembly of section .literal.op_If_r:

00000000 <.literal.op_If_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$458
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	.text.profileOp
			c: R_XTENSA_32	m3SegmentedMemAccess

Disassembly of section .literal.op_PreserveCopySlot_64:

00000000 <.literal.op_PreserveCopySlot_64>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$457
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_CopySlot_64:

00000000 <.literal.op_CopySlot_64>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$456
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_BranchIfPrologue_s:

00000000 <.literal.op_BranchIfPrologue_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$455
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	.text.profileOp
			14: R_XTENSA_32	m3SegmentedMemAccess

Disassembly of section .literal.op_If_s:

00000000 <.literal.op_If_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$454
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	.text.profileOp
			14: R_XTENSA_32	m3SegmentedMemAccess

Disassembly of section .literal.op_PreserveCopySlot_32:

00000000 <.literal.op_PreserveCopySlot_32>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$453
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_CopySlot_32:

00000000 <.literal.op_CopySlot_32>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$452
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_ContinueLoopIf:

00000000 <.literal.op_ContinueLoopIf>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$451
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_GetGlobal_s64:

00000000 <.literal.op_GetGlobal_s64>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$450
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_GetGlobal_s32:

00000000 <.literal.op_GetGlobal_s32>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$449
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Extend32_s_s:

00000000 <.literal.op_i64_Extend32_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$446
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Extend32_s_r:

00000000 <.literal.op_i64_Extend32_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$445
			4: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Extend16_s_s:

00000000 <.literal.op_i64_Extend16_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$444
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Extend16_s_r:

00000000 <.literal.op_i64_Extend16_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$443
			4: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Extend8_s_s:

00000000 <.literal.op_i64_Extend8_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$442
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Extend8_s_r:

00000000 <.literal.op_i64_Extend8_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$441
			4: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Extend16_s_s:

00000000 <.literal.op_i32_Extend16_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$440
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Extend16_s_r:

00000000 <.literal.op_i32_Extend16_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$439
			4: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Extend8_s_s:

00000000 <.literal.op_i32_Extend8_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$438
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Extend8_s_r:

00000000 <.literal.op_i32_Extend8_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$437
			4: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Reinterpret_i64_s_s:

00000000 <.literal.op_f64_Reinterpret_i64_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$436
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Reinterpret_i64_s_r:

00000000 <.literal.op_f64_Reinterpret_i64_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$435
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Reinterpret_i64_r_s:

00000000 <.literal.op_f64_Reinterpret_i64_r_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$434
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Reinterpret_i64_r_r:

00000000 <.literal.op_f64_Reinterpret_i64_r_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$433
			4: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Reinterpret_i32_s_s:

00000000 <.literal.op_f32_Reinterpret_i32_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$432
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Reinterpret_i32_s_r:

00000000 <.literal.op_f32_Reinterpret_i32_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$431
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Reinterpret_i32_r_s:

00000000 <.literal.op_f32_Reinterpret_i32_r_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$430
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__extendsfdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Reinterpret_i32_r_r:

00000000 <.literal.op_f32_Reinterpret_i32_r_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$429
			4: R_XTENSA_32	__extendsfdf2
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Reinterpret_f64_s_s:

00000000 <.literal.op_i64_Reinterpret_f64_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$428
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Reinterpret_f64_s_r:

00000000 <.literal.op_i64_Reinterpret_f64_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$427
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Reinterpret_f64_r_s:

00000000 <.literal.op_i64_Reinterpret_f64_r_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$426
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Reinterpret_f64_r_r:

00000000 <.literal.op_i64_Reinterpret_f64_r_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$425
			4: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Reinterpret_f32_s_s:

00000000 <.literal.op_i32_Reinterpret_f32_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$424
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Reinterpret_f32_s_r:

00000000 <.literal.op_i32_Reinterpret_f32_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$423
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Reinterpret_f32_r_s:

00000000 <.literal.op_i32_Reinterpret_f32_r_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$422
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Reinterpret_f32_r_r:

00000000 <.literal.op_i32_Reinterpret_f32_r_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$421
			4: R_XTENSA_32	__truncdfsf2
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Promote_f32_s:

00000000 <.literal.op_f64_Promote_f32_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$420
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__extendsfdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Promote_f32_r:

00000000 <.literal.op_f64_Promote_f32_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$419
			4: R_XTENSA_32	__truncdfsf2
			8: R_XTENSA_32	__extendsfdf2
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_u64_s_s:

00000000 <.literal.op_f64_Convert_u64_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$418
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__floatundidf
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_u64_s_r:

00000000 <.literal.op_f64_Convert_u64_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$417
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__floatundidf
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_u64_r_s:

00000000 <.literal.op_f64_Convert_u64_r_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$416
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__floatundidf
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_u64_r_r:

00000000 <.literal.op_f64_Convert_u64_r_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$415
			4: R_XTENSA_32	__floatundidf
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_i64_s_s:

00000000 <.literal.op_f64_Convert_i64_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$414
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__floatdidf
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_i64_s_r:

00000000 <.literal.op_f64_Convert_i64_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$413
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__floatdidf
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_i64_r_s:

00000000 <.literal.op_f64_Convert_i64_r_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$412
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__floatdidf
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_i64_r_r:

00000000 <.literal.op_f64_Convert_i64_r_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$411
			4: R_XTENSA_32	__floatdidf
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_u32_s_s:

00000000 <.literal.op_f64_Convert_u32_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$410
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__floatunsidf
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_u32_s_r:

00000000 <.literal.op_f64_Convert_u32_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$409
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__floatunsidf
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_u32_r_s:

00000000 <.literal.op_f64_Convert_u32_r_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$408
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__floatunsidf
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_u32_r_r:

00000000 <.literal.op_f64_Convert_u32_r_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$407
			4: R_XTENSA_32	__floatunsidf
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_i32_s_s:

00000000 <.literal.op_f64_Convert_i32_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$406
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__floatsidf
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_i32_s_r:

00000000 <.literal.op_f64_Convert_i32_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$405
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__floatsidf
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_i32_r_s:

00000000 <.literal.op_f64_Convert_i32_r_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$404
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__floatsidf
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Convert_i32_r_r:

00000000 <.literal.op_f64_Convert_i32_r_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$403
			4: R_XTENSA_32	__floatsidf
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Demote_f64_s:

00000000 <.literal.op_f32_Demote_f64_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$402
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Demote_f64_r:

00000000 <.literal.op_f32_Demote_f64_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$401
			4: R_XTENSA_32	__truncdfsf2
			8: R_XTENSA_32	__extendsfdf2
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_u64_s_s:

00000000 <.literal.op_f32_Convert_u64_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$400
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__floatundisf
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_u64_s_r:

00000000 <.literal.op_f32_Convert_u64_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$399
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__floatundisf
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_u64_r_s:

00000000 <.literal.op_f32_Convert_u64_r_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$398
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__floatundisf
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_u64_r_r:

00000000 <.literal.op_f32_Convert_u64_r_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$397
			4: R_XTENSA_32	__floatundisf
			8: R_XTENSA_32	__extendsfdf2
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_i64_s_s:

00000000 <.literal.op_f32_Convert_i64_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$396
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__floatdisf
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_i64_s_r:

00000000 <.literal.op_f32_Convert_i64_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$395
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__floatdisf
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_i64_r_s:

00000000 <.literal.op_f32_Convert_i64_r_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$394
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__floatdisf
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_i64_r_r:

00000000 <.literal.op_f32_Convert_i64_r_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$393
			4: R_XTENSA_32	__floatdisf
			8: R_XTENSA_32	__extendsfdf2
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_u32_s_s:

00000000 <.literal.op_f32_Convert_u32_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$392
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_u32_s_r:

00000000 <.literal.op_f32_Convert_u32_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$391
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_u32_r_s:

00000000 <.literal.op_f32_Convert_u32_r_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$390
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__extendsfdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_u32_r_r:

00000000 <.literal.op_f32_Convert_u32_r_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$389
			4: R_XTENSA_32	__extendsfdf2
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_i32_s_s:

00000000 <.literal.op_f32_Convert_i32_s_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$388
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_i32_s_r:

00000000 <.literal.op_f32_Convert_i32_s_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$387
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_i32_r_s:

00000000 <.literal.op_f32_Convert_i32_r_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$386
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__extendsfdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Convert_i32_r_r:

00000000 <.literal.op_f32_Convert_i32_r_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$385
			4: R_XTENSA_32	__extendsfdf2
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Trunc_f64_s_s:

00000000 <.literal.op_u64_Trunc_f64_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$384
   4:	43f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__unorddf2
			20: R_XTENSA_32	__ledf2
			24: R_XTENSA_32	__gedf2
			28: R_XTENSA_32	__fixunsdfdi
			2c: R_XTENSA_32	.text.profileOp
			30: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u64_Trunc_f64_s_r:

00000000 <.literal.op_u64_Trunc_f64_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$383
   4:	43f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__unorddf2
			18: R_XTENSA_32	__ledf2
			1c: R_XTENSA_32	__gedf2
			20: R_XTENSA_32	__fixunsdfdi
			24: R_XTENSA_32	.text.profileOp
			28: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u64_Trunc_f64_r_s:

00000000 <.literal.op_u64_Trunc_f64_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$382
   4:	43f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__unorddf2
			18: R_XTENSA_32	__ledf2
			1c: R_XTENSA_32	__gedf2
			20: R_XTENSA_32	__fixunsdfdi
			24: R_XTENSA_32	.text.profileOp
			28: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u64_Trunc_f64_r_r:

00000000 <.literal.op_u64_Trunc_f64_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$381
   4:	43f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	__unorddf2
			10: R_XTENSA_32	__ledf2
			14: R_XTENSA_32	__gedf2
			18: R_XTENSA_32	__fixunsdfdi
			1c: R_XTENSA_32	.text.profileOp
			20: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Trunc_f64_s_s:

00000000 <.literal.op_i64_Trunc_f64_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$380
   4:	43e00000 	
   8:	c3e00000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__unorddf2
			20: R_XTENSA_32	__ledf2
			24: R_XTENSA_32	__gedf2
			28: R_XTENSA_32	__fixdfdi
			2c: R_XTENSA_32	.text.profileOp
			30: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Trunc_f64_s_r:

00000000 <.literal.op_i64_Trunc_f64_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$379
   4:	43e00000 	
   8:	c3e00000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__unorddf2
			18: R_XTENSA_32	__ledf2
			1c: R_XTENSA_32	__gedf2
			20: R_XTENSA_32	__fixdfdi
			24: R_XTENSA_32	.text.profileOp
			28: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Trunc_f64_r_s:

00000000 <.literal.op_i64_Trunc_f64_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$378
   4:	43e00000 	
   8:	c3e00000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__unorddf2
			18: R_XTENSA_32	__ledf2
			1c: R_XTENSA_32	__gedf2
			20: R_XTENSA_32	__fixdfdi
			24: R_XTENSA_32	.text.profileOp
			28: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Trunc_f64_r_r:

00000000 <.literal.op_i64_Trunc_f64_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$377
   4:	43e00000 	
   8:	c3e00000 	
	...
			c: R_XTENSA_32	__unorddf2
			10: R_XTENSA_32	__ledf2
			14: R_XTENSA_32	__gedf2
			18: R_XTENSA_32	__fixdfdi
			1c: R_XTENSA_32	.text.profileOp
			20: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u64_Trunc_f32_s_s:

00000000 <.literal.op_u64_Trunc_f32_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$376
   4:	5f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__fixunssfdi
			20: R_XTENSA_32	.text.profileOp
			24: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u64_Trunc_f32_s_r:

00000000 <.literal.op_u64_Trunc_f32_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$375
   4:	5f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__truncdfsf2
			18: R_XTENSA_32	__fixunssfdi
			1c: R_XTENSA_32	.text.profileOp
			20: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u64_Trunc_f32_r_s:

00000000 <.literal.op_u64_Trunc_f32_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$374
   4:	5f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__fixunssfdi
			18: R_XTENSA_32	.text.profileOp
			1c: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u64_Trunc_f32_r_r:

00000000 <.literal.op_u64_Trunc_f32_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$373
   4:	5f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	__fixunssfdi
			14: R_XTENSA_32	.text.profileOp
			18: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Trunc_f32_s_s:

00000000 <.literal.op_i64_Trunc_f32_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$372
   4:	5f000000 	
   8:	df000001 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__fixsfdi
			20: R_XTENSA_32	.text.profileOp
			24: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Trunc_f32_s_r:

00000000 <.literal.op_i64_Trunc_f32_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$371
   4:	5f000000 	
   8:	df000001 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__truncdfsf2
			18: R_XTENSA_32	__fixsfdi
			1c: R_XTENSA_32	.text.profileOp
			20: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Trunc_f32_r_s:

00000000 <.literal.op_i64_Trunc_f32_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$370
   4:	5f000000 	
   8:	df000001 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__fixsfdi
			18: R_XTENSA_32	.text.profileOp
			1c: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Trunc_f32_r_r:

00000000 <.literal.op_i64_Trunc_f32_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$369
   4:	5f000000 	
   8:	df000001 	
	...
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	__fixsfdi
			14: R_XTENSA_32	.text.profileOp
			18: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Extend_u32_s:

00000000 <.literal.op_i64_Extend_u32_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$368
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Extend_u32_r:

00000000 <.literal.op_i64_Extend_u32_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$367
			4: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Extend_i32_s:

00000000 <.literal.op_i64_Extend_i32_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$366
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Extend_i32_r:

00000000 <.literal.op_i64_Extend_i32_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$365
			4: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Trunc_f64_s_s:

00000000 <.literal.op_u32_Trunc_f64_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$364
   4:	41f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__unorddf2
			20: R_XTENSA_32	__ledf2
			24: R_XTENSA_32	__gedf2
			28: R_XTENSA_32	__fixunsdfsi
			2c: R_XTENSA_32	.text.profileOp
			30: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u32_Trunc_f64_s_r:

00000000 <.literal.op_u32_Trunc_f64_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$363
   4:	41f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__unorddf2
			18: R_XTENSA_32	__ledf2
			1c: R_XTENSA_32	__gedf2
			20: R_XTENSA_32	__fixunsdfsi
			24: R_XTENSA_32	.text.profileOp
			28: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u32_Trunc_f64_r_s:

00000000 <.literal.op_u32_Trunc_f64_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$362
   4:	41f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__unorddf2
			18: R_XTENSA_32	__ledf2
			1c: R_XTENSA_32	__gedf2
			20: R_XTENSA_32	__fixunsdfsi
			24: R_XTENSA_32	.text.profileOp
			28: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u32_Trunc_f64_r_r:

00000000 <.literal.op_u32_Trunc_f64_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$361
   4:	41f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	__unorddf2
			10: R_XTENSA_32	__ledf2
			14: R_XTENSA_32	__gedf2
			18: R_XTENSA_32	__fixunsdfsi
			1c: R_XTENSA_32	.text.profileOp
			20: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Trunc_f64_s_s:

00000000 <.literal.op_i32_Trunc_f64_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$360
   4:	41e00000 	
   8:	00200000 	
   c:	c1e00000 	
	...
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	m3SegmentedMemAccess
			20: R_XTENSA_32	__unorddf2
			24: R_XTENSA_32	__ledf2
			28: R_XTENSA_32	__gedf2
			2c: R_XTENSA_32	__fixdfsi
			30: R_XTENSA_32	.text.profileOp
			34: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Trunc_f64_s_r:

00000000 <.literal.op_i32_Trunc_f64_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$359
   4:	41e00000 	
   8:	00200000 	
   c:	c1e00000 	
	...
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	__unorddf2
			1c: R_XTENSA_32	__ledf2
			20: R_XTENSA_32	__gedf2
			24: R_XTENSA_32	__fixdfsi
			28: R_XTENSA_32	.text.profileOp
			2c: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Trunc_f64_r_s:

00000000 <.literal.op_i32_Trunc_f64_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$358
   4:	41e00000 	
   8:	00200000 	
   c:	c1e00000 	
	...
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	__unorddf2
			1c: R_XTENSA_32	__ledf2
			20: R_XTENSA_32	__gedf2
			24: R_XTENSA_32	__fixdfsi
			28: R_XTENSA_32	.text.profileOp
			2c: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Trunc_f64_r_r:

00000000 <.literal.op_i32_Trunc_f64_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$357
   4:	41e00000 	
   8:	00200000 	
   c:	c1e00000 	
	...
			10: R_XTENSA_32	__unorddf2
			14: R_XTENSA_32	__ledf2
			18: R_XTENSA_32	__gedf2
			1c: R_XTENSA_32	__fixdfsi
			20: R_XTENSA_32	.text.profileOp
			24: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u32_Trunc_f32_s_s:

00000000 <.literal.op_u32_Trunc_f32_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$356
   4:	4f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	.text.profileOp
			20: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u32_Trunc_f32_s_r:

00000000 <.literal.op_u32_Trunc_f32_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$355
   4:	4f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__truncdfsf2
			18: R_XTENSA_32	.text.profileOp
			1c: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u32_Trunc_f32_r_s:

00000000 <.literal.op_u32_Trunc_f32_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$354
   4:	4f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp
			18: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u32_Trunc_f32_r_r:

00000000 <.literal.op_u32_Trunc_f32_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$353
   4:	4f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	.text.profileOp
			14: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Trunc_f32_s_s:

00000000 <.literal.op_i32_Trunc_f32_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$352
   4:	4f000000 	
   8:	cf000001 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	.text.profileOp
			20: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Trunc_f32_s_r:

00000000 <.literal.op_i32_Trunc_f32_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$351
   4:	4f000000 	
   8:	cf000001 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__truncdfsf2
			18: R_XTENSA_32	.text.profileOp
			1c: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Trunc_f32_r_s:

00000000 <.literal.op_i32_Trunc_f32_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$350
   4:	4f000000 	
   8:	cf000001 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp
			18: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Trunc_f32_r_r:

00000000 <.literal.op_i32_Trunc_f32_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$349
   4:	4f000000 	
   8:	cf000001 	
	...
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	.text.profileOp
			14: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Wrap_i64_s:

00000000 <.literal.op_i32_Wrap_i64_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$348
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Wrap_i64_r:

00000000 <.literal.op_i32_Wrap_i64_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$347
			4: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Divide_ss:

00000000 <.literal.op_f64_Divide_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$339
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__divdf3
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Divide_sr:

00000000 <.literal.op_f64_Divide_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$338
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__divdf3
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Divide_rs:

00000000 <.literal.op_f64_Divide_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$337
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__divdf3
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Multiply_ss:

00000000 <.literal.op_f64_Multiply_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$336
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__muldf3
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Multiply_rs:

00000000 <.literal.op_f64_Multiply_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$335
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__muldf3
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Subtract_ss:

00000000 <.literal.op_f64_Subtract_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$334
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__subdf3
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Subtract_sr:

00000000 <.literal.op_f64_Subtract_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$333
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__subdf3
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Subtract_rs:

00000000 <.literal.op_f64_Subtract_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$332
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__subdf3
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Add_ss:

00000000 <.literal.op_f64_Add_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$331
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__adddf3
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Add_rs:

00000000 <.literal.op_f64_Add_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$330
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__adddf3
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Negate_s:

00000000 <.literal.op_f64_Negate_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$319
   4:	80000000 	
	...
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Negate_r:

00000000 <.literal.op_f64_Negate_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$318
   4:	80000000 	
   8:	00000000 	
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Abs_s:

00000000 <.literal.op_f64_Abs_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$317
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Abs_r:

00000000 <.literal.op_f64_Abs_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$316
			4: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Divide_ss:

00000000 <.literal.op_f32_Divide_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$308
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__divsf3
			18: R_XTENSA_32	__extendsfdf2
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Divide_sr:

00000000 <.literal.op_f32_Divide_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$307
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	__divsf3
			14: R_XTENSA_32	__extendsfdf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Divide_rs:

00000000 <.literal.op_f32_Divide_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$306
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	__divsf3
			14: R_XTENSA_32	__extendsfdf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Multiply_ss:

00000000 <.literal.op_f32_Multiply_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$305
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__extendsfdf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Multiply_rs:

00000000 <.literal.op_f32_Multiply_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$304
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Subtract_ss:

00000000 <.literal.op_f32_Subtract_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$303
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__extendsfdf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Subtract_sr:

00000000 <.literal.op_f32_Subtract_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$302
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Subtract_rs:

00000000 <.literal.op_f32_Subtract_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$301
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Add_ss:

00000000 <.literal.op_f32_Add_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$300
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__extendsfdf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Add_rs:

00000000 <.literal.op_f32_Add_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$299
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Negate_s:

00000000 <.literal.op_f32_Negate_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$288
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__extendsfdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Negate_r:

00000000 <.literal.op_f32_Negate_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$287
			4: R_XTENSA_32	__truncdfsf2
			8: R_XTENSA_32	__extendsfdf2
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Abs_s:

00000000 <.literal.op_f32_Abs_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$286
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__extendsfdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Abs_r:

00000000 <.literal.op_f32_Abs_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$285
			4: R_XTENSA_32	__truncdfsf2
			8: R_XTENSA_32	__extendsfdf2
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Rotr_ss:

00000000 <.literal.op_u64_Rotr_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$284
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Rotr_sr:

00000000 <.literal.op_u64_Rotr_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$283
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Rotr_rs:

00000000 <.literal.op_u64_Rotr_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$282
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Rotl_ss:

00000000 <.literal.op_u64_Rotl_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$281
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Rotl_sr:

00000000 <.literal.op_u64_Rotl_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$280
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Rotl_rs:

00000000 <.literal.op_u64_Rotl_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$279
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_ShiftRight_ss:

00000000 <.literal.op_u64_ShiftRight_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$278
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_ShiftRight_sr:

00000000 <.literal.op_u64_ShiftRight_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$277
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_ShiftRight_rs:

00000000 <.literal.op_u64_ShiftRight_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$276
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_ShiftRight_ss:

00000000 <.literal.op_i64_ShiftRight_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$275
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_ShiftRight_sr:

00000000 <.literal.op_i64_ShiftRight_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$274
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_ShiftRight_rs:

00000000 <.literal.op_i64_ShiftRight_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$273
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_ShiftLeft_ss:

00000000 <.literal.op_u64_ShiftLeft_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$272
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_ShiftLeft_sr:

00000000 <.literal.op_u64_ShiftLeft_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$271
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_ShiftLeft_rs:

00000000 <.literal.op_u64_ShiftLeft_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$270
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Xor_ss:

00000000 <.literal.op_u64_Xor_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$269
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Xor_rs:

00000000 <.literal.op_u64_Xor_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$268
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Or_ss:

00000000 <.literal.op_u64_Or_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$267
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Or_rs:

00000000 <.literal.op_u64_Or_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$266
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_And_ss:

00000000 <.literal.op_u64_And_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$265
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_And_rs:

00000000 <.literal.op_u64_And_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$264
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Remainder_ss:

00000000 <.literal.op_u64_Remainder_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$263
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__umoddi3
			18: R_XTENSA_32	.text.profileOp
			1c: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u64_Remainder_sr:

00000000 <.literal.op_u64_Remainder_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$262
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__umoddi3
			10: R_XTENSA_32	.text.profileOp
			14: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u64_Remainder_rs:

00000000 <.literal.op_u64_Remainder_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$261
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__umoddi3
			10: R_XTENSA_32	.text.profileOp
			14: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Remainder_ss:

00000000 <.literal.op_i64_Remainder_ss>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$260
   4:	80000000 	
	...
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	__moddi3
			1c: R_XTENSA_32	.text.profileOp
			20: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Remainder_sr:

00000000 <.literal.op_i64_Remainder_sr>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$259
   4:	80000000 	
	...
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	__moddi3
			14: R_XTENSA_32	.text.profileOp
			18: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Remainder_rs:

00000000 <.literal.op_i64_Remainder_rs>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$258
   4:	80000000 	
	...
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	__moddi3
			14: R_XTENSA_32	.text.profileOp
			18: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u64_Divide_ss:

00000000 <.literal.op_u64_Divide_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$257
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__udivdi3
			18: R_XTENSA_32	.text.profileOp
			1c: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u64_Divide_sr:

00000000 <.literal.op_u64_Divide_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$256
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__udivdi3
			10: R_XTENSA_32	.text.profileOp
			14: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u64_Divide_rs:

00000000 <.literal.op_u64_Divide_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$255
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__udivdi3
			10: R_XTENSA_32	.text.profileOp
			14: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Divide_ss:

00000000 <.literal.op_i64_Divide_ss>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$254
   4:	80000000 	
	...
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	__divdi3
			1c: R_XTENSA_32	.text.profileOp
			20: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Divide_sr:

00000000 <.literal.op_i64_Divide_sr>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$253
   4:	80000000 	
	...
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	__divdi3
			14: R_XTENSA_32	.text.profileOp
			18: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Divide_rs:

00000000 <.literal.op_i64_Divide_rs>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$252
   4:	80000000 	
	...
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	__divdi3
			14: R_XTENSA_32	.text.profileOp
			18: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i64_Multiply_ss:

00000000 <.literal.op_i64_Multiply_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$251
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Multiply_rs:

00000000 <.literal.op_i64_Multiply_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$250
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Subtract_ss:

00000000 <.literal.op_i64_Subtract_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$249
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Subtract_sr:

00000000 <.literal.op_i64_Subtract_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$248
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Subtract_rs:

00000000 <.literal.op_i64_Subtract_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$247
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Add_ss:

00000000 <.literal.op_i64_Add_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$246
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Add_rs:

00000000 <.literal.op_i64_Add_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$245
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Rotr_ss:

00000000 <.literal.op_u32_Rotr_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$238
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Rotr_sr:

00000000 <.literal.op_u32_Rotr_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$237
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Rotr_rs:

00000000 <.literal.op_u32_Rotr_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$236
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Rotl_ss:

00000000 <.literal.op_u32_Rotl_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$235
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Rotl_sr:

00000000 <.literal.op_u32_Rotl_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$234
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Rotl_rs:

00000000 <.literal.op_u32_Rotl_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$233
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_ShiftRight_ss:

00000000 <.literal.op_u32_ShiftRight_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$232
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_ShiftRight_sr:

00000000 <.literal.op_u32_ShiftRight_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$231
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_ShiftRight_rs:

00000000 <.literal.op_u32_ShiftRight_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$230
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_ShiftRight_ss:

00000000 <.literal.op_i32_ShiftRight_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$229
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_ShiftRight_sr:

00000000 <.literal.op_i32_ShiftRight_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$228
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_ShiftRight_rs:

00000000 <.literal.op_i32_ShiftRight_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$227
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_ShiftLeft_ss:

00000000 <.literal.op_u32_ShiftLeft_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$226
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_ShiftLeft_sr:

00000000 <.literal.op_u32_ShiftLeft_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$225
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_ShiftLeft_rs:

00000000 <.literal.op_u32_ShiftLeft_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$224
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Xor_ss:

00000000 <.literal.op_u32_Xor_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$223
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Xor_rs:

00000000 <.literal.op_u32_Xor_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$222
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Or_ss:

00000000 <.literal.op_u32_Or_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$221
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Or_rs:

00000000 <.literal.op_u32_Or_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$220
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_And_ss:

00000000 <.literal.op_u32_And_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$219
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_And_rs:

00000000 <.literal.op_u32_And_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$218
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Remainder_ss:

00000000 <.literal.op_u32_Remainder_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$217
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp
			18: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u32_Remainder_sr:

00000000 <.literal.op_u32_Remainder_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$216
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp
			10: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u32_Remainder_rs:

00000000 <.literal.op_u32_Remainder_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$215
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp
			10: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Remainder_ss:

00000000 <.literal.op_i32_Remainder_ss>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$214
   4:	80000000 	
	...
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	.text.profileOp
			1c: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Remainder_sr:

00000000 <.literal.op_i32_Remainder_sr>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$213
   4:	80000000 	
	...
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	.text.profileOp
			14: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Remainder_rs:

00000000 <.literal.op_i32_Remainder_rs>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$212
   4:	80000000 	
	...
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	.text.profileOp
			14: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u32_Divide_ss:

00000000 <.literal.op_u32_Divide_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$211
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp
			18: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u32_Divide_sr:

00000000 <.literal.op_u32_Divide_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$210
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp
			10: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_u32_Divide_rs:

00000000 <.literal.op_u32_Divide_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$209
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp
			10: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Divide_ss:

00000000 <.literal.op_i32_Divide_ss>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$208
   4:	80000000 	
	...
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	.text.profileOp
			1c: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Divide_sr:

00000000 <.literal.op_i32_Divide_sr>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$207
   4:	80000000 	
	...
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	.text.profileOp
			14: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Divide_rs:

00000000 <.literal.op_i32_Divide_rs>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$206
   4:	80000000 	
	...
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	.text.profileOp
			14: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_i32_Multiply_ss:

00000000 <.literal.op_i32_Multiply_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$205
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Multiply_rs:

00000000 <.literal.op_i32_Multiply_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$204
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Subtract_ss:

00000000 <.literal.op_i32_Subtract_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$203
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Subtract_sr:

00000000 <.literal.op_i32_Subtract_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$202
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Subtract_rs:

00000000 <.literal.op_i32_Subtract_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$201
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Add_ss:

00000000 <.literal.op_i32_Add_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$200
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Add_rs:

00000000 <.literal.op_i32_Add_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$199
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_GreaterThanOrEqual_ss:

00000000 <.literal.op_f64_GreaterThanOrEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$192
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__ledf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_GreaterThanOrEqual_sr:

00000000 <.literal.op_f64_GreaterThanOrEqual_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$191
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__ledf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_GreaterThanOrEqual_rs:

00000000 <.literal.op_f64_GreaterThanOrEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$190
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__gedf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_LessThanOrEqual_ss:

00000000 <.literal.op_f64_LessThanOrEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$189
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__gedf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_LessThanOrEqual_sr:

00000000 <.literal.op_f64_LessThanOrEqual_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$188
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__gedf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_LessThanOrEqual_rs:

00000000 <.literal.op_f64_LessThanOrEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$187
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__ledf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_GreaterThan_ss:

00000000 <.literal.op_f64_GreaterThan_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$186
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__ltdf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_GreaterThan_sr:

00000000 <.literal.op_f64_GreaterThan_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$185
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__ltdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_GreaterThan_rs:

00000000 <.literal.op_f64_GreaterThan_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$184
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__gtdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_LessThan_ss:

00000000 <.literal.op_f64_LessThan_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$183
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__gtdf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_LessThan_sr:

00000000 <.literal.op_f64_LessThan_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$182
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__gtdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_LessThan_rs:

00000000 <.literal.op_f64_LessThan_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$181
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__ltdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_NotEqual_ss:

00000000 <.literal.op_f64_NotEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$180
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__nedf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_NotEqual_rs:

00000000 <.literal.op_f64_NotEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$179
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__nedf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Equal_ss:

00000000 <.literal.op_f64_Equal_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$178
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__eqdf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Equal_rs:

00000000 <.literal.op_f64_Equal_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$177
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__eqdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_GreaterThanOrEqual_ss:

00000000 <.literal.op_f32_GreaterThanOrEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$176
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_GreaterThanOrEqual_sr:

00000000 <.literal.op_f32_GreaterThanOrEqual_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$175
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_GreaterThanOrEqual_rs:

00000000 <.literal.op_f32_GreaterThanOrEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$174
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_LessThanOrEqual_ss:

00000000 <.literal.op_f32_LessThanOrEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$173
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_LessThanOrEqual_sr:

00000000 <.literal.op_f32_LessThanOrEqual_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$172
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_LessThanOrEqual_rs:

00000000 <.literal.op_f32_LessThanOrEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$171
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_GreaterThan_ss:

00000000 <.literal.op_f32_GreaterThan_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$170
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_GreaterThan_sr:

00000000 <.literal.op_f32_GreaterThan_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$169
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_GreaterThan_rs:

00000000 <.literal.op_f32_GreaterThan_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$168
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_LessThan_ss:

00000000 <.literal.op_f32_LessThan_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$167
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_LessThan_sr:

00000000 <.literal.op_f32_LessThan_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$166
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_LessThan_rs:

00000000 <.literal.op_f32_LessThan_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$165
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_NotEqual_ss:

00000000 <.literal.op_f32_NotEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$164
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_NotEqual_rs:

00000000 <.literal.op_f32_NotEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$163
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Equal_ss:

00000000 <.literal.op_f32_Equal_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$162
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Equal_rs:

00000000 <.literal.op_f32_Equal_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$161
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_GreaterThanOrEqual_ss:

00000000 <.literal.op_u64_GreaterThanOrEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$160
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_GreaterThanOrEqual_sr:

00000000 <.literal.op_u64_GreaterThanOrEqual_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$159
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_GreaterThanOrEqual_rs:

00000000 <.literal.op_u64_GreaterThanOrEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$158
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_GreaterThanOrEqual_ss:

00000000 <.literal.op_i64_GreaterThanOrEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$157
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_GreaterThanOrEqual_sr:

00000000 <.literal.op_i64_GreaterThanOrEqual_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$156
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_GreaterThanOrEqual_rs:

00000000 <.literal.op_i64_GreaterThanOrEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$155
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_LessThanOrEqual_ss:

00000000 <.literal.op_u64_LessThanOrEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$154
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_LessThanOrEqual_sr:

00000000 <.literal.op_u64_LessThanOrEqual_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$153
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_LessThanOrEqual_rs:

00000000 <.literal.op_u64_LessThanOrEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$152
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_LessThanOrEqual_ss:

00000000 <.literal.op_i64_LessThanOrEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$151
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_LessThanOrEqual_sr:

00000000 <.literal.op_i64_LessThanOrEqual_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$150
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_LessThanOrEqual_rs:

00000000 <.literal.op_i64_LessThanOrEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$149
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_GreaterThan_ss:

00000000 <.literal.op_u64_GreaterThan_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$148
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_GreaterThan_sr:

00000000 <.literal.op_u64_GreaterThan_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$147
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_GreaterThan_rs:

00000000 <.literal.op_u64_GreaterThan_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$146
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_GreaterThan_ss:

00000000 <.literal.op_i64_GreaterThan_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$145
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_GreaterThan_sr:

00000000 <.literal.op_i64_GreaterThan_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$144
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_GreaterThan_rs:

00000000 <.literal.op_i64_GreaterThan_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$143
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_LessThan_ss:

00000000 <.literal.op_u64_LessThan_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$142
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_LessThan_sr:

00000000 <.literal.op_u64_LessThan_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$141
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_LessThan_rs:

00000000 <.literal.op_u64_LessThan_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$140
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_LessThan_ss:

00000000 <.literal.op_i64_LessThan_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$139
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_LessThan_sr:

00000000 <.literal.op_i64_LessThan_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$138
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_LessThan_rs:

00000000 <.literal.op_i64_LessThan_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$137
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_NotEqual_ss:

00000000 <.literal.op_i64_NotEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$136
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_NotEqual_rs:

00000000 <.literal.op_i64_NotEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$135
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Equal_ss:

00000000 <.literal.op_i64_Equal_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$134
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Equal_rs:

00000000 <.literal.op_i64_Equal_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$133
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_EqualToZero_s:

00000000 <.literal.op_i64_EqualToZero_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$132
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_EqualToZero_r:

00000000 <.literal.op_i64_EqualToZero_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$131
			4: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_GreaterThanOrEqual_ss:

00000000 <.literal.op_u32_GreaterThanOrEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$130
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_GreaterThanOrEqual_sr:

00000000 <.literal.op_u32_GreaterThanOrEqual_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$129
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_GreaterThanOrEqual_rs:

00000000 <.literal.op_u32_GreaterThanOrEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$128
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_GreaterThanOrEqual_ss:

00000000 <.literal.op_i32_GreaterThanOrEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$127
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_GreaterThanOrEqual_sr:

00000000 <.literal.op_i32_GreaterThanOrEqual_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$126
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_GreaterThanOrEqual_rs:

00000000 <.literal.op_i32_GreaterThanOrEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$125
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_LessThanOrEqual_ss:

00000000 <.literal.op_u32_LessThanOrEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$124
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_LessThanOrEqual_sr:

00000000 <.literal.op_u32_LessThanOrEqual_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$123
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_LessThanOrEqual_rs:

00000000 <.literal.op_u32_LessThanOrEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$122
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_LessThanOrEqual_ss:

00000000 <.literal.op_i32_LessThanOrEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$121
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_LessThanOrEqual_sr:

00000000 <.literal.op_i32_LessThanOrEqual_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$120
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_LessThanOrEqual_rs:

00000000 <.literal.op_i32_LessThanOrEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$119
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_GreaterThan_ss:

00000000 <.literal.op_u32_GreaterThan_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$118
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_GreaterThan_sr:

00000000 <.literal.op_u32_GreaterThan_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$117
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_GreaterThan_rs:

00000000 <.literal.op_u32_GreaterThan_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$116
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_GreaterThan_ss:

00000000 <.literal.op_i32_GreaterThan_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$115
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_GreaterThan_sr:

00000000 <.literal.op_i32_GreaterThan_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$114
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_GreaterThan_rs:

00000000 <.literal.op_i32_GreaterThan_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$113
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_LessThan_ss:

00000000 <.literal.op_u32_LessThan_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$112
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_LessThan_sr:

00000000 <.literal.op_u32_LessThan_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$111
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_LessThan_rs:

00000000 <.literal.op_u32_LessThan_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$110
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_LessThan_ss:

00000000 <.literal.op_i32_LessThan_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$109
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_LessThan_sr:

00000000 <.literal.op_i32_LessThan_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$108
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_LessThan_rs:

00000000 <.literal.op_i32_LessThan_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$107
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_NotEqual_ss:

00000000 <.literal.op_i32_NotEqual_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$106
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_NotEqual_rs:

00000000 <.literal.op_i32_NotEqual_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$105
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Equal_ss:

00000000 <.literal.op_i32_Equal_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$104
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Equal_rs:

00000000 <.literal.op_i32_Equal_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$103
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_EqualToZero_s:

00000000 <.literal.op_i32_EqualToZero_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$102
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_EqualToZero_r:

00000000 <.literal.op_i32_EqualToZero_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$101
			4: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Const32:

00000000 <.literal.op_Const32>:
	...
			0: R_XTENSA_32	.rodata.op_CallRawFunction.str1.4
			4: R_XTENSA_32	.rodata.op_Const32.str1.4
   8:	0000003c 	
			8: R_XTENSA_32	.rodata.op_CallRawFunction.str1.4
   c:	00000000 	
			c: R_XTENSA_32	.bss.ERROR_POINTER
  10:	0000003c 	
			10: R_XTENSA_32	.rodata.op_Const32.str1.4
  14:	00000000 	
			14: R_XTENSA_32	.rodata.__FUNCTION__$99
  18:	00000800 	
	...
			1c: R_XTENSA_32	m3SegmentedMemAccess
			20: R_XTENSA_32	m3SegmentedMemAccess
			24: R_XTENSA_32	m3SegmentedMemAccess
			28: R_XTENSA_32	.text.profileOp
			2c: R_XTENSA_32	malloc
			30: R_XTENSA_32	esp_log_system_timestamp
			34: R_XTENSA_32	snprintf
			38: R_XTENSA_32	safe_printf
			3c: R_XTENSA_32	free
			40: R_XTENSA_32	malloc
			44: R_XTENSA_32	esp_log_system_timestamp
			48: R_XTENSA_32	m3SegmentedMemAccess
			4c: R_XTENSA_32	snprintf

Disassembly of section .literal.op_MemSize:

00000000 <.literal.op_MemSize>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$97
			4: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_BranchIf_s:

00000000 <.literal.op_BranchIf_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$35
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_BranchIf_r:

00000000 <.literal.op_BranchIf_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$34
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_TruncSat_f64_s_s:

00000000 <.literal.op_u64_TruncSat_f64_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$31
   4:	43f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__unorddf2
			20: R_XTENSA_32	__ledf2
			24: R_XTENSA_32	__gedf2
			28: R_XTENSA_32	__fixunsdfdi
			2c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_TruncSat_f64_s_r:

00000000 <.literal.op_u64_TruncSat_f64_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$30
   4:	43f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__unorddf2
			18: R_XTENSA_32	__ledf2
			1c: R_XTENSA_32	__gedf2
			20: R_XTENSA_32	__fixunsdfdi
			24: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_TruncSat_f64_r_s:

00000000 <.literal.op_u64_TruncSat_f64_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$29
   4:	43f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__unorddf2
			18: R_XTENSA_32	__ledf2
			1c: R_XTENSA_32	__gedf2
			20: R_XTENSA_32	__fixunsdfdi
			24: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_TruncSat_f64_r_r:

00000000 <.literal.op_u64_TruncSat_f64_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$28
   4:	43f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	__unorddf2
			10: R_XTENSA_32	__ledf2
			14: R_XTENSA_32	__gedf2
			18: R_XTENSA_32	__fixunsdfdi
			1c: R_XTENSA_32	.text.profileOp
			20: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_TruncSat_f64_s_s:

00000000 <.literal.op_i64_TruncSat_f64_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$27
   4:	7fffffff 	
   8:	80000000 	
   c:	43e00000 	
  10:	c3e00000 	
	...
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	m3SegmentedMemAccess
			20: R_XTENSA_32	m3SegmentedMemAccess
			24: R_XTENSA_32	__unorddf2
			28: R_XTENSA_32	__ledf2
			2c: R_XTENSA_32	__gedf2
			30: R_XTENSA_32	__fixdfdi
			34: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_TruncSat_f64_s_r:

00000000 <.literal.op_i64_TruncSat_f64_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$26
   4:	7fffffff 	
   8:	80000000 	
   c:	43e00000 	
  10:	c3e00000 	
	...
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__unorddf2
			20: R_XTENSA_32	__ledf2
			24: R_XTENSA_32	__gedf2
			28: R_XTENSA_32	__fixdfdi
			2c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_TruncSat_f64_r_s:

00000000 <.literal.op_i64_TruncSat_f64_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$25
   4:	7fffffff 	
   8:	80000000 	
   c:	43e00000 	
  10:	c3e00000 	
	...
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__unorddf2
			20: R_XTENSA_32	__ledf2
			24: R_XTENSA_32	__gedf2
			28: R_XTENSA_32	__fixdfdi
			2c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_TruncSat_f64_r_r:

00000000 <.literal.op_i64_TruncSat_f64_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$24
   4:	7fffffff 	
   8:	80000000 	
   c:	43e00000 	
  10:	c3e00000 	
	...
			14: R_XTENSA_32	__unorddf2
			18: R_XTENSA_32	__ledf2
			1c: R_XTENSA_32	__gedf2
			20: R_XTENSA_32	__fixdfdi
			24: R_XTENSA_32	.text.profileOp
			28: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_TruncSat_f32_s_s:

00000000 <.literal.op_u64_TruncSat_f32_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$23
   4:	5f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__fixunssfdi
			20: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_TruncSat_f32_s_r:

00000000 <.literal.op_u64_TruncSat_f32_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$22
   4:	5f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__truncdfsf2
			18: R_XTENSA_32	__fixunssfdi
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_TruncSat_f32_r_s:

00000000 <.literal.op_u64_TruncSat_f32_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$21
   4:	5f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__fixunssfdi
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_TruncSat_f32_r_r:

00000000 <.literal.op_u64_TruncSat_f32_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$20
   4:	5f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	__fixunssfdi
			14: R_XTENSA_32	.text.profileOp
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_TruncSat_f32_s_s:

00000000 <.literal.op_i64_TruncSat_f32_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$19
   4:	7fffffff 	
   8:	80000000 	
   c:	5f000000 	
  10:	df000001 	
	...
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	m3SegmentedMemAccess
			20: R_XTENSA_32	m3SegmentedMemAccess
			24: R_XTENSA_32	__fixsfdi
			28: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_TruncSat_f32_s_r:

00000000 <.literal.op_i64_TruncSat_f32_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$18
   4:	7fffffff 	
   8:	80000000 	
   c:	5f000000 	
  10:	df000001 	
	...
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__truncdfsf2
			20: R_XTENSA_32	__fixsfdi
			24: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_TruncSat_f32_r_s:

00000000 <.literal.op_i64_TruncSat_f32_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$17
   4:	7fffffff 	
   8:	80000000 	
   c:	5f000000 	
  10:	df000001 	
	...
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__fixsfdi
			20: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_TruncSat_f32_r_r:

00000000 <.literal.op_i64_TruncSat_f32_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$16
   4:	7fffffff 	
   8:	80000000 	
   c:	5f000000 	
  10:	df000001 	
	...
			14: R_XTENSA_32	__truncdfsf2
			18: R_XTENSA_32	__fixsfdi
			1c: R_XTENSA_32	.text.profileOp
			20: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_TruncSat_f64_s_s:

00000000 <.literal.op_u32_TruncSat_f64_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$15
   4:	41f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__unorddf2
			20: R_XTENSA_32	__ledf2
			24: R_XTENSA_32	__gedf2
			28: R_XTENSA_32	__fixunsdfsi
			2c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_TruncSat_f64_s_r:

00000000 <.literal.op_u32_TruncSat_f64_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$14
   4:	41f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__unorddf2
			18: R_XTENSA_32	__ledf2
			1c: R_XTENSA_32	__gedf2
			20: R_XTENSA_32	__fixunsdfsi
			24: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_TruncSat_f64_r_s:

00000000 <.literal.op_u32_TruncSat_f64_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$13
   4:	41f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__unorddf2
			18: R_XTENSA_32	__ledf2
			1c: R_XTENSA_32	__gedf2
			20: R_XTENSA_32	__fixunsdfsi
			24: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_TruncSat_f64_r_r:

00000000 <.literal.op_u32_TruncSat_f64_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$12
   4:	41f00000 	
   8:	bff00000 	
	...
			c: R_XTENSA_32	__unorddf2
			10: R_XTENSA_32	__ledf2
			14: R_XTENSA_32	__gedf2
			18: R_XTENSA_32	__fixunsdfsi
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_TruncSat_f64_s_s:

00000000 <.literal.op_i32_TruncSat_f64_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$11
   4:	7fffffff 	
   8:	80000000 	
   c:	41e00000 	
  10:	00200000 	
  14:	c1e00000 	
	...
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	m3SegmentedMemAccess
			20: R_XTENSA_32	m3SegmentedMemAccess
			24: R_XTENSA_32	m3SegmentedMemAccess
			28: R_XTENSA_32	__unorddf2
			2c: R_XTENSA_32	__ledf2
			30: R_XTENSA_32	__gedf2
			34: R_XTENSA_32	__fixdfsi
			38: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_TruncSat_f64_s_r:

00000000 <.literal.op_i32_TruncSat_f64_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$10
   4:	7fffffff 	
   8:	80000000 	
   c:	41e00000 	
  10:	00200000 	
  14:	c1e00000 	
	...
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	m3SegmentedMemAccess
			20: R_XTENSA_32	__unorddf2
			24: R_XTENSA_32	__ledf2
			28: R_XTENSA_32	__gedf2
			2c: R_XTENSA_32	__fixdfsi
			30: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_TruncSat_f64_r_s:

00000000 <.literal.op_i32_TruncSat_f64_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$9
   4:	7fffffff 	
   8:	80000000 	
   c:	41e00000 	
  10:	00200000 	
  14:	c1e00000 	
	...
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	m3SegmentedMemAccess
			20: R_XTENSA_32	__unorddf2
			24: R_XTENSA_32	__ledf2
			28: R_XTENSA_32	__gedf2
			2c: R_XTENSA_32	__fixdfsi
			30: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_TruncSat_f64_r_r:

00000000 <.literal.op_i32_TruncSat_f64_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$8
   4:	7fffffff 	
   8:	80000000 	
   c:	41e00000 	
  10:	00200000 	
  14:	c1e00000 	
	...
			18: R_XTENSA_32	__unorddf2
			1c: R_XTENSA_32	__ledf2
			20: R_XTENSA_32	__gedf2
			24: R_XTENSA_32	__fixdfsi
			28: R_XTENSA_32	.text.profileOp
			2c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_TruncSat_f32_s_s:

00000000 <.literal.op_u32_TruncSat_f32_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$7
   4:	4f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_TruncSat_f32_s_r:

00000000 <.literal.op_u32_TruncSat_f32_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$6
   4:	4f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__truncdfsf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_TruncSat_f32_r_s:

00000000 <.literal.op_u32_TruncSat_f32_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$5
   4:	4f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_TruncSat_f32_r_r:

00000000 <.literal.op_u32_TruncSat_f32_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$4
   4:	4f800000 	
   8:	bf800000 	
	...
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	.text.profileOp
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_TruncSat_f32_s_s:

00000000 <.literal.op_i32_TruncSat_f32_s_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$3
   4:	7fffffff 	
   8:	80000000 	
   c:	4f000000 	
  10:	cf000001 	
	...
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	m3SegmentedMemAccess
			20: R_XTENSA_32	m3SegmentedMemAccess
			24: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_TruncSat_f32_s_r:

00000000 <.literal.op_i32_TruncSat_f32_s_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$2
   4:	7fffffff 	
   8:	80000000 	
   c:	4f000000 	
  10:	cf000001 	
	...
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__truncdfsf2
			20: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_TruncSat_f32_r_s:

00000000 <.literal.op_i32_TruncSat_f32_r_s>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$1
   4:	7fffffff 	
   8:	80000000 	
   c:	4f000000 	
  10:	cf000001 	
	...
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_TruncSat_f32_r_r:

00000000 <.literal.op_i32_TruncSat_f32_r_r>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$0
   4:	7fffffff 	
   8:	80000000 	
   c:	4f000000 	
  10:	cf000001 	
	...
			14: R_XTENSA_32	__truncdfsf2
			18: R_XTENSA_32	.text.profileOp
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_MemCopy:

00000000 <.literal.op_MemCopy>:
	...
			0: R_XTENSA_32	.rodata.op_CallRawFunction.str1.4
			4: R_XTENSA_32	.rodata.op_MemCopy.str1.4
   8:	0000003c 	
			8: R_XTENSA_32	.rodata.op_CallRawFunction.str1.4
   c:	00000040 	
			c: R_XTENSA_32	.rodata.op_CallRawFunction.str1.4
  10:	00000000 	
			10: R_XTENSA_32	.rodata.__FUNCTION__$481
  14:	00000800 	
	...
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	m3SegmentedMemAccess
			20: R_XTENSA_32	m3SegmentedMemAccess
			24: R_XTENSA_32	m3SegmentedMemAccess
			28: R_XTENSA_32	m3_memcpy
			2c: R_XTENSA_32	malloc
			30: R_XTENSA_32	esp_log_system_timestamp
			34: R_XTENSA_32	snprintf
			38: R_XTENSA_32	safe_printf
			3c: R_XTENSA_32	free
			40: R_XTENSA_32	malloc
			44: R_XTENSA_32	esp_log_system_timestamp
			48: R_XTENSA_32	snprintf
			4c: R_XTENSA_32	safe_printf
			50: R_XTENSA_32	free
			54: R_XTENSA_32	vTaskDelay
			58: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Const64:

00000000 <.literal.op_Const64>:
	...
			0: R_XTENSA_32	.bss.ERROR_POINTER
			4: R_XTENSA_32	.rodata.op_CallRawFunction.str1.4
			8: R_XTENSA_32	.rodata.op_Const64.str1.4
   c:	0000003c 	
			c: R_XTENSA_32	.rodata.op_CallRawFunction.str1.4
  10:	0000003c 	
			10: R_XTENSA_32	.rodata.op_Const32.str1.4
  14:	0000003c 	
			14: R_XTENSA_32	.rodata.op_Const64.str1.4
  18:	00000000 	
			18: R_XTENSA_32	.rodata.__FUNCTION__$100
  1c:	00000800 	
	...
			20: R_XTENSA_32	m3SegmentedMemAccess
			24: R_XTENSA_32	m3_memcpy
			28: R_XTENSA_32	m3SegmentedMemAccess
			2c: R_XTENSA_32	m3SegmentedMemAccess
			30: R_XTENSA_32	m3_memcpy
			34: R_XTENSA_32	.text.profileOp
			38: R_XTENSA_32	malloc
			3c: R_XTENSA_32	esp_log_system_timestamp
			40: R_XTENSA_32	snprintf
			44: R_XTENSA_32	safe_printf
			48: R_XTENSA_32	free
			4c: R_XTENSA_32	malloc
			50: R_XTENSA_32	esp_log_system_timestamp
			54: R_XTENSA_32	snprintf
			58: R_XTENSA_32	safe_printf
			5c: R_XTENSA_32	free
			60: R_XTENSA_32	malloc
			64: R_XTENSA_32	esp_log_system_timestamp
			68: R_XTENSA_32	m3SegmentedMemAccess
			6c: R_XTENSA_32	snprintf
			70: R_XTENSA_32	safe_printf
			74: R_XTENSA_32	free

Disassembly of section .literal.op_i64_Store_i32_ss:

00000000 <.literal.op_i64_Store_i32_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$96
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3_memcpy
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Store_i32_sr:

00000000 <.literal.op_i64_Store_i32_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$95
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Store_i32_rs:

00000000 <.literal.op_i64_Store_i32_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$94
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Store_i16_ss:

00000000 <.literal.op_i64_Store_i16_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$93
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3_memcpy
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Store_i16_sr:

00000000 <.literal.op_i64_Store_i16_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$92
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Store_i16_rs:

00000000 <.literal.op_i64_Store_i16_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$91
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Store_u8_ss:

00000000 <.literal.op_i64_Store_u8_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$90
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3_memcpy
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Store_u8_sr:

00000000 <.literal.op_i64_Store_u8_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$89
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Store_u8_rs:

00000000 <.literal.op_i64_Store_u8_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$88
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Store_i16_ss:

00000000 <.literal.op_i32_Store_i16_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$87
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3_memcpy
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Store_i16_sr:

00000000 <.literal.op_i32_Store_i16_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$86
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Store_i16_rs:

00000000 <.literal.op_i32_Store_i16_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$85
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Store_u8_ss:

00000000 <.literal.op_i32_Store_u8_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$84
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3_memcpy
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Store_u8_sr:

00000000 <.literal.op_i32_Store_u8_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$83
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Store_u8_rs:

00000000 <.literal.op_i32_Store_u8_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$82
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Store_f64_rr:

00000000 <.literal.op_f64_Store_f64_rr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$81
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memcpy
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Store_f64_ss:

00000000 <.literal.op_f64_Store_f64_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$80
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3_memcpy
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Store_f64_sr:

00000000 <.literal.op_f64_Store_f64_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$79
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Store_f64_rs:

00000000 <.literal.op_f64_Store_f64_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$78
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Store_f32_rr:

00000000 <.literal.op_f32_Store_f32_rr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$77
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	__truncdfsf2
			c: R_XTENSA_32	m3_memcpy
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Store_f32_ss:

00000000 <.literal.op_f32_Store_f32_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$76
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3_memcpy
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Store_f32_sr:

00000000 <.literal.op_f32_Store_f32_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$75
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Store_f32_rs:

00000000 <.literal.op_f32_Store_f32_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$74
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	__truncdfsf2
			14: R_XTENSA_32	m3_memcpy
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Store_i64_ss:

00000000 <.literal.op_i64_Store_i64_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$73
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3_memcpy
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Store_i64_sr:

00000000 <.literal.op_i64_Store_i64_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$72
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Store_i64_rs:

00000000 <.literal.op_i64_Store_i64_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$71
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Store_i32_ss:

00000000 <.literal.op_i32_Store_i32_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$70
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3_memcpy
			1c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Store_i32_sr:

00000000 <.literal.op_i32_Store_i32_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$69
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Store_i32_rs:

00000000 <.literal.op_i32_Store_i32_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$68
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Load_u32_s:

00000000 <.literal.op_i64_Load_u32_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$67
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Load_u32_r:

00000000 <.literal.op_i64_Load_u32_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$66
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memcpy
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Load_i32_s:

00000000 <.literal.op_i64_Load_i32_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$65
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Load_i32_r:

00000000 <.literal.op_i64_Load_i32_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$64
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memcpy
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Load_u16_s:

00000000 <.literal.op_i64_Load_u16_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$63
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Load_u16_r:

00000000 <.literal.op_i64_Load_u16_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$62
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memcpy
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Load_i16_s:

00000000 <.literal.op_i64_Load_i16_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$61
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Load_i16_r:

00000000 <.literal.op_i64_Load_i16_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$60
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memcpy
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Load_u8_s:

00000000 <.literal.op_i64_Load_u8_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$59
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Load_u8_r:

00000000 <.literal.op_i64_Load_u8_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$58
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memcpy
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Load_i8_s:

00000000 <.literal.op_i64_Load_i8_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$57
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Load_i8_r:

00000000 <.literal.op_i64_Load_i8_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$56
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memcpy
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Load_u16_s:

00000000 <.literal.op_i32_Load_u16_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$55
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Load_u16_r:

00000000 <.literal.op_i32_Load_u16_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$54
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memcpy
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Load_i16_s:

00000000 <.literal.op_i32_Load_i16_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$53
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Load_i16_r:

00000000 <.literal.op_i32_Load_i16_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$52
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memcpy
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Load_u8_s:

00000000 <.literal.op_i32_Load_u8_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$51
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Load_u8_r:

00000000 <.literal.op_i32_Load_u8_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$50
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memcpy
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Load_i8_s:

00000000 <.literal.op_i32_Load_i8_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$49
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Load_i8_r:

00000000 <.literal.op_i32_Load_i8_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$48
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memcpy
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Load_f64_s:

00000000 <.literal.op_f64_Load_f64_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$47
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Load_f64_r:

00000000 <.literal.op_f64_Load_f64_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$46
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memcpy
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Load_f32_s:

00000000 <.literal.op_f32_Load_f32_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$45
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	__extendsfdf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Load_f32_r:

00000000 <.literal.op_f32_Load_f32_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$44
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memcpy
			c: R_XTENSA_32	__extendsfdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Load_i64_s:

00000000 <.literal.op_i64_Load_i64_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$43
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i64_Load_i64_r:

00000000 <.literal.op_i64_Load_i64_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$42
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memcpy
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Load_i32_s:

00000000 <.literal.op_i32_Load_i32_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$41
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3_memcpy
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_i32_Load_i32_r:

00000000 <.literal.op_i32_Load_i32_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$40
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memcpy
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_MemFill:

00000000 <.literal.op_MemFill>:
	...
			0: R_XTENSA_32	.rodata.op_CallRawFunction.str1.4
			4: R_XTENSA_32	.rodata.op_MemFill.str1.4
   8:	0000003c 	
			8: R_XTENSA_32	.rodata.op_CallRawFunction.str1.4
   c:	00000040 	
			c: R_XTENSA_32	.rodata.op_CallRawFunction.str1.4
  10:	00000000 	
			10: R_XTENSA_32	.rodata.__FUNCTION__$480
  14:	00000800 	
	...
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	m3SegmentedMemAccess
			20: R_XTENSA_32	m3SegmentedMemAccess
			24: R_XTENSA_32	m3SegmentedMemAccess
			28: R_XTENSA_32	m3_memset
			2c: R_XTENSA_32	malloc
			30: R_XTENSA_32	esp_log_system_timestamp
			34: R_XTENSA_32	snprintf
			38: R_XTENSA_32	safe_printf
			3c: R_XTENSA_32	free
			40: R_XTENSA_32	malloc
			44: R_XTENSA_32	esp_log_system_timestamp
			48: R_XTENSA_32	snprintf
			4c: R_XTENSA_32	safe_printf
			50: R_XTENSA_32	free
			54: R_XTENSA_32	vTaskDelay
			58: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_Entry:

00000000 <.literal.op_Entry>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$448
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3_memset
			c: R_XTENSA_32	m3_memcpy
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	backtrace_err

Disassembly of section .literal.EnsureCodePageNumLines:

00000000 <.literal.EnsureCodePageNumLines>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   4:	00000008 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000050 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   c:	0000006c 	
			c: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  10:	00000090 	
			10: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			14: R_XTENSA_32	.text.op_Branch
			18: R_XTENSA_32	NumFreeLines
			1c: R_XTENSA_32	AcquireCodePageWithCapacity
			20: R_XTENSA_32	GetPagePC
			24: R_XTENSA_32	NumFreeLines
			28: R_XTENSA_32	printf
			2c: R_XTENSA_32	NumFreeLines
			30: R_XTENSA_32	EmitWord_impl
			34: R_XTENSA_32	GetPagePC
			38: R_XTENSA_32	EmitWord_impl
			3c: R_XTENSA_32	ReleaseCodePage
			40: R_XTENSA_32	printf

Disassembly of section .literal.EmitOp:

00000000 <.literal.EmitOp>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.EmitOp.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			c: R_XTENSA_32	.text.EnsureCodePageNumLines
			10: R_XTENSA_32	printf
			14: R_XTENSA_32	log_emit
			18: R_XTENSA_32	EmitWord_impl

Disassembly of section .literal.Pop:

00000000 <.literal.Pop>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.Pop.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   c:	00000024 	
			c: R_XTENSA_32	.rodata.Pop.str1.4
  10:	00000048 	
			10: R_XTENSA_32	.rodata.Pop.str1.4
  14:	00000074 	
			14: R_XTENSA_32	.rodata.Pop.str1.4
  18:	ffff159e 	
  1c:	000015a0 	
  20:	0000159e 	
	...
			24: R_XTENSA_32	Is64BitType
			28: R_XTENSA_32	Is64BitType
			2c: R_XTENSA_32	printf
			30: R_XTENSA_32	Is64BitType
			34: R_XTENSA_32	printf
			38: R_XTENSA_32	printf
			3c: R_XTENSA_32	printf

Disassembly of section .literal.op_f64_CopySign_ss:

00000000 <.literal.op_f64_CopySign_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$346
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_CopySign_sr:

00000000 <.literal.op_f64_CopySign_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$345
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_CopySign_rs:

00000000 <.literal.op_f64_CopySign_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$344
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Max_ss:

00000000 <.literal.op_f64_Max_ss>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$343
   4:	7ff80000 	
   8:	80000000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__unorddf2
			20: R_XTENSA_32	__eqdf2
			24: R_XTENSA_32	__eqdf2
			28: R_XTENSA_32	.text.profileOp
			2c: R_XTENSA_32	__ltdf2

Disassembly of section .literal.op_f64_Sqrt_s:

00000000 <.literal.op_f64_Sqrt_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$329
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	sqrt
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Sqrt_r:

00000000 <.literal.op_f64_Sqrt_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$328
			4: R_XTENSA_32	sqrt
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Nearest_s:

00000000 <.literal.op_f64_Nearest_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$327
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	rint
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Nearest_r:

00000000 <.literal.op_f64_Nearest_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$326
			4: R_XTENSA_32	rint
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Trunc_s:

00000000 <.literal.op_f64_Trunc_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$325
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	trunc
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Trunc_r:

00000000 <.literal.op_f64_Trunc_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$324
			4: R_XTENSA_32	trunc
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Floor_s:

00000000 <.literal.op_f64_Floor_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$323
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	floor
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Floor_r:

00000000 <.literal.op_f64_Floor_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$322
			4: R_XTENSA_32	floor
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Ceil_s:

00000000 <.literal.op_f64_Ceil_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$321
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	ceil
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f64_Ceil_r:

00000000 <.literal.op_f64_Ceil_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$320
			4: R_XTENSA_32	ceil
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_CopySign_ss:

00000000 <.literal.op_f32_CopySign_ss>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$315
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__extendsfdf2
			18: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_CopySign_sr:

00000000 <.literal.op_f32_CopySign_sr>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$314
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_CopySign_rs:

00000000 <.literal.op_f32_CopySign_rs>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$313
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__truncdfsf2
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Sqrt_s:

00000000 <.literal.op_f32_Sqrt_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$298
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	sqrtf
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Sqrt_r:

00000000 <.literal.op_f32_Sqrt_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$297
			4: R_XTENSA_32	__truncdfsf2
			8: R_XTENSA_32	sqrtf
			c: R_XTENSA_32	__extendsfdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Nearest_s:

00000000 <.literal.op_f32_Nearest_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$296
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	rintf
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Nearest_r:

00000000 <.literal.op_f32_Nearest_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$295
			4: R_XTENSA_32	__truncdfsf2
			8: R_XTENSA_32	rintf
			c: R_XTENSA_32	__extendsfdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Trunc_s:

00000000 <.literal.op_f32_Trunc_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$294
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	truncf
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Trunc_r:

00000000 <.literal.op_f32_Trunc_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$293
			4: R_XTENSA_32	__truncdfsf2
			8: R_XTENSA_32	truncf
			c: R_XTENSA_32	__extendsfdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Floor_s:

00000000 <.literal.op_f32_Floor_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$292
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	floorf
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Floor_r:

00000000 <.literal.op_f32_Floor_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$291
			4: R_XTENSA_32	__truncdfsf2
			8: R_XTENSA_32	floorf
			c: R_XTENSA_32	__extendsfdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Ceil_s:

00000000 <.literal.op_f32_Ceil_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$290
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	ceilf
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_f32_Ceil_r:

00000000 <.literal.op_f32_Ceil_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$289
			4: R_XTENSA_32	__truncdfsf2
			8: R_XTENSA_32	ceilf
			c: R_XTENSA_32	__extendsfdf2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Popcnt_s:

00000000 <.literal.op_u64_Popcnt_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$244
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__popcountdi2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Popcnt_r:

00000000 <.literal.op_u64_Popcnt_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$243
			4: R_XTENSA_32	__popcountdi2
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Ctz_s:

00000000 <.literal.op_u64_Ctz_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$242
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__ctzdi2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Ctz_r:

00000000 <.literal.op_u64_Ctz_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$241
			4: R_XTENSA_32	__ctzdi2
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Clz_s:

00000000 <.literal.op_u64_Clz_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$240
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u64_Clz_r:

00000000 <.literal.op_u64_Clz_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$239
			4: R_XTENSA_32	.text.profileOp
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Popcnt_s:

00000000 <.literal.op_u32_Popcnt_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$198
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	__popcountsi2
			10: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Popcnt_r:

00000000 <.literal.op_u32_Popcnt_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$197
			4: R_XTENSA_32	__popcountsi2
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Ctz_s:

00000000 <.literal.op_u32_Ctz_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$196
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Ctz_r:

00000000 <.literal.op_u32_Ctz_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$195
			4: R_XTENSA_32	.text.profileOp
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Clz_s:

00000000 <.literal.op_u32_Clz_s>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$194
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_u32_Clz_r:

00000000 <.literal.op_u32_Clz_r>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$193
			4: R_XTENSA_32	.text.profileOp
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.op_MemGrow:

00000000 <.literal.op_MemGrow>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$98
			4: R_XTENSA_32	ResizeMemory
			8: R_XTENSA_32	.text.profileOp

Disassembly of section .literal.ReadBlockType:

00000000 <.literal.ReadBlockType>:
	...
			0: R_XTENSA_32	.rodata.ReadBlockType.str1.4
			4: R_XTENSA_32	.rodata.c_waTypes
   8:	00000018 	
			8: R_XTENSA_32	.rodata.ReadBlockType.str1.4
   c:	00000020 	
			c: R_XTENSA_32	.rodata.ReadBlockType.str1.4
	...
			10: R_XTENSA_32	ReadLebSigned
			14: R_XTENSA_32	get_indention_string
			18: R_XTENSA_32	SPrintFuncTypeSignature
			1c: R_XTENSA_32	printf
			20: R_XTENSA_32	NormalizeType
			24: R_XTENSA_32	get_indention_string
			28: R_XTENSA_32	printf

Disassembly of section .literal.op_f64_Min_ss:

00000000 <.literal.op_f64_Min_ss>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$341
   4:	7ff80000 	
   8:	80000000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__unorddf2
			20: R_XTENSA_32	__eqdf2
			24: R_XTENSA_32	__eqdf2
			28: R_XTENSA_32	.text.profileOp
			2c: R_XTENSA_32	__ltdf2

Disassembly of section .literal.op_f32_Max_ss:

00000000 <.literal.op_f32_Max_ss>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$312
   4:	7ff80000 	
   8:	80000000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__extendsfdf2
			20: R_XTENSA_32	.text.profileOp
			24: R_XTENSA_32	__extendsfdf2

Disassembly of section .literal.op_f32_Min_ss:

00000000 <.literal.op_f32_Min_ss>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$310
   4:	7ff80000 	
   8:	80000000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	__extendsfdf2
			20: R_XTENSA_32	.text.profileOp
			24: R_XTENSA_32	__extendsfdf2

Disassembly of section .literal.Call$constprop$0:

00000000 <.literal.Call$constprop$0>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$38
			4: R_XTENSA_32	m3_Yield
			8: R_XTENSA_32	m3SegmentedMemAccess

Disassembly of section .literal.op_Call:

00000000 <.literal.op_Call>:
	...
			0: R_XTENSA_32	.rodata.__FUNCTION__$37
			4: R_XTENSA_32	m3SegmentedMemAccess
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	.text.Call$constprop$0
			10: R_XTENSA_32	.text.profileOp
			14: R_XTENSA_32	backtrace_err

Disassembly of section .literal.EmitSlotOffset$isra$0:

00000000 <.literal.EmitSlotOffset$isra$0>:
   0:	00000000 	
			0: R_XTENSA_32	EmitWord32

Disassembly of section .literal.EmitConstant32$isra$0:

00000000 <.literal.EmitConstant32$isra$0>:
   0:	00000000 	
			0: R_XTENSA_32	EmitWord32

Disassembly of section .literal.op_f64_Min_rs:

00000000 <.literal.op_f64_Min_rs>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$340
   4:	7ff80000 	
   8:	80000000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__unorddf2
			18: R_XTENSA_32	__eqdf2
			1c: R_XTENSA_32	__eqdf2
			20: R_XTENSA_32	.text.profileOp
			24: R_XTENSA_32	__gtdf2

Disassembly of section .literal.op_f64_Max_rs:

00000000 <.literal.op_f64_Max_rs>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$342
   4:	7ff80000 	
   8:	80000000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__unorddf2
			18: R_XTENSA_32	__eqdf2
			1c: R_XTENSA_32	__eqdf2
			20: R_XTENSA_32	.text.profileOp
			24: R_XTENSA_32	__gtdf2

Disassembly of section .literal.op_f32_Min_rs:

00000000 <.literal.op_f32_Min_rs>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$309
   4:	7ff80000 	
   8:	80000000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__truncdfsf2
			18: R_XTENSA_32	__extendsfdf2
			1c: R_XTENSA_32	.text.profileOp
			20: R_XTENSA_32	__extendsfdf2

Disassembly of section .literal.op_f32_Max_rs:

00000000 <.literal.op_f32_Max_rs>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.__FUNCTION__$311
   4:	7ff80000 	
   8:	80000000 	
	...
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	__truncdfsf2
			18: R_XTENSA_32	__extendsfdf2
			1c: R_XTENSA_32	.text.profileOp
			20: R_XTENSA_32	__extendsfdf2

Disassembly of section .literal.AllocateSlotsWithinRange:

00000000 <.literal.AllocateSlotsWithinRange>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.AllocateSlotsWithinRange.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			c: R_XTENSA_32	Is64BitType
			10: R_XTENSA_32	Is64BitType
			14: R_XTENSA_32	printf

Disassembly of section .literal.PreserveRegisterIfOccupied:

00000000 <.literal.PreserveRegisterIfOccupied>:
	...
			0: R_XTENSA_32	.rodata.c_setSetOps
			4: R_XTENSA_32	IsFpType
			8: R_XTENSA_32	.text.AllocateSlotsWithinRange
			c: R_XTENSA_32	.text.EmitOp
			10: R_XTENSA_32	.text.EmitSlotOffset$isra$0

Disassembly of section .literal.FindReferencedLocalWithinCurrentBlock:

00000000 <.literal.FindReferencedLocalWithinCurrentBlock>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.FindReferencedLocalWithinCurrentBlock.str1.4
   4:	0000001c 	
			4: R_XTENSA_32	.rodata.FindReferencedLocalWithinCurrentBlock.str1.4
   8:	0000006c 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   c:	00000090 	
			c: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  10:	00000034 	
			10: R_XTENSA_32	.rodata.FindReferencedLocalWithinCurrentBlock.str1.4
  14:	00000054 	
			14: R_XTENSA_32	.rodata.FindReferencedLocalWithinCurrentBlock.str1.4
	...
			18: R_XTENSA_32	printf
			1c: R_XTENSA_32	.text.AllocateSlotsWithinRange
			20: R_XTENSA_32	printf
			24: R_XTENSA_32	printf

Disassembly of section .literal.PreserveArgsAndLocals:

00000000 <.literal.PreserveArgsAndLocals>:
	...
			0: R_XTENSA_32	.text.op_CopySlot_64
			4: R_XTENSA_32	.text.op_CopySlot_32
			8: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
   c:	0000006c 	
			c: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  10:	00000090 	
			10: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  14:	0000001c 	
			14: R_XTENSA_32	.rodata.FindReferencedLocalWithinCurrentBlock.str1.4
  18:	0000ffff 	
	...
			1c: R_XTENSA_32	GetFunctionNumArgsAndLocals
			20: R_XTENSA_32	.text.FindReferencedLocalWithinCurrentBlock
			24: R_XTENSA_32	printf
			28: R_XTENSA_32	Is64BitType
			2c: R_XTENSA_32	.text.EmitOp
			30: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			34: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			38: R_XTENSA_32	.text.FindReferencedLocalWithinCurrentBlock
			3c: R_XTENSA_32	printf

Disassembly of section .literal.CopyStackIndexToSlot:

00000000 <.literal.CopyStackIndexToSlot>:
	...
			0: R_XTENSA_32	.text.op_CopySlot_64
			4: R_XTENSA_32	.text.op_CopySlot_32
			8: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
   c:	0000006c 	
			c: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  10:	00000090 	
			10: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  14:	00000000 	
			14: R_XTENSA_32	.rodata.c_setSetOps
  18:	0000ffff 	
  1c:	0000ea5f 	
	...
			20: R_XTENSA_32	.text.EmitOp
			24: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			28: R_XTENSA_32	Is64BitType
			2c: R_XTENSA_32	.text.EmitOp
			30: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			34: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			38: R_XTENSA_32	printf
			3c: R_XTENSA_32	printf

Disassembly of section .literal.CopyStackSlotsR:

00000000 <.literal.CopyStackSlotsR>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   c:	00000018 	
			c: R_XTENSA_32	.rodata.ReadBlockType.str1.4
  10:	00000000 	
			10: R_XTENSA_32	.rodata.CopyStackSlotsR.str1.4
  14:	0000ffff 	
	...
			18: R_XTENSA_32	Is64BitType
			1c: R_XTENSA_32	Is64BitType
			20: R_XTENSA_32	Is64BitType
			24: R_XTENSA_32	printf
			28: R_XTENSA_32	printf
			2c: R_XTENSA_32	.text.CopyStackIndexToSlot
			30: R_XTENSA_32	Is64BitType
			34: R_XTENSA_32	.text.CopyStackIndexToSlot
			38: R_XTENSA_32	printf
			3c: R_XTENSA_32	printf
			40: R_XTENSA_32	printf

Disassembly of section .literal.ReturnValues:

00000000 <.literal.ReturnValues>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.ReturnValues.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			c: R_XTENSA_32	GetFuncTypeNumResults
			10: R_XTENSA_32	GetFuncTypeResultType
			14: R_XTENSA_32	GetFuncTypeResultType
			18: R_XTENSA_32	.text.CopyStackIndexToSlot
			1c: R_XTENSA_32	printf
			20: R_XTENSA_32	.text.Pop

Disassembly of section .literal.Compile_End:

00000000 <.literal.Compile_End>:
	...
			0: R_XTENSA_32	.text.op_Return
			4: R_XTENSA_32	.text.ReturnValues
			8: R_XTENSA_32	.text.EmitOp

Disassembly of section .literal.Compile_Memory_Size:

00000000 <.literal.Compile_Memory_Size>:
	...
			0: R_XTENSA_32	.text.op_MemSize
			4: R_XTENSA_32	.rodata.Compile_Memory_Size.str1.4
   8:	0000006c 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   c:	00000090 	
			c: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  10:	0000ea60 	
  14:	0000ea62 	
	...
			18: R_XTENSA_32	ReadLEB_i7
			1c: R_XTENSA_32	.text.PreserveRegisterIfOccupied
			20: R_XTENSA_32	.text.EmitOp
			24: R_XTENSA_32	IsFpType
			28: R_XTENSA_32	printf

Disassembly of section .literal.Compile_GetLocal:

00000000 <.literal.Compile_GetLocal>:
	...
			0: R_XTENSA_32	.rodata.Compile_GetLocal.str1.4
			4: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
   8:	0000006c 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   c:	00000090 	
			c: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  10:	00000000 	
			10: R_XTENSA_32	.rodata.Compile_Memory_Size.str1.4
  14:	ffff159e 	
  18:	000015a0 	
  1c:	0000159e 	
  20:	0000ffff 	
	...
			24: R_XTENSA_32	ReadLEB_ptr
			28: R_XTENSA_32	GetFunctionNumArgsAndLocals
			2c: R_XTENSA_32	printf
			30: R_XTENSA_32	printf

Disassembly of section .literal.PushBlockResults:

00000000 <.literal.PushBlockResults>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.PushBlockResults.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   c:	00000000 	
			c: R_XTENSA_32	.rodata.Compile_Memory_Size.str1.4
  10:	0000159e 	
  14:	0000ea60 	
  18:	0000ea62 	
  1c:	000015a0 	
  20:	ffff159e 	
	...
			24: R_XTENSA_32	GetFuncTypeNumResults
			28: R_XTENSA_32	GetFuncTypeResultType
			2c: R_XTENSA_32	.text.AllocateSlotsWithinRange
			30: R_XTENSA_32	IsFpType
			34: R_XTENSA_32	IsFpType
			38: R_XTENSA_32	printf
			3c: R_XTENSA_32	printf

Disassembly of section .literal.CompileCallArgsAndReturn:

00000000 <.literal.CompileCallArgsAndReturn>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.CompileCallArgsAndReturn.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			c: R_XTENSA_32	.rodata.ReturnValues.str1.4
			10: R_XTENSA_32	.rodata.Compile_Memory_Size.str1.4
			14: R_XTENSA_32	.rodata.AllocateSlotsWithinRange.str1.4
  18:	0000159e 	
  1c:	000015a0 	
  20:	ffff159e 	
	...
			24: R_XTENSA_32	printf
			28: R_XTENSA_32	Is64BitType
			2c: R_XTENSA_32	.text.Pop
			30: R_XTENSA_32	GetFuncTypeNumParams
			34: R_XTENSA_32	GetFuncTypeNumResults
			38: R_XTENSA_32	.text.CopyStackIndexToSlot
			3c: R_XTENSA_32	.text.Pop
			40: R_XTENSA_32	printf
			44: R_XTENSA_32	GetFuncTypeResultType
			48: R_XTENSA_32	Is64BitType
			4c: R_XTENSA_32	printf
			50: R_XTENSA_32	printf
			54: R_XTENSA_32	printf

Disassembly of section .literal.Compile_CallIndirect:

00000000 <.literal.Compile_CallIndirect>:
	...
			0: R_XTENSA_32	.rodata.Compile_CallIndirect.str1.4
			4: R_XTENSA_32	.rodata.ReturnValues.str1.4
   8:	0000006c 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   c:	00000090 	
			c: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			10: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
			14: R_XTENSA_32	.text.op_CallIndirect
  18:	0000ffff 	
  1c:	0000ea5f 	
	...
			20: R_XTENSA_32	ReadLEB_u32
			24: R_XTENSA_32	ReadLEB_u32
			28: R_XTENSA_32	.text.CompileCallArgsAndReturn
			2c: R_XTENSA_32	.text.EmitOp
			30: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			34: R_XTENSA_32	.text.EmitPointer
			38: R_XTENSA_32	.text.EmitPointer
			3c: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			40: R_XTENSA_32	printf
			44: R_XTENSA_32	printf
			48: R_XTENSA_32	.text.PreserveRegisterIfOccupied
			4c: R_XTENSA_32	printf

Disassembly of section .literal.Compile_Call:

00000000 <.literal.Compile_Call>:
	...
			0: R_XTENSA_32	.text.op_Call
			4: R_XTENSA_32	.text.op_Compile
   8:	00000018 	
			8: R_XTENSA_32	.rodata.ReadBlockType.str1.4
	...
			c: R_XTENSA_32	.rodata.Compile_Call.str1.4
			10: R_XTENSA_32	ReadLEB_u32
			14: R_XTENSA_32	Module_GetFunction
			18: R_XTENSA_32	get_indention_string
			1c: R_XTENSA_32	m3_GetFunctionName
			20: R_XTENSA_32	printf
			24: R_XTENSA_32	.text.CompileCallArgsAndReturn
			28: R_XTENSA_32	.text.EmitOp
			2c: R_XTENSA_32	.text.EmitPointer
			30: R_XTENSA_32	.text.EmitSlotOffset$isra$0

Disassembly of section .literal.Compile_Unreachable:

00000000 <.literal.Compile_Unreachable>:
   0:	00000000 	
			0: R_XTENSA_32	.text.op_Unreachable
   4:	00000018 	
			4: R_XTENSA_32	.rodata.ReadBlockType.str1.4
	...
			8: R_XTENSA_32	.rodata.Compile_Unreachable.str1.4
			c: R_XTENSA_32	.rodata.Pop.str1.4
  10:	0000006c 	
			10: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  14:	00000090 	
			14: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  18:	00000024 	
			18: R_XTENSA_32	.rodata.Pop.str1.4
  1c:	00000048 	
			1c: R_XTENSA_32	.rodata.Pop.str1.4
  20:	00000074 	
			20: R_XTENSA_32	.rodata.Pop.str1.4
  24:	00000020 	
			24: R_XTENSA_32	.rodata.Compile_Unreachable.str1.4
  28:	0000159e 	
  2c:	000015a0 	
  30:	ffff159e 	
	...
			34: R_XTENSA_32	.text.EmitOp
			38: R_XTENSA_32	printf
			3c: R_XTENSA_32	Is64BitType
			40: R_XTENSA_32	Is64BitType
			44: R_XTENSA_32	printf
			48: R_XTENSA_32	Is64BitType
			4c: R_XTENSA_32	printf
			50: R_XTENSA_32	printf
			54: R_XTENSA_32	printf
			58: R_XTENSA_32	printf

Disassembly of section .literal.CopyStackTopToRegister$constprop$0:

00000000 <.literal.CopyStackTopToRegister$constprop$0>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.ReturnValues.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			c: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
			10: R_XTENSA_32	.rodata.c_setRegisterOps
  14:	0000ffff 	
  18:	0000ea5f 	
	...
			1c: R_XTENSA_32	.text.PreserveRegisterIfOccupied
			20: R_XTENSA_32	.text.EmitOp
			24: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			28: R_XTENSA_32	printf
			2c: R_XTENSA_32	printf
			30: R_XTENSA_32	printf

Disassembly of section .literal.ResolveBlockResults:

00000000 <.literal.ResolveBlockResults>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.ReturnValues.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   c:	0000ffff 	
	...
			10: R_XTENSA_32	GetFuncTypeNumParams
			14: R_XTENSA_32	GetFuncTypeNumResults
			18: R_XTENSA_32	Is64BitType
			1c: R_XTENSA_32	.text.CopyStackSlotsR
			20: R_XTENSA_32	IsFpType
			24: R_XTENSA_32	.text.CopyStackTopToRegister$constprop$0
			28: R_XTENSA_32	printf

Disassembly of section .literal.Compile_BranchTable:

00000000 <.literal.Compile_BranchTable>:
	...
			0: R_XTENSA_32	.rodata.Compile_BranchTable.str1.4
			4: R_XTENSA_32	.rodata.ReturnValues.str1.4
   8:	0000006c 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   c:	00000090 	
			c: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			10: R_XTENSA_32	.text.op_BranchTable
			14: R_XTENSA_32	.text.op_ContinueLoop
			18: R_XTENSA_32	.text.op_Return
			1c: R_XTENSA_32	.text.op_Branch
  20:	00000018 	
			20: R_XTENSA_32	.rodata.ReadBlockType.str1.4
  24:	00000014 	
			24: R_XTENSA_32	.rodata.Compile_BranchTable.str1.4
	...
			28: R_XTENSA_32	.rodata.Compile_Unreachable.str1.4
			2c: R_XTENSA_32	.rodata.Pop.str1.4
  30:	00000024 	
			30: R_XTENSA_32	.rodata.Pop.str1.4
  34:	00000048 	
			34: R_XTENSA_32	.rodata.Pop.str1.4
  38:	00000074 	
			38: R_XTENSA_32	.rodata.Pop.str1.4
  3c:	00000020 	
			3c: R_XTENSA_32	.rodata.Compile_Unreachable.str1.4
  40:	0000159e 	
  44:	000015a0 	
  48:	ffff159e 	
  4c:	0000ffff 	
	...
			50: R_XTENSA_32	ReadLEB_ptr
			54: R_XTENSA_32	.text.PreserveRegisterIfOccupied
			58: R_XTENSA_32	.text.Pop
			5c: R_XTENSA_32	.text.EnsureCodePageNumLines
			60: R_XTENSA_32	.text.EmitOp
			64: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			68: R_XTENSA_32	.text.EmitConstant32$isra$0
			6c: R_XTENSA_32	ReadLEB_u32
			70: R_XTENSA_32	AcquireCodePage
			74: R_XTENSA_32	GetPagePC
			78: R_XTENSA_32	.text.ReturnValues
			7c: R_XTENSA_32	.text.EmitOp
			80: R_XTENSA_32	ReleaseCodePage
			84: R_XTENSA_32	.text.EmitPointer
			88: R_XTENSA_32	printf
			8c: R_XTENSA_32	Is64BitType
			90: R_XTENSA_32	Is64BitType
			94: R_XTENSA_32	printf
			98: R_XTENSA_32	.text.ResolveBlockResults
			9c: R_XTENSA_32	.text.EmitOp
			a0: R_XTENSA_32	.text.EmitPointer
			a4: R_XTENSA_32	printf
			a8: R_XTENSA_32	ReleaseCodePage
			ac: R_XTENSA_32	.text.EmitPointer
			b0: R_XTENSA_32	.text.ResolveBlockResults
			b4: R_XTENSA_32	.text.EmitOp
			b8: R_XTENSA_32	.text.EmitPointer
			bc: R_XTENSA_32	ReleaseCodePage
			c0: R_XTENSA_32	.text.EmitPointer
			c4: R_XTENSA_32	printf
			c8: R_XTENSA_32	printf
			cc: R_XTENSA_32	Is64BitType
			d0: R_XTENSA_32	printf
			d4: R_XTENSA_32	printf
			d8: R_XTENSA_32	printf

Disassembly of section .literal.Compile_Memory_CopyFill:

00000000 <.literal.Compile_Memory_CopyFill>:
	...
			0: R_XTENSA_32	.text.op_MemCopy
			4: R_XTENSA_32	.text.op_MemFill
			8: R_XTENSA_32	.rodata.ReturnValues.str1.4
   c:	0000006c 	
			c: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  10:	00000090 	
			10: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  14:	00000000 	
			14: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
  18:	0000ffff 	
  1c:	0000ea5f 	
  20:	0000fc0a 	
	...
			24: R_XTENSA_32	ReadLEB_ptr
			28: R_XTENSA_32	.text.CopyStackTopToRegister$constprop$0
			2c: R_XTENSA_32	.text.EmitOp
			30: R_XTENSA_32	.text.Pop
			34: R_XTENSA_32	printf
			38: R_XTENSA_32	.text.Pop
			3c: R_XTENSA_32	printf
			40: R_XTENSA_32	.text.Pop
			44: R_XTENSA_32	ReadLEB_ptr
			48: R_XTENSA_32	printf
			4c: R_XTENSA_32	printf
			50: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			54: R_XTENSA_32	printf
			58: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			5c: R_XTENSA_32	printf

Disassembly of section .literal.Compile_Memory_Grow:

00000000 <.literal.Compile_Memory_Grow>:
	...
			0: R_XTENSA_32	.text.op_MemGrow
			4: R_XTENSA_32	.rodata.Compile_Memory_Size.str1.4
   8:	0000006c 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   c:	00000090 	
			c: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  10:	0000ea60 	
  14:	0000ea62 	
	...
			18: R_XTENSA_32	ReadLEB_i7
			1c: R_XTENSA_32	.text.CopyStackTopToRegister$constprop$0
			20: R_XTENSA_32	.text.Pop
			24: R_XTENSA_32	.text.EmitOp
			28: R_XTENSA_32	IsFpType
			2c: R_XTENSA_32	printf

Disassembly of section .literal.Compile_Return:

00000000 <.literal.Compile_Return>:
	...
			0: R_XTENSA_32	.rodata.Compile_BranchTable.str1.4
			4: R_XTENSA_32	.text.op_Return
   8:	00000018 	
			8: R_XTENSA_32	.rodata.ReadBlockType.str1.4
	...
			c: R_XTENSA_32	.rodata.Compile_Unreachable.str1.4
			10: R_XTENSA_32	.rodata.Pop.str1.4
  14:	0000006c 	
			14: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  18:	00000090 	
			18: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  1c:	00000024 	
			1c: R_XTENSA_32	.rodata.Pop.str1.4
  20:	00000048 	
			20: R_XTENSA_32	.rodata.Pop.str1.4
  24:	00000074 	
			24: R_XTENSA_32	.rodata.Pop.str1.4
  28:	00000020 	
			28: R_XTENSA_32	.rodata.Compile_Unreachable.str1.4
  2c:	0000159e 	
  30:	000015a0 	
  34:	ffff159e 	
	...
			38: R_XTENSA_32	.text.ReturnValues
			3c: R_XTENSA_32	.text.EmitOp
			40: R_XTENSA_32	printf
			44: R_XTENSA_32	Is64BitType
			48: R_XTENSA_32	Is64BitType
			4c: R_XTENSA_32	printf
			50: R_XTENSA_32	printf
			54: R_XTENSA_32	Is64BitType
			58: R_XTENSA_32	printf
			5c: R_XTENSA_32	printf
			60: R_XTENSA_32	printf

Disassembly of section .literal.Compile_Convert:

00000000 <.literal.Compile_Convert>:
	...
			0: R_XTENSA_32	c_operations
			4: R_XTENSA_32	c_operationsFC
			8: R_XTENSA_32	.rodata.ReturnValues.str1.4
   c:	0000006c 	
			c: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  10:	00000090 	
			10: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			14: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
			18: R_XTENSA_32	.rodata.Compile_Memory_Size.str1.4
			1c: R_XTENSA_32	.rodata.PushBlockResults.str1.4
  20:	0000ea60 	
  24:	0000ea62 	
  28:	ffff159e 	
  2c:	000015a0 	
  30:	0000159e 	
  34:	0000ffff 	
  38:	0000ea5f 	
	...
			3c: R_XTENSA_32	IsFpType
			40: R_XTENSA_32	.text.EmitOp
			44: R_XTENSA_32	printf
			48: R_XTENSA_32	.text.Pop
			4c: R_XTENSA_32	.text.AllocateSlotsWithinRange
			50: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			54: R_XTENSA_32	printf
			58: R_XTENSA_32	printf
			5c: R_XTENSA_32	printf
			60: R_XTENSA_32	IsFpType
			64: R_XTENSA_32	printf
			68: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			6c: R_XTENSA_32	printf
			70: R_XTENSA_32	printf
			74: R_XTENSA_32	printf

Disassembly of section .literal.Compile_SetLocal:

00000000 <.literal.Compile_SetLocal>:
	...
			0: R_XTENSA_32	.text.op_PreserveCopySlot_64
			4: R_XTENSA_32	.text.op_PreserveCopySlot_32
			8: R_XTENSA_32	.rodata.Compile_GetLocal.str1.4
			c: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
  10:	0000006c 	
			10: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  14:	00000090 	
			14: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			18: R_XTENSA_32	.rodata.ReturnValues.str1.4
			1c: R_XTENSA_32	.rodata.c_preserveSetSlot
  20:	0000ffff 	
  24:	0000ea5f 	
	...
			28: R_XTENSA_32	ReadLEB_ptr
			2c: R_XTENSA_32	GetFunctionNumArgsAndLocals
			30: R_XTENSA_32	printf
			34: R_XTENSA_32	.text.FindReferencedLocalWithinCurrentBlock
			38: R_XTENSA_32	Is64BitType
			3c: R_XTENSA_32	.text.EmitOp
			40: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			44: R_XTENSA_32	printf
			48: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			4c: R_XTENSA_32	printf
			50: R_XTENSA_32	.text.CopyStackIndexToSlot
			54: R_XTENSA_32	.text.Pop
			58: R_XTENSA_32	printf
			5c: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			60: R_XTENSA_32	printf
			64: R_XTENSA_32	printf
			68: R_XTENSA_32	printf

Disassembly of section .literal.Compile_GetSetGlobal:

00000000 <.literal.Compile_GetSetGlobal>:
	...
			0: R_XTENSA_32	.text.op_GetGlobal_s64
			4: R_XTENSA_32	.text.op_GetGlobal_s32
			8: R_XTENSA_32	.text.op_SetGlobal_s64
			c: R_XTENSA_32	.text.op_SetGlobal_s32
			10: R_XTENSA_32	.rodata.Compile_Memory_Size.str1.4
  14:	0000006c 	
			14: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  18:	00000090 	
			18: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			1c: R_XTENSA_32	.rodata.ReturnValues.str1.4
			20: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
			24: R_XTENSA_32	.rodata.c_setGlobalOps
  28:	0000ffff 	
  2c:	0000ea5f 	
  30:	ffff159e 	
  34:	000015a0 	
  38:	0000159e 	
	...
			3c: R_XTENSA_32	ReadLEB_ptr
			40: R_XTENSA_32	Is64BitType
			44: R_XTENSA_32	.text.EmitOp
			48: R_XTENSA_32	.text.EmitPointer
			4c: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			50: R_XTENSA_32	.text.Pop
			54: R_XTENSA_32	Is64BitType
			58: R_XTENSA_32	.text.EmitOp
			5c: R_XTENSA_32	.text.EmitPointer
			60: R_XTENSA_32	.text.AllocateSlotsWithinRange
			64: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			68: R_XTENSA_32	printf
			6c: R_XTENSA_32	printf
			70: R_XTENSA_32	printf
			74: R_XTENSA_32	printf
			78: R_XTENSA_32	printf
			7c: R_XTENSA_32	printf

Disassembly of section .literal.Compile_Operator:

00000000 <.literal.Compile_Operator>:
	...
			0: R_XTENSA_32	.rodata.Compile_Operator.str1.4
			4: R_XTENSA_32	c_operations
			8: R_XTENSA_32	c_operationsFC
			c: R_XTENSA_32	.rodata.ReturnValues.str1.4
  10:	0000006c 	
			10: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  14:	00000090 	
			14: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  18:	00000000 	
			18: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
  1c:	00000020 	
			1c: R_XTENSA_32	.rodata.Compile_Operator.str1.4
  20:	00000000 	
			20: R_XTENSA_32	.rodata.Compile_Memory_Size.str1.4
  24:	0000ea60 	
  28:	0000ea62 	
  2c:	0000ffff 	
  30:	0000ea5f 	
  34:	00000858 	
	...
			38: R_XTENSA_32	IsFpType
			3c: R_XTENSA_32	.text.PreserveRegisterIfOccupied
			40: R_XTENSA_32	.text.EmitOp
			44: R_XTENSA_32	.text.PreserveRegisterIfOccupied
			48: R_XTENSA_32	IsIntType
			4c: R_XTENSA_32	.text.PreserveRegisterIfOccupied
			50: R_XTENSA_32	printf
			54: R_XTENSA_32	printf
			58: R_XTENSA_32	printf
			5c: R_XTENSA_32	printf
			60: R_XTENSA_32	.text.Pop
			64: R_XTENSA_32	IsFpType
			68: R_XTENSA_32	printf
			6c: R_XTENSA_32	printf
			70: R_XTENSA_32	printf
			74: R_XTENSA_32	printf
			78: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			7c: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			80: R_XTENSA_32	printf
			84: R_XTENSA_32	printf
			88: R_XTENSA_32	printf
			8c: R_XTENSA_32	printf
			90: R_XTENSA_32	printf
			94: R_XTENSA_32	.text.Pop
			98: R_XTENSA_32	printf
			9c: R_XTENSA_32	printf
			a0: R_XTENSA_32	printf

Disassembly of section .literal.Compile_Load_Store:

00000000 <.literal.Compile_Load_Store>:
   0:	00000018 	
			0: R_XTENSA_32	.rodata.ReadBlockType.str1.4
	...
			4: R_XTENSA_32	.rodata.Compile_Load_Store.str1.4
			8: R_XTENSA_32	c_operations
			c: R_XTENSA_32	c_operationsFC
			10: R_XTENSA_32	ReadLEB_ptr
			14: R_XTENSA_32	ReadLEB_ptr
			18: R_XTENSA_32	get_indention_string
			1c: R_XTENSA_32	printf
			20: R_XTENSA_32	IsFpType
			24: R_XTENSA_32	.text.PreserveRegisterIfOccupied
			28: R_XTENSA_32	.text.Compile_Operator
			2c: R_XTENSA_32	.text.EmitConstant32$isra$0

Disassembly of section .literal.Compile_Drop:

00000000 <.literal.Compile_Drop>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.Pop.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   c:	00000024 	
			c: R_XTENSA_32	.rodata.Pop.str1.4
  10:	00000048 	
			10: R_XTENSA_32	.rodata.Pop.str1.4
  14:	00000074 	
			14: R_XTENSA_32	.rodata.Pop.str1.4
  18:	ffff159e 	
  1c:	000015a0 	
  20:	0000159e 	
	...
			24: R_XTENSA_32	Is64BitType
			28: R_XTENSA_32	Is64BitType
			2c: R_XTENSA_32	printf
			30: R_XTENSA_32	Is64BitType
			34: R_XTENSA_32	printf
			38: R_XTENSA_32	printf
			3c: R_XTENSA_32	printf

Disassembly of section .literal.Compile_Select:

00000000 <.literal.Compile_Select>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.ReturnValues.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			c: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
			10: R_XTENSA_32	.rodata.c_fpSelectOps
			14: R_XTENSA_32	.rodata.c_intSelectOps
			18: R_XTENSA_32	.rodata.PushBlockResults.str1.4
			1c: R_XTENSA_32	.rodata.Compile_Memory_Size.str1.4
  20:	0000ffff 	
  24:	0000ea60 	
  28:	0000ea62 	
  2c:	0000ea5f 	
	...
			30: R_XTENSA_32	IsFpType
			34: R_XTENSA_32	.text.PreserveRegisterIfOccupied
			38: R_XTENSA_32	IsIntType
			3c: R_XTENSA_32	.text.EmitOp
			40: R_XTENSA_32	IsFpType
			44: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			48: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			4c: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			50: R_XTENSA_32	printf
			54: R_XTENSA_32	printf
			58: R_XTENSA_32	.text.Pop
			5c: R_XTENSA_32	printf
			60: R_XTENSA_32	printf
			64: R_XTENSA_32	.text.Pop
			68: R_XTENSA_32	.text.Pop
			6c: R_XTENSA_32	printf
			70: R_XTENSA_32	printf
			74: R_XTENSA_32	printf
			78: R_XTENSA_32	printf
			7c: R_XTENSA_32	printf
			80: R_XTENSA_32	printf
			84: R_XTENSA_32	printf
			88: R_XTENSA_32	printf
			8c: R_XTENSA_32	.text.PreserveRegisterIfOccupied
			90: R_XTENSA_32	printf
			94: R_XTENSA_32	printf
			98: R_XTENSA_32	printf
			9c: R_XTENSA_32	printf
			a0: R_XTENSA_32	printf
			a4: R_XTENSA_32	printf
			a8: R_XTENSA_32	printf
			ac: R_XTENSA_32	printf
			b0: R_XTENSA_32	printf

Disassembly of section .literal.PushConst:

00000000 <.literal.PushConst>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.Compile_Memory_Size.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			c: R_XTENSA_32	.text.op_Const64
			10: R_XTENSA_32	.text.op_Const32
			14: R_XTENSA_32	.rodata.PushConst.str1.4
  18:	ffff159e 	
  1c:	000015a0 	
  20:	0000159e 	
  24:	0000ffff 	
	...
			28: R_XTENSA_32	Is64BitType
			2c: R_XTENSA_32	Is64BitType
			30: R_XTENSA_32	memcpy
			34: R_XTENSA_32	memcpy
			38: R_XTENSA_32	.text.AllocateSlotsWithinRange
			3c: R_XTENSA_32	.text.EmitOp
			40: R_XTENSA_32	EmitWord32
			44: R_XTENSA_32	.text.AllocateSlotsWithinRange
			48: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			4c: R_XTENSA_32	Is64BitType
			50: R_XTENSA_32	memcpy
			54: R_XTENSA_32	.text.EmitOp
			58: R_XTENSA_32	EmitWord64
			5c: R_XTENSA_32	memcpy
			60: R_XTENSA_32	memcpy
			64: R_XTENSA_32	printf
			68: R_XTENSA_32	printf
			6c: R_XTENSA_32	printf
			70: R_XTENSA_32	printf
			74: R_XTENSA_32	printf

Disassembly of section .literal.Compile_Const_f64:

00000000 <.literal.Compile_Const_f64>:
   0:	00000018 	
			0: R_XTENSA_32	.rodata.ReadBlockType.str1.4
	...
			4: R_XTENSA_32	.rodata.Compile_Const_f64.str1.4
			8: R_XTENSA_32	Read_f64
			c: R_XTENSA_32	get_indention_string
			10: R_XTENSA_32	printf
			14: R_XTENSA_32	.text.PushConst

Disassembly of section .literal.Compile_Const_f32:

00000000 <.literal.Compile_Const_f32>:
   0:	00000018 	
			0: R_XTENSA_32	.rodata.ReadBlockType.str1.4
	...
			4: R_XTENSA_32	.rodata.Compile_Const_f32.str1.4
			8: R_XTENSA_32	Read_f32
			c: R_XTENSA_32	get_indention_string
			10: R_XTENSA_32	__extendsfdf2
			14: R_XTENSA_32	printf
			18: R_XTENSA_32	.text.PushConst

Disassembly of section .literal.Compile_Const_i64:

00000000 <.literal.Compile_Const_i64>:
   0:	00000018 	
			0: R_XTENSA_32	.rodata.ReadBlockType.str1.4
	...
			4: R_XTENSA_32	.rodata.Compile_Const_i64.str1.4
			8: R_XTENSA_32	ReadLEB_i64
			c: R_XTENSA_32	.text.PushConst
			10: R_XTENSA_32	get_indention_string
			14: R_XTENSA_32	printf

Disassembly of section .literal.Compile_Const_i32:

00000000 <.literal.Compile_Const_i32>:
   0:	00000018 	
			0: R_XTENSA_32	.rodata.ReadBlockType.str1.4
	...
			4: R_XTENSA_32	.rodata.Compile_Const_i32.str1.4
			8: R_XTENSA_32	ReadLEB_i32
			c: R_XTENSA_32	.text.PushConst
			10: R_XTENSA_32	get_indention_string
			14: R_XTENSA_32	printf

Disassembly of section .literal.Compile_Branch:

00000000 <.literal.Compile_Branch>:
	...
			0: R_XTENSA_32	.text.op_BranchIfPrologue_r
			4: R_XTENSA_32	.text.op_BranchIfPrologue_s
			8: R_XTENSA_32	.text.op_BranchIf_r
			c: R_XTENSA_32	.text.op_BranchIf_s
			10: R_XTENSA_32	.rodata.Compile_BranchTable.str1.4
			14: R_XTENSA_32	.rodata.ReturnValues.str1.4
  18:	0000006c 	
			18: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  1c:	00000090 	
			1c: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			20: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
			24: R_XTENSA_32	.rodata.Pop.str1.4
  28:	00000024 	
			28: R_XTENSA_32	.rodata.Pop.str1.4
  2c:	00000048 	
			2c: R_XTENSA_32	.rodata.Pop.str1.4
  30:	00000074 	
			30: R_XTENSA_32	.rodata.Pop.str1.4
	...
			34: R_XTENSA_32	.text.op_ContinueLoop
			38: R_XTENSA_32	.text.op_ContinueLoopIf
  3c:	00000018 	
			3c: R_XTENSA_32	.rodata.ReadBlockType.str1.4
  40:	00000014 	
			40: R_XTENSA_32	.rodata.Compile_BranchTable.str1.4
	...
			44: R_XTENSA_32	.text.op_Return
			48: R_XTENSA_32	.text.op_Branch
			4c: R_XTENSA_32	.rodata.Compile_Unreachable.str1.4
  50:	00000020 	
			50: R_XTENSA_32	.rodata.Compile_Unreachable.str1.4
  54:	ffff159e 	
  58:	000015a0 	
  5c:	0000159e 	
  60:	0000ffff 	
  64:	0000ea5f 	
	...
			68: R_XTENSA_32	ReadLEB_ptr
			6c: R_XTENSA_32	.text.EmitOp
			70: R_XTENSA_32	.text.EmitPointer
			74: R_XTENSA_32	GetFuncTypeNumResults
			78: R_XTENSA_32	.text.ReturnValues
			7c: R_XTENSA_32	.text.EmitOp
			80: R_XTENSA_32	GetPagePC
			84: R_XTENSA_32	printf
			88: R_XTENSA_32	.text.Pop
			8c: R_XTENSA_32	GetFuncTypeNumParams
			90: R_XTENSA_32	printf
			94: R_XTENSA_32	.text.EmitOp
			98: R_XTENSA_32	printf
			9c: R_XTENSA_32	printf
			a0: R_XTENSA_32	.text.EmitOp
			a4: R_XTENSA_32	.text.ResolveBlockResults
			a8: R_XTENSA_32	.text.EmitOp
			ac: R_XTENSA_32	.text.EmitPointer
			b0: R_XTENSA_32	printf
			b4: R_XTENSA_32	.text.CopyStackTopToRegister$constprop$0
			b8: R_XTENSA_32	.text.Pop
			bc: R_XTENSA_32	.text.EmitOp
			c0: R_XTENSA_32	.text.EmitPointer
			c4: R_XTENSA_32	printf
			c8: R_XTENSA_32	printf
			cc: R_XTENSA_32	.text.EmitOp
			d0: R_XTENSA_32	printf
			d4: R_XTENSA_32	printf
			d8: R_XTENSA_32	printf
			dc: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			e0: R_XTENSA_32	.text.ReservePointer
			e4: R_XTENSA_32	.text.ResolveBlockResults
			e8: R_XTENSA_32	.text.EmitOp
			ec: R_XTENSA_32	.text.EmitPointer
			f0: R_XTENSA_32	GetPagePC
			f4: R_XTENSA_32	printf
			f8: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			fc: R_XTENSA_32	.text.ReservePointer
			100: R_XTENSA_32	GetPagePC
			104: R_XTENSA_32	printf
			108: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			10c: R_XTENSA_32	.text.EmitPointer
			110: R_XTENSA_32	printf
			114: R_XTENSA_32	printf
			118: R_XTENSA_32	printf
			11c: R_XTENSA_32	printf
			120: R_XTENSA_32	Is64BitType
			124: R_XTENSA_32	Is64BitType
			128: R_XTENSA_32	Is64BitType
			12c: R_XTENSA_32	Is64BitType
			130: R_XTENSA_32	Is64BitType
			134: R_XTENSA_32	Is64BitType
			138: R_XTENSA_32	printf
			13c: R_XTENSA_32	Is64BitType
			140: R_XTENSA_32	printf
			144: R_XTENSA_32	Is64BitType
			148: R_XTENSA_32	printf
			14c: R_XTENSA_32	Is64BitType
			150: R_XTENSA_32	printf
			154: R_XTENSA_32	printf
			158: R_XTENSA_32	printf
			15c: R_XTENSA_32	printf
			160: R_XTENSA_32	printf
			164: R_XTENSA_32	printf
			168: R_XTENSA_32	printf
			16c: R_XTENSA_32	printf
			170: R_XTENSA_32	printf
			174: R_XTENSA_32	printf
			178: R_XTENSA_32	printf
			17c: R_XTENSA_32	printf

Disassembly of section .literal.GetMaxUsedSlotPlusOne:

00000000 <.literal.GetMaxUsedSlotPlusOne>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.CompileCallArgsAndReturn.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   c:	00000000 	
			c: R_XTENSA_32	printf

Disassembly of section .literal.CompileRawFunction:

00000000 <.literal.CompileRawFunction>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.CompileRawFunction.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   c:	00000000 	
			c: R_XTENSA_32	.text.op_CallRawFunction
  10:	000008b6 	
	...
			14: R_XTENSA_32	AcquireCodePageWithCapacity
			18: R_XTENSA_32	GetPagePC
			1c: R_XTENSA_32	EmitWord_impl
			20: R_XTENSA_32	EmitWord_impl
			24: R_XTENSA_32	EmitWord_impl
			28: R_XTENSA_32	EmitWord_impl
			2c: R_XTENSA_32	ReleaseCodePage
			30: R_XTENSA_32	printf

Disassembly of section .literal.GetOpInfo:

00000000 <.literal.GetOpInfo>:
	...
			0: R_XTENSA_32	c_operations
			4: R_XTENSA_32	c_operationsFC

Disassembly of section .literal.CompileBlockStatements:

00000000 <.literal.CompileBlockStatements>:
	...
			0: R_XTENSA_32	c_operations
			4: R_XTENSA_32	c_operationsFC
			8: R_XTENSA_32	nothing_todo
			c: R_XTENSA_32	Read_opcode
			10: R_XTENSA_32	log_opcode
			14: R_XTENSA_32	.text.Compile_Operator

Disassembly of section .literal.CompileFunction$part$0:

00000000 <.literal.CompileFunction$part$0>:
   0:	00000018 	
			0: R_XTENSA_32	.rodata.ReadBlockType.str1.4
   4:	00000000 	
			4: R_XTENSA_32	.rodata.CompileFunction$part$0.str1.4
   8:	00000030 	
			8: R_XTENSA_32	.rodata.CompileFunction$part$0.str1.4
   c:	0000006c 	
			c: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  10:	00000090 	
			10: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			14: R_XTENSA_32	.rodata.AllocateSlotsWithinRange.str1.4
			18: R_XTENSA_32	.rodata.Compile_Memory_Size.str1.4
			1c: R_XTENSA_32	.rodata.c_waTypes
  20:	00000050 	
			20: R_XTENSA_32	.rodata.CompileFunction$part$0.str1.4
  24:	00000000 	
			24: R_XTENSA_32	.rodata.CompileCallArgsAndReturn.str1.4
  28:	00000080 	
			28: R_XTENSA_32	.rodata.CompileFunction$part$0.str1.4
  2c:	000000a8 	
			2c: R_XTENSA_32	.rodata.CompileFunction$part$0.str1.4
  30:	00000000 	
			30: R_XTENSA_32	.text.op_Entry
  34:	000000c8 	
			34: R_XTENSA_32	.rodata.CompileFunction$part$0.str1.4
  38:	0000ffff 	
  3c:	0000159e 	
  40:	000015a0 	
  44:	ffff159e 	
  48:	00000b3c 	
	...
			4c: R_XTENSA_32	m3_GetFunctionName
			50: R_XTENSA_32	SPrintFuncTypeSignature
			54: R_XTENSA_32	printf
			58: R_XTENSA_32	memset
			5c: R_XTENSA_32	ReadLEB_u32
			60: R_XTENSA_32	AcquireCodePage
			64: R_XTENSA_32	GetPagePC
			68: R_XTENSA_32	GetFunctionNumReturns
			6c: R_XTENSA_32	printf
			70: R_XTENSA_32	ReleaseCodePage
			74: R_XTENSA_32	GetFunctionNumArgs
			78: R_XTENSA_32	GetFunctionArgType
			7c: R_XTENSA_32	.text.AllocateSlotsWithinRange
			80: R_XTENSA_32	ReadLEB_u32
			84: R_XTENSA_32	ReadLEB_u32
			88: R_XTENSA_32	ReadLEB_i7
			8c: R_XTENSA_32	NormalizeType
			90: R_XTENSA_32	printf
			94: R_XTENSA_32	.text.AllocateSlotsWithinRange
			98: R_XTENSA_32	printf
			9c: R_XTENSA_32	Is64BitType
			a0: R_XTENSA_32	printf
			a4: R_XTENSA_32	printf
			a8: R_XTENSA_32	.text.EmitOp
			ac: R_XTENSA_32	.text.EmitPointer
			b0: R_XTENSA_32	CompileBlockStatements
			b4: R_XTENSA_32	printf
			b8: R_XTENSA_32	m3_Int_CopyMem
			bc: R_XTENSA_32	printf
			c0: R_XTENSA_32	printf
			c4: R_XTENSA_32	printf
			c8: R_XTENSA_32	Is64BitType

Disassembly of section .literal.op_Compile:

00000000 <.literal.op_Compile>:
	...
			0: R_XTENSA_32	.rodata.op_Compile.str1.4
			4: R_XTENSA_32	.text.op_Call
			8: R_XTENSA_32	.rodata.__FUNCTION__$447
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	.text.CompileFunction$part$0
			18: R_XTENSA_32	backtrace_err

Disassembly of section .literal.op_CallIndirect:

00000000 <.literal.op_CallIndirect>:
	...
			0: R_XTENSA_32	.rodata.op_Compile.str1.4
			4: R_XTENSA_32	.rodata.__FUNCTION__$39
			8: R_XTENSA_32	m3SegmentedMemAccess
			c: R_XTENSA_32	m3SegmentedMemAccess
			10: R_XTENSA_32	m3SegmentedMemAccess
			14: R_XTENSA_32	m3SegmentedMemAccess
			18: R_XTENSA_32	m3SegmentedMemAccess
			1c: R_XTENSA_32	.text.Call$constprop$0
			20: R_XTENSA_32	m3SegmentedMemAccess
			24: R_XTENSA_32	backtrace_err
			28: R_XTENSA_32	.text.CompileFunction$part$0

Disassembly of section .literal.CompileBlock:

00000000 <.literal.CompileBlock>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.CompileBlock.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   c:	00000020 	
			c: R_XTENSA_32	.rodata.CompileBlock.str1.4
	...
			10: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
			14: R_XTENSA_32	.rodata.Compile_Memory_Size.str1.4
			18: R_XTENSA_32	.rodata.AllocateSlotsWithinRange.str1.4
  1c:	00000018 	
			1c: R_XTENSA_32	.rodata.ReadBlockType.str1.4
  20:	00000020 	
			20: R_XTENSA_32	.rodata.Compile_Unreachable.str1.4
  24:	00000040 	
			24: R_XTENSA_32	.rodata.CompileBlock.str1.4
  28:	0000159e 	
  2c:	ffff0001 	
  30:	000015a0 	
  34:	ffff159e 	
  38:	0000ffff 	
  3c:	00000a69 	
  40:	00000a68 	
	...
			44: R_XTENSA_32	nothing_todo
			48: R_XTENSA_32	GetPagePC
			4c: R_XTENSA_32	GetFuncTypeNumParams
			50: R_XTENSA_32	GetFuncTypeParamType
			54: R_XTENSA_32	.text.Pop
			58: R_XTENSA_32	.text.PushBlockResults
			5c: R_XTENSA_32	GetFuncTypeNumResults
			60: R_XTENSA_32	.text.Pop
			64: R_XTENSA_32	GetFuncTypeParamType
			68: R_XTENSA_32	Is64BitType
			6c: R_XTENSA_32	CompileBlockStatements
			70: R_XTENSA_32	.text.ResolveBlockResults
			74: R_XTENSA_32	.text.Pop
			78: R_XTENSA_32	Is64BitType
			7c: R_XTENSA_32	printf
			80: R_XTENSA_32	printf
			84: R_XTENSA_32	printf
			88: R_XTENSA_32	.text.PushBlockResults
			8c: R_XTENSA_32	GetPagePC
			90: R_XTENSA_32	printf
			94: R_XTENSA_32	printf
			98: R_XTENSA_32	.text.PushBlockResults
			9c: R_XTENSA_32	GetFuncTypeNumResults
			a0: R_XTENSA_32	printf
			a4: R_XTENSA_32	printf
			a8: R_XTENSA_32	printf
			ac: R_XTENSA_32	.text.PushBlockResults
			b0: R_XTENSA_32	GetFuncTypeNumResults

Disassembly of section .literal.Compile_LoopOrBlock:

00000000 <.literal.Compile_LoopOrBlock>:
   0:	00000000 	
			0: R_XTENSA_32	.rodata.Compile_LoopOrBlock.str1.4
   4:	0000006c 	
			4: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
   8:	00000090 	
			8: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			c: R_XTENSA_32	.rodata.ReturnValues.str1.4
			10: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
			14: R_XTENSA_32	.text.op_Loop
			18: R_XTENSA_32	.text.PreserveRegisterIfOccupied
			1c: R_XTENSA_32	.text.PreserveRegisterIfOccupied
			20: R_XTENSA_32	.text.PreserveArgsAndLocals
			24: R_XTENSA_32	.text.ReadBlockType
			28: R_XTENSA_32	CompileBlock
			2c: R_XTENSA_32	GetFuncTypeNumParams
			30: R_XTENSA_32	.text.AllocateSlotsWithinRange
			34: R_XTENSA_32	.text.CopyStackIndexToSlot
			38: R_XTENSA_32	printf
			3c: R_XTENSA_32	.text.EmitOp
			40: R_XTENSA_32	CompileBlock
			44: R_XTENSA_32	printf
			48: R_XTENSA_32	printf

Disassembly of section .literal.Compile_If:

00000000 <.literal.Compile_If>:
	...
			0: R_XTENSA_32	.text.op_If_r
			4: R_XTENSA_32	.text.op_If_s
			8: R_XTENSA_32	.rodata.ReturnValues.str1.4
   c:	0000006c 	
			c: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
  10:	00000090 	
			10: R_XTENSA_32	.rodata.EnsureCodePageNumLines.str1.4
	...
			14: R_XTENSA_32	.rodata.PreserveArgsAndLocals.str1.4
			18: R_XTENSA_32	.text.op_Branch
  1c:	0000ffff 	
  20:	0000ea5f 	
	...
			24: R_XTENSA_32	.text.PreserveRegisterIfOccupied
			28: R_XTENSA_32	.text.PreserveArgsAndLocals
			2c: R_XTENSA_32	.text.EmitOp
			30: R_XTENSA_32	printf
			34: R_XTENSA_32	printf
			38: R_XTENSA_32	printf
			3c: R_XTENSA_32	.text.Pop
			40: R_XTENSA_32	.text.ReservePointer
			44: R_XTENSA_32	.text.ReadBlockType
			48: R_XTENSA_32	CompileBlock
			4c: R_XTENSA_32	GetFuncTypeNumResults
			50: R_XTENSA_32	AcquireCodePage
			54: R_XTENSA_32	GetPagePC
			58: R_XTENSA_32	CompileBlock
			5c: R_XTENSA_32	.text.EmitOp
			60: R_XTENSA_32	GetPagePC
			64: R_XTENSA_32	.text.EmitPointer
			68: R_XTENSA_32	ReleaseCodePage
			6c: R_XTENSA_32	.text.PreserveRegisterIfOccupied
			70: R_XTENSA_32	printf
			74: R_XTENSA_32	printf
			78: R_XTENSA_32	.text.EmitSlotOffset$isra$0
			7c: R_XTENSA_32	AcquireCodePage
			80: R_XTENSA_32	GetPagePC
			84: R_XTENSA_32	printf
			88: R_XTENSA_32	GetPagePC
			8c: R_XTENSA_32	ReleaseCodePage

Disassembly of section .literal.CompileFunction:

00000000 <.literal.CompileFunction>:
	...
			0: R_XTENSA_32	.rodata.op_Compile.str1.4
			4: R_XTENSA_32	.text.CompileFunction$part$0

Disassembly of section .text.op_Return:

00000000 <op_Return>:
   0:	004136        	entry	a1, 32
   3:	020c      	movi.n	a2, 0
   5:	f01d      	retw.n

Disassembly of section .text.op_End:

00000000 <op_End>:
   0:	004136        	entry	a1, 32
   3:	020c      	movi.n	a2, 0
   5:	f01d      	retw.n

Disassembly of section .text.Compile_Nop:

00000000 <Compile_Nop>:
   0:	004136        	entry	a1, 32
   3:	020c      	movi.n	a2, 0
   5:	f01d      	retw.n

Disassembly of section .text.EmitPointer:

00000000 <EmitPointer>:
   0:	004136        	entry	a1, 32
   3:	d2a8      	l32i.n	a10, a2, 52
   5:	207220        	or	a7, a2, a2
   8:	000081        	l32r	a8, fffc0008 <EmitPointer+0xfffc0008>
			8: R_XTENSA_SLOT0_OP	.literal.EmitPointer
			8: R_XTENSA_ASM_EXPAND	GetPagePC
   b:	0008e0        	callx8	a8
   e:	0a2d      	mov.n	a2, a10
  10:	d7a8      	l32i.n	a10, a7, 52
  12:	6a8c      	beqz.n	a10, 1c <EmitPointer+0x1c>
			12: R_XTENSA_SLOT0_OP	.text.EmitPointer+0x1c
  14:	03bd      	mov.n	a11, a3
  16:	000081        	l32r	a8, fffc0018 <EmitPointer+0xfffc0018>
			16: R_XTENSA_SLOT0_OP	.literal.EmitPointer+0x4
			16: R_XTENSA_ASM_EXPAND	EmitWord_impl
  19:	0008e0        	callx8	a8
  1c:	f01d      	retw.n

Disassembly of section .text.ReservePointer:

00000000 <ReservePointer>:
   0:	004136        	entry	a1, 32
   3:	d2a8      	l32i.n	a10, a2, 52
   5:	027d      	mov.n	a7, a2
   7:	000081        	l32r	a8, fffc0008 <ReservePointer+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.ReservePointer
			7: R_XTENSA_ASM_EXPAND	GetPagePC
   a:	0008e0        	callx8	a8
   d:	0a2d      	mov.n	a2, a10
   f:	0b0c      	movi.n	a11, 0
  11:	07ad      	mov.n	a10, a7
  13:	000081        	l32r	a8, fffc0014 <ReservePointer+0xfffc0014>
			13: R_XTENSA_SLOT0_OP	.literal.ReservePointer+0x4
			13: R_XTENSA_ASM_EXPAND	.text.EmitPointer
  16:	0008e0        	callx8	a8
  19:	f01d      	retw.n

Disassembly of section .text.op_ContinueLoop:

00000000 <op_ContinueLoop>:
   0:	004136        	entry	a1, 32
   3:	02bd      	mov.n	a11, a2
   5:	04ad      	mov.n	a10, a4
   7:	04a0c2        	movi	a12, 4
   a:	000081        	l32r	a8, fffc000c <op_ContinueLoop+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_ContinueLoop
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	0a28      	l32i.n	a2, a10, 0
  12:	f01d      	retw.n

Disassembly of section .text.op_BranchTable:

00000000 <op_BranchTable>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_BranchTable+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_BranchTable+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_BranchTable+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_BranchTable+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0858      	l32i.n	a5, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_BranchTable+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_BranchTable+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0a88      	l32i.n	a8, a10, 0
  32:	4c0c      	movi.n	a12, 4
  34:	635580        	minu	a5, a5, a8
  37:	a02520        	addx4	a2, a5, a2
  3a:	02b8      	l32i.n	a11, a2, 0
  3c:	04ad      	mov.n	a10, a4
  3e:	000081        	l32r	a8, fffc0040 <op_BranchTable+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_BranchTable+0x10
			3e: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  41:	0008e0        	callx8	a8
  44:	000081        	l32r	a8, fffc0044 <op_BranchTable+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_BranchTable
  47:	02d8      	l32i.n	a13, a2, 0
  49:	d198      	l32i.n	a9, a1, 52
  4b:	2189      	s32i.n	a8, a1, 8
  4d:	c188      	l32i.n	a8, a1, 48
  4f:	1199      	s32i.n	a9, a1, 4
  51:	0189      	s32i.n	a8, a1, 0
  53:	0a88      	l32i.n	a8, a10, 0
  55:	06ed      	mov.n	a14, a6
  57:	07fd      	mov.n	a15, a7
  59:	04cd      	mov.n	a12, a4
  5b:	03bd      	mov.n	a11, a3
  5d:	ad4b      	addi.n	a10, a13, 4
  5f:	0008e0        	callx8	a8
  62:	0a2d      	mov.n	a2, a10
  64:	f01d      	retw.n

Disassembly of section .text.op_Branch:

00000000 <op_Branch>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_Branch+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_Branch+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	c188      	l32i.n	a8, a1, 48
  12:	d198      	l32i.n	a9, a1, 52
  14:	0189      	s32i.n	a8, a1, 0
  16:	000081        	l32r	a8, fffc0018 <op_Branch+0xfffc0018>
			16: R_XTENSA_SLOT0_OP	.literal.op_Branch
  19:	1199      	s32i.n	a9, a1, 4
  1b:	2189      	s32i.n	a8, a1, 8
  1d:	0a88      	l32i.n	a8, a10, 0
  1f:	06ed      	mov.n	a14, a6
  21:	07fd      	mov.n	a15, a7
  23:	04cd      	mov.n	a12, a4
  25:	03bd      	mov.n	a11, a3
  27:	a24b      	addi.n	a10, a2, 4
  29:	0008e0        	callx8	a8
  2c:	0a2d      	mov.n	a2, a10
  2e:	f01d      	retw.n

Disassembly of section .text.op_Unsupported:

00000000 <op_Unsupported>:
   0:	004136        	entry	a1, 32
   3:	0000a1        	l32r	a10, fffc0004 <op_Unsupported+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_Unsupported
   6:	000081        	l32r	a8, fffc0008 <op_Unsupported+0xfffc0008>
			6: R_XTENSA_SLOT0_OP	.literal.op_Unsupported+0x4
			6: R_XTENSA_ASM_EXPAND	backtrace_err
   9:	0008e0        	callx8	a8
   c:	0a2d      	mov.n	a2, a10
   e:	f01d      	retw.n

Disassembly of section .text.op_Loop:

00000000 <op_Loop>:
   0:	006136        	entry	a1, 48
   3:	000051        	l32r	a5, fffc0004 <op_Loop+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_Loop
   6:	624b      	addi.n	a6, a2, 4
   8:	070c      	movi.n	a7, 0
   a:	4c0c      	movi.n	a12, 4
   c:	02bd      	mov.n	a11, a2
   e:	04ad      	mov.n	a10, a4
  10:	000081        	l32r	a8, fffc0010 <op_Loop+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.op_Loop+0x4
			10: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  13:	0008e0        	callx8	a8
  16:	080c      	movi.n	a8, 0
  18:	090c      	movi.n	a9, 0
  1a:	2159      	s32i.n	a5, a1, 8
  1c:	0189      	s32i.n	a8, a1, 0
  1e:	1199      	s32i.n	a9, a1, 4
  20:	0a88      	l32i.n	a8, a10, 0
  22:	07ed      	mov.n	a14, a7
  24:	07fd      	mov.n	a15, a7
  26:	04cd      	mov.n	a12, a4
  28:	03bd      	mov.n	a11, a3
  2a:	20a660        	or	a10, a6, a6
  2d:	0008e0        	callx8	a8
  30:	d612a7        	beq	a2, a10, a <op_Loop+0xa>
			30: R_XTENSA_SLOT0_OP	.text.op_Loop+0xa
  33:	000081        	l32r	a8, fffc0034 <op_Loop+0xfffc0034>
			33: R_XTENSA_SLOT0_OP	.literal.op_Loop+0x8
			33: R_XTENSA_ASM_EXPAND	backtrace_err
  36:	0008e0        	callx8	a8
  39:	0a2d      	mov.n	a2, a10
  3b:	f01d      	retw.n

Disassembly of section .text.op_Unreachable:

00000000 <op_Unreachable>:
   0:	004136        	entry	a1, 32
   3:	00a0a2        	movi	a10, 0
   6:	000081        	l32r	a8, fffc0008 <op_Unreachable+0xfffc0008>
			6: R_XTENSA_SLOT0_OP	.literal.op_Unreachable
			6: R_XTENSA_ASM_EXPAND	backtrace_err
   9:	0008e0        	callx8	a8
   c:	0a2d      	mov.n	a2, a10
   e:	f01d      	retw.n

Disassembly of section .text.op_CallRawFunction:

00000000 <op_CallRawFunction>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	04ad      	mov.n	a10, a4
   9:	22ca      	add.n	a2, a2, a12
   b:	000081        	l32r	a8, fffc000c <op_CallRawFunction+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x14
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0a8d      	mov.n	a8, a10
  13:	02bd      	mov.n	a11, a2
  15:	4c0c      	movi.n	a12, 4
  17:	04ad      	mov.n	a10, a4
  19:	0868      	l32i.n	a6, a8, 0
  1b:	000081        	l32r	a8, fffc001c <op_CallRawFunction+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x18
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	3189      	s32i.n	a8, a1, 12
  2b:	000081        	l32r	a8, fffc002c <op_CallRawFunction+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x1c
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0a88      	l32i.n	a8, a10, 0
  33:	1428      	l32i.n	a2, a4, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	12ac      	beqz.n	a2, 5c <op_CallRawFunction+0x5c>
			37: R_XTENSA_SLOT0_OP	.text.op_CallRawFunction+0x5c
  39:	06d272        	addmi	a7, a2, 0x600
  3c:	1c2752        	l32i	a5, a7, 112
  3f:	04dd      	mov.n	a13, a4
  41:	1c6732        	s32i	a3, a7, 112
  44:	03cd      	mov.n	a12, a3
  46:	b18b      	addi.n	a11, a1, 8
  48:	02ad      	mov.n	a10, a2
  4a:	0006e0        	callx8	a6
  4d:	158c      	beqz.n	a5, 52 <op_CallRawFunction+0x52>
			4d: R_XTENSA_SLOT0_OP	.text.op_CallRawFunction+0x52
  4f:	1c6752        	s32i	a5, a7, 112
  52:	000081        	l32r	a8, fffc0054 <op_CallRawFunction+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x20
			52: R_XTENSA_ASM_EXPAND	backtrace_err
  55:	0008e0        	callx8	a8
  58:	0a2d      	mov.n	a2, a10
  5a:	f01d      	retw.n
  5c:	0000a1        	l32r	a10, fffc005c <op_CallRawFunction+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x10
  5f:	000081        	l32r	a8, fffc0060 <op_CallRawFunction+0xfffc0060>
			5f: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x24
			5f: R_XTENSA_ASM_EXPAND	malloc
  62:	0008e0        	callx8	a8
  65:	0a7d      	mov.n	a7, a10
  67:	000081        	l32r	a8, fffc0068 <op_CallRawFunction+0xfffc0068>
			67: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x28
			67: R_XTENSA_ASM_EXPAND	esp_log_system_timestamp
  6a:	0008e0        	callx8	a8
  6d:	000051        	l32r	a5, fffc0070 <op_CallRawFunction+0xfffc0070>
			6d: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction
  70:	0000c1        	l32r	a12, fffc0070 <op_CallRawFunction+0xfffc0070>
			70: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x4
  73:	0000b1        	l32r	a11, fffc0074 <op_CallRawFunction+0xfffc0074>
			73: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x10
  76:	20e550        	or	a14, a5, a5
  79:	0add      	mov.n	a13, a10
  7b:	20a770        	or	a10, a7, a7
  7e:	000081        	l32r	a8, fffc0080 <op_CallRawFunction+0xfffc0080>
			7e: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x2c
			7e: R_XTENSA_ASM_EXPAND	snprintf
  81:	0008e0        	callx8	a8
  84:	000061        	l32r	a6, fffc0084 <op_CallRawFunction+0xfffc0084>
			84: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x8
  87:	07bd      	mov.n	a11, a7
  89:	06ad      	mov.n	a10, a6
  8b:	000081        	l32r	a8, fffc008c <op_CallRawFunction+0xfffc008c>
			8b: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x30
			8b: R_XTENSA_ASM_EXPAND	safe_printf
  8e:	0008e0        	callx8	a8
  91:	07ad      	mov.n	a10, a7
  93:	000081        	l32r	a8, fffc0094 <op_CallRawFunction+0xfffc0094>
			93: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x34
			93: R_XTENSA_ASM_EXPAND	free
  96:	0008e0        	callx8	a8
  99:	0000a1        	l32r	a10, fffc009c <op_CallRawFunction+0xfffc009c>
			99: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x10
  9c:	000081        	l32r	a8, fffc009c <op_CallRawFunction+0xfffc009c>
			9c: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x38
			9c: R_XTENSA_ASM_EXPAND	malloc
  9f:	0008e0        	callx8	a8
  a2:	0a7d      	mov.n	a7, a10
  a4:	000081        	l32r	a8, fffc00a4 <op_CallRawFunction+0xfffc00a4>
			a4: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x3c
			a4: R_XTENSA_ASM_EXPAND	esp_log_system_timestamp
  a7:	0008e0        	callx8	a8
  aa:	0000c1        	l32r	a12, fffc00ac <op_CallRawFunction+0xfffc00ac>
			aa: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0xc
  ad:	0000b1        	l32r	a11, fffc00b0 <op_CallRawFunction+0xfffc00b0>
			ad: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x10
  b0:	0add      	mov.n	a13, a10
  b2:	05ed      	mov.n	a14, a5
  b4:	07ad      	mov.n	a10, a7
  b6:	000081        	l32r	a8, fffc00b8 <op_CallRawFunction+0xfffc00b8>
			b6: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x40
			b6: R_XTENSA_ASM_EXPAND	snprintf
  b9:	0008e0        	callx8	a8
  bc:	07bd      	mov.n	a11, a7
  be:	06ad      	mov.n	a10, a6
  c0:	000081        	l32r	a8, fffc00c0 <op_CallRawFunction+0xfffc00c0>
			c0: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x44
			c0: R_XTENSA_ASM_EXPAND	safe_printf
  c3:	0008e0        	callx8	a8
  c6:	07ad      	mov.n	a10, a7
  c8:	000081        	l32r	a8, fffc00c8 <op_CallRawFunction+0xfffc00c8>
			c8: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x48
			c8: R_XTENSA_ASM_EXPAND	free
  cb:	0008e0        	callx8	a8
  ce:	5a0c      	movi.n	a10, 5
  d0:	000081        	l32r	a8, fffc00d0 <op_CallRawFunction+0xfffc00d0>
			d0: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x4c
			d0: R_XTENSA_ASM_EXPAND	vTaskDelay
  d3:	0008e0        	callx8	a8
  d6:	000081        	l32r	a8, fffc00d8 <op_CallRawFunction+0xfffc00d8>
			d6: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x50
			d6: R_XTENSA_ASM_EXPAND	backtrace
  d9:	0008e0        	callx8	a8
  dc:	02ad      	mov.n	a10, a2
  de:	000081        	l32r	a8, fffc00e0 <op_CallRawFunction+0xfffc00e0>
			de: R_XTENSA_SLOT0_OP	.literal.op_CallRawFunction+0x54
			de: R_XTENSA_ASM_EXPAND	backtrace_err
  e1:	0008e0        	callx8	a8
  e4:	0a2d      	mov.n	a2, a10
  e6:	f01d      	retw.n

Disassembly of section .text.profileOp:

00000000 <profileOp>:
   0:	006136        	entry	a1, 48
   3:	0e21a2        	l32i	a10, a1, 56
   6:	000081        	l32r	a8, fffc0008 <profileOp+0xfffc0008>
			6: R_XTENSA_SLOT0_OP	.literal.profileOp+0x4
			6: R_XTENSA_ASM_EXPAND	ProfileHit
   9:	0008e0        	callx8	a8
   c:	02bd      	mov.n	a11, a2
   e:	4c0c      	movi.n	a12, 4
  10:	04ad      	mov.n	a10, a4
  12:	000081        	l32r	a8, fffc0014 <profileOp+0xfffc0014>
			12: R_XTENSA_SLOT0_OP	.literal.profileOp+0x8
			12: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  15:	0008e0        	callx8	a8
  18:	c188      	l32i.n	a8, a1, 48
  1a:	d198      	l32i.n	a9, a1, 52
  1c:	0189      	s32i.n	a8, a1, 0
  1e:	000081        	l32r	a8, fffc0020 <profileOp+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.profileOp
  21:	1199      	s32i.n	a9, a1, 4
  23:	2189      	s32i.n	a8, a1, 8
  25:	0a88      	l32i.n	a8, a10, 0
  27:	06ed      	mov.n	a14, a6
  29:	07fd      	mov.n	a15, a7
  2b:	04cd      	mov.n	a12, a4
  2d:	03bd      	mov.n	a11, a3
  2f:	a24b      	addi.n	a10, a2, 4
  31:	0008e0        	callx8	a8
  34:	0a2d      	mov.n	a2, a10
  36:	f01d      	retw.n

Disassembly of section .text.op_PreserveSetSlot_f64:

00000000 <op_PreserveSetSlot_f64>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_PreserveSetSlot_f64+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_f64+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_PreserveSetSlot_f64+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_f64+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_PreserveSetSlot_f64+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_f64+0xc
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	8c0c      	movi.n	a12, 8
  32:	a0bb30        	addx4	a11, a11, a3
  35:	04ad      	mov.n	a10, a4
  37:	000081        	l32r	a8, fffc0038 <op_PreserveSetSlot_f64+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_f64+0x10
			37: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3a:	0008e0        	callx8	a8
  3d:	0588      	l32i.n	a8, a5, 0
  3f:	1598      	l32i.n	a9, a5, 4
  41:	0a89      	s32i.n	a8, a10, 0
  43:	c188      	l32i.n	a8, a1, 48
  45:	1a99      	s32i.n	a9, a10, 4
  47:	d198      	l32i.n	a9, a1, 52
  49:	0589      	s32i.n	a8, a5, 0
  4b:	000081        	l32r	a8, fffc004c <op_PreserveSetSlot_f64+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_f64
  4e:	1599      	s32i.n	a9, a5, 4
  50:	2189      	s32i.n	a8, a1, 8
  52:	d198      	l32i.n	a9, a1, 52
  54:	c188      	l32i.n	a8, a1, 48
  56:	1199      	s32i.n	a9, a1, 4
  58:	0189      	s32i.n	a8, a1, 0
  5a:	06ed      	mov.n	a14, a6
  5c:	07fd      	mov.n	a15, a7
  5e:	04cd      	mov.n	a12, a4
  60:	03bd      	mov.n	a11, a3
  62:	02ad      	mov.n	a10, a2
  64:	000081        	l32r	a8, fffc0064 <op_PreserveSetSlot_f64+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_f64+0x14
			64: R_XTENSA_ASM_EXPAND	.text.profileOp
  67:	0008e0        	callx8	a8
  6a:	0a2d      	mov.n	a2, a10
  6c:	f01d      	retw.n

Disassembly of section .text.op_PreserveSetSlot_f32:

00000000 <op_PreserveSetSlot_f32>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_PreserveSetSlot_f32+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_f32+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_PreserveSetSlot_f32+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_f32+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	075d      	mov.n	a5, a7
  23:	02bd      	mov.n	a11, a2
  25:	0a7d      	mov.n	a7, a10
  27:	4c0c      	movi.n	a12, 4
  29:	20a440        	or	a10, a4, a4
  2c:	000081        	l32r	a8, fffc002c <op_PreserveSetSlot_f32+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_f32+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_PreserveSetSlot_f32+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_f32+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	000703        	lsi	f0, a7, 0
  44:	d1b8      	l32i.n	a11, a1, 52
  46:	0a9d      	mov.n	a9, a10
  48:	0c21a2        	l32i	a10, a1, 48
  4b:	004903        	ssi	f0, a9, 0
  4e:	000081        	l32r	a8, fffc0050 <op_PreserveSetSlot_f32+0xfffc0050>
			4e: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_f32+0x14
			4e: R_XTENSA_ASM_EXPAND	__truncdfsf2
  51:	0008e0        	callx8	a8
  54:	000081        	l32r	a8, fffc0054 <op_PreserveSetSlot_f32+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_f32
  57:	07a9      	s32i.n	a10, a7, 0
  59:	d198      	l32i.n	a9, a1, 52
  5b:	2189      	s32i.n	a8, a1, 8
  5d:	c188      	l32i.n	a8, a1, 48
  5f:	1199      	s32i.n	a9, a1, 4
  61:	0189      	s32i.n	a8, a1, 0
  63:	06ed      	mov.n	a14, a6
  65:	05fd      	mov.n	a15, a5
  67:	04cd      	mov.n	a12, a4
  69:	03bd      	mov.n	a11, a3
  6b:	20a220        	or	a10, a2, a2
  6e:	000081        	l32r	a8, fffc0070 <op_PreserveSetSlot_f32+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_f32+0x18
			6e: R_XTENSA_ASM_EXPAND	.text.profileOp
  71:	0008e0        	callx8	a8
  74:	0a2d      	mov.n	a2, a10
  76:	f01d      	retw.n

Disassembly of section .text.op_PreserveSetSlot_i64:

00000000 <op_PreserveSetSlot_i64>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_PreserveSetSlot_i64+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_i64+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_PreserveSetSlot_i64+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_i64+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_PreserveSetSlot_i64+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_i64+0xc
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	8c0c      	movi.n	a12, 8
  32:	a0bb30        	addx4	a11, a11, a3
  35:	04ad      	mov.n	a10, a4
  37:	000081        	l32r	a8, fffc0038 <op_PreserveSetSlot_i64+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_i64+0x10
			37: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3a:	0008e0        	callx8	a8
  3d:	0588      	l32i.n	a8, a5, 0
  3f:	1598      	l32i.n	a9, a5, 4
  41:	0a89      	s32i.n	a8, a10, 0
  43:	1a99      	s32i.n	a9, a10, 4
  45:	000081        	l32r	a8, fffc0048 <op_PreserveSetSlot_i64+0xfffc0048>
			45: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_i64
  48:	0569      	s32i.n	a6, a5, 0
  4a:	1579      	s32i.n	a7, a5, 4
  4c:	d198      	l32i.n	a9, a1, 52
  4e:	2189      	s32i.n	a8, a1, 8
  50:	c188      	l32i.n	a8, a1, 48
  52:	1199      	s32i.n	a9, a1, 4
  54:	0189      	s32i.n	a8, a1, 0
  56:	06ed      	mov.n	a14, a6
  58:	07fd      	mov.n	a15, a7
  5a:	04cd      	mov.n	a12, a4
  5c:	03bd      	mov.n	a11, a3
  5e:	02ad      	mov.n	a10, a2
  60:	000081        	l32r	a8, fffc0060 <op_PreserveSetSlot_i64+0xfffc0060>
			60: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_i64+0x14
			60: R_XTENSA_ASM_EXPAND	.text.profileOp
  63:	0008e0        	callx8	a8
  66:	0a2d      	mov.n	a2, a10
  68:	f01d      	retw.n

Disassembly of section .text.op_PreserveSetSlot_i32:

00000000 <op_PreserveSetSlot_i32>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_PreserveSetSlot_i32+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_i32+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_PreserveSetSlot_i32+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_i32+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_PreserveSetSlot_i32+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_i32+0xc
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	4c0c      	movi.n	a12, 4
  32:	a0bb30        	addx4	a11, a11, a3
  35:	04ad      	mov.n	a10, a4
  37:	000081        	l32r	a8, fffc0038 <op_PreserveSetSlot_i32+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_i32+0x10
			37: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3a:	0008e0        	callx8	a8
  3d:	0588      	l32i.n	a8, a5, 0
  3f:	d198      	l32i.n	a9, a1, 52
  41:	0a89      	s32i.n	a8, a10, 0
  43:	000081        	l32r	a8, fffc0044 <op_PreserveSetSlot_i32+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_i32
  46:	0569      	s32i.n	a6, a5, 0
  48:	2189      	s32i.n	a8, a1, 8
  4a:	c188      	l32i.n	a8, a1, 48
  4c:	1199      	s32i.n	a9, a1, 4
  4e:	0189      	s32i.n	a8, a1, 0
  50:	06ed      	mov.n	a14, a6
  52:	07fd      	mov.n	a15, a7
  54:	04cd      	mov.n	a12, a4
  56:	03bd      	mov.n	a11, a3
  58:	02ad      	mov.n	a10, a2
  5a:	000081        	l32r	a8, fffc005c <op_PreserveSetSlot_i32+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_PreserveSetSlot_i32+0x14
			5a: R_XTENSA_ASM_EXPAND	.text.profileOp
  5d:	0008e0        	callx8	a8
  60:	0a2d      	mov.n	a2, a10
  62:	f01d      	retw.n

Disassembly of section .text.op_SetSlot_f64:

00000000 <op_SetSlot_f64>:
   0:	008136        	entry	a1, 64
   3:	06ed      	mov.n	a14, a6
   5:	71e9      	s32i.n	a14, a1, 28
   7:	02bd      	mov.n	a11, a2
   9:	4c0c      	movi.n	a12, 4
   b:	04ad      	mov.n	a10, a4
   d:	036d      	mov.n	a6, a3
   f:	025d      	mov.n	a5, a2
  11:	112132        	l32i	a3, a1, 68
  14:	102122        	l32i	a2, a1, 64
  17:	000081        	l32r	a8, fffc0018 <op_SetSlot_f64+0xfffc0018>
			17: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_f64+0x4
			17: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1a:	0008e0        	callx8	a8
  1d:	0ab8      	l32i.n	a11, a10, 0
  1f:	8c0c      	movi.n	a12, 8
  21:	a0bb60        	addx4	a11, a11, a6
  24:	04ad      	mov.n	a10, a4
  26:	000081        	l32r	a8, fffc0028 <op_SetSlot_f64+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_f64+0x8
			26: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  29:	0008e0        	callx8	a8
  2c:	000081        	l32r	a8, fffc002c <op_SetSlot_f64+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_f64
  2f:	0a29      	s32i.n	a2, a10, 0
  31:	1a39      	s32i.n	a3, a10, 4
  33:	71e8      	l32i.n	a14, a1, 28
  35:	0129      	s32i.n	a2, a1, 0
  37:	2189      	s32i.n	a8, a1, 8
  39:	1139      	s32i.n	a3, a1, 4
  3b:	07fd      	mov.n	a15, a7
  3d:	04cd      	mov.n	a12, a4
  3f:	06bd      	mov.n	a11, a6
  41:	05ad      	mov.n	a10, a5
  43:	000081        	l32r	a8, fffc0044 <op_SetSlot_f64+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_f64+0xc
			43: R_XTENSA_ASM_EXPAND	.text.profileOp
  46:	0008e0        	callx8	a8
  49:	0a2d      	mov.n	a2, a10
  4b:	f01d      	retw.n

Disassembly of section .text.op_SetSlot_f32:

00000000 <op_SetSlot_f32>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_SetSlot_f32+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_f32+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	04a0c2        	movi	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_SetSlot_f32+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_f32+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	d1b8      	l32i.n	a11, a1, 52
  24:	075d      	mov.n	a5, a7
  26:	0a7d      	mov.n	a7, a10
  28:	0c21a2        	l32i	a10, a1, 48
  2b:	000081        	l32r	a8, fffc002c <op_SetSlot_f32+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_f32+0xc
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	000081        	l32r	a8, fffc0034 <op_SetSlot_f32+0xfffc0034>
			31: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_f32
  34:	07a9      	s32i.n	a10, a7, 0
  36:	d198      	l32i.n	a9, a1, 52
  38:	2189      	s32i.n	a8, a1, 8
  3a:	c188      	l32i.n	a8, a1, 48
  3c:	1199      	s32i.n	a9, a1, 4
  3e:	0189      	s32i.n	a8, a1, 0
  40:	06ed      	mov.n	a14, a6
  42:	05fd      	mov.n	a15, a5
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_SetSlot_f32+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_f32+0x10
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n

Disassembly of section .text.op_SetSlot_i64:

00000000 <op_SetSlot_i64>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_SetSlot_i64+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_i64+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_SetSlot_i64+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_i64+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_SetSlot_i64+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_i64
  23:	0a69      	s32i.n	a6, a10, 0
  25:	1a79      	s32i.n	a7, a10, 4
  27:	d198      	l32i.n	a9, a1, 52
  29:	2189      	s32i.n	a8, a1, 8
  2b:	c188      	l32i.n	a8, a1, 48
  2d:	1199      	s32i.n	a9, a1, 4
  2f:	0189      	s32i.n	a8, a1, 0
  31:	06ed      	mov.n	a14, a6
  33:	07fd      	mov.n	a15, a7
  35:	04cd      	mov.n	a12, a4
  37:	03bd      	mov.n	a11, a3
  39:	02ad      	mov.n	a10, a2
  3b:	000081        	l32r	a8, fffc003c <op_SetSlot_i64+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_i64+0xc
			3b: R_XTENSA_ASM_EXPAND	.text.profileOp
  3e:	0008e0        	callx8	a8
  41:	0a2d      	mov.n	a2, a10
  43:	f01d      	retw.n

Disassembly of section .text.op_SetSlot_i32:

00000000 <op_SetSlot_i32>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_SetSlot_i32+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_i32+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_SetSlot_i32+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_i32+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	000081        	l32r	a8, fffc0024 <op_SetSlot_i32+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_i32
  24:	0a69      	s32i.n	a6, a10, 0
  26:	d198      	l32i.n	a9, a1, 52
  28:	2189      	s32i.n	a8, a1, 8
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	1199      	s32i.n	a9, a1, 4
  2e:	0189      	s32i.n	a8, a1, 0
  30:	06ed      	mov.n	a14, a6
  32:	07fd      	mov.n	a15, a7
  34:	04cd      	mov.n	a12, a4
  36:	03bd      	mov.n	a11, a3
  38:	02ad      	mov.n	a10, a2
  3a:	000081        	l32r	a8, fffc003c <op_SetSlot_i32+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_SetSlot_i32+0xc
			3a: R_XTENSA_ASM_EXPAND	.text.profileOp
  3d:	0008e0        	callx8	a8
  40:	0a2d      	mov.n	a2, a10
  42:	f01d      	retw.n

Disassembly of section .text.op_SetRegister_f64:

00000000 <op_SetRegister_f64>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_SetRegister_f64+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_f64+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_SetRegister_f64+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_f64+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_SetRegister_f64+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_f64
  23:	06ed      	mov.n	a14, a6
  25:	2189      	s32i.n	a8, a1, 8
  27:	0a88      	l32i.n	a8, a10, 0
  29:	1a98      	l32i.n	a9, a10, 4
  2b:	07fd      	mov.n	a15, a7
  2d:	0189      	s32i.n	a8, a1, 0
  2f:	1199      	s32i.n	a9, a1, 4
  31:	04cd      	mov.n	a12, a4
  33:	03bd      	mov.n	a11, a3
  35:	02ad      	mov.n	a10, a2
  37:	000081        	l32r	a8, fffc0038 <op_SetRegister_f64+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_f64+0xc
			37: R_XTENSA_ASM_EXPAND	.text.profileOp
  3a:	0008e0        	callx8	a8
  3d:	0a2d      	mov.n	a2, a10
  3f:	f01d      	retw.n

Disassembly of section .text.op_SetRegister_f32:

00000000 <op_SetRegister_f32>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_SetRegister_f32+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_f32+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_SetRegister_f32+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_f32+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_SetRegister_f32+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_f32
  23:	2189      	s32i.n	a8, a1, 8
  25:	0aa8      	l32i.n	a10, a10, 0
  27:	000081        	l32r	a8, fffc0028 <op_SetRegister_f32+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_f32+0xc
			27: R_XTENSA_ASM_EXPAND	__extendsfdf2
  2a:	0008e0        	callx8	a8
  2d:	01a9      	s32i.n	a10, a1, 0
  2f:	11b9      	s32i.n	a11, a1, 4
  31:	06ed      	mov.n	a14, a6
  33:	07fd      	mov.n	a15, a7
  35:	04cd      	mov.n	a12, a4
  37:	03bd      	mov.n	a11, a3
  39:	02ad      	mov.n	a10, a2
  3b:	000081        	l32r	a8, fffc003c <op_SetRegister_f32+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_f32+0x10
			3b: R_XTENSA_ASM_EXPAND	.text.profileOp
  3e:	0008e0        	callx8	a8
  41:	0a2d      	mov.n	a2, a10
  43:	f01d      	retw.n

Disassembly of section .text.op_SetRegister_i64:

00000000 <op_SetRegister_i64>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_SetRegister_i64+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_i64+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_SetRegister_i64+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_i64+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_SetRegister_i64+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_i64
  23:	0ae8      	l32i.n	a14, a10, 0
  25:	1af8      	l32i.n	a15, a10, 4
  27:	d198      	l32i.n	a9, a1, 52
  29:	2189      	s32i.n	a8, a1, 8
  2b:	c188      	l32i.n	a8, a1, 48
  2d:	1199      	s32i.n	a9, a1, 4
  2f:	0189      	s32i.n	a8, a1, 0
  31:	04cd      	mov.n	a12, a4
  33:	03bd      	mov.n	a11, a3
  35:	02ad      	mov.n	a10, a2
  37:	000081        	l32r	a8, fffc0038 <op_SetRegister_i64+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_i64+0xc
			37: R_XTENSA_ASM_EXPAND	.text.profileOp
  3a:	0008e0        	callx8	a8
  3d:	0a2d      	mov.n	a2, a10
  3f:	f01d      	retw.n

Disassembly of section .text.op_SetRegister_i32:

00000000 <op_SetRegister_i32>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_SetRegister_i32+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_i32+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_SetRegister_i32+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_i32+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	c188      	l32i.n	a8, a1, 48
  22:	0af8      	l32i.n	a15, a10, 0
  24:	d198      	l32i.n	a9, a1, 52
  26:	0189      	s32i.n	a8, a1, 0
  28:	000081        	l32r	a8, fffc0028 <op_SetRegister_i32+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_i32
  2b:	0fed      	mov.n	a14, a15
  2d:	1199      	s32i.n	a9, a1, 4
  2f:	2189      	s32i.n	a8, a1, 8
  31:	31fff0        	srai	a15, a15, 31
  34:	04cd      	mov.n	a12, a4
  36:	03bd      	mov.n	a11, a3
  38:	02ad      	mov.n	a10, a2
  3a:	000081        	l32r	a8, fffc003c <op_SetRegister_i32+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_SetRegister_i32+0xc
			3a: R_XTENSA_ASM_EXPAND	.text.profileOp
  3d:	0008e0        	callx8	a8
  40:	0a2d      	mov.n	a2, a10
  42:	f01d      	retw.n

Disassembly of section .text.op_SetGlobal_s64:

00000000 <op_SetGlobal_s64>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_SetGlobal_s64+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_s64+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	0a8d      	mov.n	a8, a10
  12:	02bd      	mov.n	a11, a2
  14:	4c0c      	movi.n	a12, 4
  16:	04ad      	mov.n	a10, a4
  18:	002852        	l32i	a5, a8, 0
  1b:	000081        	l32r	a8, fffc001c <op_SetGlobal_s64+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_s64+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0ab8      	l32i.n	a11, a10, 0
  23:	8c0c      	movi.n	a12, 8
  25:	a0bb30        	addx4	a11, a11, a3
  28:	04ad      	mov.n	a10, a4
  2a:	000081        	l32r	a8, fffc002c <op_SetGlobal_s64+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_s64+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0a88      	l32i.n	a8, a10, 0
  32:	1a98      	l32i.n	a9, a10, 4
  34:	0589      	s32i.n	a8, a5, 0
  36:	000081        	l32r	a8, fffc0038 <op_SetGlobal_s64+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_s64
  39:	1599      	s32i.n	a9, a5, 4
  3b:	2189      	s32i.n	a8, a1, 8
  3d:	d198      	l32i.n	a9, a1, 52
  3f:	c188      	l32i.n	a8, a1, 48
  41:	1199      	s32i.n	a9, a1, 4
  43:	0189      	s32i.n	a8, a1, 0
  45:	06ed      	mov.n	a14, a6
  47:	07fd      	mov.n	a15, a7
  49:	04cd      	mov.n	a12, a4
  4b:	03bd      	mov.n	a11, a3
  4d:	02ad      	mov.n	a10, a2
  4f:	000081        	l32r	a8, fffc0050 <op_SetGlobal_s64+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_s64+0x10
			4f: R_XTENSA_ASM_EXPAND	.text.profileOp
  52:	0008e0        	callx8	a8
  55:	0a2d      	mov.n	a2, a10
  57:	f01d      	retw.n

Disassembly of section .text.op_SetGlobal_s32:

00000000 <op_SetGlobal_s32>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_SetGlobal_s32+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_s32+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	0a8d      	mov.n	a8, a10
  12:	02bd      	mov.n	a11, a2
  14:	4c0c      	movi.n	a12, 4
  16:	04ad      	mov.n	a10, a4
  18:	002852        	l32i	a5, a8, 0
  1b:	000081        	l32r	a8, fffc001c <op_SetGlobal_s32+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_s32+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0ab8      	l32i.n	a11, a10, 0
  23:	4c0c      	movi.n	a12, 4
  25:	a0bb30        	addx4	a11, a11, a3
  28:	04ad      	mov.n	a10, a4
  2a:	000081        	l32r	a8, fffc002c <op_SetGlobal_s32+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_s32+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0a88      	l32i.n	a8, a10, 0
  32:	d198      	l32i.n	a9, a1, 52
  34:	0589      	s32i.n	a8, a5, 0
  36:	000081        	l32r	a8, fffc0038 <op_SetGlobal_s32+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_s32
  39:	1199      	s32i.n	a9, a1, 4
  3b:	2189      	s32i.n	a8, a1, 8
  3d:	c188      	l32i.n	a8, a1, 48
  3f:	06ed      	mov.n	a14, a6
  41:	0189      	s32i.n	a8, a1, 0
  43:	07fd      	mov.n	a15, a7
  45:	04cd      	mov.n	a12, a4
  47:	03bd      	mov.n	a11, a3
  49:	02ad      	mov.n	a10, a2
  4b:	000081        	l32r	a8, fffc004c <op_SetGlobal_s32+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_s32+0x10
			4b: R_XTENSA_ASM_EXPAND	.text.profileOp
  4e:	0008e0        	callx8	a8
  51:	0a2d      	mov.n	a2, a10
  53:	f01d      	retw.n

Disassembly of section .text.op_SetGlobal_f64:

00000000 <op_SetGlobal_f64>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_SetGlobal_f64+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_f64+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	0a88      	l32i.n	a8, a10, 0
  12:	d1b8      	l32i.n	a11, a1, 52
  14:	c1a8      	l32i.n	a10, a1, 48
  16:	18b9      	s32i.n	a11, a8, 4
  18:	08a9      	s32i.n	a10, a8, 0
  1a:	000081        	l32r	a8, fffc001c <op_SetGlobal_f64+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_f64
  1d:	01a9      	s32i.n	a10, a1, 0
  1f:	11b9      	s32i.n	a11, a1, 4
  21:	2189      	s32i.n	a8, a1, 8
  23:	06ed      	mov.n	a14, a6
  25:	07fd      	mov.n	a15, a7
  27:	04cd      	mov.n	a12, a4
  29:	03bd      	mov.n	a11, a3
  2b:	20a220        	or	a10, a2, a2
  2e:	000081        	l32r	a8, fffc0030 <op_SetGlobal_f64+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_f64+0x8
			2e: R_XTENSA_ASM_EXPAND	.text.profileOp
  31:	0008e0        	callx8	a8
  34:	0a2d      	mov.n	a2, a10
  36:	f01d      	retw.n

Disassembly of section .text.op_SetGlobal_f32:

00000000 <op_SetGlobal_f32>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_SetGlobal_f32+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_f32+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	d1b8      	l32i.n	a11, a1, 52
  12:	0a8d      	mov.n	a8, a10
  14:	c1a8      	l32i.n	a10, a1, 48
  16:	075d      	mov.n	a5, a7
  18:	002872        	l32i	a7, a8, 0
  1b:	000081        	l32r	a8, fffc001c <op_SetGlobal_f32+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_f32+0x8
			1b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  1e:	0008e0        	callx8	a8
  21:	000081        	l32r	a8, fffc0024 <op_SetGlobal_f32+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_f32
  24:	07a9      	s32i.n	a10, a7, 0
  26:	d198      	l32i.n	a9, a1, 52
  28:	2189      	s32i.n	a8, a1, 8
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	1199      	s32i.n	a9, a1, 4
  2e:	0189      	s32i.n	a8, a1, 0
  30:	06ed      	mov.n	a14, a6
  32:	05fd      	mov.n	a15, a5
  34:	04cd      	mov.n	a12, a4
  36:	03bd      	mov.n	a11, a3
  38:	02ad      	mov.n	a10, a2
  3a:	000081        	l32r	a8, fffc003c <op_SetGlobal_f32+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_f32+0xc
			3a: R_XTENSA_ASM_EXPAND	.text.profileOp
  3d:	0008e0        	callx8	a8
  40:	0a2d      	mov.n	a2, a10
  42:	f01d      	retw.n

Disassembly of section .text.op_SetGlobal_i64:

00000000 <op_SetGlobal_i64>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_SetGlobal_i64+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_i64+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	0a88      	l32i.n	a8, a10, 0
  12:	d198      	l32i.n	a9, a1, 52
  14:	0869      	s32i.n	a6, a8, 0
  16:	1879      	s32i.n	a7, a8, 4
  18:	000081        	l32r	a8, fffc0018 <op_SetGlobal_i64+0xfffc0018>
			18: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_i64
  1b:	1199      	s32i.n	a9, a1, 4
  1d:	2189      	s32i.n	a8, a1, 8
  1f:	c188      	l32i.n	a8, a1, 48
  21:	06ed      	mov.n	a14, a6
  23:	0189      	s32i.n	a8, a1, 0
  25:	07fd      	mov.n	a15, a7
  27:	04cd      	mov.n	a12, a4
  29:	03bd      	mov.n	a11, a3
  2b:	20a220        	or	a10, a2, a2
  2e:	000081        	l32r	a8, fffc0030 <op_SetGlobal_i64+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_i64+0x8
			2e: R_XTENSA_ASM_EXPAND	.text.profileOp
  31:	0008e0        	callx8	a8
  34:	0a2d      	mov.n	a2, a10
  36:	f01d      	retw.n

Disassembly of section .text.op_SetGlobal_i32:

00000000 <op_SetGlobal_i32>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_SetGlobal_i32+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_i32+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	0a88      	l32i.n	a8, a10, 0
  12:	d198      	l32i.n	a9, a1, 52
  14:	0869      	s32i.n	a6, a8, 0
  16:	000081        	l32r	a8, fffc0018 <op_SetGlobal_i32+0xfffc0018>
			16: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_i32
  19:	1199      	s32i.n	a9, a1, 4
  1b:	2189      	s32i.n	a8, a1, 8
  1d:	c188      	l32i.n	a8, a1, 48
  1f:	06ed      	mov.n	a14, a6
  21:	0189      	s32i.n	a8, a1, 0
  23:	07fd      	mov.n	a15, a7
  25:	04cd      	mov.n	a12, a4
  27:	03bd      	mov.n	a11, a3
  29:	02ad      	mov.n	a10, a2
  2b:	000081        	l32r	a8, fffc002c <op_SetGlobal_i32+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_SetGlobal_i32+0x8
			2b: R_XTENSA_ASM_EXPAND	.text.profileOp
  2e:	0008e0        	callx8	a8
  31:	0a2d      	mov.n	a2, a10
  33:	f01d      	retw.n

Disassembly of section .text.op_Select_f64_rsr:

00000000 <op_Select_f64_rsr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_f64_rsr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_rsr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_Select_f64_rsr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_rsr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a88      	l32i.n	a8, a10, 0
  22:	1a98      	l32i.n	a9, a10, 4
  24:	268c      	beqz.n	a6, 2a <op_Select_f64_rsr+0x2a>
			24: R_XTENSA_SLOT0_OP	.text.op_Select_f64_rsr+0x2a
  26:	c188      	l32i.n	a8, a1, 48
  28:	d198      	l32i.n	a9, a1, 52
  2a:	0189      	s32i.n	a8, a1, 0
  2c:	000081        	l32r	a8, fffc002c <op_Select_f64_rsr+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_rsr
  2f:	1199      	s32i.n	a9, a1, 4
  31:	2189      	s32i.n	a8, a1, 8
  33:	06ed      	mov.n	a14, a6
  35:	07fd      	mov.n	a15, a7
  37:	04cd      	mov.n	a12, a4
  39:	03bd      	mov.n	a11, a3
  3b:	20a220        	or	a10, a2, a2
  3e:	000081        	l32r	a8, fffc0040 <op_Select_f64_rsr+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_rsr+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_Select_f64_rrs:

00000000 <op_Select_f64_rrs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_f64_rrs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_rrs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_Select_f64_rrs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_rrs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a88      	l32i.n	a8, a10, 0
  22:	1a98      	l32i.n	a9, a10, 4
  24:	075d      	mov.n	a5, a7
  26:	268c      	beqz.n	a6, 2c <op_Select_f64_rrs+0x2c>
			26: R_XTENSA_SLOT0_OP	.text.op_Select_f64_rrs+0x2c
  28:	c189      	s32i.n	a8, a1, 48
  2a:	d199      	s32i.n	a9, a1, 52
  2c:	c188      	l32i.n	a8, a1, 48
  2e:	d198      	l32i.n	a9, a1, 52
  30:	0189      	s32i.n	a8, a1, 0
  32:	000081        	l32r	a8, fffc0034 <op_Select_f64_rrs+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_rrs
  35:	1199      	s32i.n	a9, a1, 4
  37:	2189      	s32i.n	a8, a1, 8
  39:	06ed      	mov.n	a14, a6
  3b:	05fd      	mov.n	a15, a5
  3d:	04cd      	mov.n	a12, a4
  3f:	03bd      	mov.n	a11, a3
  41:	02ad      	mov.n	a10, a2
  43:	000081        	l32r	a8, fffc0044 <op_Select_f64_rrs+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_rrs+0xc
			43: R_XTENSA_ASM_EXPAND	.text.profileOp
  46:	0008e0        	callx8	a8
  49:	0a2d      	mov.n	a2, a10
  4b:	f01d      	retw.n

Disassembly of section .text.op_Select_f64_rss:

00000000 <op_Select_f64_rss>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_f64_rss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_rss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_Select_f64_rss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_rss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	1898      	l32i.n	a9, a8, 4
  24:	0888      	l32i.n	a8, a8, 0
  26:	4c0c      	movi.n	a12, 4
  28:	7189      	s32i.n	a8, a1, 28
  2a:	6199      	s32i.n	a9, a1, 24
  2c:	02bd      	mov.n	a11, a2
  2e:	04ad      	mov.n	a10, a4
  30:	000081        	l32r	a8, fffc0030 <op_Select_f64_rss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_rss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	8c0c      	movi.n	a12, 8
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	20a440        	or	a10, a4, a4
  40:	000081        	l32r	a8, fffc0040 <op_Select_f64_rss+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_rss+0x10
			40: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  43:	0008e0        	callx8	a8
  46:	1ab8      	l32i.n	a11, a10, 4
  48:	7188      	l32i.n	a8, a1, 28
  4a:	0aa8      	l32i.n	a10, a10, 0
  4c:	6198      	l32i.n	a9, a1, 24
  4e:	268c      	beqz.n	a6, 54 <op_Select_f64_rss+0x54>
			4e: R_XTENSA_SLOT0_OP	.text.op_Select_f64_rss+0x54
  50:	0a8d      	mov.n	a8, a10
  52:	0b9d      	mov.n	a9, a11
  54:	0189      	s32i.n	a8, a1, 0
  56:	000081        	l32r	a8, fffc0058 <op_Select_f64_rss+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_rss
  59:	1199      	s32i.n	a9, a1, 4
  5b:	2189      	s32i.n	a8, a1, 8
  5d:	06ed      	mov.n	a14, a6
  5f:	07fd      	mov.n	a15, a7
  61:	04cd      	mov.n	a12, a4
  63:	03bd      	mov.n	a11, a3
  65:	02ad      	mov.n	a10, a2
  67:	000081        	l32r	a8, fffc0068 <op_Select_f64_rss+0xfffc0068>
			67: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_rss+0x14
			67: R_XTENSA_ASM_EXPAND	.text.profileOp
  6a:	0008e0        	callx8	a8
  6d:	0a2d      	mov.n	a2, a10
  6f:	f01d      	retw.n

Disassembly of section .text.op_Select_f64_ssr:

00000000 <op_Select_f64_ssr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_f64_ssr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_ssr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_Select_f64_ssr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_ssr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	002852        	l32i	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_Select_f64_ssr+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_ssr+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	8c0c      	movi.n	a12, 8
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_Select_f64_ssr+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_ssr+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a88      	l32i.n	a8, a10, 0
  42:	1a98      	l32i.n	a9, a10, 4
  44:	258c      	beqz.n	a5, 4a <op_Select_f64_ssr+0x4a>
			44: R_XTENSA_SLOT0_OP	.text.op_Select_f64_ssr+0x4a
  46:	c188      	l32i.n	a8, a1, 48
  48:	d198      	l32i.n	a9, a1, 52
  4a:	0189      	s32i.n	a8, a1, 0
  4c:	000081        	l32r	a8, fffc004c <op_Select_f64_ssr+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_ssr
  4f:	1199      	s32i.n	a9, a1, 4
  51:	2189      	s32i.n	a8, a1, 8
  53:	06ed      	mov.n	a14, a6
  55:	07fd      	mov.n	a15, a7
  57:	04cd      	mov.n	a12, a4
  59:	03bd      	mov.n	a11, a3
  5b:	20a220        	or	a10, a2, a2
  5e:	000081        	l32r	a8, fffc0060 <op_Select_f64_ssr+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_ssr+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_Select_f64_srs:

00000000 <op_Select_f64_srs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_f64_srs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_srs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_Select_f64_srs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_srs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	075d      	mov.n	a5, a7
  2a:	0878      	l32i.n	a7, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_Select_f64_srs+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_srs+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	20a440        	or	a10, a4, a4
  3c:	000081        	l32r	a8, fffc003c <op_Select_f64_srs+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_srs+0x10
			3c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3f:	0008e0        	callx8	a8
  42:	1ab8      	l32i.n	a11, a10, 4
  44:	0aa8      	l32i.n	a10, a10, 0
  46:	278c      	beqz.n	a7, 4c <op_Select_f64_srs+0x4c>
			46: R_XTENSA_SLOT0_OP	.text.op_Select_f64_srs+0x4c
  48:	c1a9      	s32i.n	a10, a1, 48
  4a:	d1b9      	s32i.n	a11, a1, 52
  4c:	c188      	l32i.n	a8, a1, 48
  4e:	d198      	l32i.n	a9, a1, 52
  50:	0189      	s32i.n	a8, a1, 0
  52:	000081        	l32r	a8, fffc0054 <op_Select_f64_srs+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_srs
  55:	1199      	s32i.n	a9, a1, 4
  57:	2189      	s32i.n	a8, a1, 8
  59:	06ed      	mov.n	a14, a6
  5b:	05fd      	mov.n	a15, a5
  5d:	04cd      	mov.n	a12, a4
  5f:	03bd      	mov.n	a11, a3
  61:	02ad      	mov.n	a10, a2
  63:	000081        	l32r	a8, fffc0064 <op_Select_f64_srs+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_srs+0x14
			63: R_XTENSA_ASM_EXPAND	.text.profileOp
  66:	0008e0        	callx8	a8
  69:	0a2d      	mov.n	a2, a10
  6b:	f01d      	retw.n

Disassembly of section .text.op_Select_f64_sss:

00000000 <op_Select_f64_sss>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_f64_sss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_sss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_Select_f64_sss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_sss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	002852        	l32i	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_Select_f64_sss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_sss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	8c0c      	movi.n	a12, 8
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_Select_f64_sss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_sss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a8d      	mov.n	a8, a10
  42:	1898      	l32i.n	a9, a8, 4
  44:	0888      	l32i.n	a8, a8, 0
  46:	4c0c      	movi.n	a12, 4
  48:	7189      	s32i.n	a8, a1, 28
  4a:	6199      	s32i.n	a9, a1, 24
  4c:	02bd      	mov.n	a11, a2
  4e:	04ad      	mov.n	a10, a4
  50:	000081        	l32r	a8, fffc0050 <op_Select_f64_sss+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_sss+0x14
			50: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  53:	0008e0        	callx8	a8
  56:	0ab8      	l32i.n	a11, a10, 0
  58:	8c0c      	movi.n	a12, 8
  5a:	a0bb30        	addx4	a11, a11, a3
  5d:	20a440        	or	a10, a4, a4
  60:	000081        	l32r	a8, fffc0060 <op_Select_f64_sss+0xfffc0060>
			60: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_sss+0x18
			60: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  63:	0008e0        	callx8	a8
  66:	1ab8      	l32i.n	a11, a10, 4
  68:	7188      	l32i.n	a8, a1, 28
  6a:	0aa8      	l32i.n	a10, a10, 0
  6c:	6198      	l32i.n	a9, a1, 24
  6e:	258c      	beqz.n	a5, 74 <op_Select_f64_sss+0x74>
			6e: R_XTENSA_SLOT0_OP	.text.op_Select_f64_sss+0x74
  70:	0a8d      	mov.n	a8, a10
  72:	0b9d      	mov.n	a9, a11
  74:	0189      	s32i.n	a8, a1, 0
  76:	000081        	l32r	a8, fffc0078 <op_Select_f64_sss+0xfffc0078>
			76: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_sss
  79:	1199      	s32i.n	a9, a1, 4
  7b:	2189      	s32i.n	a8, a1, 8
  7d:	06ed      	mov.n	a14, a6
  7f:	07fd      	mov.n	a15, a7
  81:	04cd      	mov.n	a12, a4
  83:	03bd      	mov.n	a11, a3
  85:	02ad      	mov.n	a10, a2
  87:	000081        	l32r	a8, fffc0088 <op_Select_f64_sss+0xfffc0088>
			87: R_XTENSA_SLOT0_OP	.literal.op_Select_f64_sss+0x1c
			87: R_XTENSA_ASM_EXPAND	.text.profileOp
  8a:	0008e0        	callx8	a8
  8d:	0a2d      	mov.n	a2, a10
  8f:	f01d      	retw.n

Disassembly of section .text.op_Select_f32_rsr:

00000000 <op_Select_f32_rsr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_f32_rsr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rsr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	04a0c2        	movi	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_Select_f32_rsr+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rsr+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0aa8      	l32i.n	a10, a10, 0
  24:	968c      	beqz.n	a6, 31 <op_Select_f32_rsr+0x31>
			24: R_XTENSA_SLOT0_OP	.text.op_Select_f32_rsr+0x31
  26:	c1a8      	l32i.n	a10, a1, 48
  28:	0d21b2        	l32i	a11, a1, 52
  2b:	000081        	l32r	a8, fffc002c <op_Select_f32_rsr+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rsr+0xc
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	000081        	l32r	a8, fffc0034 <op_Select_f32_rsr+0xfffc0034>
			31: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rsr
  34:	2189      	s32i.n	a8, a1, 8
  36:	000081        	l32r	a8, fffc0038 <op_Select_f32_rsr+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rsr+0x10
			36: R_XTENSA_ASM_EXPAND	__extendsfdf2
  39:	0008e0        	callx8	a8
  3c:	01a9      	s32i.n	a10, a1, 0
  3e:	11b9      	s32i.n	a11, a1, 4
  40:	06ed      	mov.n	a14, a6
  42:	07fd      	mov.n	a15, a7
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_Select_f32_rsr+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rsr+0x14
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n

Disassembly of section .text.op_Select_f32_rrs:

00000000 <op_Select_f32_rrs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_f32_rrs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rrs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	04a0c2        	movi	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_Select_f32_rrs+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rrs+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0aa8      	l32i.n	a10, a10, 0
  24:	96cc      	bnez.n	a6, 31 <op_Select_f32_rrs+0x31>
			24: R_XTENSA_SLOT0_OP	.text.op_Select_f32_rrs+0x31
  26:	c1a8      	l32i.n	a10, a1, 48
  28:	0d21b2        	l32i	a11, a1, 52
  2b:	000081        	l32r	a8, fffc002c <op_Select_f32_rrs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rrs+0xc
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	000081        	l32r	a8, fffc0034 <op_Select_f32_rrs+0xfffc0034>
			31: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rrs
  34:	2189      	s32i.n	a8, a1, 8
  36:	000081        	l32r	a8, fffc0038 <op_Select_f32_rrs+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rrs+0x10
			36: R_XTENSA_ASM_EXPAND	__extendsfdf2
  39:	0008e0        	callx8	a8
  3c:	01a9      	s32i.n	a10, a1, 0
  3e:	11b9      	s32i.n	a11, a1, 4
  40:	06ed      	mov.n	a14, a6
  42:	07fd      	mov.n	a15, a7
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_Select_f32_rrs+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rrs+0x14
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n

Disassembly of section .text.op_Select_f32_rss:

00000000 <op_Select_f32_rss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_f32_rss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_Select_f32_rss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002852        	l32i	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_Select_f32_rss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_Select_f32_rss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0aa8      	l32i.n	a10, a10, 0
  42:	000081        	l32r	a8, fffc0044 <op_Select_f32_rss+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rss
  45:	83a560        	moveqz	a10, a5, a6
  48:	2189      	s32i.n	a8, a1, 8
  4a:	000081        	l32r	a8, fffc004c <op_Select_f32_rss+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rss+0x14
			4a: R_XTENSA_ASM_EXPAND	__extendsfdf2
  4d:	0008e0        	callx8	a8
  50:	01a9      	s32i.n	a10, a1, 0
  52:	11b9      	s32i.n	a11, a1, 4
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_Select_f32_rss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_rss+0x18
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_Select_f32_ssr:

00000000 <op_Select_f32_ssr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_f32_ssr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_ssr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	04a0c2        	movi	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_Select_f32_ssr+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_ssr+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0a8d      	mov.n	a8, a10
  24:	4c0c      	movi.n	a12, 4
  26:	02bd      	mov.n	a11, a2
  28:	04ad      	mov.n	a10, a4
  2a:	0858      	l32i.n	a5, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_Select_f32_ssr+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_ssr+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	20a440        	or	a10, a4, a4
  3c:	000081        	l32r	a8, fffc003c <op_Select_f32_ssr+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_ssr+0x10
			3c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3f:	0008e0        	callx8	a8
  42:	0aa8      	l32i.n	a10, a10, 0
  44:	958c      	beqz.n	a5, 51 <op_Select_f32_ssr+0x51>
			44: R_XTENSA_SLOT0_OP	.text.op_Select_f32_ssr+0x51
  46:	c1a8      	l32i.n	a10, a1, 48
  48:	0d21b2        	l32i	a11, a1, 52
  4b:	000081        	l32r	a8, fffc004c <op_Select_f32_ssr+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_ssr+0x14
			4b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  4e:	0008e0        	callx8	a8
  51:	000081        	l32r	a8, fffc0054 <op_Select_f32_ssr+0xfffc0054>
			51: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_ssr
  54:	2189      	s32i.n	a8, a1, 8
  56:	000081        	l32r	a8, fffc0058 <op_Select_f32_ssr+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_ssr+0x18
			56: R_XTENSA_ASM_EXPAND	__extendsfdf2
  59:	0008e0        	callx8	a8
  5c:	01a9      	s32i.n	a10, a1, 0
  5e:	11b9      	s32i.n	a11, a1, 4
  60:	06ed      	mov.n	a14, a6
  62:	07fd      	mov.n	a15, a7
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_Select_f32_ssr+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_ssr+0x1c
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_Select_f32_srs:

00000000 <op_Select_f32_srs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_f32_srs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_srs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	04a0c2        	movi	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_Select_f32_srs+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_srs+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0a8d      	mov.n	a8, a10
  24:	4c0c      	movi.n	a12, 4
  26:	02bd      	mov.n	a11, a2
  28:	04ad      	mov.n	a10, a4
  2a:	0858      	l32i.n	a5, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_Select_f32_srs+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_srs+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	20a440        	or	a10, a4, a4
  3c:	000081        	l32r	a8, fffc003c <op_Select_f32_srs+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_srs+0x10
			3c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3f:	0008e0        	callx8	a8
  42:	0aa8      	l32i.n	a10, a10, 0
  44:	95cc      	bnez.n	a5, 51 <op_Select_f32_srs+0x51>
			44: R_XTENSA_SLOT0_OP	.text.op_Select_f32_srs+0x51
  46:	c1a8      	l32i.n	a10, a1, 48
  48:	0d21b2        	l32i	a11, a1, 52
  4b:	000081        	l32r	a8, fffc004c <op_Select_f32_srs+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_srs+0x14
			4b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  4e:	0008e0        	callx8	a8
  51:	000081        	l32r	a8, fffc0054 <op_Select_f32_srs+0xfffc0054>
			51: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_srs
  54:	2189      	s32i.n	a8, a1, 8
  56:	000081        	l32r	a8, fffc0058 <op_Select_f32_srs+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_srs+0x18
			56: R_XTENSA_ASM_EXPAND	__extendsfdf2
  59:	0008e0        	callx8	a8
  5c:	01a9      	s32i.n	a10, a1, 0
  5e:	11b9      	s32i.n	a11, a1, 4
  60:	06ed      	mov.n	a14, a6
  62:	07fd      	mov.n	a15, a7
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_Select_f32_srs+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_srs+0x1c
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_Select_f32_sss:

00000000 <op_Select_f32_sss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_f32_sss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_sss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_Select_f32_sss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_sss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	0888      	l32i.n	a8, a8, 0
  24:	02bd      	mov.n	a11, a2
  26:	7189      	s32i.n	a8, a1, 28
  28:	4c0c      	movi.n	a12, 4
  2a:	04ad      	mov.n	a10, a4
  2c:	000081        	l32r	a8, fffc002c <op_Select_f32_sss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_sss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_Select_f32_sss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_sss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	0a9d      	mov.n	a9, a10
  43:	02bd      	mov.n	a11, a2
  45:	4c0c      	movi.n	a12, 4
  47:	04ad      	mov.n	a10, a4
  49:	0958      	l32i.n	a5, a9, 0
  4b:	000081        	l32r	a8, fffc004c <op_Select_f32_sss+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_sss+0x14
			4b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  4e:	0008e0        	callx8	a8
  51:	0ab8      	l32i.n	a11, a10, 0
  53:	4c0c      	movi.n	a12, 4
  55:	a0bb30        	addx4	a11, a11, a3
  58:	04ad      	mov.n	a10, a4
  5a:	000081        	l32r	a8, fffc005c <op_Select_f32_sss+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_sss+0x18
			5a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  5d:	0008e0        	callx8	a8
  60:	0aa8      	l32i.n	a10, a10, 0
  62:	7188      	l32i.n	a8, a1, 28
  64:	83a580        	moveqz	a10, a5, a8
  67:	000081        	l32r	a8, fffc0068 <op_Select_f32_sss+0xfffc0068>
			67: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_sss
  6a:	2189      	s32i.n	a8, a1, 8
  6c:	000081        	l32r	a8, fffc006c <op_Select_f32_sss+0xfffc006c>
			6c: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_sss+0x1c
			6c: R_XTENSA_ASM_EXPAND	__extendsfdf2
  6f:	0008e0        	callx8	a8
  72:	01a9      	s32i.n	a10, a1, 0
  74:	11b9      	s32i.n	a11, a1, 4
  76:	06ed      	mov.n	a14, a6
  78:	07fd      	mov.n	a15, a7
  7a:	04cd      	mov.n	a12, a4
  7c:	03bd      	mov.n	a11, a3
  7e:	02ad      	mov.n	a10, a2
  80:	000081        	l32r	a8, fffc0080 <op_Select_f32_sss+0xfffc0080>
			80: R_XTENSA_SLOT0_OP	.literal.op_Select_f32_sss+0x20
			80: R_XTENSA_ASM_EXPAND	.text.profileOp
  83:	0008e0        	callx8	a8
  86:	0a2d      	mov.n	a2, a10
  88:	f01d      	retw.n

Disassembly of section .text.op_Select_i64_sss:

00000000 <op_Select_i64_sss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_i64_sss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_sss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_Select_i64_sss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_sss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002852        	l32i	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_Select_i64_sss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_sss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	8c0c      	movi.n	a12, 8
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_Select_i64_sss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_sss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a8d      	mov.n	a8, a10
  42:	02bd      	mov.n	a11, a2
  44:	4c0c      	movi.n	a12, 4
  46:	04ad      	mov.n	a10, a4
  48:	0868      	l32i.n	a6, a8, 0
  4a:	1878      	l32i.n	a7, a8, 4
  4c:	000081        	l32r	a8, fffc004c <op_Select_i64_sss+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_sss+0x14
			4c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  4f:	0008e0        	callx8	a8
  52:	0ab8      	l32i.n	a11, a10, 0
  54:	8c0c      	movi.n	a12, 8
  56:	a0bb30        	addx4	a11, a11, a3
  59:	04ad      	mov.n	a10, a4
  5b:	000081        	l32r	a8, fffc005c <op_Select_i64_sss+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_sss+0x18
			5b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  5e:	0008e0        	callx8	a8
  61:	1a88      	l32i.n	a8, a10, 4
  63:	0a98      	l32i.n	a9, a10, 0
  65:	937850        	movnez	a7, a8, a5
  68:	000081        	l32r	a8, fffc0068 <op_Select_i64_sss+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_sss
  6b:	936950        	movnez	a6, a9, a5
  6e:	2189      	s32i.n	a8, a1, 8
  70:	d198      	l32i.n	a9, a1, 52
  72:	c188      	l32i.n	a8, a1, 48
  74:	1199      	s32i.n	a9, a1, 4
  76:	0189      	s32i.n	a8, a1, 0
  78:	06ed      	mov.n	a14, a6
  7a:	07fd      	mov.n	a15, a7
  7c:	04cd      	mov.n	a12, a4
  7e:	03bd      	mov.n	a11, a3
  80:	02ad      	mov.n	a10, a2
  82:	000081        	l32r	a8, fffc0084 <op_Select_i64_sss+0xfffc0084>
			82: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_sss+0x1c
			82: R_XTENSA_ASM_EXPAND	.text.profileOp
  85:	0008e0        	callx8	a8
  88:	0a2d      	mov.n	a2, a10
  8a:	f01d      	retw.n

Disassembly of section .text.op_Select_i64_ssr:

00000000 <op_Select_i64_ssr>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_i64_ssr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_ssr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_Select_i64_ssr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_ssr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002852        	l32i	a5, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_Select_i64_ssr+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_ssr+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_Select_i64_ssr+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_ssr+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	c188      	l32i.n	a8, a1, 48
  43:	0ae8      	l32i.n	a14, a10, 0
  45:	1af8      	l32i.n	a15, a10, 4
  47:	d198      	l32i.n	a9, a1, 52
  49:	0189      	s32i.n	a8, a1, 0
  4b:	000081        	l32r	a8, fffc004c <op_Select_i64_ssr+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_ssr
  4e:	1199      	s32i.n	a9, a1, 4
  50:	2189      	s32i.n	a8, a1, 8
  52:	93e650        	movnez	a14, a6, a5
  55:	93f750        	movnez	a15, a7, a5
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_Select_i64_ssr+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_ssr+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_Select_i64_srs:

00000000 <op_Select_i64_srs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_i64_srs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_srs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_Select_i64_srs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_srs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002852        	l32i	a5, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_Select_i64_srs+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_srs+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_Select_i64_srs+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_srs+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	c188      	l32i.n	a8, a1, 48
  43:	0ae8      	l32i.n	a14, a10, 0
  45:	1af8      	l32i.n	a15, a10, 4
  47:	d198      	l32i.n	a9, a1, 52
  49:	0189      	s32i.n	a8, a1, 0
  4b:	000081        	l32r	a8, fffc004c <op_Select_i64_srs+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_srs
  4e:	1199      	s32i.n	a9, a1, 4
  50:	2189      	s32i.n	a8, a1, 8
  52:	83e650        	moveqz	a14, a6, a5
  55:	83f750        	moveqz	a15, a7, a5
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_Select_i64_srs+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_srs+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_Select_i64_rss:

00000000 <op_Select_i64_rss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_i64_rss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_rss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_Select_i64_rss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_rss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0858      	l32i.n	a5, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_Select_i64_rss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_rss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_Select_i64_rss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_rss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	1a88      	l32i.n	a8, a10, 4
  43:	0a98      	l32i.n	a9, a10, 0
  45:	937860        	movnez	a7, a8, a6
  48:	000081        	l32r	a8, fffc0048 <op_Select_i64_rss+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_rss
  4b:	935960        	movnez	a5, a9, a6
  4e:	2189      	s32i.n	a8, a1, 8
  50:	d198      	l32i.n	a9, a1, 52
  52:	c188      	l32i.n	a8, a1, 48
  54:	1199      	s32i.n	a9, a1, 4
  56:	0189      	s32i.n	a8, a1, 0
  58:	05ed      	mov.n	a14, a5
  5a:	07fd      	mov.n	a15, a7
  5c:	04cd      	mov.n	a12, a4
  5e:	03bd      	mov.n	a11, a3
  60:	02ad      	mov.n	a10, a2
  62:	000081        	l32r	a8, fffc0064 <op_Select_i64_rss+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.op_Select_i64_rss+0x14
			62: R_XTENSA_ASM_EXPAND	.text.profileOp
  65:	0008e0        	callx8	a8
  68:	0a2d      	mov.n	a2, a10
  6a:	f01d      	retw.n

Disassembly of section .text.op_Select_i32_sss:

00000000 <op_Select_i32_sss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_i32_sss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_sss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_Select_i32_sss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_sss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002862        	l32i	a6, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_Select_i32_sss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_sss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_Select_i32_sss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_sss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	0a8d      	mov.n	a8, a10
  43:	02bd      	mov.n	a11, a2
  45:	4c0c      	movi.n	a12, 4
  47:	04ad      	mov.n	a10, a4
  49:	002872        	l32i	a7, a8, 0
  4c:	000081        	l32r	a8, fffc004c <op_Select_i32_sss+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_sss+0x14
			4c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  4f:	0008e0        	callx8	a8
  52:	0ab8      	l32i.n	a11, a10, 0
  54:	4c0c      	movi.n	a12, 4
  56:	a0bb30        	addx4	a11, a11, a3
  59:	04ad      	mov.n	a10, a4
  5b:	000081        	l32r	a8, fffc005c <op_Select_i32_sss+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_sss+0x18
			5b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  5e:	0008e0        	callx8	a8
  61:	0a88      	l32i.n	a8, a10, 0
  63:	d198      	l32i.n	a9, a1, 52
  65:	937860        	movnez	a7, a8, a6
  68:	000081        	l32r	a8, fffc0068 <op_Select_i32_sss+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_sss
  6b:	1199      	s32i.n	a9, a1, 4
  6d:	2189      	s32i.n	a8, a1, 8
  6f:	c188      	l32i.n	a8, a1, 48
  71:	07ed      	mov.n	a14, a7
  73:	0189      	s32i.n	a8, a1, 0
  75:	31ff70        	srai	a15, a7, 31
  78:	04cd      	mov.n	a12, a4
  7a:	03bd      	mov.n	a11, a3
  7c:	02ad      	mov.n	a10, a2
  7e:	000081        	l32r	a8, fffc0080 <op_Select_i32_sss+0xfffc0080>
			7e: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_sss+0x1c
			7e: R_XTENSA_ASM_EXPAND	.text.profileOp
  81:	0008e0        	callx8	a8
  84:	0a2d      	mov.n	a2, a10
  86:	f01d      	retw.n

Disassembly of section .text.op_Select_i32_ssr:

00000000 <op_Select_i32_ssr>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_i32_ssr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_ssr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_Select_i32_ssr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_ssr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002872        	l32i	a7, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_Select_i32_ssr+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_ssr+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_Select_i32_ssr+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_ssr+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	000081        	l32r	a8, fffc0044 <op_Select_i32_ssr+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_ssr
  44:	0af8      	l32i.n	a15, a10, 0
  46:	d198      	l32i.n	a9, a1, 52
  48:	2189      	s32i.n	a8, a1, 8
  4a:	c188      	l32i.n	a8, a1, 48
  4c:	93f670        	movnez	a15, a6, a7
  4f:	0fed      	mov.n	a14, a15
  51:	0189      	s32i.n	a8, a1, 0
  53:	1199      	s32i.n	a9, a1, 4
  55:	31fff0        	srai	a15, a15, 31
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_Select_i32_ssr+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_ssr+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_Select_i32_srs:

00000000 <op_Select_i32_srs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_i32_srs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_srs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_Select_i32_srs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_srs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002872        	l32i	a7, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_Select_i32_srs+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_srs+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_Select_i32_srs+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_srs+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	000081        	l32r	a8, fffc0044 <op_Select_i32_srs+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_srs
  44:	0af8      	l32i.n	a15, a10, 0
  46:	d198      	l32i.n	a9, a1, 52
  48:	2189      	s32i.n	a8, a1, 8
  4a:	c188      	l32i.n	a8, a1, 48
  4c:	83f670        	moveqz	a15, a6, a7
  4f:	0fed      	mov.n	a14, a15
  51:	0189      	s32i.n	a8, a1, 0
  53:	1199      	s32i.n	a9, a1, 4
  55:	31fff0        	srai	a15, a15, 31
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_Select_i32_srs+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_srs+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_Select_i32_rss:

00000000 <op_Select_i32_rss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_Select_i32_rss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_rss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_Select_i32_rss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_rss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002872        	l32i	a7, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_Select_i32_rss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_rss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_Select_i32_rss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_rss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	0a88      	l32i.n	a8, a10, 0
  43:	d198      	l32i.n	a9, a1, 52
  45:	937860        	movnez	a7, a8, a6
  48:	000081        	l32r	a8, fffc0048 <op_Select_i32_rss+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_rss
  4b:	1199      	s32i.n	a9, a1, 4
  4d:	2189      	s32i.n	a8, a1, 8
  4f:	c188      	l32i.n	a8, a1, 48
  51:	07ed      	mov.n	a14, a7
  53:	0189      	s32i.n	a8, a1, 0
  55:	31ff70        	srai	a15, a7, 31
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_Select_i32_rss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_Select_i32_rss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_BranchIfPrologue_r:

00000000 <op_BranchIfPrologue_r>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_BranchIfPrologue_r+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_BranchIfPrologue_r+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	0a58      	l32i.n	a5, a10, 0
  12:	f69c      	beqz.n	a6, 35 <op_BranchIfPrologue_r+0x35>
			12: R_XTENSA_SLOT0_OP	.text.op_BranchIfPrologue_r+0x35
  14:	c188      	l32i.n	a8, a1, 48
  16:	d198      	l32i.n	a9, a1, 52
  18:	0189      	s32i.n	a8, a1, 0
  1a:	000081        	l32r	a8, fffc001c <op_BranchIfPrologue_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_BranchIfPrologue_r
  1d:	1199      	s32i.n	a9, a1, 4
  1f:	2189      	s32i.n	a8, a1, 8
  21:	06ed      	mov.n	a14, a6
  23:	07fd      	mov.n	a15, a7
  25:	04cd      	mov.n	a12, a4
  27:	03bd      	mov.n	a11, a3
  29:	02ad      	mov.n	a10, a2
  2b:	000081        	l32r	a8, fffc002c <op_BranchIfPrologue_r+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_BranchIfPrologue_r+0x8
			2b: R_XTENSA_ASM_EXPAND	.text.profileOp
  2e:	0008e0        	callx8	a8
  31:	0a2d      	mov.n	a2, a10
  33:	f01d      	retw.n
  35:	05bd      	mov.n	a11, a5
  37:	4c0c      	movi.n	a12, 4
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_BranchIfPrologue_r+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_BranchIfPrologue_r+0xc
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	c188      	l32i.n	a8, a1, 48
  43:	d198      	l32i.n	a9, a1, 52
  45:	0189      	s32i.n	a8, a1, 0
  47:	000081        	l32r	a8, fffc0048 <op_BranchIfPrologue_r+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_BranchIfPrologue_r
  4a:	1199      	s32i.n	a9, a1, 4
  4c:	2189      	s32i.n	a8, a1, 8
  4e:	0a88      	l32i.n	a8, a10, 0
  50:	06ed      	mov.n	a14, a6
  52:	07fd      	mov.n	a15, a7
  54:	04cd      	mov.n	a12, a4
  56:	03bd      	mov.n	a11, a3
  58:	a54b      	addi.n	a10, a5, 4
  5a:	0008e0        	callx8	a8
  5d:	0a2d      	mov.n	a2, a10
  5f:	f01d      	retw.n

Disassembly of section .text.op_If_r:

00000000 <op_If_r>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_If_r+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_If_r+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	0a58      	l32i.n	a5, a10, 0
  12:	f69c      	beqz.n	a6, 35 <op_If_r+0x35>
			12: R_XTENSA_SLOT0_OP	.text.op_If_r+0x35
  14:	c188      	l32i.n	a8, a1, 48
  16:	d198      	l32i.n	a9, a1, 52
  18:	0189      	s32i.n	a8, a1, 0
  1a:	000081        	l32r	a8, fffc001c <op_If_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_If_r
  1d:	1199      	s32i.n	a9, a1, 4
  1f:	2189      	s32i.n	a8, a1, 8
  21:	06ed      	mov.n	a14, a6
  23:	07fd      	mov.n	a15, a7
  25:	04cd      	mov.n	a12, a4
  27:	03bd      	mov.n	a11, a3
  29:	02ad      	mov.n	a10, a2
  2b:	000081        	l32r	a8, fffc002c <op_If_r+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_If_r+0x8
			2b: R_XTENSA_ASM_EXPAND	.text.profileOp
  2e:	0008e0        	callx8	a8
  31:	0a2d      	mov.n	a2, a10
  33:	f01d      	retw.n
  35:	05bd      	mov.n	a11, a5
  37:	4c0c      	movi.n	a12, 4
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_If_r+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_If_r+0xc
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	c188      	l32i.n	a8, a1, 48
  43:	d198      	l32i.n	a9, a1, 52
  45:	0189      	s32i.n	a8, a1, 0
  47:	000081        	l32r	a8, fffc0048 <op_If_r+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_If_r
  4a:	1199      	s32i.n	a9, a1, 4
  4c:	2189      	s32i.n	a8, a1, 8
  4e:	0a88      	l32i.n	a8, a10, 0
  50:	06ed      	mov.n	a14, a6
  52:	07fd      	mov.n	a15, a7
  54:	04cd      	mov.n	a12, a4
  56:	03bd      	mov.n	a11, a3
  58:	a54b      	addi.n	a10, a5, 4
  5a:	0008e0        	callx8	a8
  5d:	0a2d      	mov.n	a2, a10
  5f:	f01d      	retw.n

Disassembly of section .text.op_PreserveCopySlot_64:

00000000 <op_PreserveCopySlot_64>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_PreserveCopySlot_64+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_64+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_PreserveCopySlot_64+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_64+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_PreserveCopySlot_64+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_64+0xc
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	8c0c      	movi.n	a12, 8
  32:	a0bb30        	addx4	a11, a11, a3
  35:	04ad      	mov.n	a10, a4
  37:	000081        	l32r	a8, fffc0038 <op_PreserveCopySlot_64+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_64+0x10
			37: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3a:	0008e0        	callx8	a8
  3d:	0a8d      	mov.n	a8, a10
  3f:	7189      	s32i.n	a8, a1, 28
  41:	02bd      	mov.n	a11, a2
  43:	4c0c      	movi.n	a12, 4
  45:	04ad      	mov.n	a10, a4
  47:	000081        	l32r	a8, fffc0048 <op_PreserveCopySlot_64+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_64+0x14
			47: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  4a:	0008e0        	callx8	a8
  4d:	0ab8      	l32i.n	a11, a10, 0
  4f:	8c0c      	movi.n	a12, 8
  51:	a0bb30        	addx4	a11, a11, a3
  54:	04ad      	mov.n	a10, a4
  56:	000081        	l32r	a8, fffc0058 <op_PreserveCopySlot_64+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_64+0x18
			56: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  59:	0008e0        	callx8	a8
  5c:	05c8      	l32i.n	a12, a5, 0
  5e:	15d8      	l32i.n	a13, a5, 4
  60:	7188      	l32i.n	a8, a1, 28
  62:	0ac9      	s32i.n	a12, a10, 0
  64:	1ad9      	s32i.n	a13, a10, 4
  66:	1898      	l32i.n	a9, a8, 4
  68:	0888      	l32i.n	a8, a8, 0
  6a:	1599      	s32i.n	a9, a5, 4
  6c:	0589      	s32i.n	a8, a5, 0
  6e:	000081        	l32r	a8, fffc0070 <op_PreserveCopySlot_64+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_64
  71:	112192        	l32i	a9, a1, 68
  74:	2189      	s32i.n	a8, a1, 8
  76:	102182        	l32i	a8, a1, 64
  79:	1199      	s32i.n	a9, a1, 4
  7b:	0189      	s32i.n	a8, a1, 0
  7d:	06ed      	mov.n	a14, a6
  7f:	07fd      	mov.n	a15, a7
  81:	04cd      	mov.n	a12, a4
  83:	03bd      	mov.n	a11, a3
  85:	02ad      	mov.n	a10, a2
  87:	000081        	l32r	a8, fffc0088 <op_PreserveCopySlot_64+0xfffc0088>
			87: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_64+0x1c
			87: R_XTENSA_ASM_EXPAND	.text.profileOp
  8a:	0008e0        	callx8	a8
  8d:	0a2d      	mov.n	a2, a10
  8f:	f01d      	retw.n

Disassembly of section .text.op_CopySlot_64:

00000000 <op_CopySlot_64>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_CopySlot_64+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_CopySlot_64+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_CopySlot_64+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_CopySlot_64+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_CopySlot_64+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_CopySlot_64+0xc
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	8c0c      	movi.n	a12, 8
  32:	a0bb30        	addx4	a11, a11, a3
  35:	04ad      	mov.n	a10, a4
  37:	000081        	l32r	a8, fffc0038 <op_CopySlot_64+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_CopySlot_64+0x10
			37: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3a:	0008e0        	callx8	a8
  3d:	0a88      	l32i.n	a8, a10, 0
  3f:	1a98      	l32i.n	a9, a10, 4
  41:	0589      	s32i.n	a8, a5, 0
  43:	000081        	l32r	a8, fffc0044 <op_CopySlot_64+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_CopySlot_64
  46:	1599      	s32i.n	a9, a5, 4
  48:	2189      	s32i.n	a8, a1, 8
  4a:	d198      	l32i.n	a9, a1, 52
  4c:	c188      	l32i.n	a8, a1, 48
  4e:	1199      	s32i.n	a9, a1, 4
  50:	0189      	s32i.n	a8, a1, 0
  52:	06ed      	mov.n	a14, a6
  54:	07fd      	mov.n	a15, a7
  56:	04cd      	mov.n	a12, a4
  58:	03bd      	mov.n	a11, a3
  5a:	02ad      	mov.n	a10, a2
  5c:	000081        	l32r	a8, fffc005c <op_CopySlot_64+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.op_CopySlot_64+0x14
			5c: R_XTENSA_ASM_EXPAND	.text.profileOp
  5f:	0008e0        	callx8	a8
  62:	0a2d      	mov.n	a2, a10
  64:	f01d      	retw.n

Disassembly of section .text.op_BranchIfPrologue_s:

00000000 <op_BranchIfPrologue_s>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_BranchIfPrologue_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_BranchIfPrologue_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_BranchIfPrologue_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_BranchIfPrologue_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	0858      	l32i.n	a5, a8, 0
  25:	4c0c      	movi.n	a12, 4
  27:	02bd      	mov.n	a11, a2
  29:	04ad      	mov.n	a10, a4
  2b:	000081        	l32r	a8, fffc002c <op_BranchIfPrologue_s+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_BranchIfPrologue_s+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0a98      	l32i.n	a9, a10, 0
  33:	35ac      	beqz.n	a5, 5a <op_BranchIfPrologue_s+0x5a>
			33: R_XTENSA_SLOT0_OP	.text.op_BranchIfPrologue_s+0x5a
  35:	102182        	l32i	a8, a1, 64
  38:	112192        	l32i	a9, a1, 68
  3b:	0189      	s32i.n	a8, a1, 0
  3d:	000081        	l32r	a8, fffc0040 <op_BranchIfPrologue_s+0xfffc0040>
			3d: R_XTENSA_SLOT0_OP	.literal.op_BranchIfPrologue_s
  40:	1199      	s32i.n	a9, a1, 4
  42:	2189      	s32i.n	a8, a1, 8
  44:	06ed      	mov.n	a14, a6
  46:	07fd      	mov.n	a15, a7
  48:	04cd      	mov.n	a12, a4
  4a:	03bd      	mov.n	a11, a3
  4c:	02ad      	mov.n	a10, a2
  4e:	000081        	l32r	a8, fffc0050 <op_BranchIfPrologue_s+0xfffc0050>
			4e: R_XTENSA_SLOT0_OP	.literal.op_BranchIfPrologue_s+0x10
			4e: R_XTENSA_ASM_EXPAND	.text.profileOp
  51:	0008e0        	callx8	a8
  54:	0a2d      	mov.n	a2, a10
  56:	f01d      	retw.n
  58:	00          	.byte	00
  59:	00          	.byte	00
  5a:	09bd      	mov.n	a11, a9
  5c:	7199      	s32i.n	a9, a1, 28
  5e:	4c0c      	movi.n	a12, 4
  60:	04ad      	mov.n	a10, a4
  62:	000081        	l32r	a8, fffc0064 <op_BranchIfPrologue_s+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.op_BranchIfPrologue_s+0x14
			62: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  65:	0008e0        	callx8	a8
  68:	1021c2        	l32i	a12, a1, 64
  6b:	1121d2        	l32i	a13, a1, 68
  6e:	000081        	l32r	a8, fffc0070 <op_BranchIfPrologue_s+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.op_BranchIfPrologue_s
  71:	01c9      	s32i.n	a12, a1, 0
  73:	7198      	l32i.n	a9, a1, 28
  75:	11d9      	s32i.n	a13, a1, 4
  77:	2189      	s32i.n	a8, a1, 8
  79:	0a88      	l32i.n	a8, a10, 0
  7b:	06ed      	mov.n	a14, a6
  7d:	07fd      	mov.n	a15, a7
  7f:	04cd      	mov.n	a12, a4
  81:	03bd      	mov.n	a11, a3
  83:	a94b      	addi.n	a10, a9, 4
  85:	0008e0        	callx8	a8
  88:	0a2d      	mov.n	a2, a10
  8a:	f01d      	retw.n

Disassembly of section .text.op_If_s:

00000000 <op_If_s>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_If_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_If_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_If_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_If_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	0858      	l32i.n	a5, a8, 0
  25:	4c0c      	movi.n	a12, 4
  27:	02bd      	mov.n	a11, a2
  29:	04ad      	mov.n	a10, a4
  2b:	000081        	l32r	a8, fffc002c <op_If_s+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_If_s+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0a98      	l32i.n	a9, a10, 0
  33:	35ac      	beqz.n	a5, 5a <op_If_s+0x5a>
			33: R_XTENSA_SLOT0_OP	.text.op_If_s+0x5a
  35:	102182        	l32i	a8, a1, 64
  38:	112192        	l32i	a9, a1, 68
  3b:	0189      	s32i.n	a8, a1, 0
  3d:	000081        	l32r	a8, fffc0040 <op_If_s+0xfffc0040>
			3d: R_XTENSA_SLOT0_OP	.literal.op_If_s
  40:	1199      	s32i.n	a9, a1, 4
  42:	2189      	s32i.n	a8, a1, 8
  44:	06ed      	mov.n	a14, a6
  46:	07fd      	mov.n	a15, a7
  48:	04cd      	mov.n	a12, a4
  4a:	03bd      	mov.n	a11, a3
  4c:	02ad      	mov.n	a10, a2
  4e:	000081        	l32r	a8, fffc0050 <op_If_s+0xfffc0050>
			4e: R_XTENSA_SLOT0_OP	.literal.op_If_s+0x10
			4e: R_XTENSA_ASM_EXPAND	.text.profileOp
  51:	0008e0        	callx8	a8
  54:	0a2d      	mov.n	a2, a10
  56:	f01d      	retw.n
  58:	00          	.byte	00
  59:	00          	.byte	00
  5a:	09bd      	mov.n	a11, a9
  5c:	7199      	s32i.n	a9, a1, 28
  5e:	4c0c      	movi.n	a12, 4
  60:	04ad      	mov.n	a10, a4
  62:	000081        	l32r	a8, fffc0064 <op_If_s+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.op_If_s+0x14
			62: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  65:	0008e0        	callx8	a8
  68:	1021c2        	l32i	a12, a1, 64
  6b:	1121d2        	l32i	a13, a1, 68
  6e:	000081        	l32r	a8, fffc0070 <op_If_s+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.op_If_s
  71:	01c9      	s32i.n	a12, a1, 0
  73:	7198      	l32i.n	a9, a1, 28
  75:	11d9      	s32i.n	a13, a1, 4
  77:	2189      	s32i.n	a8, a1, 8
  79:	0a88      	l32i.n	a8, a10, 0
  7b:	06ed      	mov.n	a14, a6
  7d:	07fd      	mov.n	a15, a7
  7f:	04cd      	mov.n	a12, a4
  81:	03bd      	mov.n	a11, a3
  83:	a94b      	addi.n	a10, a9, 4
  85:	0008e0        	callx8	a8
  88:	0a2d      	mov.n	a2, a10
  8a:	f01d      	retw.n

Disassembly of section .text.op_PreserveCopySlot_32:

00000000 <op_PreserveCopySlot_32>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_PreserveCopySlot_32+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_32+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_PreserveCopySlot_32+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_32+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_PreserveCopySlot_32+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_32+0xc
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	4c0c      	movi.n	a12, 4
  32:	a0bb30        	addx4	a11, a11, a3
  35:	04ad      	mov.n	a10, a4
  37:	000081        	l32r	a8, fffc0038 <op_PreserveCopySlot_32+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_32+0x10
			37: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3a:	0008e0        	callx8	a8
  3d:	0a8d      	mov.n	a8, a10
  3f:	7189      	s32i.n	a8, a1, 28
  41:	02bd      	mov.n	a11, a2
  43:	4c0c      	movi.n	a12, 4
  45:	04ad      	mov.n	a10, a4
  47:	000081        	l32r	a8, fffc0048 <op_PreserveCopySlot_32+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_32+0x14
			47: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  4a:	0008e0        	callx8	a8
  4d:	0ab8      	l32i.n	a11, a10, 0
  4f:	4c0c      	movi.n	a12, 4
  51:	a0bb30        	addx4	a11, a11, a3
  54:	04ad      	mov.n	a10, a4
  56:	000081        	l32r	a8, fffc0058 <op_PreserveCopySlot_32+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_32+0x18
			56: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  59:	0008e0        	callx8	a8
  5c:	0598      	l32i.n	a9, a5, 0
  5e:	7188      	l32i.n	a8, a1, 28
  60:	0a99      	s32i.n	a9, a10, 0
  62:	0888      	l32i.n	a8, a8, 0
  64:	112192        	l32i	a9, a1, 68
  67:	0589      	s32i.n	a8, a5, 0
  69:	000081        	l32r	a8, fffc006c <op_PreserveCopySlot_32+0xfffc006c>
			69: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_32
  6c:	06ed      	mov.n	a14, a6
  6e:	2189      	s32i.n	a8, a1, 8
  70:	102182        	l32i	a8, a1, 64
  73:	1199      	s32i.n	a9, a1, 4
  75:	0189      	s32i.n	a8, a1, 0
  77:	07fd      	mov.n	a15, a7
  79:	04cd      	mov.n	a12, a4
  7b:	03bd      	mov.n	a11, a3
  7d:	02ad      	mov.n	a10, a2
  7f:	000081        	l32r	a8, fffc0080 <op_PreserveCopySlot_32+0xfffc0080>
			7f: R_XTENSA_SLOT0_OP	.literal.op_PreserveCopySlot_32+0x1c
			7f: R_XTENSA_ASM_EXPAND	.text.profileOp
  82:	0008e0        	callx8	a8
  85:	0a2d      	mov.n	a2, a10
  87:	f01d      	retw.n

Disassembly of section .text.op_CopySlot_32:

00000000 <op_CopySlot_32>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_CopySlot_32+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_CopySlot_32+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_CopySlot_32+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_CopySlot_32+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_CopySlot_32+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_CopySlot_32+0xc
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	4c0c      	movi.n	a12, 4
  32:	a0bb30        	addx4	a11, a11, a3
  35:	04ad      	mov.n	a10, a4
  37:	000081        	l32r	a8, fffc0038 <op_CopySlot_32+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_CopySlot_32+0x10
			37: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3a:	0008e0        	callx8	a8
  3d:	0a88      	l32i.n	a8, a10, 0
  3f:	d198      	l32i.n	a9, a1, 52
  41:	0589      	s32i.n	a8, a5, 0
  43:	000081        	l32r	a8, fffc0044 <op_CopySlot_32+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_CopySlot_32
  46:	1199      	s32i.n	a9, a1, 4
  48:	2189      	s32i.n	a8, a1, 8
  4a:	c188      	l32i.n	a8, a1, 48
  4c:	06ed      	mov.n	a14, a6
  4e:	0189      	s32i.n	a8, a1, 0
  50:	07fd      	mov.n	a15, a7
  52:	04cd      	mov.n	a12, a4
  54:	03bd      	mov.n	a11, a3
  56:	02ad      	mov.n	a10, a2
  58:	000081        	l32r	a8, fffc0058 <op_CopySlot_32+0xfffc0058>
			58: R_XTENSA_SLOT0_OP	.literal.op_CopySlot_32+0x14
			58: R_XTENSA_ASM_EXPAND	.text.profileOp
  5b:	0008e0        	callx8	a8
  5e:	0a2d      	mov.n	a2, a10
  60:	f01d      	retw.n

Disassembly of section .text.op_ContinueLoopIf:

00000000 <op_ContinueLoopIf>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_ContinueLoopIf+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_ContinueLoopIf+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	025d      	mov.n	a5, a2
  12:	0a28      	l32i.n	a2, a10, 0
  14:	068c      	beqz.n	a6, 18 <op_ContinueLoopIf+0x18>
			14: R_XTENSA_SLOT0_OP	.text.op_ContinueLoopIf+0x18
  16:	f01d      	retw.n
  18:	c188      	l32i.n	a8, a1, 48
  1a:	d198      	l32i.n	a9, a1, 52
  1c:	0189      	s32i.n	a8, a1, 0
  1e:	000081        	l32r	a8, fffc0020 <op_ContinueLoopIf+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_ContinueLoopIf
  21:	1199      	s32i.n	a9, a1, 4
  23:	2189      	s32i.n	a8, a1, 8
  25:	06ed      	mov.n	a14, a6
  27:	07fd      	mov.n	a15, a7
  29:	04cd      	mov.n	a12, a4
  2b:	03bd      	mov.n	a11, a3
  2d:	05ad      	mov.n	a10, a5
  2f:	000081        	l32r	a8, fffc0030 <op_ContinueLoopIf+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_ContinueLoopIf+0x8
			2f: R_XTENSA_ASM_EXPAND	.text.profileOp
  32:	0008e0        	callx8	a8
  35:	0a2d      	mov.n	a2, a10
  37:	f01d      	retw.n

Disassembly of section .text.op_GetGlobal_s64:

00000000 <op_GetGlobal_s64>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_GetGlobal_s64+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_GetGlobal_s64+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	0a8d      	mov.n	a8, a10
  12:	02bd      	mov.n	a11, a2
  14:	4c0c      	movi.n	a12, 4
  16:	04ad      	mov.n	a10, a4
  18:	002852        	l32i	a5, a8, 0
  1b:	000081        	l32r	a8, fffc001c <op_GetGlobal_s64+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_GetGlobal_s64+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0ab8      	l32i.n	a11, a10, 0
  23:	8c0c      	movi.n	a12, 8
  25:	a0bb30        	addx4	a11, a11, a3
  28:	04ad      	mov.n	a10, a4
  2a:	000081        	l32r	a8, fffc002c <op_GetGlobal_s64+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_GetGlobal_s64+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0588      	l32i.n	a8, a5, 0
  32:	1598      	l32i.n	a9, a5, 4
  34:	0a89      	s32i.n	a8, a10, 0
  36:	000081        	l32r	a8, fffc0038 <op_GetGlobal_s64+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_GetGlobal_s64
  39:	1a99      	s32i.n	a9, a10, 4
  3b:	2189      	s32i.n	a8, a1, 8
  3d:	d198      	l32i.n	a9, a1, 52
  3f:	c188      	l32i.n	a8, a1, 48
  41:	1199      	s32i.n	a9, a1, 4
  43:	0189      	s32i.n	a8, a1, 0
  45:	06ed      	mov.n	a14, a6
  47:	07fd      	mov.n	a15, a7
  49:	04cd      	mov.n	a12, a4
  4b:	03bd      	mov.n	a11, a3
  4d:	02ad      	mov.n	a10, a2
  4f:	000081        	l32r	a8, fffc0050 <op_GetGlobal_s64+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_GetGlobal_s64+0x10
			4f: R_XTENSA_ASM_EXPAND	.text.profileOp
  52:	0008e0        	callx8	a8
  55:	0a2d      	mov.n	a2, a10
  57:	f01d      	retw.n

Disassembly of section .text.op_GetGlobal_s32:

00000000 <op_GetGlobal_s32>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_GetGlobal_s32+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_GetGlobal_s32+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	0a8d      	mov.n	a8, a10
  12:	02bd      	mov.n	a11, a2
  14:	4c0c      	movi.n	a12, 4
  16:	04ad      	mov.n	a10, a4
  18:	002852        	l32i	a5, a8, 0
  1b:	000081        	l32r	a8, fffc001c <op_GetGlobal_s32+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_GetGlobal_s32+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0ab8      	l32i.n	a11, a10, 0
  23:	4c0c      	movi.n	a12, 4
  25:	a0bb30        	addx4	a11, a11, a3
  28:	04ad      	mov.n	a10, a4
  2a:	000081        	l32r	a8, fffc002c <op_GetGlobal_s32+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_GetGlobal_s32+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0588      	l32i.n	a8, a5, 0
  32:	d198      	l32i.n	a9, a1, 52
  34:	0a89      	s32i.n	a8, a10, 0
  36:	000081        	l32r	a8, fffc0038 <op_GetGlobal_s32+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_GetGlobal_s32
  39:	1199      	s32i.n	a9, a1, 4
  3b:	2189      	s32i.n	a8, a1, 8
  3d:	c188      	l32i.n	a8, a1, 48
  3f:	06ed      	mov.n	a14, a6
  41:	0189      	s32i.n	a8, a1, 0
  43:	07fd      	mov.n	a15, a7
  45:	04cd      	mov.n	a12, a4
  47:	03bd      	mov.n	a11, a3
  49:	02ad      	mov.n	a10, a2
  4b:	000081        	l32r	a8, fffc004c <op_GetGlobal_s32+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_GetGlobal_s32+0x10
			4b: R_XTENSA_ASM_EXPAND	.text.profileOp
  4e:	0008e0        	callx8	a8
  51:	0a2d      	mov.n	a2, a10
  53:	f01d      	retw.n

Disassembly of section .text.op_i64_Extend32_s_s:

00000000 <op_i64_Extend32_s_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Extend32_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend32_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Extend32_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend32_s_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	c188      	l32i.n	a8, a1, 48
  22:	0af8      	l32i.n	a15, a10, 0
  24:	d198      	l32i.n	a9, a1, 52
  26:	0189      	s32i.n	a8, a1, 0
  28:	000081        	l32r	a8, fffc0028 <op_i64_Extend32_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend32_s_s
  2b:	0fed      	mov.n	a14, a15
  2d:	1199      	s32i.n	a9, a1, 4
  2f:	2189      	s32i.n	a8, a1, 8
  31:	31fff0        	srai	a15, a15, 31
  34:	04cd      	mov.n	a12, a4
  36:	03bd      	mov.n	a11, a3
  38:	02ad      	mov.n	a10, a2
  3a:	000081        	l32r	a8, fffc003c <op_i64_Extend32_s_s+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend32_s_s+0xc
			3a: R_XTENSA_ASM_EXPAND	.text.profileOp
  3d:	0008e0        	callx8	a8
  40:	0a2d      	mov.n	a2, a10
  42:	f01d      	retw.n

Disassembly of section .text.op_i64_Extend32_s_r:

00000000 <op_i64_Extend32_s_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_i64_Extend32_s_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend32_s_r
   6:	d198      	l32i.n	a9, a1, 52
   8:	2189      	s32i.n	a8, a1, 8
   a:	c188      	l32i.n	a8, a1, 48
   c:	02ad      	mov.n	a10, a2
   e:	03bd      	mov.n	a11, a3
  10:	04cd      	mov.n	a12, a4
  12:	0189      	s32i.n	a8, a1, 0
  14:	1199      	s32i.n	a9, a1, 4
  16:	06ed      	mov.n	a14, a6
  18:	31ff60        	srai	a15, a6, 31
  1b:	000081        	l32r	a8, fffc001c <op_i64_Extend32_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend32_s_r+0x4
			1b: R_XTENSA_ASM_EXPAND	.text.profileOp
  1e:	0008e0        	callx8	a8
  21:	0a2d      	mov.n	a2, a10
  23:	f01d      	retw.n

Disassembly of section .text.op_i64_Extend16_s_s:

00000000 <op_i64_Extend16_s_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Extend16_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend16_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Extend16_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend16_s_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	c188      	l32i.n	a8, a1, 48
  22:	009af2        	l16si	a15, a10, 0
  25:	d198      	l32i.n	a9, a1, 52
  27:	0189      	s32i.n	a8, a1, 0
  29:	000081        	l32r	a8, fffc002c <op_i64_Extend16_s_s+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend16_s_s
  2c:	0fed      	mov.n	a14, a15
  2e:	1199      	s32i.n	a9, a1, 4
  30:	2189      	s32i.n	a8, a1, 8
  32:	31fff0        	srai	a15, a15, 31
  35:	04cd      	mov.n	a12, a4
  37:	03bd      	mov.n	a11, a3
  39:	02ad      	mov.n	a10, a2
  3b:	000081        	l32r	a8, fffc003c <op_i64_Extend16_s_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend16_s_s+0xc
			3b: R_XTENSA_ASM_EXPAND	.text.profileOp
  3e:	0008e0        	callx8	a8
  41:	0a2d      	mov.n	a2, a10
  43:	f01d      	retw.n

Disassembly of section .text.op_i64_Extend16_s_r:

00000000 <op_i64_Extend16_s_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_i64_Extend16_s_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend16_s_r
   6:	d198      	l32i.n	a9, a1, 52
   8:	2189      	s32i.n	a8, a1, 8
   a:	c188      	l32i.n	a8, a1, 48
   c:	23f680        	sext	a15, a6, 15
   f:	0fed      	mov.n	a14, a15
  11:	02ad      	mov.n	a10, a2
  13:	03bd      	mov.n	a11, a3
  15:	04cd      	mov.n	a12, a4
  17:	0189      	s32i.n	a8, a1, 0
  19:	1199      	s32i.n	a9, a1, 4
  1b:	31fff0        	srai	a15, a15, 31
  1e:	000081        	l32r	a8, fffc0020 <op_i64_Extend16_s_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend16_s_r+0x4
			1e: R_XTENSA_ASM_EXPAND	.text.profileOp
  21:	0008e0        	callx8	a8
  24:	0a2d      	mov.n	a2, a10
  26:	f01d      	retw.n

Disassembly of section .text.op_i64_Extend8_s_s:

00000000 <op_i64_Extend8_s_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Extend8_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend8_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Extend8_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend8_s_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_i64_Extend8_s_s+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend8_s_s
  23:	000af2        	l8ui	a15, a10, 0
  26:	d198      	l32i.n	a9, a1, 52
  28:	2189      	s32i.n	a8, a1, 8
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	23ff00        	sext	a15, a15, 7
  2f:	0fed      	mov.n	a14, a15
  31:	0189      	s32i.n	a8, a1, 0
  33:	1199      	s32i.n	a9, a1, 4
  35:	31fff0        	srai	a15, a15, 31
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_i64_Extend8_s_s+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend8_s_s+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_i64_Extend8_s_r:

00000000 <op_i64_Extend8_s_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_i64_Extend8_s_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend8_s_r
   6:	d198      	l32i.n	a9, a1, 52
   8:	2189      	s32i.n	a8, a1, 8
   a:	c188      	l32i.n	a8, a1, 48
   c:	23f600        	sext	a15, a6, 7
   f:	0fed      	mov.n	a14, a15
  11:	02ad      	mov.n	a10, a2
  13:	03bd      	mov.n	a11, a3
  15:	04cd      	mov.n	a12, a4
  17:	0189      	s32i.n	a8, a1, 0
  19:	1199      	s32i.n	a9, a1, 4
  1b:	31fff0        	srai	a15, a15, 31
  1e:	000081        	l32r	a8, fffc0020 <op_i64_Extend8_s_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend8_s_r+0x4
			1e: R_XTENSA_ASM_EXPAND	.text.profileOp
  21:	0008e0        	callx8	a8
  24:	0a2d      	mov.n	a2, a10
  26:	f01d      	retw.n

Disassembly of section .text.op_i32_Extend16_s_s:

00000000 <op_i32_Extend16_s_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Extend16_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Extend16_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Extend16_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Extend16_s_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	c188      	l32i.n	a8, a1, 48
  22:	009af2        	l16si	a15, a10, 0
  25:	d198      	l32i.n	a9, a1, 52
  27:	0189      	s32i.n	a8, a1, 0
  29:	000081        	l32r	a8, fffc002c <op_i32_Extend16_s_s+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_i32_Extend16_s_s
  2c:	0fed      	mov.n	a14, a15
  2e:	1199      	s32i.n	a9, a1, 4
  30:	2189      	s32i.n	a8, a1, 8
  32:	31fff0        	srai	a15, a15, 31
  35:	04cd      	mov.n	a12, a4
  37:	03bd      	mov.n	a11, a3
  39:	02ad      	mov.n	a10, a2
  3b:	000081        	l32r	a8, fffc003c <op_i32_Extend16_s_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i32_Extend16_s_s+0xc
			3b: R_XTENSA_ASM_EXPAND	.text.profileOp
  3e:	0008e0        	callx8	a8
  41:	0a2d      	mov.n	a2, a10
  43:	f01d      	retw.n

Disassembly of section .text.op_i32_Extend16_s_r:

00000000 <op_i32_Extend16_s_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_i32_Extend16_s_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_i32_Extend16_s_r
   6:	d198      	l32i.n	a9, a1, 52
   8:	2189      	s32i.n	a8, a1, 8
   a:	c188      	l32i.n	a8, a1, 48
   c:	23f680        	sext	a15, a6, 15
   f:	0fed      	mov.n	a14, a15
  11:	02ad      	mov.n	a10, a2
  13:	03bd      	mov.n	a11, a3
  15:	04cd      	mov.n	a12, a4
  17:	0189      	s32i.n	a8, a1, 0
  19:	1199      	s32i.n	a9, a1, 4
  1b:	31fff0        	srai	a15, a15, 31
  1e:	000081        	l32r	a8, fffc0020 <op_i32_Extend16_s_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_i32_Extend16_s_r+0x4
			1e: R_XTENSA_ASM_EXPAND	.text.profileOp
  21:	0008e0        	callx8	a8
  24:	0a2d      	mov.n	a2, a10
  26:	f01d      	retw.n

Disassembly of section .text.op_i32_Extend8_s_s:

00000000 <op_i32_Extend8_s_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Extend8_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Extend8_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Extend8_s_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Extend8_s_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	000081        	l32r	a8, fffc0024 <op_i32_Extend8_s_s+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.op_i32_Extend8_s_s
  24:	0af8      	l32i.n	a15, a10, 0
  26:	d198      	l32i.n	a9, a1, 52
  28:	2189      	s32i.n	a8, a1, 8
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	23ff00        	sext	a15, a15, 7
  2f:	0fed      	mov.n	a14, a15
  31:	0189      	s32i.n	a8, a1, 0
  33:	1199      	s32i.n	a9, a1, 4
  35:	31fff0        	srai	a15, a15, 31
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_i32_Extend8_s_s+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_i32_Extend8_s_s+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_i32_Extend8_s_r:

00000000 <op_i32_Extend8_s_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_i32_Extend8_s_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_i32_Extend8_s_r
   6:	d198      	l32i.n	a9, a1, 52
   8:	2189      	s32i.n	a8, a1, 8
   a:	c188      	l32i.n	a8, a1, 48
   c:	23f600        	sext	a15, a6, 7
   f:	0fed      	mov.n	a14, a15
  11:	02ad      	mov.n	a10, a2
  13:	03bd      	mov.n	a11, a3
  15:	04cd      	mov.n	a12, a4
  17:	0189      	s32i.n	a8, a1, 0
  19:	1199      	s32i.n	a9, a1, 4
  1b:	31fff0        	srai	a15, a15, 31
  1e:	000081        	l32r	a8, fffc0020 <op_i32_Extend8_s_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_i32_Extend8_s_r+0x4
			1e: R_XTENSA_ASM_EXPAND	.text.profileOp
  21:	0008e0        	callx8	a8
  24:	0a2d      	mov.n	a2, a10
  26:	f01d      	retw.n

Disassembly of section .text.op_f64_Reinterpret_i64_s_s:

00000000 <op_f64_Reinterpret_i64_s_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Reinterpret_i64_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Reinterpret_i64_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_s_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	1898      	l32i.n	a9, a8, 4
  24:	0888      	l32i.n	a8, a8, 0
  26:	02bd      	mov.n	a11, a2
  28:	7189      	s32i.n	a8, a1, 28
  2a:	6199      	s32i.n	a9, a1, 24
  2c:	4c0c      	movi.n	a12, 4
  2e:	04ad      	mov.n	a10, a4
  30:	000081        	l32r	a8, fffc0030 <op_f64_Reinterpret_i64_s_s+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_s_s+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	8c0c      	movi.n	a12, 8
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f64_Reinterpret_i64_s_s+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_s_s+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	7188      	l32i.n	a8, a1, 28
  47:	6198      	l32i.n	a9, a1, 24
  49:	0a89      	s32i.n	a8, a10, 0
  4b:	000081        	l32r	a8, fffc004c <op_f64_Reinterpret_i64_s_s+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_s_s
  4e:	1a99      	s32i.n	a9, a10, 4
  50:	2189      	s32i.n	a8, a1, 8
  52:	112192        	l32i	a9, a1, 68
  55:	102182        	l32i	a8, a1, 64
  58:	1199      	s32i.n	a9, a1, 4
  5a:	0189      	s32i.n	a8, a1, 0
  5c:	06ed      	mov.n	a14, a6
  5e:	07fd      	mov.n	a15, a7
  60:	04cd      	mov.n	a12, a4
  62:	03bd      	mov.n	a11, a3
  64:	02ad      	mov.n	a10, a2
  66:	000081        	l32r	a8, fffc0068 <op_f64_Reinterpret_i64_s_s+0xfffc0068>
			66: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_s_s+0x14
			66: R_XTENSA_ASM_EXPAND	.text.profileOp
  69:	0008e0        	callx8	a8
  6c:	0a2d      	mov.n	a2, a10
  6e:	f01d      	retw.n

Disassembly of section .text.op_f64_Reinterpret_i64_s_r:

00000000 <op_f64_Reinterpret_i64_s_r>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	04ad      	mov.n	a10, a4
   9:	076162        	s32i	a6, a1, 28
   c:	066172        	s32i	a7, a1, 24
   f:	000081        	l32r	a8, fffc0010 <op_f64_Reinterpret_i64_s_r+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_s_r+0x4
			f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  12:	0008e0        	callx8	a8
  15:	0ab8      	l32i.n	a11, a10, 0
  17:	8c0c      	movi.n	a12, 8
  19:	a0bb30        	addx4	a11, a11, a3
  1c:	20a440        	or	a10, a4, a4
  1f:	000081        	l32r	a8, fffc0020 <op_f64_Reinterpret_i64_s_r+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_s_r+0x8
			1f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  22:	0008e0        	callx8	a8
  25:	71e8      	l32i.n	a14, a1, 28
  27:	61f8      	l32i.n	a15, a1, 24
  29:	000081        	l32r	a8, fffc002c <op_f64_Reinterpret_i64_s_r+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_s_r
  2c:	0ae9      	s32i.n	a14, a10, 0
  2e:	1af9      	s32i.n	a15, a10, 4
  30:	112192        	l32i	a9, a1, 68
  33:	2189      	s32i.n	a8, a1, 8
  35:	102182        	l32i	a8, a1, 64
  38:	1199      	s32i.n	a9, a1, 4
  3a:	0189      	s32i.n	a8, a1, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_f64_Reinterpret_i64_s_r+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_s_r+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_f64_Reinterpret_i64_r_s:

00000000 <op_f64_Reinterpret_i64_r_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Reinterpret_i64_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_r_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Reinterpret_i64_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_r_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_f64_Reinterpret_i64_r_s+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_r_s
  23:	06ed      	mov.n	a14, a6
  25:	2189      	s32i.n	a8, a1, 8
  27:	0a88      	l32i.n	a8, a10, 0
  29:	1a98      	l32i.n	a9, a10, 4
  2b:	07fd      	mov.n	a15, a7
  2d:	0189      	s32i.n	a8, a1, 0
  2f:	1199      	s32i.n	a9, a1, 4
  31:	04cd      	mov.n	a12, a4
  33:	03bd      	mov.n	a11, a3
  35:	02ad      	mov.n	a10, a2
  37:	000081        	l32r	a8, fffc0038 <op_f64_Reinterpret_i64_r_s+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_r_s+0xc
			37: R_XTENSA_ASM_EXPAND	.text.profileOp
  3a:	0008e0        	callx8	a8
  3d:	0a2d      	mov.n	a2, a10
  3f:	f01d      	retw.n

Disassembly of section .text.op_f64_Reinterpret_i64_r_r:

00000000 <op_f64_Reinterpret_i64_r_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_f64_Reinterpret_i64_r_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_r_r
   6:	06ed      	mov.n	a14, a6
   8:	07fd      	mov.n	a15, a7
   a:	02ad      	mov.n	a10, a2
   c:	03bd      	mov.n	a11, a3
   e:	04cd      	mov.n	a12, a4
  10:	2189      	s32i.n	a8, a1, 8
  12:	0169      	s32i.n	a6, a1, 0
  14:	1179      	s32i.n	a7, a1, 4
  16:	000081        	l32r	a8, fffc0018 <op_f64_Reinterpret_i64_r_r+0xfffc0018>
			16: R_XTENSA_SLOT0_OP	.literal.op_f64_Reinterpret_i64_r_r+0x4
			16: R_XTENSA_ASM_EXPAND	.text.profileOp
  19:	0008e0        	callx8	a8
  1c:	0a2d      	mov.n	a2, a10
  1e:	f01d      	retw.n

Disassembly of section .text.op_f32_Reinterpret_i32_s_s:

00000000 <op_f32_Reinterpret_i32_s_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Reinterpret_i32_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Reinterpret_i32_s_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_s_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002852        	l32i	a5, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_f32_Reinterpret_i32_s_s+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_s_s+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_f32_Reinterpret_i32_s_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_s_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	000081        	l32r	a8, fffc0044 <op_f32_Reinterpret_i32_s_s+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_s_s
  44:	0a59      	s32i.n	a5, a10, 0
  46:	d198      	l32i.n	a9, a1, 52
  48:	2189      	s32i.n	a8, a1, 8
  4a:	c188      	l32i.n	a8, a1, 48
  4c:	1199      	s32i.n	a9, a1, 4
  4e:	0189      	s32i.n	a8, a1, 0
  50:	06ed      	mov.n	a14, a6
  52:	07fd      	mov.n	a15, a7
  54:	04cd      	mov.n	a12, a4
  56:	03bd      	mov.n	a11, a3
  58:	02ad      	mov.n	a10, a2
  5a:	000081        	l32r	a8, fffc005c <op_f32_Reinterpret_i32_s_s+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_s_s+0x14
			5a: R_XTENSA_ASM_EXPAND	.text.profileOp
  5d:	0008e0        	callx8	a8
  60:	0a2d      	mov.n	a2, a10
  62:	f01d      	retw.n

Disassembly of section .text.op_f32_Reinterpret_i32_s_r:

00000000 <op_f32_Reinterpret_i32_s_r>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Reinterpret_i32_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_s_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Reinterpret_i32_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_s_r+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	000081        	l32r	a8, fffc0024 <op_f32_Reinterpret_i32_s_r+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_s_r
  24:	0a69      	s32i.n	a6, a10, 0
  26:	d198      	l32i.n	a9, a1, 52
  28:	2189      	s32i.n	a8, a1, 8
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	1199      	s32i.n	a9, a1, 4
  2e:	0189      	s32i.n	a8, a1, 0
  30:	06ed      	mov.n	a14, a6
  32:	07fd      	mov.n	a15, a7
  34:	04cd      	mov.n	a12, a4
  36:	03bd      	mov.n	a11, a3
  38:	02ad      	mov.n	a10, a2
  3a:	000081        	l32r	a8, fffc003c <op_f32_Reinterpret_i32_s_r+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_s_r+0xc
			3a: R_XTENSA_ASM_EXPAND	.text.profileOp
  3d:	0008e0        	callx8	a8
  40:	0a2d      	mov.n	a2, a10
  42:	f01d      	retw.n

Disassembly of section .text.op_f32_Reinterpret_i32_r_s:

00000000 <op_f32_Reinterpret_i32_r_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Reinterpret_i32_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_r_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f32_Reinterpret_i32_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_r_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_f32_Reinterpret_i32_r_s+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_r_s
  23:	2189      	s32i.n	a8, a1, 8
  25:	0aa8      	l32i.n	a10, a10, 0
  27:	000081        	l32r	a8, fffc0028 <op_f32_Reinterpret_i32_r_s+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_r_s+0xc
			27: R_XTENSA_ASM_EXPAND	__extendsfdf2
  2a:	0008e0        	callx8	a8
  2d:	01a9      	s32i.n	a10, a1, 0
  2f:	11b9      	s32i.n	a11, a1, 4
  31:	06ed      	mov.n	a14, a6
  33:	07fd      	mov.n	a15, a7
  35:	04cd      	mov.n	a12, a4
  37:	03bd      	mov.n	a11, a3
  39:	02ad      	mov.n	a10, a2
  3b:	000081        	l32r	a8, fffc003c <op_f32_Reinterpret_i32_r_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_r_s+0x10
			3b: R_XTENSA_ASM_EXPAND	.text.profileOp
  3e:	0008e0        	callx8	a8
  41:	0a2d      	mov.n	a2, a10
  43:	f01d      	retw.n

Disassembly of section .text.op_f32_Reinterpret_i32_r_r:

00000000 <op_f32_Reinterpret_i32_r_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_f32_Reinterpret_i32_r_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_r_r
   6:	06ad      	mov.n	a10, a6
   8:	2189      	s32i.n	a8, a1, 8
   a:	000081        	l32r	a8, fffc000c <op_f32_Reinterpret_i32_r_r+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_r_r+0x4
			a: R_XTENSA_ASM_EXPAND	__extendsfdf2
   d:	0008e0        	callx8	a8
  10:	01a9      	s32i.n	a10, a1, 0
  12:	11b9      	s32i.n	a11, a1, 4
  14:	06ed      	mov.n	a14, a6
  16:	07fd      	mov.n	a15, a7
  18:	04cd      	mov.n	a12, a4
  1a:	03bd      	mov.n	a11, a3
  1c:	02ad      	mov.n	a10, a2
  1e:	000081        	l32r	a8, fffc0020 <op_f32_Reinterpret_i32_r_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_f32_Reinterpret_i32_r_r+0x8
			1e: R_XTENSA_ASM_EXPAND	.text.profileOp
  21:	0008e0        	callx8	a8
  24:	0a2d      	mov.n	a2, a10
  26:	f01d      	retw.n

Disassembly of section .text.op_i64_Reinterpret_f64_s_s:

00000000 <op_i64_Reinterpret_f64_s_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Reinterpret_f64_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Reinterpret_f64_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_s_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	1898      	l32i.n	a9, a8, 4
  24:	0888      	l32i.n	a8, a8, 0
  26:	02bd      	mov.n	a11, a2
  28:	7189      	s32i.n	a8, a1, 28
  2a:	6199      	s32i.n	a9, a1, 24
  2c:	4c0c      	movi.n	a12, 4
  2e:	04ad      	mov.n	a10, a4
  30:	000081        	l32r	a8, fffc0030 <op_i64_Reinterpret_f64_s_s+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_s_s+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	8c0c      	movi.n	a12, 8
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_i64_Reinterpret_f64_s_s+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_s_s+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	7188      	l32i.n	a8, a1, 28
  47:	6198      	l32i.n	a9, a1, 24
  49:	0a89      	s32i.n	a8, a10, 0
  4b:	000081        	l32r	a8, fffc004c <op_i64_Reinterpret_f64_s_s+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_s_s
  4e:	1a99      	s32i.n	a9, a10, 4
  50:	2189      	s32i.n	a8, a1, 8
  52:	112192        	l32i	a9, a1, 68
  55:	102182        	l32i	a8, a1, 64
  58:	1199      	s32i.n	a9, a1, 4
  5a:	0189      	s32i.n	a8, a1, 0
  5c:	06ed      	mov.n	a14, a6
  5e:	07fd      	mov.n	a15, a7
  60:	04cd      	mov.n	a12, a4
  62:	03bd      	mov.n	a11, a3
  64:	02ad      	mov.n	a10, a2
  66:	000081        	l32r	a8, fffc0068 <op_i64_Reinterpret_f64_s_s+0xfffc0068>
			66: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_s_s+0x14
			66: R_XTENSA_ASM_EXPAND	.text.profileOp
  69:	0008e0        	callx8	a8
  6c:	0a2d      	mov.n	a2, a10
  6e:	f01d      	retw.n

Disassembly of section .text.op_i64_Reinterpret_f64_s_r:

00000000 <op_i64_Reinterpret_f64_s_r>:
   0:	008136        	entry	a1, 64
   3:	06ed      	mov.n	a14, a6
   5:	71e9      	s32i.n	a14, a1, 28
   7:	02bd      	mov.n	a11, a2
   9:	4c0c      	movi.n	a12, 4
   b:	04ad      	mov.n	a10, a4
   d:	036d      	mov.n	a6, a3
   f:	025d      	mov.n	a5, a2
  11:	112132        	l32i	a3, a1, 68
  14:	102122        	l32i	a2, a1, 64
  17:	000081        	l32r	a8, fffc0018 <op_i64_Reinterpret_f64_s_r+0xfffc0018>
			17: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_s_r+0x4
			17: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1a:	0008e0        	callx8	a8
  1d:	0ab8      	l32i.n	a11, a10, 0
  1f:	8c0c      	movi.n	a12, 8
  21:	a0bb60        	addx4	a11, a11, a6
  24:	04ad      	mov.n	a10, a4
  26:	000081        	l32r	a8, fffc0028 <op_i64_Reinterpret_f64_s_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_s_r+0x8
			26: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  29:	0008e0        	callx8	a8
  2c:	000081        	l32r	a8, fffc002c <op_i64_Reinterpret_f64_s_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_s_r
  2f:	0a29      	s32i.n	a2, a10, 0
  31:	1a39      	s32i.n	a3, a10, 4
  33:	71e8      	l32i.n	a14, a1, 28
  35:	0129      	s32i.n	a2, a1, 0
  37:	2189      	s32i.n	a8, a1, 8
  39:	1139      	s32i.n	a3, a1, 4
  3b:	07fd      	mov.n	a15, a7
  3d:	04cd      	mov.n	a12, a4
  3f:	06bd      	mov.n	a11, a6
  41:	05ad      	mov.n	a10, a5
  43:	000081        	l32r	a8, fffc0044 <op_i64_Reinterpret_f64_s_r+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_s_r+0xc
			43: R_XTENSA_ASM_EXPAND	.text.profileOp
  46:	0008e0        	callx8	a8
  49:	0a2d      	mov.n	a2, a10
  4b:	f01d      	retw.n

Disassembly of section .text.op_i64_Reinterpret_f64_r_s:

00000000 <op_i64_Reinterpret_f64_r_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Reinterpret_f64_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_r_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Reinterpret_f64_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_r_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_i64_Reinterpret_f64_r_s+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_r_s
  23:	0ae8      	l32i.n	a14, a10, 0
  25:	1af8      	l32i.n	a15, a10, 4
  27:	d198      	l32i.n	a9, a1, 52
  29:	2189      	s32i.n	a8, a1, 8
  2b:	c188      	l32i.n	a8, a1, 48
  2d:	1199      	s32i.n	a9, a1, 4
  2f:	0189      	s32i.n	a8, a1, 0
  31:	04cd      	mov.n	a12, a4
  33:	03bd      	mov.n	a11, a3
  35:	02ad      	mov.n	a10, a2
  37:	000081        	l32r	a8, fffc0038 <op_i64_Reinterpret_f64_r_s+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_r_s+0xc
			37: R_XTENSA_ASM_EXPAND	.text.profileOp
  3a:	0008e0        	callx8	a8
  3d:	0a2d      	mov.n	a2, a10
  3f:	f01d      	retw.n

Disassembly of section .text.op_i64_Reinterpret_f64_r_r:

00000000 <op_i64_Reinterpret_f64_r_r>:
   0:	006136        	entry	a1, 48
   3:	c1e8      	l32i.n	a14, a1, 48
   5:	d1f8      	l32i.n	a15, a1, 52
   7:	000081        	l32r	a8, fffc0008 <op_i64_Reinterpret_f64_r_r+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_r_r
   a:	02ad      	mov.n	a10, a2
   c:	03bd      	mov.n	a11, a3
   e:	04cd      	mov.n	a12, a4
  10:	2189      	s32i.n	a8, a1, 8
  12:	01e9      	s32i.n	a14, a1, 0
  14:	11f9      	s32i.n	a15, a1, 4
  16:	000081        	l32r	a8, fffc0018 <op_i64_Reinterpret_f64_r_r+0xfffc0018>
			16: R_XTENSA_SLOT0_OP	.literal.op_i64_Reinterpret_f64_r_r+0x4
			16: R_XTENSA_ASM_EXPAND	.text.profileOp
  19:	0008e0        	callx8	a8
  1c:	0a2d      	mov.n	a2, a10
  1e:	f01d      	retw.n

Disassembly of section .text.op_i32_Reinterpret_f32_s_s:

00000000 <op_i32_Reinterpret_f32_s_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Reinterpret_f32_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Reinterpret_f32_s_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_s_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002852        	l32i	a5, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_i32_Reinterpret_f32_s_s+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_s_s+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i32_Reinterpret_f32_s_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_s_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	000081        	l32r	a8, fffc0044 <op_i32_Reinterpret_f32_s_s+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_s_s
  44:	0a59      	s32i.n	a5, a10, 0
  46:	d198      	l32i.n	a9, a1, 52
  48:	2189      	s32i.n	a8, a1, 8
  4a:	c188      	l32i.n	a8, a1, 48
  4c:	1199      	s32i.n	a9, a1, 4
  4e:	0189      	s32i.n	a8, a1, 0
  50:	06ed      	mov.n	a14, a6
  52:	07fd      	mov.n	a15, a7
  54:	04cd      	mov.n	a12, a4
  56:	03bd      	mov.n	a11, a3
  58:	02ad      	mov.n	a10, a2
  5a:	000081        	l32r	a8, fffc005c <op_i32_Reinterpret_f32_s_s+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_s_s+0x14
			5a: R_XTENSA_ASM_EXPAND	.text.profileOp
  5d:	0008e0        	callx8	a8
  60:	0a2d      	mov.n	a2, a10
  62:	f01d      	retw.n

Disassembly of section .text.op_i32_Reinterpret_f32_s_r:

00000000 <op_i32_Reinterpret_f32_s_r>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Reinterpret_f32_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_s_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	04a0c2        	movi	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_i32_Reinterpret_f32_s_r+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_s_r+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	d1b8      	l32i.n	a11, a1, 52
  24:	075d      	mov.n	a5, a7
  26:	0a7d      	mov.n	a7, a10
  28:	0c21a2        	l32i	a10, a1, 48
  2b:	000081        	l32r	a8, fffc002c <op_i32_Reinterpret_f32_s_r+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_s_r+0xc
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	000081        	l32r	a8, fffc0034 <op_i32_Reinterpret_f32_s_r+0xfffc0034>
			31: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_s_r
  34:	07a9      	s32i.n	a10, a7, 0
  36:	d198      	l32i.n	a9, a1, 52
  38:	2189      	s32i.n	a8, a1, 8
  3a:	c188      	l32i.n	a8, a1, 48
  3c:	1199      	s32i.n	a9, a1, 4
  3e:	0189      	s32i.n	a8, a1, 0
  40:	06ed      	mov.n	a14, a6
  42:	05fd      	mov.n	a15, a5
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_i32_Reinterpret_f32_s_r+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_s_r+0x10
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n

Disassembly of section .text.op_i32_Reinterpret_f32_r_s:

00000000 <op_i32_Reinterpret_f32_r_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Reinterpret_f32_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_r_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Reinterpret_f32_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_r_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	c188      	l32i.n	a8, a1, 48
  22:	0af8      	l32i.n	a15, a10, 0
  24:	d198      	l32i.n	a9, a1, 52
  26:	0189      	s32i.n	a8, a1, 0
  28:	000081        	l32r	a8, fffc0028 <op_i32_Reinterpret_f32_r_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_r_s
  2b:	0fed      	mov.n	a14, a15
  2d:	1199      	s32i.n	a9, a1, 4
  2f:	2189      	s32i.n	a8, a1, 8
  31:	31fff0        	srai	a15, a15, 31
  34:	04cd      	mov.n	a12, a4
  36:	03bd      	mov.n	a11, a3
  38:	02ad      	mov.n	a10, a2
  3a:	000081        	l32r	a8, fffc003c <op_i32_Reinterpret_f32_r_s+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_r_s+0xc
			3a: R_XTENSA_ASM_EXPAND	.text.profileOp
  3d:	0008e0        	callx8	a8
  40:	0a2d      	mov.n	a2, a10
  42:	f01d      	retw.n

Disassembly of section .text.op_i32_Reinterpret_f32_r_r:

00000000 <op_i32_Reinterpret_f32_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06ad      	mov.n	a10, a6
   9:	07bd      	mov.n	a11, a7
   b:	000081        	l32r	a8, fffc000c <op_i32_Reinterpret_f32_r_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_r_r+0x4
			b: R_XTENSA_ASM_EXPAND	__truncdfsf2
   e:	0008e0        	callx8	a8
  11:	000081        	l32r	a8, fffc0014 <op_i32_Reinterpret_f32_r_r+0xfffc0014>
			11: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_r_r
  14:	0aed      	mov.n	a14, a10
  16:	31ffa0        	srai	a15, a10, 31
  19:	2189      	s32i.n	a8, a1, 8
  1b:	0169      	s32i.n	a6, a1, 0
  1d:	1179      	s32i.n	a7, a1, 4
  1f:	04cd      	mov.n	a12, a4
  21:	03bd      	mov.n	a11, a3
  23:	20a220        	or	a10, a2, a2
  26:	000081        	l32r	a8, fffc0028 <op_i32_Reinterpret_f32_r_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_i32_Reinterpret_f32_r_r+0x8
			26: R_XTENSA_ASM_EXPAND	.text.profileOp
  29:	0008e0        	callx8	a8
  2c:	0a2d      	mov.n	a2, a10
  2e:	f01d      	retw.n

Disassembly of section .text.op_f64_Promote_f32_s:

00000000 <op_f64_Promote_f32_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Promote_f32_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Promote_f32_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Promote_f32_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Promote_f32_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_f64_Promote_f32_s+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Promote_f32_s
  23:	2189      	s32i.n	a8, a1, 8
  25:	0aa8      	l32i.n	a10, a10, 0
  27:	000081        	l32r	a8, fffc0028 <op_f64_Promote_f32_s+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_f64_Promote_f32_s+0xc
			27: R_XTENSA_ASM_EXPAND	__extendsfdf2
  2a:	0008e0        	callx8	a8
  2d:	01a9      	s32i.n	a10, a1, 0
  2f:	11b9      	s32i.n	a11, a1, 4
  31:	06ed      	mov.n	a14, a6
  33:	07fd      	mov.n	a15, a7
  35:	04cd      	mov.n	a12, a4
  37:	03bd      	mov.n	a11, a3
  39:	02ad      	mov.n	a10, a2
  3b:	000081        	l32r	a8, fffc003c <op_f64_Promote_f32_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_f64_Promote_f32_s+0x10
			3b: R_XTENSA_ASM_EXPAND	.text.profileOp
  3e:	0008e0        	callx8	a8
  41:	0a2d      	mov.n	a2, a10
  43:	f01d      	retw.n

Disassembly of section .text.op_f64_Promote_f32_r:

00000000 <op_f64_Promote_f32_r>:
   0:	006136        	entry	a1, 48
   3:	d1b8      	l32i.n	a11, a1, 52
   5:	c1a8      	l32i.n	a10, a1, 48
   7:	000081        	l32r	a8, fffc0008 <op_f64_Promote_f32_r+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.op_f64_Promote_f32_r+0x4
			7: R_XTENSA_ASM_EXPAND	__truncdfsf2
   a:	0008e0        	callx8	a8
   d:	000081        	l32r	a8, fffc0010 <op_f64_Promote_f32_r+0xfffc0010>
			d: R_XTENSA_SLOT0_OP	.literal.op_f64_Promote_f32_r
  10:	2189      	s32i.n	a8, a1, 8
  12:	000081        	l32r	a8, fffc0014 <op_f64_Promote_f32_r+0xfffc0014>
			12: R_XTENSA_SLOT0_OP	.literal.op_f64_Promote_f32_r+0x8
			12: R_XTENSA_ASM_EXPAND	__extendsfdf2
  15:	0008e0        	callx8	a8
  18:	01a9      	s32i.n	a10, a1, 0
  1a:	11b9      	s32i.n	a11, a1, 4
  1c:	06ed      	mov.n	a14, a6
  1e:	07fd      	mov.n	a15, a7
  20:	04cd      	mov.n	a12, a4
  22:	03bd      	mov.n	a11, a3
  24:	02ad      	mov.n	a10, a2
  26:	000081        	l32r	a8, fffc0028 <op_f64_Promote_f32_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_f64_Promote_f32_r+0xc
			26: R_XTENSA_ASM_EXPAND	.text.profileOp
  29:	0008e0        	callx8	a8
  2c:	0a2d      	mov.n	a2, a10
  2e:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_u64_s_s:

00000000 <op_f64_Convert_u64_s_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Convert_u64_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Convert_u64_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_s_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	08e8      	l32i.n	a14, a8, 0
  24:	18f8      	l32i.n	a15, a8, 4
  26:	02bd      	mov.n	a11, a2
  28:	4c0c      	movi.n	a12, 4
  2a:	04ad      	mov.n	a10, a4
  2c:	61e9      	s32i.n	a14, a1, 24
  2e:	71f9      	s32i.n	a15, a1, 28
  30:	000081        	l32r	a8, fffc0030 <op_f64_Convert_u64_s_s+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_s_s+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	8c0c      	movi.n	a12, 8
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f64_Convert_u64_s_s+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_s_s+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	0a5d      	mov.n	a5, a10
  47:	71b8      	l32i.n	a11, a1, 28
  49:	61a8      	l32i.n	a10, a1, 24
  4b:	000081        	l32r	a8, fffc004c <op_f64_Convert_u64_s_s+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_s_s+0x14
			4b: R_XTENSA_ASM_EXPAND	__floatundidf
  4e:	0008e0        	callx8	a8
  51:	000081        	l32r	a8, fffc0054 <op_f64_Convert_u64_s_s+0xfffc0054>
			51: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_s_s
  54:	05a9      	s32i.n	a10, a5, 0
  56:	15b9      	s32i.n	a11, a5, 4
  58:	112192        	l32i	a9, a1, 68
  5b:	2189      	s32i.n	a8, a1, 8
  5d:	102182        	l32i	a8, a1, 64
  60:	1199      	s32i.n	a9, a1, 4
  62:	0189      	s32i.n	a8, a1, 0
  64:	06ed      	mov.n	a14, a6
  66:	07fd      	mov.n	a15, a7
  68:	04cd      	mov.n	a12, a4
  6a:	03bd      	mov.n	a11, a3
  6c:	02ad      	mov.n	a10, a2
  6e:	000081        	l32r	a8, fffc0070 <op_f64_Convert_u64_s_s+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_s_s+0x18
			6e: R_XTENSA_ASM_EXPAND	.text.profileOp
  71:	0008e0        	callx8	a8
  74:	0a2d      	mov.n	a2, a10
  76:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_u64_s_r:

00000000 <op_f64_Convert_u64_s_r>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Convert_u64_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_s_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Convert_u64_s_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_s_r+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	07bd      	mov.n	a11, a7
  24:	06ad      	mov.n	a10, a6
  26:	000081        	l32r	a8, fffc0028 <op_f64_Convert_u64_s_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_s_r+0xc
			26: R_XTENSA_ASM_EXPAND	__floatundidf
  29:	0008e0        	callx8	a8
  2c:	000081        	l32r	a8, fffc002c <op_f64_Convert_u64_s_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_s_r
  2f:	05a9      	s32i.n	a10, a5, 0
  31:	15b9      	s32i.n	a11, a5, 4
  33:	d198      	l32i.n	a9, a1, 52
  35:	2189      	s32i.n	a8, a1, 8
  37:	c188      	l32i.n	a8, a1, 48
  39:	1199      	s32i.n	a9, a1, 4
  3b:	0189      	s32i.n	a8, a1, 0
  3d:	06ed      	mov.n	a14, a6
  3f:	07fd      	mov.n	a15, a7
  41:	04cd      	mov.n	a12, a4
  43:	03bd      	mov.n	a11, a3
  45:	02ad      	mov.n	a10, a2
  47:	000081        	l32r	a8, fffc0048 <op_f64_Convert_u64_s_r+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_s_r+0x10
			47: R_XTENSA_ASM_EXPAND	.text.profileOp
  4a:	0008e0        	callx8	a8
  4d:	0a2d      	mov.n	a2, a10
  4f:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_u64_r_s:

00000000 <op_f64_Convert_u64_r_s>:
   0:	006136        	entry	a1, 48
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f64_Convert_u64_r_s+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_r_s+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	8c0c      	movi.n	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f64_Convert_u64_r_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_r_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	000081        	l32r	a8, fffc0024 <op_f64_Convert_u64_r_s+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_r_s
  24:	2189      	s32i.n	a8, a1, 8
  26:	1ab8      	l32i.n	a11, a10, 4
  28:	0aa8      	l32i.n	a10, a10, 0
  2a:	000081        	l32r	a8, fffc002c <op_f64_Convert_u64_r_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_r_s+0xc
			2a: R_XTENSA_ASM_EXPAND	__floatundidf
  2d:	0008e0        	callx8	a8
  30:	01a9      	s32i.n	a10, a1, 0
  32:	11b9      	s32i.n	a11, a1, 4
  34:	06ed      	mov.n	a14, a6
  36:	07fd      	mov.n	a15, a7
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_f64_Convert_u64_r_s+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_r_s+0x10
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_u64_r_r:

00000000 <op_f64_Convert_u64_r_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_f64_Convert_u64_r_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_r_r
   6:	06ad      	mov.n	a10, a6
   8:	2189      	s32i.n	a8, a1, 8
   a:	07bd      	mov.n	a11, a7
   c:	000081        	l32r	a8, fffc000c <op_f64_Convert_u64_r_r+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_r_r+0x4
			c: R_XTENSA_ASM_EXPAND	__floatundidf
   f:	0008e0        	callx8	a8
  12:	01a9      	s32i.n	a10, a1, 0
  14:	11b9      	s32i.n	a11, a1, 4
  16:	06ed      	mov.n	a14, a6
  18:	07fd      	mov.n	a15, a7
  1a:	04cd      	mov.n	a12, a4
  1c:	03bd      	mov.n	a11, a3
  1e:	02ad      	mov.n	a10, a2
  20:	000081        	l32r	a8, fffc0020 <op_f64_Convert_u64_r_r+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u64_r_r+0x8
			20: R_XTENSA_ASM_EXPAND	.text.profileOp
  23:	0008e0        	callx8	a8
  26:	0a2d      	mov.n	a2, a10
  28:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_i64_s_s:

00000000 <op_f64_Convert_i64_s_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Convert_i64_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Convert_i64_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_s_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	08e8      	l32i.n	a14, a8, 0
  24:	18f8      	l32i.n	a15, a8, 4
  26:	02bd      	mov.n	a11, a2
  28:	4c0c      	movi.n	a12, 4
  2a:	04ad      	mov.n	a10, a4
  2c:	61e9      	s32i.n	a14, a1, 24
  2e:	71f9      	s32i.n	a15, a1, 28
  30:	000081        	l32r	a8, fffc0030 <op_f64_Convert_i64_s_s+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_s_s+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	8c0c      	movi.n	a12, 8
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f64_Convert_i64_s_s+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_s_s+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	0a5d      	mov.n	a5, a10
  47:	71b8      	l32i.n	a11, a1, 28
  49:	61a8      	l32i.n	a10, a1, 24
  4b:	000081        	l32r	a8, fffc004c <op_f64_Convert_i64_s_s+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_s_s+0x14
			4b: R_XTENSA_ASM_EXPAND	__floatdidf
  4e:	0008e0        	callx8	a8
  51:	000081        	l32r	a8, fffc0054 <op_f64_Convert_i64_s_s+0xfffc0054>
			51: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_s_s
  54:	05a9      	s32i.n	a10, a5, 0
  56:	15b9      	s32i.n	a11, a5, 4
  58:	112192        	l32i	a9, a1, 68
  5b:	2189      	s32i.n	a8, a1, 8
  5d:	102182        	l32i	a8, a1, 64
  60:	1199      	s32i.n	a9, a1, 4
  62:	0189      	s32i.n	a8, a1, 0
  64:	06ed      	mov.n	a14, a6
  66:	07fd      	mov.n	a15, a7
  68:	04cd      	mov.n	a12, a4
  6a:	03bd      	mov.n	a11, a3
  6c:	02ad      	mov.n	a10, a2
  6e:	000081        	l32r	a8, fffc0070 <op_f64_Convert_i64_s_s+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_s_s+0x18
			6e: R_XTENSA_ASM_EXPAND	.text.profileOp
  71:	0008e0        	callx8	a8
  74:	0a2d      	mov.n	a2, a10
  76:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_i64_s_r:

00000000 <op_f64_Convert_i64_s_r>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Convert_i64_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_s_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Convert_i64_s_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_s_r+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	07bd      	mov.n	a11, a7
  24:	06ad      	mov.n	a10, a6
  26:	000081        	l32r	a8, fffc0028 <op_f64_Convert_i64_s_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_s_r+0xc
			26: R_XTENSA_ASM_EXPAND	__floatdidf
  29:	0008e0        	callx8	a8
  2c:	000081        	l32r	a8, fffc002c <op_f64_Convert_i64_s_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_s_r
  2f:	05a9      	s32i.n	a10, a5, 0
  31:	15b9      	s32i.n	a11, a5, 4
  33:	d198      	l32i.n	a9, a1, 52
  35:	2189      	s32i.n	a8, a1, 8
  37:	c188      	l32i.n	a8, a1, 48
  39:	1199      	s32i.n	a9, a1, 4
  3b:	0189      	s32i.n	a8, a1, 0
  3d:	06ed      	mov.n	a14, a6
  3f:	07fd      	mov.n	a15, a7
  41:	04cd      	mov.n	a12, a4
  43:	03bd      	mov.n	a11, a3
  45:	02ad      	mov.n	a10, a2
  47:	000081        	l32r	a8, fffc0048 <op_f64_Convert_i64_s_r+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_s_r+0x10
			47: R_XTENSA_ASM_EXPAND	.text.profileOp
  4a:	0008e0        	callx8	a8
  4d:	0a2d      	mov.n	a2, a10
  4f:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_i64_r_s:

00000000 <op_f64_Convert_i64_r_s>:
   0:	006136        	entry	a1, 48
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f64_Convert_i64_r_s+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_r_s+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	8c0c      	movi.n	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f64_Convert_i64_r_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_r_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	000081        	l32r	a8, fffc0024 <op_f64_Convert_i64_r_s+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_r_s
  24:	2189      	s32i.n	a8, a1, 8
  26:	1ab8      	l32i.n	a11, a10, 4
  28:	0aa8      	l32i.n	a10, a10, 0
  2a:	000081        	l32r	a8, fffc002c <op_f64_Convert_i64_r_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_r_s+0xc
			2a: R_XTENSA_ASM_EXPAND	__floatdidf
  2d:	0008e0        	callx8	a8
  30:	01a9      	s32i.n	a10, a1, 0
  32:	11b9      	s32i.n	a11, a1, 4
  34:	06ed      	mov.n	a14, a6
  36:	07fd      	mov.n	a15, a7
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_f64_Convert_i64_r_s+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_r_s+0x10
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_i64_r_r:

00000000 <op_f64_Convert_i64_r_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_f64_Convert_i64_r_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_r_r
   6:	06ad      	mov.n	a10, a6
   8:	2189      	s32i.n	a8, a1, 8
   a:	07bd      	mov.n	a11, a7
   c:	000081        	l32r	a8, fffc000c <op_f64_Convert_i64_r_r+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_r_r+0x4
			c: R_XTENSA_ASM_EXPAND	__floatdidf
   f:	0008e0        	callx8	a8
  12:	01a9      	s32i.n	a10, a1, 0
  14:	11b9      	s32i.n	a11, a1, 4
  16:	06ed      	mov.n	a14, a6
  18:	07fd      	mov.n	a15, a7
  1a:	04cd      	mov.n	a12, a4
  1c:	03bd      	mov.n	a11, a3
  1e:	02ad      	mov.n	a10, a2
  20:	000081        	l32r	a8, fffc0020 <op_f64_Convert_i64_r_r+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i64_r_r+0x8
			20: R_XTENSA_ASM_EXPAND	.text.profileOp
  23:	0008e0        	callx8	a8
  26:	0a2d      	mov.n	a2, a10
  28:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_u32_s_s:

00000000 <op_f64_Convert_u32_s_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Convert_u32_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Convert_u32_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_s_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002852        	l32i	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_f64_Convert_u32_s_s+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_s_s+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	8c0c      	movi.n	a12, 8
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_f64_Convert_u32_s_s+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_s_s+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a8d      	mov.n	a8, a10
  42:	05ad      	mov.n	a10, a5
  44:	085d      	mov.n	a5, a8
  46:	000081        	l32r	a8, fffc0048 <op_f64_Convert_u32_s_s+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_s_s+0x14
			46: R_XTENSA_ASM_EXPAND	__floatunsidf
  49:	0008e0        	callx8	a8
  4c:	000081        	l32r	a8, fffc004c <op_f64_Convert_u32_s_s+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_s_s
  4f:	05a9      	s32i.n	a10, a5, 0
  51:	15b9      	s32i.n	a11, a5, 4
  53:	d198      	l32i.n	a9, a1, 52
  55:	2189      	s32i.n	a8, a1, 8
  57:	c188      	l32i.n	a8, a1, 48
  59:	1199      	s32i.n	a9, a1, 4
  5b:	0189      	s32i.n	a8, a1, 0
  5d:	06ed      	mov.n	a14, a6
  5f:	07fd      	mov.n	a15, a7
  61:	04cd      	mov.n	a12, a4
  63:	03bd      	mov.n	a11, a3
  65:	02ad      	mov.n	a10, a2
  67:	000081        	l32r	a8, fffc0068 <op_f64_Convert_u32_s_s+0xfffc0068>
			67: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_s_s+0x18
			67: R_XTENSA_ASM_EXPAND	.text.profileOp
  6a:	0008e0        	callx8	a8
  6d:	0a2d      	mov.n	a2, a10
  6f:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_u32_s_r:

00000000 <op_f64_Convert_u32_s_r>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Convert_u32_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_s_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	08a0c2        	movi	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_f64_Convert_u32_s_r+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_s_r+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0a5d      	mov.n	a5, a10
  24:	06ad      	mov.n	a10, a6
  26:	000081        	l32r	a8, fffc0028 <op_f64_Convert_u32_s_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_s_r+0xc
			26: R_XTENSA_ASM_EXPAND	__floatunsidf
  29:	0008e0        	callx8	a8
  2c:	000081        	l32r	a8, fffc002c <op_f64_Convert_u32_s_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_s_r
  2f:	05a9      	s32i.n	a10, a5, 0
  31:	15b9      	s32i.n	a11, a5, 4
  33:	d198      	l32i.n	a9, a1, 52
  35:	2189      	s32i.n	a8, a1, 8
  37:	c188      	l32i.n	a8, a1, 48
  39:	1199      	s32i.n	a9, a1, 4
  3b:	0189      	s32i.n	a8, a1, 0
  3d:	06ed      	mov.n	a14, a6
  3f:	07fd      	mov.n	a15, a7
  41:	04cd      	mov.n	a12, a4
  43:	03bd      	mov.n	a11, a3
  45:	02ad      	mov.n	a10, a2
  47:	000081        	l32r	a8, fffc0048 <op_f64_Convert_u32_s_r+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_s_r+0x10
			47: R_XTENSA_ASM_EXPAND	.text.profileOp
  4a:	0008e0        	callx8	a8
  4d:	0a2d      	mov.n	a2, a10
  4f:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_u32_r_s:

00000000 <op_f64_Convert_u32_r_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Convert_u32_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_r_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Convert_u32_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_r_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_f64_Convert_u32_r_s+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_r_s
  23:	2189      	s32i.n	a8, a1, 8
  25:	0aa8      	l32i.n	a10, a10, 0
  27:	000081        	l32r	a8, fffc0028 <op_f64_Convert_u32_r_s+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_r_s+0xc
			27: R_XTENSA_ASM_EXPAND	__floatunsidf
  2a:	0008e0        	callx8	a8
  2d:	01a9      	s32i.n	a10, a1, 0
  2f:	11b9      	s32i.n	a11, a1, 4
  31:	06ed      	mov.n	a14, a6
  33:	07fd      	mov.n	a15, a7
  35:	04cd      	mov.n	a12, a4
  37:	03bd      	mov.n	a11, a3
  39:	02ad      	mov.n	a10, a2
  3b:	000081        	l32r	a8, fffc003c <op_f64_Convert_u32_r_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_r_s+0x10
			3b: R_XTENSA_ASM_EXPAND	.text.profileOp
  3e:	0008e0        	callx8	a8
  41:	0a2d      	mov.n	a2, a10
  43:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_u32_r_r:

00000000 <op_f64_Convert_u32_r_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_f64_Convert_u32_r_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_r_r
   6:	06ad      	mov.n	a10, a6
   8:	2189      	s32i.n	a8, a1, 8
   a:	000081        	l32r	a8, fffc000c <op_f64_Convert_u32_r_r+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_r_r+0x4
			a: R_XTENSA_ASM_EXPAND	__floatunsidf
   d:	0008e0        	callx8	a8
  10:	01a9      	s32i.n	a10, a1, 0
  12:	11b9      	s32i.n	a11, a1, 4
  14:	06ed      	mov.n	a14, a6
  16:	07fd      	mov.n	a15, a7
  18:	04cd      	mov.n	a12, a4
  1a:	03bd      	mov.n	a11, a3
  1c:	02ad      	mov.n	a10, a2
  1e:	000081        	l32r	a8, fffc0020 <op_f64_Convert_u32_r_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_u32_r_r+0x8
			1e: R_XTENSA_ASM_EXPAND	.text.profileOp
  21:	0008e0        	callx8	a8
  24:	0a2d      	mov.n	a2, a10
  26:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_i32_s_s:

00000000 <op_f64_Convert_i32_s_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Convert_i32_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Convert_i32_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_s_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002852        	l32i	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_f64_Convert_i32_s_s+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_s_s+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	8c0c      	movi.n	a12, 8
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_f64_Convert_i32_s_s+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_s_s+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a8d      	mov.n	a8, a10
  42:	05ad      	mov.n	a10, a5
  44:	085d      	mov.n	a5, a8
  46:	000081        	l32r	a8, fffc0048 <op_f64_Convert_i32_s_s+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_s_s+0x14
			46: R_XTENSA_ASM_EXPAND	__floatsidf
  49:	0008e0        	callx8	a8
  4c:	000081        	l32r	a8, fffc004c <op_f64_Convert_i32_s_s+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_s_s
  4f:	05a9      	s32i.n	a10, a5, 0
  51:	15b9      	s32i.n	a11, a5, 4
  53:	d198      	l32i.n	a9, a1, 52
  55:	2189      	s32i.n	a8, a1, 8
  57:	c188      	l32i.n	a8, a1, 48
  59:	1199      	s32i.n	a9, a1, 4
  5b:	0189      	s32i.n	a8, a1, 0
  5d:	06ed      	mov.n	a14, a6
  5f:	07fd      	mov.n	a15, a7
  61:	04cd      	mov.n	a12, a4
  63:	03bd      	mov.n	a11, a3
  65:	02ad      	mov.n	a10, a2
  67:	000081        	l32r	a8, fffc0068 <op_f64_Convert_i32_s_s+0xfffc0068>
			67: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_s_s+0x18
			67: R_XTENSA_ASM_EXPAND	.text.profileOp
  6a:	0008e0        	callx8	a8
  6d:	0a2d      	mov.n	a2, a10
  6f:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_i32_s_r:

00000000 <op_f64_Convert_i32_s_r>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Convert_i32_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_s_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	08a0c2        	movi	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_f64_Convert_i32_s_r+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_s_r+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0a5d      	mov.n	a5, a10
  24:	06ad      	mov.n	a10, a6
  26:	000081        	l32r	a8, fffc0028 <op_f64_Convert_i32_s_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_s_r+0xc
			26: R_XTENSA_ASM_EXPAND	__floatsidf
  29:	0008e0        	callx8	a8
  2c:	000081        	l32r	a8, fffc002c <op_f64_Convert_i32_s_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_s_r
  2f:	05a9      	s32i.n	a10, a5, 0
  31:	15b9      	s32i.n	a11, a5, 4
  33:	d198      	l32i.n	a9, a1, 52
  35:	2189      	s32i.n	a8, a1, 8
  37:	c188      	l32i.n	a8, a1, 48
  39:	1199      	s32i.n	a9, a1, 4
  3b:	0189      	s32i.n	a8, a1, 0
  3d:	06ed      	mov.n	a14, a6
  3f:	07fd      	mov.n	a15, a7
  41:	04cd      	mov.n	a12, a4
  43:	03bd      	mov.n	a11, a3
  45:	02ad      	mov.n	a10, a2
  47:	000081        	l32r	a8, fffc0048 <op_f64_Convert_i32_s_r+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_s_r+0x10
			47: R_XTENSA_ASM_EXPAND	.text.profileOp
  4a:	0008e0        	callx8	a8
  4d:	0a2d      	mov.n	a2, a10
  4f:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_i32_r_s:

00000000 <op_f64_Convert_i32_r_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Convert_i32_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_r_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Convert_i32_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_r_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_f64_Convert_i32_r_s+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_r_s
  23:	2189      	s32i.n	a8, a1, 8
  25:	0aa8      	l32i.n	a10, a10, 0
  27:	000081        	l32r	a8, fffc0028 <op_f64_Convert_i32_r_s+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_r_s+0xc
			27: R_XTENSA_ASM_EXPAND	__floatsidf
  2a:	0008e0        	callx8	a8
  2d:	01a9      	s32i.n	a10, a1, 0
  2f:	11b9      	s32i.n	a11, a1, 4
  31:	06ed      	mov.n	a14, a6
  33:	07fd      	mov.n	a15, a7
  35:	04cd      	mov.n	a12, a4
  37:	03bd      	mov.n	a11, a3
  39:	02ad      	mov.n	a10, a2
  3b:	000081        	l32r	a8, fffc003c <op_f64_Convert_i32_r_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_r_s+0x10
			3b: R_XTENSA_ASM_EXPAND	.text.profileOp
  3e:	0008e0        	callx8	a8
  41:	0a2d      	mov.n	a2, a10
  43:	f01d      	retw.n

Disassembly of section .text.op_f64_Convert_i32_r_r:

00000000 <op_f64_Convert_i32_r_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_f64_Convert_i32_r_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_r_r
   6:	06ad      	mov.n	a10, a6
   8:	2189      	s32i.n	a8, a1, 8
   a:	000081        	l32r	a8, fffc000c <op_f64_Convert_i32_r_r+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_r_r+0x4
			a: R_XTENSA_ASM_EXPAND	__floatsidf
   d:	0008e0        	callx8	a8
  10:	01a9      	s32i.n	a10, a1, 0
  12:	11b9      	s32i.n	a11, a1, 4
  14:	06ed      	mov.n	a14, a6
  16:	07fd      	mov.n	a15, a7
  18:	04cd      	mov.n	a12, a4
  1a:	03bd      	mov.n	a11, a3
  1c:	02ad      	mov.n	a10, a2
  1e:	000081        	l32r	a8, fffc0020 <op_f64_Convert_i32_r_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_f64_Convert_i32_r_r+0x8
			1e: R_XTENSA_ASM_EXPAND	.text.profileOp
  21:	0008e0        	callx8	a8
  24:	0a2d      	mov.n	a2, a10
  26:	f01d      	retw.n

Disassembly of section .text.op_f32_Demote_f64_s:

00000000 <op_f32_Demote_f64_s>:
   0:	006136        	entry	a1, 48
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f32_Demote_f64_s+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f32_Demote_f64_s+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	8c0c      	movi.n	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Demote_f64_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Demote_f64_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	000081        	l32r	a8, fffc0024 <op_f32_Demote_f64_s+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.op_f32_Demote_f64_s
  24:	2189      	s32i.n	a8, a1, 8
  26:	1ab8      	l32i.n	a11, a10, 4
  28:	0aa8      	l32i.n	a10, a10, 0
  2a:	000081        	l32r	a8, fffc002c <op_f32_Demote_f64_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_f32_Demote_f64_s+0xc
			2a: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2d:	0008e0        	callx8	a8
  30:	000081        	l32r	a8, fffc0030 <op_f32_Demote_f64_s+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_Demote_f64_s+0x10
			30: R_XTENSA_ASM_EXPAND	__extendsfdf2
  33:	0008e0        	callx8	a8
  36:	01a9      	s32i.n	a10, a1, 0
  38:	11b9      	s32i.n	a11, a1, 4
  3a:	06ed      	mov.n	a14, a6
  3c:	07fd      	mov.n	a15, a7
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_f32_Demote_f64_s+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_f32_Demote_f64_s+0x14
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n

Disassembly of section .text.op_f32_Demote_f64_r:

00000000 <op_f32_Demote_f64_r>:
   0:	006136        	entry	a1, 48
   3:	d1b8      	l32i.n	a11, a1, 52
   5:	c1a8      	l32i.n	a10, a1, 48
   7:	000081        	l32r	a8, fffc0008 <op_f32_Demote_f64_r+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.op_f32_Demote_f64_r+0x4
			7: R_XTENSA_ASM_EXPAND	__truncdfsf2
   a:	0008e0        	callx8	a8
   d:	000081        	l32r	a8, fffc0010 <op_f32_Demote_f64_r+0xfffc0010>
			d: R_XTENSA_SLOT0_OP	.literal.op_f32_Demote_f64_r
  10:	2189      	s32i.n	a8, a1, 8
  12:	000081        	l32r	a8, fffc0014 <op_f32_Demote_f64_r+0xfffc0014>
			12: R_XTENSA_SLOT0_OP	.literal.op_f32_Demote_f64_r+0x8
			12: R_XTENSA_ASM_EXPAND	__extendsfdf2
  15:	0008e0        	callx8	a8
  18:	01a9      	s32i.n	a10, a1, 0
  1a:	11b9      	s32i.n	a11, a1, 4
  1c:	06ed      	mov.n	a14, a6
  1e:	07fd      	mov.n	a15, a7
  20:	04cd      	mov.n	a12, a4
  22:	03bd      	mov.n	a11, a3
  24:	02ad      	mov.n	a10, a2
  26:	000081        	l32r	a8, fffc0028 <op_f32_Demote_f64_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_f32_Demote_f64_r+0xc
			26: R_XTENSA_ASM_EXPAND	.text.profileOp
  29:	0008e0        	callx8	a8
  2c:	0a2d      	mov.n	a2, a10
  2e:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_u64_s_s:

00000000 <op_f32_Convert_u64_s_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Convert_u64_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f32_Convert_u64_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_s_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	08e8      	l32i.n	a14, a8, 0
  24:	18f8      	l32i.n	a15, a8, 4
  26:	02bd      	mov.n	a11, a2
  28:	4c0c      	movi.n	a12, 4
  2a:	04ad      	mov.n	a10, a4
  2c:	61e9      	s32i.n	a14, a1, 24
  2e:	71f9      	s32i.n	a15, a1, 28
  30:	000081        	l32r	a8, fffc0030 <op_f32_Convert_u64_s_s+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_s_s+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f32_Convert_u64_s_s+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_s_s+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	71b8      	l32i.n	a11, a1, 28
  47:	0a5d      	mov.n	a5, a10
  49:	61a8      	l32i.n	a10, a1, 24
  4b:	000081        	l32r	a8, fffc004c <op_f32_Convert_u64_s_s+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_s_s+0x14
			4b: R_XTENSA_ASM_EXPAND	__floatundisf
  4e:	0008e0        	callx8	a8
  51:	000081        	l32r	a8, fffc0054 <op_f32_Convert_u64_s_s+0xfffc0054>
			51: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_s_s
  54:	05a9      	s32i.n	a10, a5, 0
  56:	112192        	l32i	a9, a1, 68
  59:	2189      	s32i.n	a8, a1, 8
  5b:	102182        	l32i	a8, a1, 64
  5e:	1199      	s32i.n	a9, a1, 4
  60:	0189      	s32i.n	a8, a1, 0
  62:	06ed      	mov.n	a14, a6
  64:	07fd      	mov.n	a15, a7
  66:	04cd      	mov.n	a12, a4
  68:	03bd      	mov.n	a11, a3
  6a:	02ad      	mov.n	a10, a2
  6c:	000081        	l32r	a8, fffc006c <op_f32_Convert_u64_s_s+0xfffc006c>
			6c: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_s_s+0x18
			6c: R_XTENSA_ASM_EXPAND	.text.profileOp
  6f:	0008e0        	callx8	a8
  72:	0a2d      	mov.n	a2, a10
  74:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_u64_s_r:

00000000 <op_f32_Convert_u64_s_r>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Convert_u64_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_s_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Convert_u64_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_s_r+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a5d      	mov.n	a5, a10
  23:	07bd      	mov.n	a11, a7
  25:	06ad      	mov.n	a10, a6
  27:	000081        	l32r	a8, fffc0028 <op_f32_Convert_u64_s_r+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_s_r+0xc
			27: R_XTENSA_ASM_EXPAND	__floatundisf
  2a:	0008e0        	callx8	a8
  2d:	000081        	l32r	a8, fffc0030 <op_f32_Convert_u64_s_r+0xfffc0030>
			2d: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_s_r
  30:	05a9      	s32i.n	a10, a5, 0
  32:	d198      	l32i.n	a9, a1, 52
  34:	2189      	s32i.n	a8, a1, 8
  36:	c188      	l32i.n	a8, a1, 48
  38:	1199      	s32i.n	a9, a1, 4
  3a:	0189      	s32i.n	a8, a1, 0
  3c:	06ed      	mov.n	a14, a6
  3e:	07fd      	mov.n	a15, a7
  40:	04cd      	mov.n	a12, a4
  42:	03bd      	mov.n	a11, a3
  44:	02ad      	mov.n	a10, a2
  46:	000081        	l32r	a8, fffc0048 <op_f32_Convert_u64_s_r+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_s_r+0x10
			46: R_XTENSA_ASM_EXPAND	.text.profileOp
  49:	0008e0        	callx8	a8
  4c:	0a2d      	mov.n	a2, a10
  4e:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_u64_r_s:

00000000 <op_f32_Convert_u64_r_s>:
   0:	006136        	entry	a1, 48
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f32_Convert_u64_r_s+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_r_s+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	8c0c      	movi.n	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Convert_u64_r_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_r_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	000081        	l32r	a8, fffc0024 <op_f32_Convert_u64_r_s+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_r_s
  24:	2189      	s32i.n	a8, a1, 8
  26:	1ab8      	l32i.n	a11, a10, 4
  28:	0aa8      	l32i.n	a10, a10, 0
  2a:	000081        	l32r	a8, fffc002c <op_f32_Convert_u64_r_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_r_s+0xc
			2a: R_XTENSA_ASM_EXPAND	__floatundisf
  2d:	0008e0        	callx8	a8
  30:	000081        	l32r	a8, fffc0030 <op_f32_Convert_u64_r_s+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_r_s+0x10
			30: R_XTENSA_ASM_EXPAND	__extendsfdf2
  33:	0008e0        	callx8	a8
  36:	01a9      	s32i.n	a10, a1, 0
  38:	11b9      	s32i.n	a11, a1, 4
  3a:	06ed      	mov.n	a14, a6
  3c:	07fd      	mov.n	a15, a7
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_f32_Convert_u64_r_s+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_r_s+0x14
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_u64_r_r:

00000000 <op_f32_Convert_u64_r_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_f32_Convert_u64_r_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_r_r
   6:	07bd      	mov.n	a11, a7
   8:	026182        	s32i	a8, a1, 8
   b:	20a660        	or	a10, a6, a6
   e:	000081        	l32r	a8, fffc0010 <op_f32_Convert_u64_r_r+0xfffc0010>
			e: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_r_r+0x4
			e: R_XTENSA_ASM_EXPAND	__floatundisf
  11:	0008e0        	callx8	a8
  14:	000081        	l32r	a8, fffc0014 <op_f32_Convert_u64_r_r+0xfffc0014>
			14: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_r_r+0x8
			14: R_XTENSA_ASM_EXPAND	__extendsfdf2
  17:	0008e0        	callx8	a8
  1a:	01a9      	s32i.n	a10, a1, 0
  1c:	11b9      	s32i.n	a11, a1, 4
  1e:	06ed      	mov.n	a14, a6
  20:	07fd      	mov.n	a15, a7
  22:	04cd      	mov.n	a12, a4
  24:	03bd      	mov.n	a11, a3
  26:	02ad      	mov.n	a10, a2
  28:	000081        	l32r	a8, fffc0028 <op_f32_Convert_u64_r_r+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u64_r_r+0xc
			28: R_XTENSA_ASM_EXPAND	.text.profileOp
  2b:	0008e0        	callx8	a8
  2e:	0a2d      	mov.n	a2, a10
  30:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_i64_s_s:

00000000 <op_f32_Convert_i64_s_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Convert_i64_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f32_Convert_i64_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_s_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	08e8      	l32i.n	a14, a8, 0
  24:	18f8      	l32i.n	a15, a8, 4
  26:	02bd      	mov.n	a11, a2
  28:	4c0c      	movi.n	a12, 4
  2a:	04ad      	mov.n	a10, a4
  2c:	61e9      	s32i.n	a14, a1, 24
  2e:	71f9      	s32i.n	a15, a1, 28
  30:	000081        	l32r	a8, fffc0030 <op_f32_Convert_i64_s_s+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_s_s+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f32_Convert_i64_s_s+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_s_s+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	71b8      	l32i.n	a11, a1, 28
  47:	0a5d      	mov.n	a5, a10
  49:	61a8      	l32i.n	a10, a1, 24
  4b:	000081        	l32r	a8, fffc004c <op_f32_Convert_i64_s_s+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_s_s+0x14
			4b: R_XTENSA_ASM_EXPAND	__floatdisf
  4e:	0008e0        	callx8	a8
  51:	000081        	l32r	a8, fffc0054 <op_f32_Convert_i64_s_s+0xfffc0054>
			51: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_s_s
  54:	05a9      	s32i.n	a10, a5, 0
  56:	112192        	l32i	a9, a1, 68
  59:	2189      	s32i.n	a8, a1, 8
  5b:	102182        	l32i	a8, a1, 64
  5e:	1199      	s32i.n	a9, a1, 4
  60:	0189      	s32i.n	a8, a1, 0
  62:	06ed      	mov.n	a14, a6
  64:	07fd      	mov.n	a15, a7
  66:	04cd      	mov.n	a12, a4
  68:	03bd      	mov.n	a11, a3
  6a:	02ad      	mov.n	a10, a2
  6c:	000081        	l32r	a8, fffc006c <op_f32_Convert_i64_s_s+0xfffc006c>
			6c: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_s_s+0x18
			6c: R_XTENSA_ASM_EXPAND	.text.profileOp
  6f:	0008e0        	callx8	a8
  72:	0a2d      	mov.n	a2, a10
  74:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_i64_s_r:

00000000 <op_f32_Convert_i64_s_r>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Convert_i64_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_s_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Convert_i64_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_s_r+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a5d      	mov.n	a5, a10
  23:	07bd      	mov.n	a11, a7
  25:	06ad      	mov.n	a10, a6
  27:	000081        	l32r	a8, fffc0028 <op_f32_Convert_i64_s_r+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_s_r+0xc
			27: R_XTENSA_ASM_EXPAND	__floatdisf
  2a:	0008e0        	callx8	a8
  2d:	000081        	l32r	a8, fffc0030 <op_f32_Convert_i64_s_r+0xfffc0030>
			2d: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_s_r
  30:	05a9      	s32i.n	a10, a5, 0
  32:	d198      	l32i.n	a9, a1, 52
  34:	2189      	s32i.n	a8, a1, 8
  36:	c188      	l32i.n	a8, a1, 48
  38:	1199      	s32i.n	a9, a1, 4
  3a:	0189      	s32i.n	a8, a1, 0
  3c:	06ed      	mov.n	a14, a6
  3e:	07fd      	mov.n	a15, a7
  40:	04cd      	mov.n	a12, a4
  42:	03bd      	mov.n	a11, a3
  44:	02ad      	mov.n	a10, a2
  46:	000081        	l32r	a8, fffc0048 <op_f32_Convert_i64_s_r+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_s_r+0x10
			46: R_XTENSA_ASM_EXPAND	.text.profileOp
  49:	0008e0        	callx8	a8
  4c:	0a2d      	mov.n	a2, a10
  4e:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_i64_r_s:

00000000 <op_f32_Convert_i64_r_s>:
   0:	006136        	entry	a1, 48
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f32_Convert_i64_r_s+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_r_s+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	8c0c      	movi.n	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Convert_i64_r_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_r_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	000081        	l32r	a8, fffc0024 <op_f32_Convert_i64_r_s+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_r_s
  24:	2189      	s32i.n	a8, a1, 8
  26:	1ab8      	l32i.n	a11, a10, 4
  28:	0aa8      	l32i.n	a10, a10, 0
  2a:	000081        	l32r	a8, fffc002c <op_f32_Convert_i64_r_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_r_s+0xc
			2a: R_XTENSA_ASM_EXPAND	__floatdisf
  2d:	0008e0        	callx8	a8
  30:	000081        	l32r	a8, fffc0030 <op_f32_Convert_i64_r_s+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_r_s+0x10
			30: R_XTENSA_ASM_EXPAND	__extendsfdf2
  33:	0008e0        	callx8	a8
  36:	01a9      	s32i.n	a10, a1, 0
  38:	11b9      	s32i.n	a11, a1, 4
  3a:	06ed      	mov.n	a14, a6
  3c:	07fd      	mov.n	a15, a7
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_f32_Convert_i64_r_s+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_r_s+0x14
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_i64_r_r:

00000000 <op_f32_Convert_i64_r_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_f32_Convert_i64_r_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_r_r
   6:	07bd      	mov.n	a11, a7
   8:	026182        	s32i	a8, a1, 8
   b:	20a660        	or	a10, a6, a6
   e:	000081        	l32r	a8, fffc0010 <op_f32_Convert_i64_r_r+0xfffc0010>
			e: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_r_r+0x4
			e: R_XTENSA_ASM_EXPAND	__floatdisf
  11:	0008e0        	callx8	a8
  14:	000081        	l32r	a8, fffc0014 <op_f32_Convert_i64_r_r+0xfffc0014>
			14: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_r_r+0x8
			14: R_XTENSA_ASM_EXPAND	__extendsfdf2
  17:	0008e0        	callx8	a8
  1a:	01a9      	s32i.n	a10, a1, 0
  1c:	11b9      	s32i.n	a11, a1, 4
  1e:	06ed      	mov.n	a14, a6
  20:	07fd      	mov.n	a15, a7
  22:	04cd      	mov.n	a12, a4
  24:	03bd      	mov.n	a11, a3
  26:	02ad      	mov.n	a10, a2
  28:	000081        	l32r	a8, fffc0028 <op_f32_Convert_i64_r_r+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i64_r_r+0xc
			28: R_XTENSA_ASM_EXPAND	.text.profileOp
  2b:	0008e0        	callx8	a8
  2e:	0a2d      	mov.n	a2, a10
  30:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_u32_s_s:

00000000 <op_f32_Convert_u32_s_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Convert_u32_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Convert_u32_s_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_s_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002852        	l32i	a5, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_f32_Convert_u32_s_s+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_s_s+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_f32_Convert_u32_s_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_s_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	da0500        	ufloat.s	f0, a5, 0
  44:	000081        	l32r	a8, fffc0044 <op_f32_Convert_u32_s_s+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_s_s
  47:	004a03        	ssi	f0, a10, 0
  4a:	d198      	l32i.n	a9, a1, 52
  4c:	2189      	s32i.n	a8, a1, 8
  4e:	c188      	l32i.n	a8, a1, 48
  50:	1199      	s32i.n	a9, a1, 4
  52:	0189      	s32i.n	a8, a1, 0
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_f32_Convert_u32_s_s+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_s_s+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_u32_s_r:

00000000 <op_f32_Convert_u32_s_r>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Convert_u32_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_s_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Convert_u32_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_s_r+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	da0600        	ufloat.s	f0, a6, 0
  24:	000081        	l32r	a8, fffc0024 <op_f32_Convert_u32_s_r+0xfffc0024>
			24: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_s_r
  27:	004a03        	ssi	f0, a10, 0
  2a:	d198      	l32i.n	a9, a1, 52
  2c:	2189      	s32i.n	a8, a1, 8
  2e:	c188      	l32i.n	a8, a1, 48
  30:	1199      	s32i.n	a9, a1, 4
  32:	0189      	s32i.n	a8, a1, 0
  34:	06ed      	mov.n	a14, a6
  36:	07fd      	mov.n	a15, a7
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_f32_Convert_u32_s_r+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_s_r+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_u32_r_s:

00000000 <op_f32_Convert_u32_r_s>:
   0:	006136        	entry	a1, 48
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f32_Convert_u32_r_s+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_r_s+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	4c0c      	movi.n	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Convert_u32_r_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_r_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	000081        	l32r	a8, fffc0024 <op_f32_Convert_u32_r_s+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_r_s
  24:	2189      	s32i.n	a8, a1, 8
  26:	0a88      	l32i.n	a8, a10, 0
  28:	da0800        	ufloat.s	f0, a8, 0
  2b:	faa040        	rfr	a10, f0
  2e:	000081        	l32r	a8, fffc0030 <op_f32_Convert_u32_r_s+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_r_s+0xc
			2e: R_XTENSA_ASM_EXPAND	__extendsfdf2
  31:	0008e0        	callx8	a8
  34:	01a9      	s32i.n	a10, a1, 0
  36:	11b9      	s32i.n	a11, a1, 4
  38:	06ed      	mov.n	a14, a6
  3a:	07fd      	mov.n	a15, a7
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_f32_Convert_u32_r_s+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_r_s+0x10
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_u32_r_r:

00000000 <op_f32_Convert_u32_r_r>:
   0:	006136        	entry	a1, 48
   3:	da0600        	ufloat.s	f0, a6, 0
   6:	000081        	l32r	a8, fffc0008 <op_f32_Convert_u32_r_r+0xfffc0008>
			6: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_r_r
   9:	faa040        	rfr	a10, f0
   c:	2189      	s32i.n	a8, a1, 8
   e:	000081        	l32r	a8, fffc0010 <op_f32_Convert_u32_r_r+0xfffc0010>
			e: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_r_r+0x4
			e: R_XTENSA_ASM_EXPAND	__extendsfdf2
  11:	0008e0        	callx8	a8
  14:	01a9      	s32i.n	a10, a1, 0
  16:	11b9      	s32i.n	a11, a1, 4
  18:	06ed      	mov.n	a14, a6
  1a:	07fd      	mov.n	a15, a7
  1c:	04cd      	mov.n	a12, a4
  1e:	03bd      	mov.n	a11, a3
  20:	02ad      	mov.n	a10, a2
  22:	000081        	l32r	a8, fffc0024 <op_f32_Convert_u32_r_r+0xfffc0024>
			22: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_u32_r_r+0x8
			22: R_XTENSA_ASM_EXPAND	.text.profileOp
  25:	0008e0        	callx8	a8
  28:	0a2d      	mov.n	a2, a10
  2a:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_i32_s_s:

00000000 <op_f32_Convert_i32_s_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Convert_i32_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_s_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Convert_i32_s_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_s_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002852        	l32i	a5, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_f32_Convert_i32_s_s+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_s_s+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_f32_Convert_i32_s_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_s_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	ca0500        	float.s	f0, a5, 0
  44:	000081        	l32r	a8, fffc0044 <op_f32_Convert_i32_s_s+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_s_s
  47:	004a03        	ssi	f0, a10, 0
  4a:	d198      	l32i.n	a9, a1, 52
  4c:	2189      	s32i.n	a8, a1, 8
  4e:	c188      	l32i.n	a8, a1, 48
  50:	1199      	s32i.n	a9, a1, 4
  52:	0189      	s32i.n	a8, a1, 0
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_f32_Convert_i32_s_s+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_s_s+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_i32_s_r:

00000000 <op_f32_Convert_i32_s_r>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Convert_i32_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_s_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Convert_i32_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_s_r+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	ca0600        	float.s	f0, a6, 0
  24:	000081        	l32r	a8, fffc0024 <op_f32_Convert_i32_s_r+0xfffc0024>
			24: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_s_r
  27:	004a03        	ssi	f0, a10, 0
  2a:	d198      	l32i.n	a9, a1, 52
  2c:	2189      	s32i.n	a8, a1, 8
  2e:	c188      	l32i.n	a8, a1, 48
  30:	1199      	s32i.n	a9, a1, 4
  32:	0189      	s32i.n	a8, a1, 0
  34:	06ed      	mov.n	a14, a6
  36:	07fd      	mov.n	a15, a7
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_f32_Convert_i32_s_r+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_s_r+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_i32_r_s:

00000000 <op_f32_Convert_i32_r_s>:
   0:	006136        	entry	a1, 48
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f32_Convert_i32_r_s+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_r_s+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	4c0c      	movi.n	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Convert_i32_r_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_r_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	000081        	l32r	a8, fffc0024 <op_f32_Convert_i32_r_s+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_r_s
  24:	2189      	s32i.n	a8, a1, 8
  26:	0a88      	l32i.n	a8, a10, 0
  28:	ca0800        	float.s	f0, a8, 0
  2b:	faa040        	rfr	a10, f0
  2e:	000081        	l32r	a8, fffc0030 <op_f32_Convert_i32_r_s+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_r_s+0xc
			2e: R_XTENSA_ASM_EXPAND	__extendsfdf2
  31:	0008e0        	callx8	a8
  34:	01a9      	s32i.n	a10, a1, 0
  36:	11b9      	s32i.n	a11, a1, 4
  38:	06ed      	mov.n	a14, a6
  3a:	07fd      	mov.n	a15, a7
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_f32_Convert_i32_r_s+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_r_s+0x10
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_f32_Convert_i32_r_r:

00000000 <op_f32_Convert_i32_r_r>:
   0:	006136        	entry	a1, 48
   3:	ca0600        	float.s	f0, a6, 0
   6:	000081        	l32r	a8, fffc0008 <op_f32_Convert_i32_r_r+0xfffc0008>
			6: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_r_r
   9:	faa040        	rfr	a10, f0
   c:	2189      	s32i.n	a8, a1, 8
   e:	000081        	l32r	a8, fffc0010 <op_f32_Convert_i32_r_r+0xfffc0010>
			e: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_r_r+0x4
			e: R_XTENSA_ASM_EXPAND	__extendsfdf2
  11:	0008e0        	callx8	a8
  14:	01a9      	s32i.n	a10, a1, 0
  16:	11b9      	s32i.n	a11, a1, 4
  18:	06ed      	mov.n	a14, a6
  1a:	07fd      	mov.n	a15, a7
  1c:	04cd      	mov.n	a12, a4
  1e:	03bd      	mov.n	a11, a3
  20:	02ad      	mov.n	a10, a2
  22:	000081        	l32r	a8, fffc0024 <op_f32_Convert_i32_r_r+0xfffc0024>
			22: R_XTENSA_SLOT0_OP	.literal.op_f32_Convert_i32_r_r+0x8
			22: R_XTENSA_ASM_EXPAND	.text.profileOp
  25:	0008e0        	callx8	a8
  28:	0a2d      	mov.n	a2, a10
  2a:	f01d      	retw.n

Disassembly of section .text.op_u64_Trunc_f64_s_s:

00000000 <op_u64_Trunc_f64_s_s>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Trunc_f64_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_Trunc_f64_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_u64_Trunc_f64_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_s+0x14
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	8c0c      	movi.n	a12, 8
  32:	a0bb30        	addx4	a11, a11, a3
  35:	20a440        	or	a10, a4, a4
  38:	000081        	l32r	a8, fffc0038 <op_u64_Trunc_f64_s_s+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_s+0x18
			38: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3b:	0008e0        	callx8	a8
  3e:	15b8      	l32i.n	a11, a5, 4
  40:	0a8d      	mov.n	a8, a10
  42:	05a8      	l32i.n	a10, a5, 0
  44:	71b9      	s32i.n	a11, a1, 28
  46:	61a9      	s32i.n	a10, a1, 24
  48:	0acd      	mov.n	a12, a10
  4a:	0bdd      	mov.n	a13, a11
  4c:	205880        	or	a5, a8, a8
  4f:	000081        	l32r	a8, fffc0050 <op_u64_Trunc_f64_s_s+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_s+0x1c
			4f: R_XTENSA_ASM_EXPAND	__unorddf2
  52:	0008e0        	callx8	a8
  55:	057a56        	bnez	a10, b0 <op_u64_Trunc_f64_s_s+0xb0>
			55: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f64_s_s+0xb0
  58:	0000d1        	l32r	a13, fffc0058 <op_u64_Trunc_f64_s_s+0xfffc0058>
			58: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_s+0x8
  5b:	61a8      	l32i.n	a10, a1, 24
  5d:	0721b2        	l32i	a11, a1, 28
  60:	00a0c2        	movi	a12, 0
  63:	000081        	l32r	a8, fffc0064 <op_u64_Trunc_f64_s_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_s+0x20
			63: R_XTENSA_ASM_EXPAND	__ledf2
  66:	0008e0        	callx8	a8
  69:	431aa6        	blti	a10, 1, b0 <op_u64_Trunc_f64_s_s+0xb0>
			69: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f64_s_s+0xb0
  6c:	0000d1        	l32r	a13, fffc006c <op_u64_Trunc_f64_s_s+0xfffc006c>
			6c: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_s+0x4
  6f:	61a8      	l32i.n	a10, a1, 24
  71:	71b8      	l32i.n	a11, a1, 28
  73:	00a0c2        	movi	a12, 0
  76:	000081        	l32r	a8, fffc0078 <op_u64_Trunc_f64_s_s+0xfffc0078>
			76: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_s+0x24
			76: R_XTENSA_ASM_EXPAND	__gedf2
  79:	0008e0        	callx8	a8
  7c:	030ad6        	bgez	a10, b0 <op_u64_Trunc_f64_s_s+0xb0>
			7c: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f64_s_s+0xb0
  7f:	61a8      	l32i.n	a10, a1, 24
  81:	71b8      	l32i.n	a11, a1, 28
  83:	000081        	l32r	a8, fffc0084 <op_u64_Trunc_f64_s_s+0xfffc0084>
			83: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_s+0x28
			83: R_XTENSA_ASM_EXPAND	__fixunsdfdi
  86:	0008e0        	callx8	a8
  89:	000081        	l32r	a8, fffc008c <op_u64_Trunc_f64_s_s+0xfffc008c>
			89: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_s
  8c:	05a9      	s32i.n	a10, a5, 0
  8e:	15b9      	s32i.n	a11, a5, 4
  90:	112192        	l32i	a9, a1, 68
  93:	2189      	s32i.n	a8, a1, 8
  95:	102182        	l32i	a8, a1, 64
  98:	1199      	s32i.n	a9, a1, 4
  9a:	0189      	s32i.n	a8, a1, 0
  9c:	06ed      	mov.n	a14, a6
  9e:	07fd      	mov.n	a15, a7
  a0:	04cd      	mov.n	a12, a4
  a2:	03bd      	mov.n	a11, a3
  a4:	02ad      	mov.n	a10, a2
  a6:	000081        	l32r	a8, fffc00a8 <op_u64_Trunc_f64_s_s+0xfffc00a8>
			a6: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_s+0x2c
			a6: R_XTENSA_ASM_EXPAND	.text.profileOp
  a9:	0008e0        	callx8	a8
  ac:	0a2d      	mov.n	a2, a10
  ae:	f01d      	retw.n
  b0:	0a0c      	movi.n	a10, 0
  b2:	000081        	l32r	a8, fffc00b4 <op_u64_Trunc_f64_s_s+0xfffc00b4>
			b2: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_s+0x30
			b2: R_XTENSA_ASM_EXPAND	backtrace_err
  b5:	0008e0        	callx8	a8
  b8:	0a2d      	mov.n	a2, a10
  ba:	f01d      	retw.n

Disassembly of section .text.op_u64_Trunc_f64_s_r:

00000000 <op_u64_Trunc_f64_s_r>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Trunc_f64_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_r+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_Trunc_f64_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_r+0x10
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c1c8      	l32i.n	a12, a1, 48
  23:	d1d8      	l32i.n	a13, a1, 52
  25:	0a5d      	mov.n	a5, a10
  27:	0dbd      	mov.n	a11, a13
  29:	0cad      	mov.n	a10, a12
  2b:	000081        	l32r	a8, fffc002c <op_u64_Trunc_f64_s_r+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_r+0x14
			2b: R_XTENSA_ASM_EXPAND	__unorddf2
  2e:	0008e0        	callx8	a8
  31:	055a56        	bnez	a10, 8a <op_u64_Trunc_f64_s_r+0x8a>
			31: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f64_s_r+0x8a
  34:	0000d1        	l32r	a13, fffc0034 <op_u64_Trunc_f64_s_r+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_r+0x8
  37:	c1a8      	l32i.n	a10, a1, 48
  39:	0d21b2        	l32i	a11, a1, 52
  3c:	00a0c2        	movi	a12, 0
  3f:	000081        	l32r	a8, fffc0040 <op_u64_Trunc_f64_s_r+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_r+0x18
			3f: R_XTENSA_ASM_EXPAND	__ledf2
  42:	0008e0        	callx8	a8
  45:	411aa6        	blti	a10, 1, 8a <op_u64_Trunc_f64_s_r+0x8a>
			45: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f64_s_r+0x8a
  48:	0000d1        	l32r	a13, fffc0048 <op_u64_Trunc_f64_s_r+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_r+0x4
  4b:	c1a8      	l32i.n	a10, a1, 48
  4d:	0d21b2        	l32i	a11, a1, 52
  50:	0c0c      	movi.n	a12, 0
  52:	000081        	l32r	a8, fffc0054 <op_u64_Trunc_f64_s_r+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_r+0x1c
			52: R_XTENSA_ASM_EXPAND	__gedf2
  55:	0008e0        	callx8	a8
  58:	02ead6        	bgez	a10, 8a <op_u64_Trunc_f64_s_r+0x8a>
			58: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f64_s_r+0x8a
  5b:	c1a8      	l32i.n	a10, a1, 48
  5d:	d1b8      	l32i.n	a11, a1, 52
  5f:	000081        	l32r	a8, fffc0060 <op_u64_Trunc_f64_s_r+0xfffc0060>
			5f: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_r+0x20
			5f: R_XTENSA_ASM_EXPAND	__fixunsdfdi
  62:	0008e0        	callx8	a8
  65:	000081        	l32r	a8, fffc0068 <op_u64_Trunc_f64_s_r+0xfffc0068>
			65: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_r
  68:	05a9      	s32i.n	a10, a5, 0
  6a:	15b9      	s32i.n	a11, a5, 4
  6c:	d198      	l32i.n	a9, a1, 52
  6e:	2189      	s32i.n	a8, a1, 8
  70:	c188      	l32i.n	a8, a1, 48
  72:	1199      	s32i.n	a9, a1, 4
  74:	0189      	s32i.n	a8, a1, 0
  76:	06ed      	mov.n	a14, a6
  78:	07fd      	mov.n	a15, a7
  7a:	04cd      	mov.n	a12, a4
  7c:	03bd      	mov.n	a11, a3
  7e:	02ad      	mov.n	a10, a2
  80:	000081        	l32r	a8, fffc0080 <op_u64_Trunc_f64_s_r+0xfffc0080>
			80: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_r+0x24
			80: R_XTENSA_ASM_EXPAND	.text.profileOp
  83:	0008e0        	callx8	a8
  86:	0a2d      	mov.n	a2, a10
  88:	f01d      	retw.n
  8a:	0a0c      	movi.n	a10, 0
  8c:	000081        	l32r	a8, fffc008c <op_u64_Trunc_f64_s_r+0xfffc008c>
			8c: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_s_r+0x28
			8c: R_XTENSA_ASM_EXPAND	backtrace_err
  8f:	0008e0        	callx8	a8
  92:	0a2d      	mov.n	a2, a10
  94:	f01d      	retw.n

Disassembly of section .text.op_u64_Trunc_f64_r_s:

00000000 <op_u64_Trunc_f64_r_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Trunc_f64_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	08a0c2        	movi	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_u64_Trunc_f64_r_s+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_s+0x10
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	1a78      	l32i.n	a7, a10, 4
  24:	0a68      	l32i.n	a6, a10, 0
  26:	07dd      	mov.n	a13, a7
  28:	06cd      	mov.n	a12, a6
  2a:	06ad      	mov.n	a10, a6
  2c:	20b770        	or	a11, a7, a7
  2f:	000081        	l32r	a8, fffc0030 <op_u64_Trunc_f64_r_s+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_s+0x14
			2f: R_XTENSA_ASM_EXPAND	__unorddf2
  32:	0008e0        	callx8	a8
  35:	051a56        	bnez	a10, 8a <op_u64_Trunc_f64_r_s+0x8a>
			35: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f64_r_s+0x8a
  38:	0000d1        	l32r	a13, fffc0038 <op_u64_Trunc_f64_r_s+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_s+0x8
  3b:	0c0c      	movi.n	a12, 0
  3d:	20a660        	or	a10, a6, a6
  40:	20b770        	or	a11, a7, a7
  43:	000081        	l32r	a8, fffc0044 <op_u64_Trunc_f64_r_s+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_s+0x18
			43: R_XTENSA_ASM_EXPAND	__ledf2
  46:	0008e0        	callx8	a8
  49:	3d1aa6        	blti	a10, 1, 8a <op_u64_Trunc_f64_r_s+0x8a>
			49: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f64_r_s+0x8a
  4c:	0000d1        	l32r	a13, fffc004c <op_u64_Trunc_f64_r_s+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_s+0x4
  4f:	0c0c      	movi.n	a12, 0
  51:	06ad      	mov.n	a10, a6
  53:	20b770        	or	a11, a7, a7
  56:	000081        	l32r	a8, fffc0058 <op_u64_Trunc_f64_r_s+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_s+0x1c
			56: R_XTENSA_ASM_EXPAND	__gedf2
  59:	0008e0        	callx8	a8
  5c:	02aad6        	bgez	a10, 8a <op_u64_Trunc_f64_r_s+0x8a>
			5c: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f64_r_s+0x8a
  5f:	06ad      	mov.n	a10, a6
  61:	07bd      	mov.n	a11, a7
  63:	000081        	l32r	a8, fffc0064 <op_u64_Trunc_f64_r_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_s+0x20
			63: R_XTENSA_ASM_EXPAND	__fixunsdfdi
  66:	0008e0        	callx8	a8
  69:	c188      	l32i.n	a8, a1, 48
  6b:	d198      	l32i.n	a9, a1, 52
  6d:	0189      	s32i.n	a8, a1, 0
  6f:	000081        	l32r	a8, fffc0070 <op_u64_Trunc_f64_r_s+0xfffc0070>
			6f: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_s
  72:	0aed      	mov.n	a14, a10
  74:	0bfd      	mov.n	a15, a11
  76:	1199      	s32i.n	a9, a1, 4
  78:	2189      	s32i.n	a8, a1, 8
  7a:	04cd      	mov.n	a12, a4
  7c:	03bd      	mov.n	a11, a3
  7e:	02ad      	mov.n	a10, a2
  80:	000081        	l32r	a8, fffc0080 <op_u64_Trunc_f64_r_s+0xfffc0080>
			80: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_s+0x24
			80: R_XTENSA_ASM_EXPAND	.text.profileOp
  83:	0008e0        	callx8	a8
  86:	0a2d      	mov.n	a2, a10
  88:	f01d      	retw.n
  8a:	0a0c      	movi.n	a10, 0
  8c:	000081        	l32r	a8, fffc008c <op_u64_Trunc_f64_r_s+0xfffc008c>
			8c: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_s+0x28
			8c: R_XTENSA_ASM_EXPAND	backtrace_err
  8f:	0008e0        	callx8	a8
  92:	0a2d      	mov.n	a2, a10
  94:	f01d      	retw.n

Disassembly of section .text.op_u64_Trunc_f64_r_r:

00000000 <op_u64_Trunc_f64_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06cd      	mov.n	a12, a6
   9:	07dd      	mov.n	a13, a7
   b:	06ad      	mov.n	a10, a6
   d:	07bd      	mov.n	a11, a7
   f:	000081        	l32r	a8, fffc0010 <op_u64_Trunc_f64_r_r+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_r+0xc
			f: R_XTENSA_ASM_EXPAND	__unorddf2
  12:	0008e0        	callx8	a8
  15:	04da56        	bnez	a10, 66 <op_u64_Trunc_f64_r_r+0x66>
			15: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f64_r_r+0x66
  18:	0000d1        	l32r	a13, fffc0018 <op_u64_Trunc_f64_r_r+0xfffc0018>
			18: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_r+0x8
  1b:	0c0c      	movi.n	a12, 0
  1d:	20a660        	or	a10, a6, a6
  20:	20b770        	or	a11, a7, a7
  23:	000081        	l32r	a8, fffc0024 <op_u64_Trunc_f64_r_r+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_r+0x10
			23: R_XTENSA_ASM_EXPAND	__ledf2
  26:	0008e0        	callx8	a8
  29:	391aa6        	blti	a10, 1, 66 <op_u64_Trunc_f64_r_r+0x66>
			29: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f64_r_r+0x66
  2c:	0000d1        	l32r	a13, fffc002c <op_u64_Trunc_f64_r_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_r+0x4
  2f:	0c0c      	movi.n	a12, 0
  31:	20a660        	or	a10, a6, a6
  34:	07bd      	mov.n	a11, a7
  36:	000081        	l32r	a8, fffc0038 <op_u64_Trunc_f64_r_r+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_r+0x14
			36: R_XTENSA_ASM_EXPAND	__gedf2
  39:	0008e0        	callx8	a8
  3c:	026ad6        	bgez	a10, 66 <op_u64_Trunc_f64_r_r+0x66>
			3c: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f64_r_r+0x66
  3f:	06ad      	mov.n	a10, a6
  41:	07bd      	mov.n	a11, a7
  43:	000081        	l32r	a8, fffc0044 <op_u64_Trunc_f64_r_r+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_r+0x18
			43: R_XTENSA_ASM_EXPAND	__fixunsdfdi
  46:	0008e0        	callx8	a8
  49:	000081        	l32r	a8, fffc004c <op_u64_Trunc_f64_r_r+0xfffc004c>
			49: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_r
  4c:	0aed      	mov.n	a14, a10
  4e:	0bfd      	mov.n	a15, a11
  50:	0169      	s32i.n	a6, a1, 0
  52:	1179      	s32i.n	a7, a1, 4
  54:	2189      	s32i.n	a8, a1, 8
  56:	04cd      	mov.n	a12, a4
  58:	03bd      	mov.n	a11, a3
  5a:	02ad      	mov.n	a10, a2
  5c:	000081        	l32r	a8, fffc005c <op_u64_Trunc_f64_r_r+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_r+0x1c
			5c: R_XTENSA_ASM_EXPAND	.text.profileOp
  5f:	0008e0        	callx8	a8
  62:	0a2d      	mov.n	a2, a10
  64:	f01d      	retw.n
  66:	0a0c      	movi.n	a10, 0
  68:	000081        	l32r	a8, fffc0068 <op_u64_Trunc_f64_r_r+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f64_r_r+0x20
			68: R_XTENSA_ASM_EXPAND	backtrace_err
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	f01d      	retw.n

Disassembly of section .text.op_i64_Trunc_f64_s_s:

00000000 <op_i64_Trunc_f64_s_s>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Trunc_f64_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Trunc_f64_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_i64_Trunc_f64_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_s+0x14
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	8c0c      	movi.n	a12, 8
  32:	a0bb30        	addx4	a11, a11, a3
  35:	20a440        	or	a10, a4, a4
  38:	000081        	l32r	a8, fffc0038 <op_i64_Trunc_f64_s_s+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_s+0x18
			38: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3b:	0008e0        	callx8	a8
  3e:	15b8      	l32i.n	a11, a5, 4
  40:	0a8d      	mov.n	a8, a10
  42:	05a8      	l32i.n	a10, a5, 0
  44:	71b9      	s32i.n	a11, a1, 28
  46:	61a9      	s32i.n	a10, a1, 24
  48:	0acd      	mov.n	a12, a10
  4a:	0bdd      	mov.n	a13, a11
  4c:	205880        	or	a5, a8, a8
  4f:	000081        	l32r	a8, fffc0050 <op_i64_Trunc_f64_s_s+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_s+0x1c
			4f: R_XTENSA_ASM_EXPAND	__unorddf2
  52:	0008e0        	callx8	a8
  55:	057a56        	bnez	a10, b0 <op_i64_Trunc_f64_s_s+0xb0>
			55: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f64_s_s+0xb0
  58:	0000d1        	l32r	a13, fffc0058 <op_i64_Trunc_f64_s_s+0xfffc0058>
			58: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_s+0x8
  5b:	61a8      	l32i.n	a10, a1, 24
  5d:	0721b2        	l32i	a11, a1, 28
  60:	01a0c2        	movi	a12, 1
  63:	000081        	l32r	a8, fffc0064 <op_i64_Trunc_f64_s_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_s+0x20
			63: R_XTENSA_ASM_EXPAND	__ledf2
  66:	0008e0        	callx8	a8
  69:	431aa6        	blti	a10, 1, b0 <op_i64_Trunc_f64_s_s+0xb0>
			69: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f64_s_s+0xb0
  6c:	0000d1        	l32r	a13, fffc006c <op_i64_Trunc_f64_s_s+0xfffc006c>
			6c: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_s+0x4
  6f:	61a8      	l32i.n	a10, a1, 24
  71:	71b8      	l32i.n	a11, a1, 28
  73:	00a0c2        	movi	a12, 0
  76:	000081        	l32r	a8, fffc0078 <op_i64_Trunc_f64_s_s+0xfffc0078>
			76: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_s+0x24
			76: R_XTENSA_ASM_EXPAND	__gedf2
  79:	0008e0        	callx8	a8
  7c:	030ad6        	bgez	a10, b0 <op_i64_Trunc_f64_s_s+0xb0>
			7c: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f64_s_s+0xb0
  7f:	61a8      	l32i.n	a10, a1, 24
  81:	71b8      	l32i.n	a11, a1, 28
  83:	000081        	l32r	a8, fffc0084 <op_i64_Trunc_f64_s_s+0xfffc0084>
			83: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_s+0x28
			83: R_XTENSA_ASM_EXPAND	__fixdfdi
  86:	0008e0        	callx8	a8
  89:	000081        	l32r	a8, fffc008c <op_i64_Trunc_f64_s_s+0xfffc008c>
			89: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_s
  8c:	05a9      	s32i.n	a10, a5, 0
  8e:	15b9      	s32i.n	a11, a5, 4
  90:	112192        	l32i	a9, a1, 68
  93:	2189      	s32i.n	a8, a1, 8
  95:	102182        	l32i	a8, a1, 64
  98:	1199      	s32i.n	a9, a1, 4
  9a:	0189      	s32i.n	a8, a1, 0
  9c:	06ed      	mov.n	a14, a6
  9e:	07fd      	mov.n	a15, a7
  a0:	04cd      	mov.n	a12, a4
  a2:	03bd      	mov.n	a11, a3
  a4:	02ad      	mov.n	a10, a2
  a6:	000081        	l32r	a8, fffc00a8 <op_i64_Trunc_f64_s_s+0xfffc00a8>
			a6: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_s+0x2c
			a6: R_XTENSA_ASM_EXPAND	.text.profileOp
  a9:	0008e0        	callx8	a8
  ac:	0a2d      	mov.n	a2, a10
  ae:	f01d      	retw.n
  b0:	0a0c      	movi.n	a10, 0
  b2:	000081        	l32r	a8, fffc00b4 <op_i64_Trunc_f64_s_s+0xfffc00b4>
			b2: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_s+0x30
			b2: R_XTENSA_ASM_EXPAND	backtrace_err
  b5:	0008e0        	callx8	a8
  b8:	0a2d      	mov.n	a2, a10
  ba:	f01d      	retw.n

Disassembly of section .text.op_i64_Trunc_f64_s_r:

00000000 <op_i64_Trunc_f64_s_r>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Trunc_f64_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_r+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i64_Trunc_f64_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_r+0x10
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c1c8      	l32i.n	a12, a1, 48
  23:	d1d8      	l32i.n	a13, a1, 52
  25:	0a5d      	mov.n	a5, a10
  27:	0dbd      	mov.n	a11, a13
  29:	0cad      	mov.n	a10, a12
  2b:	000081        	l32r	a8, fffc002c <op_i64_Trunc_f64_s_r+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_r+0x14
			2b: R_XTENSA_ASM_EXPAND	__unorddf2
  2e:	0008e0        	callx8	a8
  31:	055a56        	bnez	a10, 8a <op_i64_Trunc_f64_s_r+0x8a>
			31: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f64_s_r+0x8a
  34:	0000d1        	l32r	a13, fffc0034 <op_i64_Trunc_f64_s_r+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_r+0x8
  37:	c1a8      	l32i.n	a10, a1, 48
  39:	0d21b2        	l32i	a11, a1, 52
  3c:	01a0c2        	movi	a12, 1
  3f:	000081        	l32r	a8, fffc0040 <op_i64_Trunc_f64_s_r+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_r+0x18
			3f: R_XTENSA_ASM_EXPAND	__ledf2
  42:	0008e0        	callx8	a8
  45:	411aa6        	blti	a10, 1, 8a <op_i64_Trunc_f64_s_r+0x8a>
			45: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f64_s_r+0x8a
  48:	0000d1        	l32r	a13, fffc0048 <op_i64_Trunc_f64_s_r+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_r+0x4
  4b:	c1a8      	l32i.n	a10, a1, 48
  4d:	0d21b2        	l32i	a11, a1, 52
  50:	0c0c      	movi.n	a12, 0
  52:	000081        	l32r	a8, fffc0054 <op_i64_Trunc_f64_s_r+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_r+0x1c
			52: R_XTENSA_ASM_EXPAND	__gedf2
  55:	0008e0        	callx8	a8
  58:	02ead6        	bgez	a10, 8a <op_i64_Trunc_f64_s_r+0x8a>
			58: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f64_s_r+0x8a
  5b:	c1a8      	l32i.n	a10, a1, 48
  5d:	d1b8      	l32i.n	a11, a1, 52
  5f:	000081        	l32r	a8, fffc0060 <op_i64_Trunc_f64_s_r+0xfffc0060>
			5f: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_r+0x20
			5f: R_XTENSA_ASM_EXPAND	__fixdfdi
  62:	0008e0        	callx8	a8
  65:	000081        	l32r	a8, fffc0068 <op_i64_Trunc_f64_s_r+0xfffc0068>
			65: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_r
  68:	05a9      	s32i.n	a10, a5, 0
  6a:	15b9      	s32i.n	a11, a5, 4
  6c:	d198      	l32i.n	a9, a1, 52
  6e:	2189      	s32i.n	a8, a1, 8
  70:	c188      	l32i.n	a8, a1, 48
  72:	1199      	s32i.n	a9, a1, 4
  74:	0189      	s32i.n	a8, a1, 0
  76:	06ed      	mov.n	a14, a6
  78:	07fd      	mov.n	a15, a7
  7a:	04cd      	mov.n	a12, a4
  7c:	03bd      	mov.n	a11, a3
  7e:	02ad      	mov.n	a10, a2
  80:	000081        	l32r	a8, fffc0080 <op_i64_Trunc_f64_s_r+0xfffc0080>
			80: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_r+0x24
			80: R_XTENSA_ASM_EXPAND	.text.profileOp
  83:	0008e0        	callx8	a8
  86:	0a2d      	mov.n	a2, a10
  88:	f01d      	retw.n
  8a:	0a0c      	movi.n	a10, 0
  8c:	000081        	l32r	a8, fffc008c <op_i64_Trunc_f64_s_r+0xfffc008c>
			8c: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_s_r+0x28
			8c: R_XTENSA_ASM_EXPAND	backtrace_err
  8f:	0008e0        	callx8	a8
  92:	0a2d      	mov.n	a2, a10
  94:	f01d      	retw.n

Disassembly of section .text.op_i64_Trunc_f64_r_s:

00000000 <op_i64_Trunc_f64_r_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Trunc_f64_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	08a0c2        	movi	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_i64_Trunc_f64_r_s+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_s+0x10
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	1a78      	l32i.n	a7, a10, 4
  24:	0a68      	l32i.n	a6, a10, 0
  26:	07dd      	mov.n	a13, a7
  28:	06cd      	mov.n	a12, a6
  2a:	06ad      	mov.n	a10, a6
  2c:	20b770        	or	a11, a7, a7
  2f:	000081        	l32r	a8, fffc0030 <op_i64_Trunc_f64_r_s+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_s+0x14
			2f: R_XTENSA_ASM_EXPAND	__unorddf2
  32:	0008e0        	callx8	a8
  35:	051a56        	bnez	a10, 8a <op_i64_Trunc_f64_r_s+0x8a>
			35: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f64_r_s+0x8a
  38:	0000d1        	l32r	a13, fffc0038 <op_i64_Trunc_f64_r_s+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_s+0x8
  3b:	1c0c      	movi.n	a12, 1
  3d:	20a660        	or	a10, a6, a6
  40:	20b770        	or	a11, a7, a7
  43:	000081        	l32r	a8, fffc0044 <op_i64_Trunc_f64_r_s+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_s+0x18
			43: R_XTENSA_ASM_EXPAND	__ledf2
  46:	0008e0        	callx8	a8
  49:	3d1aa6        	blti	a10, 1, 8a <op_i64_Trunc_f64_r_s+0x8a>
			49: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f64_r_s+0x8a
  4c:	0000d1        	l32r	a13, fffc004c <op_i64_Trunc_f64_r_s+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_s+0x4
  4f:	0c0c      	movi.n	a12, 0
  51:	06ad      	mov.n	a10, a6
  53:	20b770        	or	a11, a7, a7
  56:	000081        	l32r	a8, fffc0058 <op_i64_Trunc_f64_r_s+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_s+0x1c
			56: R_XTENSA_ASM_EXPAND	__gedf2
  59:	0008e0        	callx8	a8
  5c:	02aad6        	bgez	a10, 8a <op_i64_Trunc_f64_r_s+0x8a>
			5c: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f64_r_s+0x8a
  5f:	06ad      	mov.n	a10, a6
  61:	07bd      	mov.n	a11, a7
  63:	000081        	l32r	a8, fffc0064 <op_i64_Trunc_f64_r_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_s+0x20
			63: R_XTENSA_ASM_EXPAND	__fixdfdi
  66:	0008e0        	callx8	a8
  69:	c188      	l32i.n	a8, a1, 48
  6b:	d198      	l32i.n	a9, a1, 52
  6d:	0189      	s32i.n	a8, a1, 0
  6f:	000081        	l32r	a8, fffc0070 <op_i64_Trunc_f64_r_s+0xfffc0070>
			6f: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_s
  72:	0aed      	mov.n	a14, a10
  74:	0bfd      	mov.n	a15, a11
  76:	1199      	s32i.n	a9, a1, 4
  78:	2189      	s32i.n	a8, a1, 8
  7a:	04cd      	mov.n	a12, a4
  7c:	03bd      	mov.n	a11, a3
  7e:	02ad      	mov.n	a10, a2
  80:	000081        	l32r	a8, fffc0080 <op_i64_Trunc_f64_r_s+0xfffc0080>
			80: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_s+0x24
			80: R_XTENSA_ASM_EXPAND	.text.profileOp
  83:	0008e0        	callx8	a8
  86:	0a2d      	mov.n	a2, a10
  88:	f01d      	retw.n
  8a:	0a0c      	movi.n	a10, 0
  8c:	000081        	l32r	a8, fffc008c <op_i64_Trunc_f64_r_s+0xfffc008c>
			8c: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_s+0x28
			8c: R_XTENSA_ASM_EXPAND	backtrace_err
  8f:	0008e0        	callx8	a8
  92:	0a2d      	mov.n	a2, a10
  94:	f01d      	retw.n

Disassembly of section .text.op_i64_Trunc_f64_r_r:

00000000 <op_i64_Trunc_f64_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06cd      	mov.n	a12, a6
   9:	07dd      	mov.n	a13, a7
   b:	06ad      	mov.n	a10, a6
   d:	07bd      	mov.n	a11, a7
   f:	000081        	l32r	a8, fffc0010 <op_i64_Trunc_f64_r_r+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_r+0xc
			f: R_XTENSA_ASM_EXPAND	__unorddf2
  12:	0008e0        	callx8	a8
  15:	04da56        	bnez	a10, 66 <op_i64_Trunc_f64_r_r+0x66>
			15: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f64_r_r+0x66
  18:	0000d1        	l32r	a13, fffc0018 <op_i64_Trunc_f64_r_r+0xfffc0018>
			18: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_r+0x8
  1b:	1c0c      	movi.n	a12, 1
  1d:	20a660        	or	a10, a6, a6
  20:	20b770        	or	a11, a7, a7
  23:	000081        	l32r	a8, fffc0024 <op_i64_Trunc_f64_r_r+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_r+0x10
			23: R_XTENSA_ASM_EXPAND	__ledf2
  26:	0008e0        	callx8	a8
  29:	391aa6        	blti	a10, 1, 66 <op_i64_Trunc_f64_r_r+0x66>
			29: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f64_r_r+0x66
  2c:	0000d1        	l32r	a13, fffc002c <op_i64_Trunc_f64_r_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_r+0x4
  2f:	0c0c      	movi.n	a12, 0
  31:	20a660        	or	a10, a6, a6
  34:	07bd      	mov.n	a11, a7
  36:	000081        	l32r	a8, fffc0038 <op_i64_Trunc_f64_r_r+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_r+0x14
			36: R_XTENSA_ASM_EXPAND	__gedf2
  39:	0008e0        	callx8	a8
  3c:	026ad6        	bgez	a10, 66 <op_i64_Trunc_f64_r_r+0x66>
			3c: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f64_r_r+0x66
  3f:	06ad      	mov.n	a10, a6
  41:	07bd      	mov.n	a11, a7
  43:	000081        	l32r	a8, fffc0044 <op_i64_Trunc_f64_r_r+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_r+0x18
			43: R_XTENSA_ASM_EXPAND	__fixdfdi
  46:	0008e0        	callx8	a8
  49:	000081        	l32r	a8, fffc004c <op_i64_Trunc_f64_r_r+0xfffc004c>
			49: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_r
  4c:	0aed      	mov.n	a14, a10
  4e:	0bfd      	mov.n	a15, a11
  50:	0169      	s32i.n	a6, a1, 0
  52:	1179      	s32i.n	a7, a1, 4
  54:	2189      	s32i.n	a8, a1, 8
  56:	04cd      	mov.n	a12, a4
  58:	03bd      	mov.n	a11, a3
  5a:	02ad      	mov.n	a10, a2
  5c:	000081        	l32r	a8, fffc005c <op_i64_Trunc_f64_r_r+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_r+0x1c
			5c: R_XTENSA_ASM_EXPAND	.text.profileOp
  5f:	0008e0        	callx8	a8
  62:	0a2d      	mov.n	a2, a10
  64:	f01d      	retw.n
  66:	0a0c      	movi.n	a10, 0
  68:	000081        	l32r	a8, fffc0068 <op_i64_Trunc_f64_r_r+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f64_r_r+0x20
			68: R_XTENSA_ASM_EXPAND	backtrace_err
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	f01d      	retw.n

Disassembly of section .text.op_u64_Trunc_f32_s_s:

00000000 <op_u64_Trunc_f32_s_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Trunc_f32_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_Trunc_f32_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_u64_Trunc_f32_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_s+0x14
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	8c0c      	movi.n	a12, 8
  32:	a0bb30        	addx4	a11, a11, a3
  35:	04ad      	mov.n	a10, a4
  37:	000081        	l32r	a8, fffc0038 <op_u64_Trunc_f32_s_s+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_s+0x18
			37: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3a:	0008e0        	callx8	a8
  3d:	000503        	lsi	f0, a5, 0
  40:	1b0000        	un.s	b0, f0, f0
  43:	0a5d      	mov.n	a5, a10
  45:	451076        	bt	b0, 8e <op_u64_Trunc_f32_s_s+0x8e>
			45: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f32_s_s+0x8e
  48:	000081        	l32r	a8, fffc0048 <op_u64_Trunc_f32_s_s+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_s+0x8
  4b:	fa1850        	wfr	f1, a8
  4e:	6b0010        	ole.s	b0, f0, f1
  51:	391076        	bt	b0, 8e <op_u64_Trunc_f32_s_s+0x8e>
			51: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f32_s_s+0x8e
  54:	000081        	l32r	a8, fffc0054 <op_u64_Trunc_f32_s_s+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_s+0x4
  57:	fa1850        	wfr	f1, a8
  5a:	6b0100        	ole.s	b0, f1, f0
  5d:	2d1076        	bt	b0, 8e <op_u64_Trunc_f32_s_s+0x8e>
			5d: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f32_s_s+0x8e
  60:	faa040        	rfr	a10, f0
  63:	000081        	l32r	a8, fffc0064 <op_u64_Trunc_f32_s_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_s+0x1c
			63: R_XTENSA_ASM_EXPAND	__fixunssfdi
  66:	0008e0        	callx8	a8
  69:	000081        	l32r	a8, fffc006c <op_u64_Trunc_f32_s_s+0xfffc006c>
			69: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_s
  6c:	05a9      	s32i.n	a10, a5, 0
  6e:	15b9      	s32i.n	a11, a5, 4
  70:	d198      	l32i.n	a9, a1, 52
  72:	2189      	s32i.n	a8, a1, 8
  74:	c188      	l32i.n	a8, a1, 48
  76:	1199      	s32i.n	a9, a1, 4
  78:	0189      	s32i.n	a8, a1, 0
  7a:	06ed      	mov.n	a14, a6
  7c:	07fd      	mov.n	a15, a7
  7e:	04cd      	mov.n	a12, a4
  80:	03bd      	mov.n	a11, a3
  82:	02ad      	mov.n	a10, a2
  84:	000081        	l32r	a8, fffc0084 <op_u64_Trunc_f32_s_s+0xfffc0084>
			84: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_s+0x20
			84: R_XTENSA_ASM_EXPAND	.text.profileOp
  87:	0008e0        	callx8	a8
  8a:	0a2d      	mov.n	a2, a10
  8c:	f01d      	retw.n
  8e:	0a0c      	movi.n	a10, 0
  90:	000081        	l32r	a8, fffc0090 <op_u64_Trunc_f32_s_s+0xfffc0090>
			90: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_s+0x24
			90: R_XTENSA_ASM_EXPAND	backtrace_err
  93:	0008e0        	callx8	a8
  96:	0a2d      	mov.n	a2, a10
  98:	f01d      	retw.n

Disassembly of section .text.op_u64_Trunc_f32_s_r:

00000000 <op_u64_Trunc_f32_s_r>:
   0:	006136        	entry	a1, 48
   3:	04a0c2        	movi	a12, 4
   6:	20b220        	or	a11, a2, a2
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_u64_Trunc_f32_s_r+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_r+0xc
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	8c0c      	movi.n	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_Trunc_f32_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_r+0x10
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	d1b8      	l32i.n	a11, a1, 52
  23:	0a5d      	mov.n	a5, a10
  25:	c1a8      	l32i.n	a10, a1, 48
  27:	000081        	l32r	a8, fffc0028 <op_u64_Trunc_f32_s_r+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_r+0x14
			27: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2a:	0008e0        	callx8	a8
  2d:	fa0a50        	wfr	f0, a10
  30:	1b0000        	un.s	b0, f0, f0
  33:	421076        	bt	b0, 79 <op_u64_Trunc_f32_s_r+0x79>
			33: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f32_s_r+0x79
  36:	000081        	l32r	a8, fffc0038 <op_u64_Trunc_f32_s_r+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_r+0x8
  39:	fa1850        	wfr	f1, a8
  3c:	6b0010        	ole.s	b0, f0, f1
  3f:	361076        	bt	b0, 79 <op_u64_Trunc_f32_s_r+0x79>
			3f: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f32_s_r+0x79
  42:	000081        	l32r	a8, fffc0044 <op_u64_Trunc_f32_s_r+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_r+0x4
  45:	fa1850        	wfr	f1, a8
  48:	6b0100        	ole.s	b0, f1, f0
  4b:	2a1076        	bt	b0, 79 <op_u64_Trunc_f32_s_r+0x79>
			4b: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f32_s_r+0x79
  4e:	000081        	l32r	a8, fffc0050 <op_u64_Trunc_f32_s_r+0xfffc0050>
			4e: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_r+0x18
			4e: R_XTENSA_ASM_EXPAND	__fixunssfdi
  51:	0008e0        	callx8	a8
  54:	000081        	l32r	a8, fffc0054 <op_u64_Trunc_f32_s_r+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_r
  57:	05a9      	s32i.n	a10, a5, 0
  59:	15b9      	s32i.n	a11, a5, 4
  5b:	d198      	l32i.n	a9, a1, 52
  5d:	2189      	s32i.n	a8, a1, 8
  5f:	c188      	l32i.n	a8, a1, 48
  61:	1199      	s32i.n	a9, a1, 4
  63:	0189      	s32i.n	a8, a1, 0
  65:	06ed      	mov.n	a14, a6
  67:	07fd      	mov.n	a15, a7
  69:	04cd      	mov.n	a12, a4
  6b:	03bd      	mov.n	a11, a3
  6d:	02ad      	mov.n	a10, a2
  6f:	000081        	l32r	a8, fffc0070 <op_u64_Trunc_f32_s_r+0xfffc0070>
			6f: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_r+0x1c
			6f: R_XTENSA_ASM_EXPAND	.text.profileOp
  72:	0008e0        	callx8	a8
  75:	0a2d      	mov.n	a2, a10
  77:	f01d      	retw.n
  79:	0a0c      	movi.n	a10, 0
  7b:	000081        	l32r	a8, fffc007c <op_u64_Trunc_f32_s_r+0xfffc007c>
			7b: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_s_r+0x20
			7b: R_XTENSA_ASM_EXPAND	backtrace_err
  7e:	0008e0        	callx8	a8
  81:	0a2d      	mov.n	a2, a10
  83:	f01d      	retw.n

Disassembly of section .text.op_u64_Trunc_f32_r_s:

00000000 <op_u64_Trunc_f32_r_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Trunc_f32_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_r_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_Trunc_f32_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_r_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000a03        	lsi	f0, a10, 0
  23:	1b0000        	un.s	b0, f0, f0
  26:	421076        	bt	b0, 6c <op_u64_Trunc_f32_r_s+0x6c>
			26: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f32_r_s+0x6c
  29:	000081        	l32r	a8, fffc002c <op_u64_Trunc_f32_r_s+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_r_s+0x8
  2c:	fa1850        	wfr	f1, a8
  2f:	6b0010        	ole.s	b0, f0, f1
  32:	361076        	bt	b0, 6c <op_u64_Trunc_f32_r_s+0x6c>
			32: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f32_r_s+0x6c
  35:	000081        	l32r	a8, fffc0038 <op_u64_Trunc_f32_r_s+0xfffc0038>
			35: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_r_s+0x4
  38:	fa1850        	wfr	f1, a8
  3b:	6b0100        	ole.s	b0, f1, f0
  3e:	2a1076        	bt	b0, 6c <op_u64_Trunc_f32_r_s+0x6c>
			3e: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f32_r_s+0x6c
  41:	faa040        	rfr	a10, f0
  44:	000081        	l32r	a8, fffc0044 <op_u64_Trunc_f32_r_s+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_r_s+0x14
			44: R_XTENSA_ASM_EXPAND	__fixunssfdi
  47:	0008e0        	callx8	a8
  4a:	c188      	l32i.n	a8, a1, 48
  4c:	d198      	l32i.n	a9, a1, 52
  4e:	0189      	s32i.n	a8, a1, 0
  50:	000081        	l32r	a8, fffc0050 <op_u64_Trunc_f32_r_s+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_r_s
  53:	0aed      	mov.n	a14, a10
  55:	0bfd      	mov.n	a15, a11
  57:	1199      	s32i.n	a9, a1, 4
  59:	2189      	s32i.n	a8, a1, 8
  5b:	04cd      	mov.n	a12, a4
  5d:	03bd      	mov.n	a11, a3
  5f:	20a220        	or	a10, a2, a2
  62:	000081        	l32r	a8, fffc0064 <op_u64_Trunc_f32_r_s+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_r_s+0x18
			62: R_XTENSA_ASM_EXPAND	.text.profileOp
  65:	0008e0        	callx8	a8
  68:	0a2d      	mov.n	a2, a10
  6a:	f01d      	retw.n
  6c:	0a0c      	movi.n	a10, 0
  6e:	000081        	l32r	a8, fffc0070 <op_u64_Trunc_f32_r_s+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_r_s+0x1c
			6e: R_XTENSA_ASM_EXPAND	backtrace_err
  71:	0008e0        	callx8	a8
  74:	0a2d      	mov.n	a2, a10
  76:	f01d      	retw.n

Disassembly of section .text.op_u64_Trunc_f32_r_r:

00000000 <op_u64_Trunc_f32_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06ad      	mov.n	a10, a6
   9:	07bd      	mov.n	a11, a7
   b:	000081        	l32r	a8, fffc000c <op_u64_Trunc_f32_r_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_r_r+0xc
			b: R_XTENSA_ASM_EXPAND	__truncdfsf2
   e:	0008e0        	callx8	a8
  11:	fa0a50        	wfr	f0, a10
  14:	1b0000        	un.s	b0, f0, f0
  17:	3a1076        	bt	b0, 55 <op_u64_Trunc_f32_r_r+0x55>
			17: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f32_r_r+0x55
  1a:	000081        	l32r	a8, fffc001c <op_u64_Trunc_f32_r_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_r_r+0x8
  1d:	fa1850        	wfr	f1, a8
  20:	6b0010        	ole.s	b0, f0, f1
  23:	2e1076        	bt	b0, 55 <op_u64_Trunc_f32_r_r+0x55>
			23: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f32_r_r+0x55
  26:	000081        	l32r	a8, fffc0028 <op_u64_Trunc_f32_r_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_r_r+0x4
  29:	fa1850        	wfr	f1, a8
  2c:	6b0100        	ole.s	b0, f1, f0
  2f:	221076        	bt	b0, 55 <op_u64_Trunc_f32_r_r+0x55>
			2f: R_XTENSA_SLOT0_OP	.text.op_u64_Trunc_f32_r_r+0x55
  32:	000081        	l32r	a8, fffc0034 <op_u64_Trunc_f32_r_r+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_r_r+0x10
			32: R_XTENSA_ASM_EXPAND	__fixunssfdi
  35:	0008e0        	callx8	a8
  38:	000081        	l32r	a8, fffc0038 <op_u64_Trunc_f32_r_r+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_r_r
  3b:	0aed      	mov.n	a14, a10
  3d:	0bfd      	mov.n	a15, a11
  3f:	0169      	s32i.n	a6, a1, 0
  41:	1179      	s32i.n	a7, a1, 4
  43:	2189      	s32i.n	a8, a1, 8
  45:	04cd      	mov.n	a12, a4
  47:	03bd      	mov.n	a11, a3
  49:	02ad      	mov.n	a10, a2
  4b:	000081        	l32r	a8, fffc004c <op_u64_Trunc_f32_r_r+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_r_r+0x14
			4b: R_XTENSA_ASM_EXPAND	.text.profileOp
  4e:	0008e0        	callx8	a8
  51:	0a2d      	mov.n	a2, a10
  53:	f01d      	retw.n
  55:	0a0c      	movi.n	a10, 0
  57:	000081        	l32r	a8, fffc0058 <op_u64_Trunc_f32_r_r+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_u64_Trunc_f32_r_r+0x18
			57: R_XTENSA_ASM_EXPAND	backtrace_err
  5a:	0008e0        	callx8	a8
  5d:	0a2d      	mov.n	a2, a10
  5f:	f01d      	retw.n

Disassembly of section .text.op_i64_Trunc_f32_s_s:

00000000 <op_i64_Trunc_f32_s_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Trunc_f32_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Trunc_f32_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_i64_Trunc_f32_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_s+0x14
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	8c0c      	movi.n	a12, 8
  32:	a0bb30        	addx4	a11, a11, a3
  35:	04ad      	mov.n	a10, a4
  37:	000081        	l32r	a8, fffc0038 <op_i64_Trunc_f32_s_s+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_s+0x18
			37: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3a:	0008e0        	callx8	a8
  3d:	000503        	lsi	f0, a5, 0
  40:	1b0000        	un.s	b0, f0, f0
  43:	0a5d      	mov.n	a5, a10
  45:	451076        	bt	b0, 8e <op_i64_Trunc_f32_s_s+0x8e>
			45: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f32_s_s+0x8e
  48:	000081        	l32r	a8, fffc0048 <op_i64_Trunc_f32_s_s+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_s+0x8
  4b:	fa1850        	wfr	f1, a8
  4e:	6b0010        	ole.s	b0, f0, f1
  51:	391076        	bt	b0, 8e <op_i64_Trunc_f32_s_s+0x8e>
			51: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f32_s_s+0x8e
  54:	000081        	l32r	a8, fffc0054 <op_i64_Trunc_f32_s_s+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_s+0x4
  57:	fa1850        	wfr	f1, a8
  5a:	6b0100        	ole.s	b0, f1, f0
  5d:	2d1076        	bt	b0, 8e <op_i64_Trunc_f32_s_s+0x8e>
			5d: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f32_s_s+0x8e
  60:	faa040        	rfr	a10, f0
  63:	000081        	l32r	a8, fffc0064 <op_i64_Trunc_f32_s_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_s+0x1c
			63: R_XTENSA_ASM_EXPAND	__fixsfdi
  66:	0008e0        	callx8	a8
  69:	000081        	l32r	a8, fffc006c <op_i64_Trunc_f32_s_s+0xfffc006c>
			69: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_s
  6c:	05a9      	s32i.n	a10, a5, 0
  6e:	15b9      	s32i.n	a11, a5, 4
  70:	d198      	l32i.n	a9, a1, 52
  72:	2189      	s32i.n	a8, a1, 8
  74:	c188      	l32i.n	a8, a1, 48
  76:	1199      	s32i.n	a9, a1, 4
  78:	0189      	s32i.n	a8, a1, 0
  7a:	06ed      	mov.n	a14, a6
  7c:	07fd      	mov.n	a15, a7
  7e:	04cd      	mov.n	a12, a4
  80:	03bd      	mov.n	a11, a3
  82:	02ad      	mov.n	a10, a2
  84:	000081        	l32r	a8, fffc0084 <op_i64_Trunc_f32_s_s+0xfffc0084>
			84: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_s+0x20
			84: R_XTENSA_ASM_EXPAND	.text.profileOp
  87:	0008e0        	callx8	a8
  8a:	0a2d      	mov.n	a2, a10
  8c:	f01d      	retw.n
  8e:	0a0c      	movi.n	a10, 0
  90:	000081        	l32r	a8, fffc0090 <op_i64_Trunc_f32_s_s+0xfffc0090>
			90: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_s+0x24
			90: R_XTENSA_ASM_EXPAND	backtrace_err
  93:	0008e0        	callx8	a8
  96:	0a2d      	mov.n	a2, a10
  98:	f01d      	retw.n

Disassembly of section .text.op_i64_Trunc_f32_s_r:

00000000 <op_i64_Trunc_f32_s_r>:
   0:	006136        	entry	a1, 48
   3:	04a0c2        	movi	a12, 4
   6:	20b220        	or	a11, a2, a2
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_i64_Trunc_f32_s_r+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_r+0xc
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	8c0c      	movi.n	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_i64_Trunc_f32_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_r+0x10
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	d1b8      	l32i.n	a11, a1, 52
  23:	0a5d      	mov.n	a5, a10
  25:	c1a8      	l32i.n	a10, a1, 48
  27:	000081        	l32r	a8, fffc0028 <op_i64_Trunc_f32_s_r+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_r+0x14
			27: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2a:	0008e0        	callx8	a8
  2d:	fa0a50        	wfr	f0, a10
  30:	1b0000        	un.s	b0, f0, f0
  33:	421076        	bt	b0, 79 <op_i64_Trunc_f32_s_r+0x79>
			33: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f32_s_r+0x79
  36:	000081        	l32r	a8, fffc0038 <op_i64_Trunc_f32_s_r+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_r+0x8
  39:	fa1850        	wfr	f1, a8
  3c:	6b0010        	ole.s	b0, f0, f1
  3f:	361076        	bt	b0, 79 <op_i64_Trunc_f32_s_r+0x79>
			3f: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f32_s_r+0x79
  42:	000081        	l32r	a8, fffc0044 <op_i64_Trunc_f32_s_r+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_r+0x4
  45:	fa1850        	wfr	f1, a8
  48:	6b0100        	ole.s	b0, f1, f0
  4b:	2a1076        	bt	b0, 79 <op_i64_Trunc_f32_s_r+0x79>
			4b: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f32_s_r+0x79
  4e:	000081        	l32r	a8, fffc0050 <op_i64_Trunc_f32_s_r+0xfffc0050>
			4e: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_r+0x18
			4e: R_XTENSA_ASM_EXPAND	__fixsfdi
  51:	0008e0        	callx8	a8
  54:	000081        	l32r	a8, fffc0054 <op_i64_Trunc_f32_s_r+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_r
  57:	05a9      	s32i.n	a10, a5, 0
  59:	15b9      	s32i.n	a11, a5, 4
  5b:	d198      	l32i.n	a9, a1, 52
  5d:	2189      	s32i.n	a8, a1, 8
  5f:	c188      	l32i.n	a8, a1, 48
  61:	1199      	s32i.n	a9, a1, 4
  63:	0189      	s32i.n	a8, a1, 0
  65:	06ed      	mov.n	a14, a6
  67:	07fd      	mov.n	a15, a7
  69:	04cd      	mov.n	a12, a4
  6b:	03bd      	mov.n	a11, a3
  6d:	02ad      	mov.n	a10, a2
  6f:	000081        	l32r	a8, fffc0070 <op_i64_Trunc_f32_s_r+0xfffc0070>
			6f: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_r+0x1c
			6f: R_XTENSA_ASM_EXPAND	.text.profileOp
  72:	0008e0        	callx8	a8
  75:	0a2d      	mov.n	a2, a10
  77:	f01d      	retw.n
  79:	0a0c      	movi.n	a10, 0
  7b:	000081        	l32r	a8, fffc007c <op_i64_Trunc_f32_s_r+0xfffc007c>
			7b: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_s_r+0x20
			7b: R_XTENSA_ASM_EXPAND	backtrace_err
  7e:	0008e0        	callx8	a8
  81:	0a2d      	mov.n	a2, a10
  83:	f01d      	retw.n

Disassembly of section .text.op_i64_Trunc_f32_r_s:

00000000 <op_i64_Trunc_f32_r_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Trunc_f32_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_r_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Trunc_f32_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_r_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000a03        	lsi	f0, a10, 0
  23:	1b0000        	un.s	b0, f0, f0
  26:	421076        	bt	b0, 6c <op_i64_Trunc_f32_r_s+0x6c>
			26: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f32_r_s+0x6c
  29:	000081        	l32r	a8, fffc002c <op_i64_Trunc_f32_r_s+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_r_s+0x8
  2c:	fa1850        	wfr	f1, a8
  2f:	6b0010        	ole.s	b0, f0, f1
  32:	361076        	bt	b0, 6c <op_i64_Trunc_f32_r_s+0x6c>
			32: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f32_r_s+0x6c
  35:	000081        	l32r	a8, fffc0038 <op_i64_Trunc_f32_r_s+0xfffc0038>
			35: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_r_s+0x4
  38:	fa1850        	wfr	f1, a8
  3b:	6b0100        	ole.s	b0, f1, f0
  3e:	2a1076        	bt	b0, 6c <op_i64_Trunc_f32_r_s+0x6c>
			3e: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f32_r_s+0x6c
  41:	faa040        	rfr	a10, f0
  44:	000081        	l32r	a8, fffc0044 <op_i64_Trunc_f32_r_s+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_r_s+0x14
			44: R_XTENSA_ASM_EXPAND	__fixsfdi
  47:	0008e0        	callx8	a8
  4a:	c188      	l32i.n	a8, a1, 48
  4c:	d198      	l32i.n	a9, a1, 52
  4e:	0189      	s32i.n	a8, a1, 0
  50:	000081        	l32r	a8, fffc0050 <op_i64_Trunc_f32_r_s+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_r_s
  53:	0aed      	mov.n	a14, a10
  55:	0bfd      	mov.n	a15, a11
  57:	1199      	s32i.n	a9, a1, 4
  59:	2189      	s32i.n	a8, a1, 8
  5b:	04cd      	mov.n	a12, a4
  5d:	03bd      	mov.n	a11, a3
  5f:	20a220        	or	a10, a2, a2
  62:	000081        	l32r	a8, fffc0064 <op_i64_Trunc_f32_r_s+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_r_s+0x18
			62: R_XTENSA_ASM_EXPAND	.text.profileOp
  65:	0008e0        	callx8	a8
  68:	0a2d      	mov.n	a2, a10
  6a:	f01d      	retw.n
  6c:	0a0c      	movi.n	a10, 0
  6e:	000081        	l32r	a8, fffc0070 <op_i64_Trunc_f32_r_s+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_r_s+0x1c
			6e: R_XTENSA_ASM_EXPAND	backtrace_err
  71:	0008e0        	callx8	a8
  74:	0a2d      	mov.n	a2, a10
  76:	f01d      	retw.n

Disassembly of section .text.op_i64_Trunc_f32_r_r:

00000000 <op_i64_Trunc_f32_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06ad      	mov.n	a10, a6
   9:	07bd      	mov.n	a11, a7
   b:	000081        	l32r	a8, fffc000c <op_i64_Trunc_f32_r_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_r_r+0xc
			b: R_XTENSA_ASM_EXPAND	__truncdfsf2
   e:	0008e0        	callx8	a8
  11:	fa0a50        	wfr	f0, a10
  14:	1b0000        	un.s	b0, f0, f0
  17:	3a1076        	bt	b0, 55 <op_i64_Trunc_f32_r_r+0x55>
			17: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f32_r_r+0x55
  1a:	000081        	l32r	a8, fffc001c <op_i64_Trunc_f32_r_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_r_r+0x8
  1d:	fa1850        	wfr	f1, a8
  20:	6b0010        	ole.s	b0, f0, f1
  23:	2e1076        	bt	b0, 55 <op_i64_Trunc_f32_r_r+0x55>
			23: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f32_r_r+0x55
  26:	000081        	l32r	a8, fffc0028 <op_i64_Trunc_f32_r_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_r_r+0x4
  29:	fa1850        	wfr	f1, a8
  2c:	6b0100        	ole.s	b0, f1, f0
  2f:	221076        	bt	b0, 55 <op_i64_Trunc_f32_r_r+0x55>
			2f: R_XTENSA_SLOT0_OP	.text.op_i64_Trunc_f32_r_r+0x55
  32:	000081        	l32r	a8, fffc0034 <op_i64_Trunc_f32_r_r+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_r_r+0x10
			32: R_XTENSA_ASM_EXPAND	__fixsfdi
  35:	0008e0        	callx8	a8
  38:	000081        	l32r	a8, fffc0038 <op_i64_Trunc_f32_r_r+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_r_r
  3b:	0aed      	mov.n	a14, a10
  3d:	0bfd      	mov.n	a15, a11
  3f:	0169      	s32i.n	a6, a1, 0
  41:	1179      	s32i.n	a7, a1, 4
  43:	2189      	s32i.n	a8, a1, 8
  45:	04cd      	mov.n	a12, a4
  47:	03bd      	mov.n	a11, a3
  49:	02ad      	mov.n	a10, a2
  4b:	000081        	l32r	a8, fffc004c <op_i64_Trunc_f32_r_r+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_r_r+0x14
			4b: R_XTENSA_ASM_EXPAND	.text.profileOp
  4e:	0008e0        	callx8	a8
  51:	0a2d      	mov.n	a2, a10
  53:	f01d      	retw.n
  55:	0a0c      	movi.n	a10, 0
  57:	000081        	l32r	a8, fffc0058 <op_i64_Trunc_f32_r_r+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_i64_Trunc_f32_r_r+0x18
			57: R_XTENSA_ASM_EXPAND	backtrace_err
  5a:	0008e0        	callx8	a8
  5d:	0a2d      	mov.n	a2, a10
  5f:	f01d      	retw.n

Disassembly of section .text.op_i64_Extend_u32_s:

00000000 <op_i64_Extend_u32_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Extend_u32_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend_u32_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Extend_u32_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend_u32_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	c188      	l32i.n	a8, a1, 48
  22:	0ae8      	l32i.n	a14, a10, 0
  24:	d198      	l32i.n	a9, a1, 52
  26:	0189      	s32i.n	a8, a1, 0
  28:	000081        	l32r	a8, fffc0028 <op_i64_Extend_u32_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend_u32_s
  2b:	1199      	s32i.n	a9, a1, 4
  2d:	2189      	s32i.n	a8, a1, 8
  2f:	0f0c      	movi.n	a15, 0
  31:	04cd      	mov.n	a12, a4
  33:	03bd      	mov.n	a11, a3
  35:	02ad      	mov.n	a10, a2
  37:	000081        	l32r	a8, fffc0038 <op_i64_Extend_u32_s+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend_u32_s+0xc
			37: R_XTENSA_ASM_EXPAND	.text.profileOp
  3a:	0008e0        	callx8	a8
  3d:	0a2d      	mov.n	a2, a10
  3f:	f01d      	retw.n

Disassembly of section .text.op_i64_Extend_u32_r:

00000000 <op_i64_Extend_u32_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_i64_Extend_u32_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend_u32_r
   6:	d198      	l32i.n	a9, a1, 52
   8:	2189      	s32i.n	a8, a1, 8
   a:	c188      	l32i.n	a8, a1, 48
   c:	06ed      	mov.n	a14, a6
   e:	02ad      	mov.n	a10, a2
  10:	03bd      	mov.n	a11, a3
  12:	04cd      	mov.n	a12, a4
  14:	0189      	s32i.n	a8, a1, 0
  16:	1199      	s32i.n	a9, a1, 4
  18:	0f0c      	movi.n	a15, 0
  1a:	000081        	l32r	a8, fffc001c <op_i64_Extend_u32_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend_u32_r+0x4
			1a: R_XTENSA_ASM_EXPAND	.text.profileOp
  1d:	0008e0        	callx8	a8
  20:	0a2d      	mov.n	a2, a10
  22:	f01d      	retw.n

Disassembly of section .text.op_i64_Extend_i32_s:

00000000 <op_i64_Extend_i32_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Extend_i32_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend_i32_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Extend_i32_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend_i32_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	c188      	l32i.n	a8, a1, 48
  22:	0af8      	l32i.n	a15, a10, 0
  24:	d198      	l32i.n	a9, a1, 52
  26:	0189      	s32i.n	a8, a1, 0
  28:	000081        	l32r	a8, fffc0028 <op_i64_Extend_i32_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend_i32_s
  2b:	0fed      	mov.n	a14, a15
  2d:	1199      	s32i.n	a9, a1, 4
  2f:	2189      	s32i.n	a8, a1, 8
  31:	31fff0        	srai	a15, a15, 31
  34:	04cd      	mov.n	a12, a4
  36:	03bd      	mov.n	a11, a3
  38:	02ad      	mov.n	a10, a2
  3a:	000081        	l32r	a8, fffc003c <op_i64_Extend_i32_s+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend_i32_s+0xc
			3a: R_XTENSA_ASM_EXPAND	.text.profileOp
  3d:	0008e0        	callx8	a8
  40:	0a2d      	mov.n	a2, a10
  42:	f01d      	retw.n

Disassembly of section .text.op_i64_Extend_i32_r:

00000000 <op_i64_Extend_i32_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_i64_Extend_i32_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend_i32_r
   6:	d198      	l32i.n	a9, a1, 52
   8:	2189      	s32i.n	a8, a1, 8
   a:	c188      	l32i.n	a8, a1, 48
   c:	02ad      	mov.n	a10, a2
   e:	03bd      	mov.n	a11, a3
  10:	04cd      	mov.n	a12, a4
  12:	0189      	s32i.n	a8, a1, 0
  14:	1199      	s32i.n	a9, a1, 4
  16:	06ed      	mov.n	a14, a6
  18:	31ff60        	srai	a15, a6, 31
  1b:	000081        	l32r	a8, fffc001c <op_i64_Extend_i32_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i64_Extend_i32_r+0x4
			1b: R_XTENSA_ASM_EXPAND	.text.profileOp
  1e:	0008e0        	callx8	a8
  21:	0a2d      	mov.n	a2, a10
  23:	f01d      	retw.n

Disassembly of section .text.op_u32_Trunc_f64_s_s:

00000000 <op_u32_Trunc_f64_s_s>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Trunc_f64_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Trunc_f64_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_u32_Trunc_f64_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_s+0x14
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	4c0c      	movi.n	a12, 4
  32:	a0bb30        	addx4	a11, a11, a3
  35:	20a440        	or	a10, a4, a4
  38:	000081        	l32r	a8, fffc0038 <op_u32_Trunc_f64_s_s+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_s+0x18
			38: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3b:	0008e0        	callx8	a8
  3e:	15b8      	l32i.n	a11, a5, 4
  40:	0a8d      	mov.n	a8, a10
  42:	05a8      	l32i.n	a10, a5, 0
  44:	71b9      	s32i.n	a11, a1, 28
  46:	61a9      	s32i.n	a10, a1, 24
  48:	0acd      	mov.n	a12, a10
  4a:	0bdd      	mov.n	a13, a11
  4c:	205880        	or	a5, a8, a8
  4f:	000081        	l32r	a8, fffc0050 <op_u32_Trunc_f64_s_s+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_s+0x1c
			4f: R_XTENSA_ASM_EXPAND	__unorddf2
  52:	0008e0        	callx8	a8
  55:	055a56        	bnez	a10, ae <op_u32_Trunc_f64_s_s+0xae>
			55: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f64_s_s+0xae
  58:	0000d1        	l32r	a13, fffc0058 <op_u32_Trunc_f64_s_s+0xfffc0058>
			58: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_s+0x8
  5b:	61a8      	l32i.n	a10, a1, 24
  5d:	0721b2        	l32i	a11, a1, 28
  60:	00a0c2        	movi	a12, 0
  63:	000081        	l32r	a8, fffc0064 <op_u32_Trunc_f64_s_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_s+0x20
			63: R_XTENSA_ASM_EXPAND	__ledf2
  66:	0008e0        	callx8	a8
  69:	411aa6        	blti	a10, 1, ae <op_u32_Trunc_f64_s_s+0xae>
			69: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f64_s_s+0xae
  6c:	0000d1        	l32r	a13, fffc006c <op_u32_Trunc_f64_s_s+0xfffc006c>
			6c: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_s+0x4
  6f:	61a8      	l32i.n	a10, a1, 24
  71:	0721b2        	l32i	a11, a1, 28
  74:	0c0c      	movi.n	a12, 0
  76:	000081        	l32r	a8, fffc0078 <op_u32_Trunc_f64_s_s+0xfffc0078>
			76: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_s+0x24
			76: R_XTENSA_ASM_EXPAND	__gedf2
  79:	0008e0        	callx8	a8
  7c:	02ead6        	bgez	a10, ae <op_u32_Trunc_f64_s_s+0xae>
			7c: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f64_s_s+0xae
  7f:	71b8      	l32i.n	a11, a1, 28
  81:	61a8      	l32i.n	a10, a1, 24
  83:	000081        	l32r	a8, fffc0084 <op_u32_Trunc_f64_s_s+0xfffc0084>
			83: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_s+0x28
			83: R_XTENSA_ASM_EXPAND	__fixunsdfsi
  86:	0008e0        	callx8	a8
  89:	000081        	l32r	a8, fffc008c <op_u32_Trunc_f64_s_s+0xfffc008c>
			89: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_s
  8c:	05a9      	s32i.n	a10, a5, 0
  8e:	112192        	l32i	a9, a1, 68
  91:	2189      	s32i.n	a8, a1, 8
  93:	102182        	l32i	a8, a1, 64
  96:	1199      	s32i.n	a9, a1, 4
  98:	0189      	s32i.n	a8, a1, 0
  9a:	06ed      	mov.n	a14, a6
  9c:	07fd      	mov.n	a15, a7
  9e:	04cd      	mov.n	a12, a4
  a0:	03bd      	mov.n	a11, a3
  a2:	02ad      	mov.n	a10, a2
  a4:	000081        	l32r	a8, fffc00a4 <op_u32_Trunc_f64_s_s+0xfffc00a4>
			a4: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_s+0x2c
			a4: R_XTENSA_ASM_EXPAND	.text.profileOp
  a7:	0008e0        	callx8	a8
  aa:	0a2d      	mov.n	a2, a10
  ac:	f01d      	retw.n
  ae:	0a0c      	movi.n	a10, 0
  b0:	000081        	l32r	a8, fffc00b0 <op_u32_Trunc_f64_s_s+0xfffc00b0>
			b0: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_s+0x30
			b0: R_XTENSA_ASM_EXPAND	backtrace_err
  b3:	0008e0        	callx8	a8
  b6:	0a2d      	mov.n	a2, a10
  b8:	f01d      	retw.n

Disassembly of section .text.op_u32_Trunc_f64_s_r:

00000000 <op_u32_Trunc_f64_s_r>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Trunc_f64_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_r+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_Trunc_f64_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_r+0x10
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c1c8      	l32i.n	a12, a1, 48
  23:	d1d8      	l32i.n	a13, a1, 52
  25:	0a5d      	mov.n	a5, a10
  27:	0dbd      	mov.n	a11, a13
  29:	0cad      	mov.n	a10, a12
  2b:	000081        	l32r	a8, fffc002c <op_u32_Trunc_f64_s_r+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_r+0x14
			2b: R_XTENSA_ASM_EXPAND	__unorddf2
  2e:	0008e0        	callx8	a8
  31:	053a56        	bnez	a10, 88 <op_u32_Trunc_f64_s_r+0x88>
			31: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f64_s_r+0x88
  34:	0000d1        	l32r	a13, fffc0034 <op_u32_Trunc_f64_s_r+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_r+0x8
  37:	c1a8      	l32i.n	a10, a1, 48
  39:	0d21b2        	l32i	a11, a1, 52
  3c:	00a0c2        	movi	a12, 0
  3f:	000081        	l32r	a8, fffc0040 <op_u32_Trunc_f64_s_r+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_r+0x18
			3f: R_XTENSA_ASM_EXPAND	__ledf2
  42:	0008e0        	callx8	a8
  45:	3f1aa6        	blti	a10, 1, 88 <op_u32_Trunc_f64_s_r+0x88>
			45: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f64_s_r+0x88
  48:	0000d1        	l32r	a13, fffc0048 <op_u32_Trunc_f64_s_r+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_r+0x4
  4b:	c1a8      	l32i.n	a10, a1, 48
  4d:	d1b8      	l32i.n	a11, a1, 52
  4f:	00a0c2        	movi	a12, 0
  52:	000081        	l32r	a8, fffc0054 <op_u32_Trunc_f64_s_r+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_r+0x1c
			52: R_XTENSA_ASM_EXPAND	__gedf2
  55:	0008e0        	callx8	a8
  58:	02cad6        	bgez	a10, 88 <op_u32_Trunc_f64_s_r+0x88>
			58: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f64_s_r+0x88
  5b:	d1b8      	l32i.n	a11, a1, 52
  5d:	c1a8      	l32i.n	a10, a1, 48
  5f:	000081        	l32r	a8, fffc0060 <op_u32_Trunc_f64_s_r+0xfffc0060>
			5f: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_r+0x20
			5f: R_XTENSA_ASM_EXPAND	__fixunsdfsi
  62:	0008e0        	callx8	a8
  65:	000081        	l32r	a8, fffc0068 <op_u32_Trunc_f64_s_r+0xfffc0068>
			65: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_r
  68:	05a9      	s32i.n	a10, a5, 0
  6a:	d198      	l32i.n	a9, a1, 52
  6c:	2189      	s32i.n	a8, a1, 8
  6e:	c188      	l32i.n	a8, a1, 48
  70:	1199      	s32i.n	a9, a1, 4
  72:	0189      	s32i.n	a8, a1, 0
  74:	06ed      	mov.n	a14, a6
  76:	07fd      	mov.n	a15, a7
  78:	04cd      	mov.n	a12, a4
  7a:	03bd      	mov.n	a11, a3
  7c:	02ad      	mov.n	a10, a2
  7e:	000081        	l32r	a8, fffc0080 <op_u32_Trunc_f64_s_r+0xfffc0080>
			7e: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_r+0x24
			7e: R_XTENSA_ASM_EXPAND	.text.profileOp
  81:	0008e0        	callx8	a8
  84:	0a2d      	mov.n	a2, a10
  86:	f01d      	retw.n
  88:	0a0c      	movi.n	a10, 0
  8a:	000081        	l32r	a8, fffc008c <op_u32_Trunc_f64_s_r+0xfffc008c>
			8a: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_s_r+0x28
			8a: R_XTENSA_ASM_EXPAND	backtrace_err
  8d:	0008e0        	callx8	a8
  90:	0a2d      	mov.n	a2, a10
  92:	f01d      	retw.n

Disassembly of section .text.op_u32_Trunc_f64_r_s:

00000000 <op_u32_Trunc_f64_r_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Trunc_f64_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Trunc_f64_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a78      	l32i.n	a7, a10, 4
  22:	0a68      	l32i.n	a6, a10, 0
  24:	07dd      	mov.n	a13, a7
  26:	06cd      	mov.n	a12, a6
  28:	06ad      	mov.n	a10, a6
  2a:	07bd      	mov.n	a11, a7
  2c:	000081        	l32r	a8, fffc002c <op_u32_Trunc_f64_r_s+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_s+0x14
			2c: R_XTENSA_ASM_EXPAND	__unorddf2
  2f:	0008e0        	callx8	a8
  32:	0a5d      	mov.n	a5, a10
  34:	052a56        	bnez	a10, 8a <op_u32_Trunc_f64_r_s+0x8a>
			34: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f64_r_s+0x8a
  37:	0000d1        	l32r	a13, fffc0038 <op_u32_Trunc_f64_r_s+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_s+0x8
  3a:	00a0c2        	movi	a12, 0
  3d:	20a660        	or	a10, a6, a6
  40:	20b770        	or	a11, a7, a7
  43:	000081        	l32r	a8, fffc0044 <op_u32_Trunc_f64_r_s+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_s+0x18
			43: R_XTENSA_ASM_EXPAND	__ledf2
  46:	0008e0        	callx8	a8
  49:	3d1aa6        	blti	a10, 1, 8a <op_u32_Trunc_f64_r_s+0x8a>
			49: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f64_r_s+0x8a
  4c:	0000d1        	l32r	a13, fffc004c <op_u32_Trunc_f64_r_s+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_s+0x4
  4f:	0c0c      	movi.n	a12, 0
  51:	06ad      	mov.n	a10, a6
  53:	20b770        	or	a11, a7, a7
  56:	000081        	l32r	a8, fffc0058 <op_u32_Trunc_f64_r_s+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_s+0x1c
			56: R_XTENSA_ASM_EXPAND	__gedf2
  59:	0008e0        	callx8	a8
  5c:	02aad6        	bgez	a10, 8a <op_u32_Trunc_f64_r_s+0x8a>
			5c: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f64_r_s+0x8a
  5f:	07bd      	mov.n	a11, a7
  61:	06ad      	mov.n	a10, a6
  63:	000081        	l32r	a8, fffc0064 <op_u32_Trunc_f64_r_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_s+0x20
			63: R_XTENSA_ASM_EXPAND	__fixunsdfsi
  66:	0008e0        	callx8	a8
  69:	c188      	l32i.n	a8, a1, 48
  6b:	d198      	l32i.n	a9, a1, 52
  6d:	0189      	s32i.n	a8, a1, 0
  6f:	000081        	l32r	a8, fffc0070 <op_u32_Trunc_f64_r_s+0xfffc0070>
			6f: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_s
  72:	0aed      	mov.n	a14, a10
  74:	1199      	s32i.n	a9, a1, 4
  76:	2189      	s32i.n	a8, a1, 8
  78:	05fd      	mov.n	a15, a5
  7a:	04cd      	mov.n	a12, a4
  7c:	03bd      	mov.n	a11, a3
  7e:	02ad      	mov.n	a10, a2
  80:	000081        	l32r	a8, fffc0080 <op_u32_Trunc_f64_r_s+0xfffc0080>
			80: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_s+0x24
			80: R_XTENSA_ASM_EXPAND	.text.profileOp
  83:	0008e0        	callx8	a8
  86:	0a2d      	mov.n	a2, a10
  88:	f01d      	retw.n
  8a:	0a0c      	movi.n	a10, 0
  8c:	000081        	l32r	a8, fffc008c <op_u32_Trunc_f64_r_s+0xfffc008c>
			8c: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_s+0x28
			8c: R_XTENSA_ASM_EXPAND	backtrace_err
  8f:	0008e0        	callx8	a8
  92:	0a2d      	mov.n	a2, a10
  94:	f01d      	retw.n

Disassembly of section .text.op_u32_Trunc_f64_r_r:

00000000 <op_u32_Trunc_f64_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06cd      	mov.n	a12, a6
   9:	07dd      	mov.n	a13, a7
   b:	06ad      	mov.n	a10, a6
   d:	07bd      	mov.n	a11, a7
   f:	000081        	l32r	a8, fffc0010 <op_u32_Trunc_f64_r_r+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_r+0xc
			f: R_XTENSA_ASM_EXPAND	__unorddf2
  12:	0008e0        	callx8	a8
  15:	0a5d      	mov.n	a5, a10
  17:	04ba56        	bnez	a10, 66 <op_u32_Trunc_f64_r_r+0x66>
			17: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f64_r_r+0x66
  1a:	0000d1        	l32r	a13, fffc001c <op_u32_Trunc_f64_r_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_r+0x8
  1d:	0c0c      	movi.n	a12, 0
  1f:	06ad      	mov.n	a10, a6
  21:	07bd      	mov.n	a11, a7
  23:	000081        	l32r	a8, fffc0024 <op_u32_Trunc_f64_r_r+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_r+0x10
			23: R_XTENSA_ASM_EXPAND	__ledf2
  26:	0008e0        	callx8	a8
  29:	391aa6        	blti	a10, 1, 66 <op_u32_Trunc_f64_r_r+0x66>
			29: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f64_r_r+0x66
  2c:	0000d1        	l32r	a13, fffc002c <op_u32_Trunc_f64_r_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_r+0x4
  2f:	0c0c      	movi.n	a12, 0
  31:	20a660        	or	a10, a6, a6
  34:	07bd      	mov.n	a11, a7
  36:	000081        	l32r	a8, fffc0038 <op_u32_Trunc_f64_r_r+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_r+0x14
			36: R_XTENSA_ASM_EXPAND	__gedf2
  39:	0008e0        	callx8	a8
  3c:	026ad6        	bgez	a10, 66 <op_u32_Trunc_f64_r_r+0x66>
			3c: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f64_r_r+0x66
  3f:	07bd      	mov.n	a11, a7
  41:	06ad      	mov.n	a10, a6
  43:	000081        	l32r	a8, fffc0044 <op_u32_Trunc_f64_r_r+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_r+0x18
			43: R_XTENSA_ASM_EXPAND	__fixunsdfsi
  46:	0008e0        	callx8	a8
  49:	000081        	l32r	a8, fffc004c <op_u32_Trunc_f64_r_r+0xfffc004c>
			49: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_r
  4c:	0aed      	mov.n	a14, a10
  4e:	0169      	s32i.n	a6, a1, 0
  50:	1179      	s32i.n	a7, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	05fd      	mov.n	a15, a5
  56:	04cd      	mov.n	a12, a4
  58:	03bd      	mov.n	a11, a3
  5a:	02ad      	mov.n	a10, a2
  5c:	000081        	l32r	a8, fffc005c <op_u32_Trunc_f64_r_r+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_r+0x1c
			5c: R_XTENSA_ASM_EXPAND	.text.profileOp
  5f:	0008e0        	callx8	a8
  62:	0a2d      	mov.n	a2, a10
  64:	f01d      	retw.n
  66:	0a0c      	movi.n	a10, 0
  68:	000081        	l32r	a8, fffc0068 <op_u32_Trunc_f64_r_r+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f64_r_r+0x20
			68: R_XTENSA_ASM_EXPAND	backtrace_err
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	f01d      	retw.n

Disassembly of section .text.op_i32_Trunc_f64_s_s:

00000000 <op_i32_Trunc_f64_s_s>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Trunc_f64_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_s+0x10
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Trunc_f64_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_s+0x14
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_i32_Trunc_f64_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_s+0x18
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	4c0c      	movi.n	a12, 4
  32:	a0bb30        	addx4	a11, a11, a3
  35:	20a440        	or	a10, a4, a4
  38:	000081        	l32r	a8, fffc0038 <op_i32_Trunc_f64_s_s+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_s+0x1c
			38: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3b:	0008e0        	callx8	a8
  3e:	15b8      	l32i.n	a11, a5, 4
  40:	0a8d      	mov.n	a8, a10
  42:	05a8      	l32i.n	a10, a5, 0
  44:	71b9      	s32i.n	a11, a1, 28
  46:	61a9      	s32i.n	a10, a1, 24
  48:	0acd      	mov.n	a12, a10
  4a:	0bdd      	mov.n	a13, a11
  4c:	205880        	or	a5, a8, a8
  4f:	000081        	l32r	a8, fffc0050 <op_i32_Trunc_f64_s_s+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_s+0x20
			4f: R_XTENSA_ASM_EXPAND	__unorddf2
  52:	0008e0        	callx8	a8
  55:	055a56        	bnez	a10, ae <op_i32_Trunc_f64_s_s+0xae>
			55: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f64_s_s+0xae
  58:	0000c1        	l32r	a12, fffc0058 <op_i32_Trunc_f64_s_s+0xfffc0058>
			58: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_s+0x8
  5b:	0000d1        	l32r	a13, fffc005c <op_i32_Trunc_f64_s_s+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_s+0xc
  5e:	61a8      	l32i.n	a10, a1, 24
  60:	0721b2        	l32i	a11, a1, 28
  63:	000081        	l32r	a8, fffc0064 <op_i32_Trunc_f64_s_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_s+0x24
			63: R_XTENSA_ASM_EXPAND	__ledf2
  66:	0008e0        	callx8	a8
  69:	411aa6        	blti	a10, 1, ae <op_i32_Trunc_f64_s_s+0xae>
			69: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f64_s_s+0xae
  6c:	0000d1        	l32r	a13, fffc006c <op_i32_Trunc_f64_s_s+0xfffc006c>
			6c: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_s+0x4
  6f:	61a8      	l32i.n	a10, a1, 24
  71:	0721b2        	l32i	a11, a1, 28
  74:	0c0c      	movi.n	a12, 0
  76:	000081        	l32r	a8, fffc0078 <op_i32_Trunc_f64_s_s+0xfffc0078>
			76: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_s+0x28
			76: R_XTENSA_ASM_EXPAND	__gedf2
  79:	0008e0        	callx8	a8
  7c:	02ead6        	bgez	a10, ae <op_i32_Trunc_f64_s_s+0xae>
			7c: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f64_s_s+0xae
  7f:	71b8      	l32i.n	a11, a1, 28
  81:	61a8      	l32i.n	a10, a1, 24
  83:	000081        	l32r	a8, fffc0084 <op_i32_Trunc_f64_s_s+0xfffc0084>
			83: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_s+0x2c
			83: R_XTENSA_ASM_EXPAND	__fixdfsi
  86:	0008e0        	callx8	a8
  89:	000081        	l32r	a8, fffc008c <op_i32_Trunc_f64_s_s+0xfffc008c>
			89: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_s
  8c:	05a9      	s32i.n	a10, a5, 0
  8e:	112192        	l32i	a9, a1, 68
  91:	2189      	s32i.n	a8, a1, 8
  93:	102182        	l32i	a8, a1, 64
  96:	1199      	s32i.n	a9, a1, 4
  98:	0189      	s32i.n	a8, a1, 0
  9a:	06ed      	mov.n	a14, a6
  9c:	07fd      	mov.n	a15, a7
  9e:	04cd      	mov.n	a12, a4
  a0:	03bd      	mov.n	a11, a3
  a2:	02ad      	mov.n	a10, a2
  a4:	000081        	l32r	a8, fffc00a4 <op_i32_Trunc_f64_s_s+0xfffc00a4>
			a4: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_s+0x30
			a4: R_XTENSA_ASM_EXPAND	.text.profileOp
  a7:	0008e0        	callx8	a8
  aa:	0a2d      	mov.n	a2, a10
  ac:	f01d      	retw.n
  ae:	0a0c      	movi.n	a10, 0
  b0:	000081        	l32r	a8, fffc00b0 <op_i32_Trunc_f64_s_s+0xfffc00b0>
			b0: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_s+0x34
			b0: R_XTENSA_ASM_EXPAND	backtrace_err
  b3:	0008e0        	callx8	a8
  b6:	0a2d      	mov.n	a2, a10
  b8:	f01d      	retw.n

Disassembly of section .text.op_i32_Trunc_f64_s_r:

00000000 <op_i32_Trunc_f64_s_r>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Trunc_f64_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_r+0x10
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Trunc_f64_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_r+0x14
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c1c8      	l32i.n	a12, a1, 48
  23:	d1d8      	l32i.n	a13, a1, 52
  25:	0a5d      	mov.n	a5, a10
  27:	0dbd      	mov.n	a11, a13
  29:	0cad      	mov.n	a10, a12
  2b:	000081        	l32r	a8, fffc002c <op_i32_Trunc_f64_s_r+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_r+0x18
			2b: R_XTENSA_ASM_EXPAND	__unorddf2
  2e:	0008e0        	callx8	a8
  31:	053a56        	bnez	a10, 88 <op_i32_Trunc_f64_s_r+0x88>
			31: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f64_s_r+0x88
  34:	0000c1        	l32r	a12, fffc0034 <op_i32_Trunc_f64_s_r+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_r+0x8
  37:	0000d1        	l32r	a13, fffc0038 <op_i32_Trunc_f64_s_r+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_r+0xc
  3a:	c1a8      	l32i.n	a10, a1, 48
  3c:	0d21b2        	l32i	a11, a1, 52
  3f:	000081        	l32r	a8, fffc0040 <op_i32_Trunc_f64_s_r+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_r+0x1c
			3f: R_XTENSA_ASM_EXPAND	__ledf2
  42:	0008e0        	callx8	a8
  45:	3f1aa6        	blti	a10, 1, 88 <op_i32_Trunc_f64_s_r+0x88>
			45: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f64_s_r+0x88
  48:	0000d1        	l32r	a13, fffc0048 <op_i32_Trunc_f64_s_r+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_r+0x4
  4b:	c1a8      	l32i.n	a10, a1, 48
  4d:	d1b8      	l32i.n	a11, a1, 52
  4f:	00a0c2        	movi	a12, 0
  52:	000081        	l32r	a8, fffc0054 <op_i32_Trunc_f64_s_r+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_r+0x20
			52: R_XTENSA_ASM_EXPAND	__gedf2
  55:	0008e0        	callx8	a8
  58:	02cad6        	bgez	a10, 88 <op_i32_Trunc_f64_s_r+0x88>
			58: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f64_s_r+0x88
  5b:	d1b8      	l32i.n	a11, a1, 52
  5d:	c1a8      	l32i.n	a10, a1, 48
  5f:	000081        	l32r	a8, fffc0060 <op_i32_Trunc_f64_s_r+0xfffc0060>
			5f: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_r+0x24
			5f: R_XTENSA_ASM_EXPAND	__fixdfsi
  62:	0008e0        	callx8	a8
  65:	000081        	l32r	a8, fffc0068 <op_i32_Trunc_f64_s_r+0xfffc0068>
			65: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_r
  68:	05a9      	s32i.n	a10, a5, 0
  6a:	d198      	l32i.n	a9, a1, 52
  6c:	2189      	s32i.n	a8, a1, 8
  6e:	c188      	l32i.n	a8, a1, 48
  70:	1199      	s32i.n	a9, a1, 4
  72:	0189      	s32i.n	a8, a1, 0
  74:	06ed      	mov.n	a14, a6
  76:	07fd      	mov.n	a15, a7
  78:	04cd      	mov.n	a12, a4
  7a:	03bd      	mov.n	a11, a3
  7c:	02ad      	mov.n	a10, a2
  7e:	000081        	l32r	a8, fffc0080 <op_i32_Trunc_f64_s_r+0xfffc0080>
			7e: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_r+0x28
			7e: R_XTENSA_ASM_EXPAND	.text.profileOp
  81:	0008e0        	callx8	a8
  84:	0a2d      	mov.n	a2, a10
  86:	f01d      	retw.n
  88:	0a0c      	movi.n	a10, 0
  8a:	000081        	l32r	a8, fffc008c <op_i32_Trunc_f64_s_r+0xfffc008c>
			8a: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_s_r+0x2c
			8a: R_XTENSA_ASM_EXPAND	backtrace_err
  8d:	0008e0        	callx8	a8
  90:	0a2d      	mov.n	a2, a10
  92:	f01d      	retw.n

Disassembly of section .text.op_i32_Trunc_f64_r_s:

00000000 <op_i32_Trunc_f64_r_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Trunc_f64_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_s+0x10
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	08a0c2        	movi	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_i32_Trunc_f64_r_s+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_s+0x14
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	1a78      	l32i.n	a7, a10, 4
  24:	0a68      	l32i.n	a6, a10, 0
  26:	07dd      	mov.n	a13, a7
  28:	06cd      	mov.n	a12, a6
  2a:	06ad      	mov.n	a10, a6
  2c:	20b770        	or	a11, a7, a7
  2f:	000081        	l32r	a8, fffc0030 <op_i32_Trunc_f64_r_s+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_s+0x18
			2f: R_XTENSA_ASM_EXPAND	__unorddf2
  32:	0008e0        	callx8	a8
  35:	053a56        	bnez	a10, 8c <op_i32_Trunc_f64_r_s+0x8c>
			35: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f64_r_s+0x8c
  38:	0000c1        	l32r	a12, fffc0038 <op_i32_Trunc_f64_r_s+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_s+0x8
  3b:	0000d1        	l32r	a13, fffc003c <op_i32_Trunc_f64_r_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_s+0xc
  3e:	06ad      	mov.n	a10, a6
  40:	20b770        	or	a11, a7, a7
  43:	000081        	l32r	a8, fffc0044 <op_i32_Trunc_f64_r_s+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_s+0x1c
			43: R_XTENSA_ASM_EXPAND	__ledf2
  46:	0008e0        	callx8	a8
  49:	3f1aa6        	blti	a10, 1, 8c <op_i32_Trunc_f64_r_s+0x8c>
			49: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f64_r_s+0x8c
  4c:	0000d1        	l32r	a13, fffc004c <op_i32_Trunc_f64_r_s+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_s+0x4
  4f:	0c0c      	movi.n	a12, 0
  51:	06ad      	mov.n	a10, a6
  53:	20b770        	or	a11, a7, a7
  56:	000081        	l32r	a8, fffc0058 <op_i32_Trunc_f64_r_s+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_s+0x20
			56: R_XTENSA_ASM_EXPAND	__gedf2
  59:	0008e0        	callx8	a8
  5c:	02cad6        	bgez	a10, 8c <op_i32_Trunc_f64_r_s+0x8c>
			5c: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f64_r_s+0x8c
  5f:	07bd      	mov.n	a11, a7
  61:	06ad      	mov.n	a10, a6
  63:	000081        	l32r	a8, fffc0064 <op_i32_Trunc_f64_r_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_s+0x24
			63: R_XTENSA_ASM_EXPAND	__fixdfsi
  66:	0008e0        	callx8	a8
  69:	000081        	l32r	a8, fffc006c <op_i32_Trunc_f64_r_s+0xfffc006c>
			69: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_s
  6c:	d198      	l32i.n	a9, a1, 52
  6e:	2189      	s32i.n	a8, a1, 8
  70:	c188      	l32i.n	a8, a1, 48
  72:	0aed      	mov.n	a14, a10
  74:	31ffa0        	srai	a15, a10, 31
  77:	0189      	s32i.n	a8, a1, 0
  79:	1199      	s32i.n	a9, a1, 4
  7b:	04cd      	mov.n	a12, a4
  7d:	03bd      	mov.n	a11, a3
  7f:	20a220        	or	a10, a2, a2
  82:	000081        	l32r	a8, fffc0084 <op_i32_Trunc_f64_r_s+0xfffc0084>
			82: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_s+0x28
			82: R_XTENSA_ASM_EXPAND	.text.profileOp
  85:	0008e0        	callx8	a8
  88:	0a2d      	mov.n	a2, a10
  8a:	f01d      	retw.n
  8c:	0a0c      	movi.n	a10, 0
  8e:	000081        	l32r	a8, fffc0090 <op_i32_Trunc_f64_r_s+0xfffc0090>
			8e: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_s+0x2c
			8e: R_XTENSA_ASM_EXPAND	backtrace_err
  91:	0008e0        	callx8	a8
  94:	0a2d      	mov.n	a2, a10
  96:	f01d      	retw.n

Disassembly of section .text.op_i32_Trunc_f64_r_r:

00000000 <op_i32_Trunc_f64_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06cd      	mov.n	a12, a6
   9:	07dd      	mov.n	a13, a7
   b:	06ad      	mov.n	a10, a6
   d:	20b770        	or	a11, a7, a7
  10:	000081        	l32r	a8, fffc0010 <op_i32_Trunc_f64_r_r+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_r+0x10
			10: R_XTENSA_ASM_EXPAND	__unorddf2
  13:	0008e0        	callx8	a8
  16:	04ea56        	bnez	a10, 68 <op_i32_Trunc_f64_r_r+0x68>
			16: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f64_r_r+0x68
  19:	0000c1        	l32r	a12, fffc001c <op_i32_Trunc_f64_r_r+0xfffc001c>
			19: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_r+0x8
  1c:	0000d1        	l32r	a13, fffc001c <op_i32_Trunc_f64_r_r+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_r+0xc
  1f:	06ad      	mov.n	a10, a6
  21:	07bd      	mov.n	a11, a7
  23:	000081        	l32r	a8, fffc0024 <op_i32_Trunc_f64_r_r+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_r+0x14
			23: R_XTENSA_ASM_EXPAND	__ledf2
  26:	0008e0        	callx8	a8
  29:	3b1aa6        	blti	a10, 1, 68 <op_i32_Trunc_f64_r_r+0x68>
			29: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f64_r_r+0x68
  2c:	0000d1        	l32r	a13, fffc002c <op_i32_Trunc_f64_r_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_r+0x4
  2f:	0c0c      	movi.n	a12, 0
  31:	06ad      	mov.n	a10, a6
  33:	20b770        	or	a11, a7, a7
  36:	000081        	l32r	a8, fffc0038 <op_i32_Trunc_f64_r_r+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_r+0x18
			36: R_XTENSA_ASM_EXPAND	__gedf2
  39:	0008e0        	callx8	a8
  3c:	028ad6        	bgez	a10, 68 <op_i32_Trunc_f64_r_r+0x68>
			3c: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f64_r_r+0x68
  3f:	07bd      	mov.n	a11, a7
  41:	06ad      	mov.n	a10, a6
  43:	000081        	l32r	a8, fffc0044 <op_i32_Trunc_f64_r_r+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_r+0x1c
			43: R_XTENSA_ASM_EXPAND	__fixdfsi
  46:	0008e0        	callx8	a8
  49:	000081        	l32r	a8, fffc004c <op_i32_Trunc_f64_r_r+0xfffc004c>
			49: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_r
  4c:	0aed      	mov.n	a14, a10
  4e:	31ffa0        	srai	a15, a10, 31
  51:	2189      	s32i.n	a8, a1, 8
  53:	0169      	s32i.n	a6, a1, 0
  55:	1179      	s32i.n	a7, a1, 4
  57:	04cd      	mov.n	a12, a4
  59:	03bd      	mov.n	a11, a3
  5b:	20a220        	or	a10, a2, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i32_Trunc_f64_r_r+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_r+0x20
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n
  68:	0a0c      	movi.n	a10, 0
  6a:	000081        	l32r	a8, fffc006c <op_i32_Trunc_f64_r_r+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f64_r_r+0x24
			6a: R_XTENSA_ASM_EXPAND	backtrace_err
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_u32_Trunc_f32_s_s:

00000000 <op_u32_Trunc_f32_s_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Trunc_f32_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Trunc_f32_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_u32_Trunc_f32_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_s+0x14
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	4c0c      	movi.n	a12, 4
  32:	a0bb30        	addx4	a11, a11, a3
  35:	04ad      	mov.n	a10, a4
  37:	000081        	l32r	a8, fffc0038 <op_u32_Trunc_f32_s_s+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_s+0x18
			37: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3a:	0008e0        	callx8	a8
  3d:	000503        	lsi	f0, a5, 0
  40:	1b0000        	un.s	b0, f0, f0
  43:	3d1076        	bt	b0, 84 <op_u32_Trunc_f32_s_s+0x84>
			43: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f32_s_s+0x84
  46:	000081        	l32r	a8, fffc0048 <op_u32_Trunc_f32_s_s+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_s+0x8
  49:	fa1850        	wfr	f1, a8
  4c:	6b0010        	ole.s	b0, f0, f1
  4f:	311076        	bt	b0, 84 <op_u32_Trunc_f32_s_s+0x84>
			4f: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f32_s_s+0x84
  52:	000081        	l32r	a8, fffc0054 <op_u32_Trunc_f32_s_s+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_s+0x4
  55:	fa1850        	wfr	f1, a8
  58:	6b0100        	ole.s	b0, f1, f0
  5b:	251076        	bt	b0, 84 <op_u32_Trunc_f32_s_s+0x84>
			5b: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f32_s_s+0x84
  5e:	ea8000        	utrunc.s	a8, f0, 0
  61:	d198      	l32i.n	a9, a1, 52
  63:	0a89      	s32i.n	a8, a10, 0
  65:	000081        	l32r	a8, fffc0068 <op_u32_Trunc_f32_s_s+0xfffc0068>
			65: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_s
  68:	1199      	s32i.n	a9, a1, 4
  6a:	2189      	s32i.n	a8, a1, 8
  6c:	c188      	l32i.n	a8, a1, 48
  6e:	06ed      	mov.n	a14, a6
  70:	0189      	s32i.n	a8, a1, 0
  72:	07fd      	mov.n	a15, a7
  74:	04cd      	mov.n	a12, a4
  76:	03bd      	mov.n	a11, a3
  78:	02ad      	mov.n	a10, a2
  7a:	000081        	l32r	a8, fffc007c <op_u32_Trunc_f32_s_s+0xfffc007c>
			7a: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_s+0x1c
			7a: R_XTENSA_ASM_EXPAND	.text.profileOp
  7d:	0008e0        	callx8	a8
  80:	0a2d      	mov.n	a2, a10
  82:	f01d      	retw.n
  84:	0a0c      	movi.n	a10, 0
  86:	000081        	l32r	a8, fffc0088 <op_u32_Trunc_f32_s_s+0xfffc0088>
			86: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_s+0x20
			86: R_XTENSA_ASM_EXPAND	backtrace_err
  89:	0008e0        	callx8	a8
  8c:	0a2d      	mov.n	a2, a10
  8e:	f01d      	retw.n

Disassembly of section .text.op_u32_Trunc_f32_s_r:

00000000 <op_u32_Trunc_f32_s_r>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Trunc_f32_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_r+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_Trunc_f32_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_r+0x10
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	d1b8      	l32i.n	a11, a1, 52
  23:	0a5d      	mov.n	a5, a10
  25:	c1a8      	l32i.n	a10, a1, 48
  27:	000081        	l32r	a8, fffc0028 <op_u32_Trunc_f32_s_r+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_r+0x14
			27: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2a:	0008e0        	callx8	a8
  2d:	fa0a50        	wfr	f0, a10
  30:	1b0000        	un.s	b0, f0, f0
  33:	3d1076        	bt	b0, 74 <op_u32_Trunc_f32_s_r+0x74>
			33: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f32_s_r+0x74
  36:	000081        	l32r	a8, fffc0038 <op_u32_Trunc_f32_s_r+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_r+0x8
  39:	fa1850        	wfr	f1, a8
  3c:	6b0010        	ole.s	b0, f0, f1
  3f:	311076        	bt	b0, 74 <op_u32_Trunc_f32_s_r+0x74>
			3f: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f32_s_r+0x74
  42:	000081        	l32r	a8, fffc0044 <op_u32_Trunc_f32_s_r+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_r+0x4
  45:	fa1850        	wfr	f1, a8
  48:	6b0100        	ole.s	b0, f1, f0
  4b:	251076        	bt	b0, 74 <op_u32_Trunc_f32_s_r+0x74>
			4b: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f32_s_r+0x74
  4e:	ea8000        	utrunc.s	a8, f0, 0
  51:	d198      	l32i.n	a9, a1, 52
  53:	0589      	s32i.n	a8, a5, 0
  55:	000081        	l32r	a8, fffc0058 <op_u32_Trunc_f32_s_r+0xfffc0058>
			55: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_r
  58:	1199      	s32i.n	a9, a1, 4
  5a:	2189      	s32i.n	a8, a1, 8
  5c:	c188      	l32i.n	a8, a1, 48
  5e:	06ed      	mov.n	a14, a6
  60:	0189      	s32i.n	a8, a1, 0
  62:	07fd      	mov.n	a15, a7
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_u32_Trunc_f32_s_r+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_r+0x18
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n
  74:	0a0c      	movi.n	a10, 0
  76:	000081        	l32r	a8, fffc0078 <op_u32_Trunc_f32_s_r+0xfffc0078>
			76: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_s_r+0x1c
			76: R_XTENSA_ASM_EXPAND	backtrace_err
  79:	0008e0        	callx8	a8
  7c:	0a2d      	mov.n	a2, a10
  7e:	f01d      	retw.n

Disassembly of section .text.op_u32_Trunc_f32_r_s:

00000000 <op_u32_Trunc_f32_r_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Trunc_f32_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_r_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_Trunc_f32_r_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_r_s+0x10
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	000a03        	lsi	f0, a10, 0
  24:	1b0000        	un.s	b0, f0, f0
  27:	391076        	bt	b0, 64 <op_u32_Trunc_f32_r_s+0x64>
			27: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f32_r_s+0x64
  2a:	000081        	l32r	a8, fffc002c <op_u32_Trunc_f32_r_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_r_s+0x8
  2d:	fa1850        	wfr	f1, a8
  30:	6b0010        	ole.s	b0, f0, f1
  33:	2d1076        	bt	b0, 64 <op_u32_Trunc_f32_r_s+0x64>
			33: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f32_r_s+0x64
  36:	000081        	l32r	a8, fffc0038 <op_u32_Trunc_f32_r_s+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_r_s+0x4
  39:	fa1850        	wfr	f1, a8
  3c:	6b0100        	ole.s	b0, f1, f0
  3f:	211076        	bt	b0, 64 <op_u32_Trunc_f32_r_s+0x64>
			3f: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f32_r_s+0x64
  42:	000081        	l32r	a8, fffc0044 <op_u32_Trunc_f32_r_s+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_r_s
  45:	d198      	l32i.n	a9, a1, 52
  47:	2189      	s32i.n	a8, a1, 8
  49:	c188      	l32i.n	a8, a1, 48
  4b:	eae000        	utrunc.s	a14, f0, 0
  4e:	0189      	s32i.n	a8, a1, 0
  50:	1199      	s32i.n	a9, a1, 4
  52:	0f0c      	movi.n	a15, 0
  54:	04cd      	mov.n	a12, a4
  56:	03bd      	mov.n	a11, a3
  58:	02ad      	mov.n	a10, a2
  5a:	000081        	l32r	a8, fffc005c <op_u32_Trunc_f32_r_s+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_r_s+0x14
			5a: R_XTENSA_ASM_EXPAND	.text.profileOp
  5d:	0008e0        	callx8	a8
  60:	0a2d      	mov.n	a2, a10
  62:	f01d      	retw.n
  64:	0a0c      	movi.n	a10, 0
  66:	000081        	l32r	a8, fffc0068 <op_u32_Trunc_f32_r_s+0xfffc0068>
			66: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_r_s+0x18
			66: R_XTENSA_ASM_EXPAND	backtrace_err
  69:	0008e0        	callx8	a8
  6c:	0a2d      	mov.n	a2, a10
  6e:	f01d      	retw.n

Disassembly of section .text.op_u32_Trunc_f32_r_r:

00000000 <op_u32_Trunc_f32_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06ad      	mov.n	a10, a6
   9:	07bd      	mov.n	a11, a7
   b:	000081        	l32r	a8, fffc000c <op_u32_Trunc_f32_r_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_r_r+0xc
			b: R_XTENSA_ASM_EXPAND	__truncdfsf2
   e:	0008e0        	callx8	a8
  11:	fa0a50        	wfr	f0, a10
  14:	1b0000        	un.s	b0, f0, f0
  17:	351076        	bt	b0, 50 <op_u32_Trunc_f32_r_r+0x50>
			17: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f32_r_r+0x50
  1a:	000081        	l32r	a8, fffc001c <op_u32_Trunc_f32_r_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_r_r+0x8
  1d:	fa1850        	wfr	f1, a8
  20:	6b0010        	ole.s	b0, f0, f1
  23:	291076        	bt	b0, 50 <op_u32_Trunc_f32_r_r+0x50>
			23: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f32_r_r+0x50
  26:	000081        	l32r	a8, fffc0028 <op_u32_Trunc_f32_r_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_r_r+0x4
  29:	fa1850        	wfr	f1, a8
  2c:	6b0100        	ole.s	b0, f1, f0
  2f:	1d1076        	bt	b0, 50 <op_u32_Trunc_f32_r_r+0x50>
			2f: R_XTENSA_SLOT0_OP	.text.op_u32_Trunc_f32_r_r+0x50
  32:	000081        	l32r	a8, fffc0034 <op_u32_Trunc_f32_r_r+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_r_r
  35:	eae000        	utrunc.s	a14, f0, 0
  38:	2189      	s32i.n	a8, a1, 8
  3a:	0169      	s32i.n	a6, a1, 0
  3c:	1179      	s32i.n	a7, a1, 4
  3e:	0f0c      	movi.n	a15, 0
  40:	04cd      	mov.n	a12, a4
  42:	03bd      	mov.n	a11, a3
  44:	02ad      	mov.n	a10, a2
  46:	000081        	l32r	a8, fffc0048 <op_u32_Trunc_f32_r_r+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_r_r+0x10
			46: R_XTENSA_ASM_EXPAND	.text.profileOp
  49:	0008e0        	callx8	a8
  4c:	0a2d      	mov.n	a2, a10
  4e:	f01d      	retw.n
  50:	0a0c      	movi.n	a10, 0
  52:	000081        	l32r	a8, fffc0054 <op_u32_Trunc_f32_r_r+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_u32_Trunc_f32_r_r+0x14
			52: R_XTENSA_ASM_EXPAND	backtrace_err
  55:	0008e0        	callx8	a8
  58:	0a2d      	mov.n	a2, a10
  5a:	f01d      	retw.n

Disassembly of section .text.op_i32_Trunc_f32_s_s:

00000000 <op_i32_Trunc_f32_s_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Trunc_f32_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Trunc_f32_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_i32_Trunc_f32_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_s+0x14
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	4c0c      	movi.n	a12, 4
  32:	a0bb30        	addx4	a11, a11, a3
  35:	04ad      	mov.n	a10, a4
  37:	000081        	l32r	a8, fffc0038 <op_i32_Trunc_f32_s_s+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_s+0x18
			37: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3a:	0008e0        	callx8	a8
  3d:	000503        	lsi	f0, a5, 0
  40:	1b0000        	un.s	b0, f0, f0
  43:	3d1076        	bt	b0, 84 <op_i32_Trunc_f32_s_s+0x84>
			43: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f32_s_s+0x84
  46:	000081        	l32r	a8, fffc0048 <op_i32_Trunc_f32_s_s+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_s+0x8
  49:	fa1850        	wfr	f1, a8
  4c:	6b0010        	ole.s	b0, f0, f1
  4f:	311076        	bt	b0, 84 <op_i32_Trunc_f32_s_s+0x84>
			4f: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f32_s_s+0x84
  52:	000081        	l32r	a8, fffc0054 <op_i32_Trunc_f32_s_s+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_s+0x4
  55:	fa1850        	wfr	f1, a8
  58:	6b0100        	ole.s	b0, f1, f0
  5b:	251076        	bt	b0, 84 <op_i32_Trunc_f32_s_s+0x84>
			5b: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f32_s_s+0x84
  5e:	9a8000        	trunc.s	a8, f0, 0
  61:	d198      	l32i.n	a9, a1, 52
  63:	0a89      	s32i.n	a8, a10, 0
  65:	000081        	l32r	a8, fffc0068 <op_i32_Trunc_f32_s_s+0xfffc0068>
			65: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_s
  68:	1199      	s32i.n	a9, a1, 4
  6a:	2189      	s32i.n	a8, a1, 8
  6c:	c188      	l32i.n	a8, a1, 48
  6e:	06ed      	mov.n	a14, a6
  70:	0189      	s32i.n	a8, a1, 0
  72:	07fd      	mov.n	a15, a7
  74:	04cd      	mov.n	a12, a4
  76:	03bd      	mov.n	a11, a3
  78:	02ad      	mov.n	a10, a2
  7a:	000081        	l32r	a8, fffc007c <op_i32_Trunc_f32_s_s+0xfffc007c>
			7a: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_s+0x1c
			7a: R_XTENSA_ASM_EXPAND	.text.profileOp
  7d:	0008e0        	callx8	a8
  80:	0a2d      	mov.n	a2, a10
  82:	f01d      	retw.n
  84:	0a0c      	movi.n	a10, 0
  86:	000081        	l32r	a8, fffc0088 <op_i32_Trunc_f32_s_s+0xfffc0088>
			86: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_s+0x20
			86: R_XTENSA_ASM_EXPAND	backtrace_err
  89:	0008e0        	callx8	a8
  8c:	0a2d      	mov.n	a2, a10
  8e:	f01d      	retw.n

Disassembly of section .text.op_i32_Trunc_f32_s_r:

00000000 <op_i32_Trunc_f32_s_r>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Trunc_f32_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_r+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Trunc_f32_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_r+0x10
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	d1b8      	l32i.n	a11, a1, 52
  23:	0a5d      	mov.n	a5, a10
  25:	c1a8      	l32i.n	a10, a1, 48
  27:	000081        	l32r	a8, fffc0028 <op_i32_Trunc_f32_s_r+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_r+0x14
			27: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2a:	0008e0        	callx8	a8
  2d:	fa0a50        	wfr	f0, a10
  30:	1b0000        	un.s	b0, f0, f0
  33:	3d1076        	bt	b0, 74 <op_i32_Trunc_f32_s_r+0x74>
			33: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f32_s_r+0x74
  36:	000081        	l32r	a8, fffc0038 <op_i32_Trunc_f32_s_r+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_r+0x8
  39:	fa1850        	wfr	f1, a8
  3c:	6b0010        	ole.s	b0, f0, f1
  3f:	311076        	bt	b0, 74 <op_i32_Trunc_f32_s_r+0x74>
			3f: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f32_s_r+0x74
  42:	000081        	l32r	a8, fffc0044 <op_i32_Trunc_f32_s_r+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_r+0x4
  45:	fa1850        	wfr	f1, a8
  48:	6b0100        	ole.s	b0, f1, f0
  4b:	251076        	bt	b0, 74 <op_i32_Trunc_f32_s_r+0x74>
			4b: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f32_s_r+0x74
  4e:	9a8000        	trunc.s	a8, f0, 0
  51:	d198      	l32i.n	a9, a1, 52
  53:	0589      	s32i.n	a8, a5, 0
  55:	000081        	l32r	a8, fffc0058 <op_i32_Trunc_f32_s_r+0xfffc0058>
			55: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_r
  58:	1199      	s32i.n	a9, a1, 4
  5a:	2189      	s32i.n	a8, a1, 8
  5c:	c188      	l32i.n	a8, a1, 48
  5e:	06ed      	mov.n	a14, a6
  60:	0189      	s32i.n	a8, a1, 0
  62:	07fd      	mov.n	a15, a7
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_i32_Trunc_f32_s_r+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_r+0x18
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n
  74:	0a0c      	movi.n	a10, 0
  76:	000081        	l32r	a8, fffc0078 <op_i32_Trunc_f32_s_r+0xfffc0078>
			76: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_s_r+0x1c
			76: R_XTENSA_ASM_EXPAND	backtrace_err
  79:	0008e0        	callx8	a8
  7c:	0a2d      	mov.n	a2, a10
  7e:	f01d      	retw.n

Disassembly of section .text.op_i32_Trunc_f32_r_s:

00000000 <op_i32_Trunc_f32_r_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Trunc_f32_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_r_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Trunc_f32_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_r_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000a03        	lsi	f0, a10, 0
  23:	1b0000        	un.s	b0, f0, f0
  26:	3c1076        	bt	b0, 66 <op_i32_Trunc_f32_r_s+0x66>
			26: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f32_r_s+0x66
  29:	000081        	l32r	a8, fffc002c <op_i32_Trunc_f32_r_s+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_r_s+0x8
  2c:	fa1850        	wfr	f1, a8
  2f:	6b0010        	ole.s	b0, f0, f1
  32:	301076        	bt	b0, 66 <op_i32_Trunc_f32_r_s+0x66>
			32: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f32_r_s+0x66
  35:	000081        	l32r	a8, fffc0038 <op_i32_Trunc_f32_r_s+0xfffc0038>
			35: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_r_s+0x4
  38:	fa1850        	wfr	f1, a8
  3b:	6b0100        	ole.s	b0, f1, f0
  3e:	241076        	bt	b0, 66 <op_i32_Trunc_f32_r_s+0x66>
			3e: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f32_r_s+0x66
  41:	c188      	l32i.n	a8, a1, 48
  43:	9af000        	trunc.s	a15, f0, 0
  46:	d198      	l32i.n	a9, a1, 52
  48:	0189      	s32i.n	a8, a1, 0
  4a:	000081        	l32r	a8, fffc004c <op_i32_Trunc_f32_r_s+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_r_s
  4d:	0fed      	mov.n	a14, a15
  4f:	1199      	s32i.n	a9, a1, 4
  51:	2189      	s32i.n	a8, a1, 8
  53:	31fff0        	srai	a15, a15, 31
  56:	04cd      	mov.n	a12, a4
  58:	03bd      	mov.n	a11, a3
  5a:	02ad      	mov.n	a10, a2
  5c:	000081        	l32r	a8, fffc005c <op_i32_Trunc_f32_r_s+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_r_s+0x14
			5c: R_XTENSA_ASM_EXPAND	.text.profileOp
  5f:	0008e0        	callx8	a8
  62:	0a2d      	mov.n	a2, a10
  64:	f01d      	retw.n
  66:	0a0c      	movi.n	a10, 0
  68:	000081        	l32r	a8, fffc0068 <op_i32_Trunc_f32_r_s+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_r_s+0x18
			68: R_XTENSA_ASM_EXPAND	backtrace_err
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	f01d      	retw.n

Disassembly of section .text.op_i32_Trunc_f32_r_r:

00000000 <op_i32_Trunc_f32_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06ad      	mov.n	a10, a6
   9:	07bd      	mov.n	a11, a7
   b:	000081        	l32r	a8, fffc000c <op_i32_Trunc_f32_r_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_r_r+0xc
			b: R_XTENSA_ASM_EXPAND	__truncdfsf2
   e:	0008e0        	callx8	a8
  11:	fa0a50        	wfr	f0, a10
  14:	1b0000        	un.s	b0, f0, f0
  17:	391076        	bt	b0, 54 <op_i32_Trunc_f32_r_r+0x54>
			17: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f32_r_r+0x54
  1a:	000081        	l32r	a8, fffc001c <op_i32_Trunc_f32_r_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_r_r+0x8
  1d:	fa1850        	wfr	f1, a8
  20:	6b0010        	ole.s	b0, f0, f1
  23:	2d1076        	bt	b0, 54 <op_i32_Trunc_f32_r_r+0x54>
			23: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f32_r_r+0x54
  26:	000081        	l32r	a8, fffc0028 <op_i32_Trunc_f32_r_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_r_r+0x4
  29:	fa1850        	wfr	f1, a8
  2c:	6b0100        	ole.s	b0, f1, f0
  2f:	211076        	bt	b0, 54 <op_i32_Trunc_f32_r_r+0x54>
			2f: R_XTENSA_SLOT0_OP	.text.op_i32_Trunc_f32_r_r+0x54
  32:	9af000        	trunc.s	a15, f0, 0
  35:	000081        	l32r	a8, fffc0038 <op_i32_Trunc_f32_r_r+0xfffc0038>
			35: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_r_r
  38:	0fed      	mov.n	a14, a15
  3a:	0169      	s32i.n	a6, a1, 0
  3c:	1179      	s32i.n	a7, a1, 4
  3e:	2189      	s32i.n	a8, a1, 8
  40:	31fff0        	srai	a15, a15, 31
  43:	04cd      	mov.n	a12, a4
  45:	03bd      	mov.n	a11, a3
  47:	20a220        	or	a10, a2, a2
  4a:	000081        	l32r	a8, fffc004c <op_i32_Trunc_f32_r_r+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_r_r+0x10
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n
  54:	0a0c      	movi.n	a10, 0
  56:	000081        	l32r	a8, fffc0058 <op_i32_Trunc_f32_r_r+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_i32_Trunc_f32_r_r+0x14
			56: R_XTENSA_ASM_EXPAND	backtrace_err
  59:	0008e0        	callx8	a8
  5c:	0a2d      	mov.n	a2, a10
  5e:	f01d      	retw.n

Disassembly of section .text.op_i32_Wrap_i64_s:

00000000 <op_i32_Wrap_i64_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Wrap_i64_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Wrap_i64_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Wrap_i64_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Wrap_i64_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	c188      	l32i.n	a8, a1, 48
  22:	0ae8      	l32i.n	a14, a10, 0
  24:	d198      	l32i.n	a9, a1, 52
  26:	0189      	s32i.n	a8, a1, 0
  28:	000081        	l32r	a8, fffc0028 <op_i32_Wrap_i64_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_i32_Wrap_i64_s
  2b:	1199      	s32i.n	a9, a1, 4
  2d:	2189      	s32i.n	a8, a1, 8
  2f:	0f0c      	movi.n	a15, 0
  31:	04cd      	mov.n	a12, a4
  33:	03bd      	mov.n	a11, a3
  35:	02ad      	mov.n	a10, a2
  37:	000081        	l32r	a8, fffc0038 <op_i32_Wrap_i64_s+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_i32_Wrap_i64_s+0xc
			37: R_XTENSA_ASM_EXPAND	.text.profileOp
  3a:	0008e0        	callx8	a8
  3d:	0a2d      	mov.n	a2, a10
  3f:	f01d      	retw.n

Disassembly of section .text.op_i32_Wrap_i64_r:

00000000 <op_i32_Wrap_i64_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_i32_Wrap_i64_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_i32_Wrap_i64_r
   6:	d198      	l32i.n	a9, a1, 52
   8:	2189      	s32i.n	a8, a1, 8
   a:	c188      	l32i.n	a8, a1, 48
   c:	06ed      	mov.n	a14, a6
   e:	02ad      	mov.n	a10, a2
  10:	03bd      	mov.n	a11, a3
  12:	04cd      	mov.n	a12, a4
  14:	0189      	s32i.n	a8, a1, 0
  16:	1199      	s32i.n	a9, a1, 4
  18:	0f0c      	movi.n	a15, 0
  1a:	000081        	l32r	a8, fffc001c <op_i32_Wrap_i64_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Wrap_i64_r+0x4
			1a: R_XTENSA_ASM_EXPAND	.text.profileOp
  1d:	0008e0        	callx8	a8
  20:	0a2d      	mov.n	a2, a10
  22:	f01d      	retw.n

Disassembly of section .text.op_f64_Divide_ss:

00000000 <op_f64_Divide_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Divide_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Divide_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	08e8      	l32i.n	a14, a8, 0
  24:	18f8      	l32i.n	a15, a8, 4
  26:	02bd      	mov.n	a11, a2
  28:	4c0c      	movi.n	a12, 4
  2a:	04ad      	mov.n	a10, a4
  2c:	61e9      	s32i.n	a14, a1, 24
  2e:	71f9      	s32i.n	a15, a1, 28
  30:	000081        	l32r	a8, fffc0030 <op_f64_Divide_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	8c0c      	movi.n	a12, 8
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f64_Divide_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_ss+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	000081        	l32r	a8, fffc0048 <op_f64_Divide_ss+0xfffc0048>
			45: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_ss
  48:	61c8      	l32i.n	a12, a1, 24
  4a:	2189      	s32i.n	a8, a1, 8
  4c:	1ab8      	l32i.n	a11, a10, 4
  4e:	71d8      	l32i.n	a13, a1, 28
  50:	0aa8      	l32i.n	a10, a10, 0
  52:	000081        	l32r	a8, fffc0054 <op_f64_Divide_ss+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_ss+0x14
			52: R_XTENSA_ASM_EXPAND	__divdf3
  55:	0008e0        	callx8	a8
  58:	01a9      	s32i.n	a10, a1, 0
  5a:	11b9      	s32i.n	a11, a1, 4
  5c:	06ed      	mov.n	a14, a6
  5e:	07fd      	mov.n	a15, a7
  60:	04cd      	mov.n	a12, a4
  62:	03bd      	mov.n	a11, a3
  64:	02ad      	mov.n	a10, a2
  66:	000081        	l32r	a8, fffc0068 <op_f64_Divide_ss+0xfffc0068>
			66: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_ss+0x18
			66: R_XTENSA_ASM_EXPAND	.text.profileOp
  69:	0008e0        	callx8	a8
  6c:	0a2d      	mov.n	a2, a10
  6e:	f01d      	retw.n

Disassembly of section .text.op_f64_Divide_sr:

00000000 <op_f64_Divide_sr>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Divide_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Divide_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000091        	l32r	a9, fffc0020 <op_f64_Divide_sr+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_sr
  23:	0a8d      	mov.n	a8, a10
  25:	2199      	s32i.n	a9, a1, 8
  27:	08c8      	l32i.n	a12, a8, 0
  29:	18d8      	l32i.n	a13, a8, 4
  2b:	c1a8      	l32i.n	a10, a1, 48
  2d:	d1b8      	l32i.n	a11, a1, 52
  2f:	000081        	l32r	a8, fffc0030 <op_f64_Divide_sr+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_sr+0xc
			2f: R_XTENSA_ASM_EXPAND	__divdf3
  32:	0008e0        	callx8	a8
  35:	01a9      	s32i.n	a10, a1, 0
  37:	11b9      	s32i.n	a11, a1, 4
  39:	06ed      	mov.n	a14, a6
  3b:	07fd      	mov.n	a15, a7
  3d:	04cd      	mov.n	a12, a4
  3f:	03bd      	mov.n	a11, a3
  41:	02ad      	mov.n	a10, a2
  43:	000081        	l32r	a8, fffc0044 <op_f64_Divide_sr+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_sr+0x10
			43: R_XTENSA_ASM_EXPAND	.text.profileOp
  46:	0008e0        	callx8	a8
  49:	0a2d      	mov.n	a2, a10
  4b:	f01d      	retw.n

Disassembly of section .text.op_f64_Divide_rs:

00000000 <op_f64_Divide_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Divide_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f64_Divide_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	000081        	l32r	a8, fffc0024 <op_f64_Divide_rs+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_rs
  24:	c1c8      	l32i.n	a12, a1, 48
  26:	2189      	s32i.n	a8, a1, 8
  28:	1ab8      	l32i.n	a11, a10, 4
  2a:	d1d8      	l32i.n	a13, a1, 52
  2c:	0aa8      	l32i.n	a10, a10, 0
  2e:	000081        	l32r	a8, fffc0030 <op_f64_Divide_rs+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_rs+0xc
			2e: R_XTENSA_ASM_EXPAND	__divdf3
  31:	0008e0        	callx8	a8
  34:	01a9      	s32i.n	a10, a1, 0
  36:	11b9      	s32i.n	a11, a1, 4
  38:	06ed      	mov.n	a14, a6
  3a:	07fd      	mov.n	a15, a7
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_f64_Divide_rs+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_f64_Divide_rs+0x10
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_f64_Multiply_ss:

00000000 <op_f64_Multiply_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Multiply_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Multiply_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Multiply_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Multiply_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	08e8      	l32i.n	a14, a8, 0
  24:	18f8      	l32i.n	a15, a8, 4
  26:	02bd      	mov.n	a11, a2
  28:	4c0c      	movi.n	a12, 4
  2a:	04ad      	mov.n	a10, a4
  2c:	61e9      	s32i.n	a14, a1, 24
  2e:	71f9      	s32i.n	a15, a1, 28
  30:	000081        	l32r	a8, fffc0030 <op_f64_Multiply_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f64_Multiply_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	8c0c      	movi.n	a12, 8
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f64_Multiply_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f64_Multiply_ss+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	000091        	l32r	a9, fffc0048 <op_f64_Multiply_ss+0xfffc0048>
			45: R_XTENSA_SLOT0_OP	.literal.op_f64_Multiply_ss
  48:	0a8d      	mov.n	a8, a10
  4a:	2199      	s32i.n	a9, a1, 8
  4c:	08c8      	l32i.n	a12, a8, 0
  4e:	18d8      	l32i.n	a13, a8, 4
  50:	61a8      	l32i.n	a10, a1, 24
  52:	71b8      	l32i.n	a11, a1, 28
  54:	000081        	l32r	a8, fffc0054 <op_f64_Multiply_ss+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_f64_Multiply_ss+0x14
			54: R_XTENSA_ASM_EXPAND	__muldf3
  57:	0008e0        	callx8	a8
  5a:	01a9      	s32i.n	a10, a1, 0
  5c:	11b9      	s32i.n	a11, a1, 4
  5e:	06ed      	mov.n	a14, a6
  60:	07fd      	mov.n	a15, a7
  62:	04cd      	mov.n	a12, a4
  64:	03bd      	mov.n	a11, a3
  66:	02ad      	mov.n	a10, a2
  68:	000081        	l32r	a8, fffc0068 <op_f64_Multiply_ss+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_f64_Multiply_ss+0x18
			68: R_XTENSA_ASM_EXPAND	.text.profileOp
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	f01d      	retw.n

Disassembly of section .text.op_f64_Multiply_rs:

00000000 <op_f64_Multiply_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Multiply_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Multiply_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Multiply_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Multiply_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000091        	l32r	a9, fffc0020 <op_f64_Multiply_rs+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Multiply_rs
  23:	0a8d      	mov.n	a8, a10
  25:	2199      	s32i.n	a9, a1, 8
  27:	08c8      	l32i.n	a12, a8, 0
  29:	18d8      	l32i.n	a13, a8, 4
  2b:	c1a8      	l32i.n	a10, a1, 48
  2d:	d1b8      	l32i.n	a11, a1, 52
  2f:	000081        	l32r	a8, fffc0030 <op_f64_Multiply_rs+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_f64_Multiply_rs+0xc
			2f: R_XTENSA_ASM_EXPAND	__muldf3
  32:	0008e0        	callx8	a8
  35:	01a9      	s32i.n	a10, a1, 0
  37:	11b9      	s32i.n	a11, a1, 4
  39:	06ed      	mov.n	a14, a6
  3b:	07fd      	mov.n	a15, a7
  3d:	04cd      	mov.n	a12, a4
  3f:	03bd      	mov.n	a11, a3
  41:	02ad      	mov.n	a10, a2
  43:	000081        	l32r	a8, fffc0044 <op_f64_Multiply_rs+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_f64_Multiply_rs+0x10
			43: R_XTENSA_ASM_EXPAND	.text.profileOp
  46:	0008e0        	callx8	a8
  49:	0a2d      	mov.n	a2, a10
  4b:	f01d      	retw.n

Disassembly of section .text.op_f64_Subtract_ss:

00000000 <op_f64_Subtract_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Subtract_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Subtract_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	08e8      	l32i.n	a14, a8, 0
  24:	18f8      	l32i.n	a15, a8, 4
  26:	02bd      	mov.n	a11, a2
  28:	4c0c      	movi.n	a12, 4
  2a:	04ad      	mov.n	a10, a4
  2c:	61e9      	s32i.n	a14, a1, 24
  2e:	71f9      	s32i.n	a15, a1, 28
  30:	000081        	l32r	a8, fffc0030 <op_f64_Subtract_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	8c0c      	movi.n	a12, 8
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f64_Subtract_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_ss+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	000081        	l32r	a8, fffc0048 <op_f64_Subtract_ss+0xfffc0048>
			45: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_ss
  48:	61c8      	l32i.n	a12, a1, 24
  4a:	2189      	s32i.n	a8, a1, 8
  4c:	1ab8      	l32i.n	a11, a10, 4
  4e:	71d8      	l32i.n	a13, a1, 28
  50:	0aa8      	l32i.n	a10, a10, 0
  52:	000081        	l32r	a8, fffc0054 <op_f64_Subtract_ss+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_ss+0x14
			52: R_XTENSA_ASM_EXPAND	__subdf3
  55:	0008e0        	callx8	a8
  58:	01a9      	s32i.n	a10, a1, 0
  5a:	11b9      	s32i.n	a11, a1, 4
  5c:	06ed      	mov.n	a14, a6
  5e:	07fd      	mov.n	a15, a7
  60:	04cd      	mov.n	a12, a4
  62:	03bd      	mov.n	a11, a3
  64:	02ad      	mov.n	a10, a2
  66:	000081        	l32r	a8, fffc0068 <op_f64_Subtract_ss+0xfffc0068>
			66: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_ss+0x18
			66: R_XTENSA_ASM_EXPAND	.text.profileOp
  69:	0008e0        	callx8	a8
  6c:	0a2d      	mov.n	a2, a10
  6e:	f01d      	retw.n

Disassembly of section .text.op_f64_Subtract_sr:

00000000 <op_f64_Subtract_sr>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Subtract_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Subtract_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000091        	l32r	a9, fffc0020 <op_f64_Subtract_sr+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_sr
  23:	0a8d      	mov.n	a8, a10
  25:	2199      	s32i.n	a9, a1, 8
  27:	08c8      	l32i.n	a12, a8, 0
  29:	18d8      	l32i.n	a13, a8, 4
  2b:	c1a8      	l32i.n	a10, a1, 48
  2d:	d1b8      	l32i.n	a11, a1, 52
  2f:	000081        	l32r	a8, fffc0030 <op_f64_Subtract_sr+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_sr+0xc
			2f: R_XTENSA_ASM_EXPAND	__subdf3
  32:	0008e0        	callx8	a8
  35:	01a9      	s32i.n	a10, a1, 0
  37:	11b9      	s32i.n	a11, a1, 4
  39:	06ed      	mov.n	a14, a6
  3b:	07fd      	mov.n	a15, a7
  3d:	04cd      	mov.n	a12, a4
  3f:	03bd      	mov.n	a11, a3
  41:	02ad      	mov.n	a10, a2
  43:	000081        	l32r	a8, fffc0044 <op_f64_Subtract_sr+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_sr+0x10
			43: R_XTENSA_ASM_EXPAND	.text.profileOp
  46:	0008e0        	callx8	a8
  49:	0a2d      	mov.n	a2, a10
  4b:	f01d      	retw.n

Disassembly of section .text.op_f64_Subtract_rs:

00000000 <op_f64_Subtract_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Subtract_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f64_Subtract_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	000081        	l32r	a8, fffc0024 <op_f64_Subtract_rs+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_rs
  24:	c1c8      	l32i.n	a12, a1, 48
  26:	2189      	s32i.n	a8, a1, 8
  28:	1ab8      	l32i.n	a11, a10, 4
  2a:	d1d8      	l32i.n	a13, a1, 52
  2c:	0aa8      	l32i.n	a10, a10, 0
  2e:	000081        	l32r	a8, fffc0030 <op_f64_Subtract_rs+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_rs+0xc
			2e: R_XTENSA_ASM_EXPAND	__subdf3
  31:	0008e0        	callx8	a8
  34:	01a9      	s32i.n	a10, a1, 0
  36:	11b9      	s32i.n	a11, a1, 4
  38:	06ed      	mov.n	a14, a6
  3a:	07fd      	mov.n	a15, a7
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_f64_Subtract_rs+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_f64_Subtract_rs+0x10
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_f64_Add_ss:

00000000 <op_f64_Add_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Add_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Add_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Add_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Add_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	08e8      	l32i.n	a14, a8, 0
  24:	18f8      	l32i.n	a15, a8, 4
  26:	02bd      	mov.n	a11, a2
  28:	4c0c      	movi.n	a12, 4
  2a:	04ad      	mov.n	a10, a4
  2c:	61e9      	s32i.n	a14, a1, 24
  2e:	71f9      	s32i.n	a15, a1, 28
  30:	000081        	l32r	a8, fffc0030 <op_f64_Add_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f64_Add_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	8c0c      	movi.n	a12, 8
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f64_Add_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f64_Add_ss+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	000091        	l32r	a9, fffc0048 <op_f64_Add_ss+0xfffc0048>
			45: R_XTENSA_SLOT0_OP	.literal.op_f64_Add_ss
  48:	0a8d      	mov.n	a8, a10
  4a:	2199      	s32i.n	a9, a1, 8
  4c:	08c8      	l32i.n	a12, a8, 0
  4e:	18d8      	l32i.n	a13, a8, 4
  50:	61a8      	l32i.n	a10, a1, 24
  52:	71b8      	l32i.n	a11, a1, 28
  54:	000081        	l32r	a8, fffc0054 <op_f64_Add_ss+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_f64_Add_ss+0x14
			54: R_XTENSA_ASM_EXPAND	__adddf3
  57:	0008e0        	callx8	a8
  5a:	01a9      	s32i.n	a10, a1, 0
  5c:	11b9      	s32i.n	a11, a1, 4
  5e:	06ed      	mov.n	a14, a6
  60:	07fd      	mov.n	a15, a7
  62:	04cd      	mov.n	a12, a4
  64:	03bd      	mov.n	a11, a3
  66:	02ad      	mov.n	a10, a2
  68:	000081        	l32r	a8, fffc0068 <op_f64_Add_ss+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_f64_Add_ss+0x18
			68: R_XTENSA_ASM_EXPAND	.text.profileOp
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	f01d      	retw.n

Disassembly of section .text.op_f64_Add_rs:

00000000 <op_f64_Add_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Add_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Add_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Add_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Add_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000091        	l32r	a9, fffc0020 <op_f64_Add_rs+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Add_rs
  23:	0a8d      	mov.n	a8, a10
  25:	2199      	s32i.n	a9, a1, 8
  27:	08c8      	l32i.n	a12, a8, 0
  29:	18d8      	l32i.n	a13, a8, 4
  2b:	c1a8      	l32i.n	a10, a1, 48
  2d:	d1b8      	l32i.n	a11, a1, 52
  2f:	000081        	l32r	a8, fffc0030 <op_f64_Add_rs+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_f64_Add_rs+0xc
			2f: R_XTENSA_ASM_EXPAND	__adddf3
  32:	0008e0        	callx8	a8
  35:	01a9      	s32i.n	a10, a1, 0
  37:	11b9      	s32i.n	a11, a1, 4
  39:	06ed      	mov.n	a14, a6
  3b:	07fd      	mov.n	a15, a7
  3d:	04cd      	mov.n	a12, a4
  3f:	03bd      	mov.n	a11, a3
  41:	02ad      	mov.n	a10, a2
  43:	000081        	l32r	a8, fffc0044 <op_f64_Add_rs+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_f64_Add_rs+0x10
			43: R_XTENSA_ASM_EXPAND	.text.profileOp
  46:	0008e0        	callx8	a8
  49:	0a2d      	mov.n	a2, a10
  4b:	f01d      	retw.n

Disassembly of section .text.op_f64_Negate_s:

00000000 <op_f64_Negate_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Negate_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Negate_s+0x8
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Negate_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Negate_s+0xc
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_f64_Negate_s+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Negate_s
  23:	06ed      	mov.n	a14, a6
  25:	2189      	s32i.n	a8, a1, 8
  27:	1ab8      	l32i.n	a11, a10, 4
  29:	0a88      	l32i.n	a8, a10, 0
  2b:	0000a1        	l32r	a10, fffc002c <op_f64_Negate_s+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f64_Negate_s+0x4
  2e:	0189      	s32i.n	a8, a1, 0
  30:	9baa      	add.n	a9, a11, a10
  32:	1199      	s32i.n	a9, a1, 4
  34:	07fd      	mov.n	a15, a7
  36:	04cd      	mov.n	a12, a4
  38:	03bd      	mov.n	a11, a3
  3a:	02ad      	mov.n	a10, a2
  3c:	000081        	l32r	a8, fffc003c <op_f64_Negate_s+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_f64_Negate_s+0x10
			3c: R_XTENSA_ASM_EXPAND	.text.profileOp
  3f:	0008e0        	callx8	a8
  42:	0a2d      	mov.n	a2, a10
  44:	f01d      	retw.n

Disassembly of section .text.op_f64_Negate_r:

00000000 <op_f64_Negate_r>:
   0:	006136        	entry	a1, 48
   3:	d1b8      	l32i.n	a11, a1, 52
   5:	0000d1        	l32r	a13, fffc0008 <op_f64_Negate_r+0xfffc0008>
			5: R_XTENSA_SLOT0_OP	.literal.op_f64_Negate_r+0x4
   8:	c1a8      	l32i.n	a10, a1, 48
   a:	9bda      	add.n	a9, a11, a13
   c:	0000b1        	l32r	a11, fffc000c <op_f64_Negate_r+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f64_Negate_r
   f:	0a8d      	mov.n	a8, a10
  11:	21b9      	s32i.n	a11, a1, 8
  13:	07fd      	mov.n	a15, a7
  15:	06ed      	mov.n	a14, a6
  17:	02ad      	mov.n	a10, a2
  19:	04cd      	mov.n	a12, a4
  1b:	0189      	s32i.n	a8, a1, 0
  1d:	1199      	s32i.n	a9, a1, 4
  1f:	20b330        	or	a11, a3, a3
  22:	000081        	l32r	a8, fffc0024 <op_f64_Negate_r+0xfffc0024>
			22: R_XTENSA_SLOT0_OP	.literal.op_f64_Negate_r+0x8
			22: R_XTENSA_ASM_EXPAND	.text.profileOp
  25:	0008e0        	callx8	a8
  28:	0a2d      	mov.n	a2, a10
  2a:	f01d      	retw.n

Disassembly of section .text.op_f64_Abs_s:

00000000 <op_f64_Abs_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Abs_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Abs_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Abs_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Abs_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_f64_Abs_s+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Abs_s
  23:	06ed      	mov.n	a14, a6
  25:	2189      	s32i.n	a8, a1, 8
  27:	0a88      	l32i.n	a8, a10, 0
  29:	1aa8      	l32i.n	a10, a10, 4
  2b:	07fd      	mov.n	a15, a7
  2d:	9aaa      	add.n	a9, a10, a10
  2f:	419190        	srli	a9, a9, 1
  32:	0189      	s32i.n	a8, a1, 0
  34:	1199      	s32i.n	a9, a1, 4
  36:	04cd      	mov.n	a12, a4
  38:	03bd      	mov.n	a11, a3
  3a:	02ad      	mov.n	a10, a2
  3c:	000081        	l32r	a8, fffc003c <op_f64_Abs_s+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_f64_Abs_s+0xc
			3c: R_XTENSA_ASM_EXPAND	.text.profileOp
  3f:	0008e0        	callx8	a8
  42:	0a2d      	mov.n	a2, a10
  44:	f01d      	retw.n

Disassembly of section .text.op_f64_Abs_r:

00000000 <op_f64_Abs_r>:
   0:	006136        	entry	a1, 48
   3:	d1b8      	l32i.n	a11, a1, 52
   5:	c1a8      	l32i.n	a10, a1, 48
   7:	0000d1        	l32r	a13, fffc0008 <op_f64_Abs_r+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.op_f64_Abs_r
   a:	9bba      	add.n	a9, a11, a11
   c:	0a8d      	mov.n	a8, a10
   e:	419190        	srli	a9, a9, 1
  11:	07fd      	mov.n	a15, a7
  13:	06ed      	mov.n	a14, a6
  15:	02ad      	mov.n	a10, a2
  17:	03bd      	mov.n	a11, a3
  19:	04cd      	mov.n	a12, a4
  1b:	21d9      	s32i.n	a13, a1, 8
  1d:	0189      	s32i.n	a8, a1, 0
  1f:	016192        	s32i	a9, a1, 4
  22:	000081        	l32r	a8, fffc0024 <op_f64_Abs_r+0xfffc0024>
			22: R_XTENSA_SLOT0_OP	.literal.op_f64_Abs_r+0x4
			22: R_XTENSA_ASM_EXPAND	.text.profileOp
  25:	0008e0        	callx8	a8
  28:	0a2d      	mov.n	a2, a10
  2a:	f01d      	retw.n

Disassembly of section .text.op_f32_Divide_ss:

00000000 <op_f32_Divide_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Divide_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f32_Divide_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	20a440        	or	a10, a4, a4
  29:	002852        	l32i	a5, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_f32_Divide_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_f32_Divide_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	000081        	l32r	a8, fffc0044 <op_f32_Divide_ss+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_ss
  44:	05bd      	mov.n	a11, a5
  46:	2189      	s32i.n	a8, a1, 8
  48:	0aa8      	l32i.n	a10, a10, 0
  4a:	000081        	l32r	a8, fffc004c <op_f32_Divide_ss+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_ss+0x14
			4a: R_XTENSA_ASM_EXPAND	__divsf3
  4d:	0008e0        	callx8	a8
  50:	000081        	l32r	a8, fffc0050 <op_f32_Divide_ss+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_ss+0x18
			50: R_XTENSA_ASM_EXPAND	__extendsfdf2
  53:	0008e0        	callx8	a8
  56:	01a9      	s32i.n	a10, a1, 0
  58:	11b9      	s32i.n	a11, a1, 4
  5a:	06ed      	mov.n	a14, a6
  5c:	07fd      	mov.n	a15, a7
  5e:	04cd      	mov.n	a12, a4
  60:	03bd      	mov.n	a11, a3
  62:	02ad      	mov.n	a10, a2
  64:	000081        	l32r	a8, fffc0064 <op_f32_Divide_ss+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_ss+0x1c
			64: R_XTENSA_ASM_EXPAND	.text.profileOp
  67:	0008e0        	callx8	a8
  6a:	0a2d      	mov.n	a2, a10
  6c:	f01d      	retw.n

Disassembly of section .text.op_f32_Divide_sr:

00000000 <op_f32_Divide_sr>:
   0:	006136        	entry	a1, 48
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f32_Divide_sr+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_sr+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	4c0c      	movi.n	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Divide_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	d1b8      	l32i.n	a11, a1, 52
  23:	0a5d      	mov.n	a5, a10
  25:	c1a8      	l32i.n	a10, a1, 48
  27:	000081        	l32r	a8, fffc0028 <op_f32_Divide_sr+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_sr+0xc
			27: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2a:	0008e0        	callx8	a8
  2d:	05b8      	l32i.n	a11, a5, 0
  2f:	000081        	l32r	a8, fffc0030 <op_f32_Divide_sr+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_sr+0x10
			2f: R_XTENSA_ASM_EXPAND	__divsf3
  32:	0008e0        	callx8	a8
  35:	000081        	l32r	a8, fffc0038 <op_f32_Divide_sr+0xfffc0038>
			35: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_sr
  38:	2189      	s32i.n	a8, a1, 8
  3a:	000081        	l32r	a8, fffc003c <op_f32_Divide_sr+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_sr+0x14
			3a: R_XTENSA_ASM_EXPAND	__extendsfdf2
  3d:	0008e0        	callx8	a8
  40:	01a9      	s32i.n	a10, a1, 0
  42:	11b9      	s32i.n	a11, a1, 4
  44:	06ed      	mov.n	a14, a6
  46:	07fd      	mov.n	a15, a7
  48:	04cd      	mov.n	a12, a4
  4a:	03bd      	mov.n	a11, a3
  4c:	02ad      	mov.n	a10, a2
  4e:	000081        	l32r	a8, fffc0050 <op_f32_Divide_sr+0xfffc0050>
			4e: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_sr+0x18
			4e: R_XTENSA_ASM_EXPAND	.text.profileOp
  51:	0008e0        	callx8	a8
  54:	0a2d      	mov.n	a2, a10
  56:	f01d      	retw.n

Disassembly of section .text.op_f32_Divide_rs:

00000000 <op_f32_Divide_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Divide_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	04a0c2        	movi	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_f32_Divide_rs+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_rs+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	d1b8      	l32i.n	a11, a1, 52
  24:	0a5d      	mov.n	a5, a10
  26:	c1a8      	l32i.n	a10, a1, 48
  28:	000081        	l32r	a8, fffc0028 <op_f32_Divide_rs+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_rs+0xc
			28: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2b:	0008e0        	callx8	a8
  2e:	0abd      	mov.n	a11, a10
  30:	0025a2        	l32i	a10, a5, 0
  33:	000081        	l32r	a8, fffc0034 <op_f32_Divide_rs+0xfffc0034>
			33: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_rs+0x10
			33: R_XTENSA_ASM_EXPAND	__divsf3
  36:	0008e0        	callx8	a8
  39:	000081        	l32r	a8, fffc003c <op_f32_Divide_rs+0xfffc003c>
			39: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_rs
  3c:	2189      	s32i.n	a8, a1, 8
  3e:	000081        	l32r	a8, fffc0040 <op_f32_Divide_rs+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_rs+0x14
			3e: R_XTENSA_ASM_EXPAND	__extendsfdf2
  41:	0008e0        	callx8	a8
  44:	01a9      	s32i.n	a10, a1, 0
  46:	11b9      	s32i.n	a11, a1, 4
  48:	06ed      	mov.n	a14, a6
  4a:	07fd      	mov.n	a15, a7
  4c:	04cd      	mov.n	a12, a4
  4e:	03bd      	mov.n	a11, a3
  50:	02ad      	mov.n	a10, a2
  52:	000081        	l32r	a8, fffc0054 <op_f32_Divide_rs+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_f32_Divide_rs+0x18
			52: R_XTENSA_ASM_EXPAND	.text.profileOp
  55:	0008e0        	callx8	a8
  58:	0a2d      	mov.n	a2, a10
  5a:	f01d      	retw.n

Disassembly of section .text.op_f32_Multiply_ss:

00000000 <op_f32_Multiply_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Multiply_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Multiply_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f32_Multiply_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f32_Multiply_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	000813        	lsi	f1, a8, 0
  25:	02bd      	mov.n	a11, a2
  27:	074113        	ssi	f1, a1, 28
  2a:	04a0c2        	movi	a12, 4
  2d:	20a440        	or	a10, a4, a4
  30:	000081        	l32r	a8, fffc0030 <op_f32_Multiply_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_Multiply_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f32_Multiply_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f32_Multiply_ss+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	000081        	l32r	a8, fffc0048 <op_f32_Multiply_ss+0xfffc0048>
			45: R_XTENSA_SLOT0_OP	.literal.op_f32_Multiply_ss
  48:	070113        	lsi	f1, a1, 28
  4b:	2189      	s32i.n	a8, a1, 8
  4d:	000a03        	lsi	f0, a10, 0
  50:	2a0100        	mul.s	f0, f1, f0
  53:	faa040        	rfr	a10, f0
  56:	000081        	l32r	a8, fffc0058 <op_f32_Multiply_ss+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_f32_Multiply_ss+0x14
			56: R_XTENSA_ASM_EXPAND	__extendsfdf2
  59:	0008e0        	callx8	a8
  5c:	01a9      	s32i.n	a10, a1, 0
  5e:	11b9      	s32i.n	a11, a1, 4
  60:	06ed      	mov.n	a14, a6
  62:	07fd      	mov.n	a15, a7
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_f32_Multiply_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_f32_Multiply_ss+0x18
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_f32_Multiply_rs:

00000000 <op_f32_Multiply_rs>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f32_Multiply_rs+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f32_Multiply_rs+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	4c0c      	movi.n	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Multiply_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Multiply_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	1121b2        	l32i	a11, a1, 68
  24:	205aa0        	or	a5, a10, a10
  27:	1021a2        	l32i	a10, a1, 64
  2a:	000081        	l32r	a8, fffc002c <op_f32_Multiply_rs+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_f32_Multiply_rs+0xc
			2a: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2d:	0008e0        	callx8	a8
  30:	000503        	lsi	f0, a5, 0
  33:	fa1a50        	wfr	f1, a10
  36:	2a1100        	mul.s	f1, f1, f0
  39:	000081        	l32r	a8, fffc003c <op_f32_Multiply_rs+0xfffc003c>
			39: R_XTENSA_SLOT0_OP	.literal.op_f32_Multiply_rs
  3c:	71a9      	s32i.n	a10, a1, 28
  3e:	2189      	s32i.n	a8, a1, 8
  40:	faa140        	rfr	a10, f1
  43:	000081        	l32r	a8, fffc0044 <op_f32_Multiply_rs+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_f32_Multiply_rs+0x10
			43: R_XTENSA_ASM_EXPAND	__extendsfdf2
  46:	0008e0        	callx8	a8
  49:	01a9      	s32i.n	a10, a1, 0
  4b:	11b9      	s32i.n	a11, a1, 4
  4d:	06ed      	mov.n	a14, a6
  4f:	07fd      	mov.n	a15, a7
  51:	04cd      	mov.n	a12, a4
  53:	03bd      	mov.n	a11, a3
  55:	02ad      	mov.n	a10, a2
  57:	000081        	l32r	a8, fffc0058 <op_f32_Multiply_rs+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_f32_Multiply_rs+0x14
			57: R_XTENSA_ASM_EXPAND	.text.profileOp
  5a:	0008e0        	callx8	a8
  5d:	0a2d      	mov.n	a2, a10
  5f:	f01d      	retw.n

Disassembly of section .text.op_f32_Subtract_ss:

00000000 <op_f32_Subtract_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Subtract_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f32_Subtract_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	000803        	lsi	f0, a8, 0
  25:	02bd      	mov.n	a11, a2
  27:	074103        	ssi	f0, a1, 28
  2a:	04a0c2        	movi	a12, 4
  2d:	20a440        	or	a10, a4, a4
  30:	000081        	l32r	a8, fffc0030 <op_f32_Subtract_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f32_Subtract_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_ss+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	000081        	l32r	a8, fffc0048 <op_f32_Subtract_ss+0xfffc0048>
			45: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_ss
  48:	070103        	lsi	f0, a1, 28
  4b:	2189      	s32i.n	a8, a1, 8
  4d:	000a13        	lsi	f1, a10, 0
  50:	1a1100        	sub.s	f1, f1, f0
  53:	faa140        	rfr	a10, f1
  56:	000081        	l32r	a8, fffc0058 <op_f32_Subtract_ss+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_ss+0x14
			56: R_XTENSA_ASM_EXPAND	__extendsfdf2
  59:	0008e0        	callx8	a8
  5c:	01a9      	s32i.n	a10, a1, 0
  5e:	11b9      	s32i.n	a11, a1, 4
  60:	06ed      	mov.n	a14, a6
  62:	07fd      	mov.n	a15, a7
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_f32_Subtract_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_ss+0x18
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_f32_Subtract_sr:

00000000 <op_f32_Subtract_sr>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f32_Subtract_sr+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_sr+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	4c0c      	movi.n	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Subtract_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	1121b2        	l32i	a11, a1, 68
  24:	205aa0        	or	a5, a10, a10
  27:	1021a2        	l32i	a10, a1, 64
  2a:	000081        	l32r	a8, fffc002c <op_f32_Subtract_sr+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_sr+0xc
			2a: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2d:	0008e0        	callx8	a8
  30:	000503        	lsi	f0, a5, 0
  33:	fa1a50        	wfr	f1, a10
  36:	1a1100        	sub.s	f1, f1, f0
  39:	000081        	l32r	a8, fffc003c <op_f32_Subtract_sr+0xfffc003c>
			39: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_sr
  3c:	71a9      	s32i.n	a10, a1, 28
  3e:	2189      	s32i.n	a8, a1, 8
  40:	faa140        	rfr	a10, f1
  43:	000081        	l32r	a8, fffc0044 <op_f32_Subtract_sr+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_sr+0x10
			43: R_XTENSA_ASM_EXPAND	__extendsfdf2
  46:	0008e0        	callx8	a8
  49:	01a9      	s32i.n	a10, a1, 0
  4b:	11b9      	s32i.n	a11, a1, 4
  4d:	06ed      	mov.n	a14, a6
  4f:	07fd      	mov.n	a15, a7
  51:	04cd      	mov.n	a12, a4
  53:	03bd      	mov.n	a11, a3
  55:	02ad      	mov.n	a10, a2
  57:	000081        	l32r	a8, fffc0058 <op_f32_Subtract_sr+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_sr+0x14
			57: R_XTENSA_ASM_EXPAND	.text.profileOp
  5a:	0008e0        	callx8	a8
  5d:	0a2d      	mov.n	a2, a10
  5f:	f01d      	retw.n

Disassembly of section .text.op_f32_Subtract_rs:

00000000 <op_f32_Subtract_rs>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f32_Subtract_rs+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_rs+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	4c0c      	movi.n	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Subtract_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	1121b2        	l32i	a11, a1, 68
  24:	205aa0        	or	a5, a10, a10
  27:	1021a2        	l32i	a10, a1, 64
  2a:	000081        	l32r	a8, fffc002c <op_f32_Subtract_rs+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_rs+0xc
			2a: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2d:	0008e0        	callx8	a8
  30:	000503        	lsi	f0, a5, 0
  33:	fa1a50        	wfr	f1, a10
  36:	1a1010        	sub.s	f1, f0, f1
  39:	000081        	l32r	a8, fffc003c <op_f32_Subtract_rs+0xfffc003c>
			39: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_rs
  3c:	71a9      	s32i.n	a10, a1, 28
  3e:	2189      	s32i.n	a8, a1, 8
  40:	faa140        	rfr	a10, f1
  43:	000081        	l32r	a8, fffc0044 <op_f32_Subtract_rs+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_rs+0x10
			43: R_XTENSA_ASM_EXPAND	__extendsfdf2
  46:	0008e0        	callx8	a8
  49:	01a9      	s32i.n	a10, a1, 0
  4b:	11b9      	s32i.n	a11, a1, 4
  4d:	06ed      	mov.n	a14, a6
  4f:	07fd      	mov.n	a15, a7
  51:	04cd      	mov.n	a12, a4
  53:	03bd      	mov.n	a11, a3
  55:	02ad      	mov.n	a10, a2
  57:	000081        	l32r	a8, fffc0058 <op_f32_Subtract_rs+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_f32_Subtract_rs+0x14
			57: R_XTENSA_ASM_EXPAND	.text.profileOp
  5a:	0008e0        	callx8	a8
  5d:	0a2d      	mov.n	a2, a10
  5f:	f01d      	retw.n

Disassembly of section .text.op_f32_Add_ss:

00000000 <op_f32_Add_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Add_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Add_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f32_Add_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f32_Add_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	000813        	lsi	f1, a8, 0
  25:	02bd      	mov.n	a11, a2
  27:	074113        	ssi	f1, a1, 28
  2a:	04a0c2        	movi	a12, 4
  2d:	20a440        	or	a10, a4, a4
  30:	000081        	l32r	a8, fffc0030 <op_f32_Add_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_Add_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f32_Add_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f32_Add_ss+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	000081        	l32r	a8, fffc0048 <op_f32_Add_ss+0xfffc0048>
			45: R_XTENSA_SLOT0_OP	.literal.op_f32_Add_ss
  48:	070113        	lsi	f1, a1, 28
  4b:	2189      	s32i.n	a8, a1, 8
  4d:	000a03        	lsi	f0, a10, 0
  50:	0a0100        	add.s	f0, f1, f0
  53:	faa040        	rfr	a10, f0
  56:	000081        	l32r	a8, fffc0058 <op_f32_Add_ss+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_f32_Add_ss+0x14
			56: R_XTENSA_ASM_EXPAND	__extendsfdf2
  59:	0008e0        	callx8	a8
  5c:	01a9      	s32i.n	a10, a1, 0
  5e:	11b9      	s32i.n	a11, a1, 4
  60:	06ed      	mov.n	a14, a6
  62:	07fd      	mov.n	a15, a7
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_f32_Add_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_f32_Add_ss+0x18
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_f32_Add_rs:

00000000 <op_f32_Add_rs>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f32_Add_rs+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f32_Add_rs+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	4c0c      	movi.n	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Add_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Add_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	1121b2        	l32i	a11, a1, 68
  24:	205aa0        	or	a5, a10, a10
  27:	1021a2        	l32i	a10, a1, 64
  2a:	000081        	l32r	a8, fffc002c <op_f32_Add_rs+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_f32_Add_rs+0xc
			2a: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2d:	0008e0        	callx8	a8
  30:	000503        	lsi	f0, a5, 0
  33:	fa1a50        	wfr	f1, a10
  36:	0a1100        	add.s	f1, f1, f0
  39:	000081        	l32r	a8, fffc003c <op_f32_Add_rs+0xfffc003c>
			39: R_XTENSA_SLOT0_OP	.literal.op_f32_Add_rs
  3c:	71a9      	s32i.n	a10, a1, 28
  3e:	2189      	s32i.n	a8, a1, 8
  40:	faa140        	rfr	a10, f1
  43:	000081        	l32r	a8, fffc0044 <op_f32_Add_rs+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_f32_Add_rs+0x10
			43: R_XTENSA_ASM_EXPAND	__extendsfdf2
  46:	0008e0        	callx8	a8
  49:	01a9      	s32i.n	a10, a1, 0
  4b:	11b9      	s32i.n	a11, a1, 4
  4d:	06ed      	mov.n	a14, a6
  4f:	07fd      	mov.n	a15, a7
  51:	04cd      	mov.n	a12, a4
  53:	03bd      	mov.n	a11, a3
  55:	02ad      	mov.n	a10, a2
  57:	000081        	l32r	a8, fffc0058 <op_f32_Add_rs+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_f32_Add_rs+0x14
			57: R_XTENSA_ASM_EXPAND	.text.profileOp
  5a:	0008e0        	callx8	a8
  5d:	0a2d      	mov.n	a2, a10
  5f:	f01d      	retw.n

Disassembly of section .text.op_f32_Negate_s:

00000000 <op_f32_Negate_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Negate_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Negate_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f32_Negate_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f32_Negate_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_f32_Negate_s+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f32_Negate_s
  23:	2189      	s32i.n	a8, a1, 8
  25:	000a03        	lsi	f0, a10, 0
  28:	fa0060        	neg.s	f0, f0
  2b:	faa040        	rfr	a10, f0
  2e:	000081        	l32r	a8, fffc0030 <op_f32_Negate_s+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f32_Negate_s+0xc
			2e: R_XTENSA_ASM_EXPAND	__extendsfdf2
  31:	0008e0        	callx8	a8
  34:	01a9      	s32i.n	a10, a1, 0
  36:	11b9      	s32i.n	a11, a1, 4
  38:	06ed      	mov.n	a14, a6
  3a:	07fd      	mov.n	a15, a7
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_f32_Negate_s+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_f32_Negate_s+0x10
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_f32_Negate_r:

00000000 <op_f32_Negate_r>:
   0:	008136        	entry	a1, 64
   3:	1121b2        	l32i	a11, a1, 68
   6:	1021a2        	l32i	a10, a1, 64
   9:	000081        	l32r	a8, fffc000c <op_f32_Negate_r+0xfffc000c>
			9: R_XTENSA_SLOT0_OP	.literal.op_f32_Negate_r+0x4
			9: R_XTENSA_ASM_EXPAND	__truncdfsf2
   c:	0008e0        	callx8	a8
   f:	000081        	l32r	a8, fffc0010 <op_f32_Negate_r+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_f32_Negate_r
  12:	fa0a50        	wfr	f0, a10
  15:	fa0060        	neg.s	f0, f0
  18:	faa040        	rfr	a10, f0
  1b:	026182        	s32i	a8, a1, 8
  1e:	000081        	l32r	a8, fffc0020 <op_f32_Negate_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_f32_Negate_r+0x8
			1e: R_XTENSA_ASM_EXPAND	__extendsfdf2
  21:	0008e0        	callx8	a8
  24:	01a9      	s32i.n	a10, a1, 0
  26:	11b9      	s32i.n	a11, a1, 4
  28:	06ed      	mov.n	a14, a6
  2a:	07fd      	mov.n	a15, a7
  2c:	04cd      	mov.n	a12, a4
  2e:	03bd      	mov.n	a11, a3
  30:	02ad      	mov.n	a10, a2
  32:	000081        	l32r	a8, fffc0034 <op_f32_Negate_r+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_f32_Negate_r+0xc
			32: R_XTENSA_ASM_EXPAND	.text.profileOp
  35:	0008e0        	callx8	a8
  38:	0a2d      	mov.n	a2, a10
  3a:	f01d      	retw.n

Disassembly of section .text.op_f32_Abs_s:

00000000 <op_f32_Abs_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Abs_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Abs_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f32_Abs_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f32_Abs_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_f32_Abs_s+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f32_Abs_s
  23:	2189      	s32i.n	a8, a1, 8
  25:	000a03        	lsi	f0, a10, 0
  28:	fa0010        	abs.s	f0, f0
  2b:	faa040        	rfr	a10, f0
  2e:	000081        	l32r	a8, fffc0030 <op_f32_Abs_s+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f32_Abs_s+0xc
			2e: R_XTENSA_ASM_EXPAND	__extendsfdf2
  31:	0008e0        	callx8	a8
  34:	01a9      	s32i.n	a10, a1, 0
  36:	11b9      	s32i.n	a11, a1, 4
  38:	06ed      	mov.n	a14, a6
  3a:	07fd      	mov.n	a15, a7
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_f32_Abs_s+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_f32_Abs_s+0x10
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_f32_Abs_r:

00000000 <op_f32_Abs_r>:
   0:	008136        	entry	a1, 64
   3:	1121b2        	l32i	a11, a1, 68
   6:	1021a2        	l32i	a10, a1, 64
   9:	000081        	l32r	a8, fffc000c <op_f32_Abs_r+0xfffc000c>
			9: R_XTENSA_SLOT0_OP	.literal.op_f32_Abs_r+0x4
			9: R_XTENSA_ASM_EXPAND	__truncdfsf2
   c:	0008e0        	callx8	a8
   f:	000081        	l32r	a8, fffc0010 <op_f32_Abs_r+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_f32_Abs_r
  12:	fa0a50        	wfr	f0, a10
  15:	fa0010        	abs.s	f0, f0
  18:	faa040        	rfr	a10, f0
  1b:	026182        	s32i	a8, a1, 8
  1e:	000081        	l32r	a8, fffc0020 <op_f32_Abs_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_f32_Abs_r+0x8
			1e: R_XTENSA_ASM_EXPAND	__extendsfdf2
  21:	0008e0        	callx8	a8
  24:	01a9      	s32i.n	a10, a1, 0
  26:	11b9      	s32i.n	a11, a1, 4
  28:	06ed      	mov.n	a14, a6
  2a:	07fd      	mov.n	a15, a7
  2c:	04cd      	mov.n	a12, a4
  2e:	03bd      	mov.n	a11, a3
  30:	02ad      	mov.n	a10, a2
  32:	000081        	l32r	a8, fffc0034 <op_f32_Abs_r+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_f32_Abs_r+0xc
			32: R_XTENSA_ASM_EXPAND	.text.profileOp
  35:	0008e0        	callx8	a8
  38:	0a2d      	mov.n	a2, a10
  3a:	f01d      	retw.n

Disassembly of section .text.op_u64_Rotr_ss:

00000000 <op_u64_Rotr_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Rotr_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotr_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_Rotr_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotr_ss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002872        	l32i	a7, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_u64_Rotr_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotr_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_u64_Rotr_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotr_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	54b070        	extui	a11, a7, 0, 6
  44:	0ad8      	l32i.n	a13, a10, 0
  46:	60c0b0        	neg	a12, a11
  49:	1a88      	l32i.n	a8, a10, 4
  4b:	f97c      	movi.n	a9, -1
  4d:	54a0c0        	extui	a10, a12, 0, 6
  50:	30eb90        	xor	a14, a11, a9
  53:	41f1d0        	srli	a15, a13, 1
  56:	309a90        	xor	a9, a10, a9
  59:	400900        	ssr	a9
  5c:	9190f0        	srl	a9, a15
  5f:	7199      	s32i.n	a9, a1, 28
  61:	588a      	add.n	a5, a8, a8
  63:	401e00        	ssl	a14
  66:	a15500        	sll	a5, a5
  69:	401a00        	ssl	a10
  6c:	a1f800        	sll	a15, a8
  6f:	400b00        	ssr	a11
  72:	91e0d0        	srl	a14, a13
  75:	400b00        	ssr	a11
  78:	918080        	srl	a8, a8
  7b:	71b8      	l32i.n	a11, a1, 28
  7d:	062c      	movi.n	a6, 32
  7f:	109760        	and	a9, a7, a6
  82:	10cc60        	and	a12, a12, a6
  85:	070c      	movi.n	a7, 0
  87:	401a00        	ssl	a10
  8a:	a1ad00        	sll	a10, a13
  8d:	20e5e0        	or	a14, a5, a14
  90:	20fbf0        	or	a15, a11, a15
  93:	1121d2        	l32i	a13, a1, 68
  96:	93e890        	movnez	a14, a8, a9
  99:	93fac0        	movnez	a15, a10, a12
  9c:	938790        	movnez	a8, a7, a9
  9f:	93a7c0        	movnez	a10, a7, a12
  a2:	000091        	l32r	a9, fffc00a4 <op_u64_Rotr_ss+0xfffc00a4>
			a2: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotr_ss
  a5:	1021c2        	l32i	a12, a1, 64
  a8:	20eea0        	or	a14, a14, a10
  ab:	01c9      	s32i.n	a12, a1, 0
  ad:	2199      	s32i.n	a9, a1, 8
  af:	11d9      	s32i.n	a13, a1, 4
  b1:	20f8f0        	or	a15, a8, a15
  b4:	04cd      	mov.n	a12, a4
  b6:	03bd      	mov.n	a11, a3
  b8:	02ad      	mov.n	a10, a2
  ba:	000081        	l32r	a8, fffc00bc <op_u64_Rotr_ss+0xfffc00bc>
			ba: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotr_ss+0x14
			ba: R_XTENSA_ASM_EXPAND	.text.profileOp
  bd:	0008e0        	callx8	a8
  c0:	0a2d      	mov.n	a2, a10
  c2:	f01d      	retw.n

Disassembly of section .text.op_u64_Rotr_sr:

00000000 <op_u64_Rotr_sr>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Rotr_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotr_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_Rotr_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotr_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0ab8      	l32i.n	a11, a10, 0
  22:	fd7c      	movi.n	a13, -1
  24:	5450b0        	extui	a5, a11, 0, 6
  27:	60a050        	neg	a10, a5
  2a:	5480a0        	extui	a8, a10, 0, 6
  2d:	3095d0        	xor	a9, a5, a13
  30:	41f160        	srli	a15, a6, 1
  33:	30d8d0        	xor	a13, a8, a13
  36:	400d00        	ssr	a13
  39:	91d0f0        	srl	a13, a15
  3c:	c77a      	add.n	a12, a7, a7
  3e:	71d9      	s32i.n	a13, a1, 28
  40:	401900        	ssl	a9
  43:	a1cc00        	sll	a12, a12
  46:	400500        	ssr	a5
  49:	919060        	srl	a9, a6
  4c:	209c90        	or	a9, a12, a9
  4f:	71c8      	l32i.n	a12, a1, 28
  51:	0e2c      	movi.n	a14, 32
  53:	401800        	ssl	a8
  56:	a1f700        	sll	a15, a7
  59:	10bbe0        	and	a11, a11, a14
  5c:	10aae0        	and	a10, a10, a14
  5f:	0d0c      	movi.n	a13, 0
  61:	400500        	ssr	a5
  64:	917070        	srl	a7, a7
  67:	401800        	ssl	a8
  6a:	a18600        	sll	a8, a6
  6d:	20fcf0        	or	a15, a12, a15
  70:	9397b0        	movnez	a9, a7, a11
  73:	1021c2        	l32i	a12, a1, 64
  76:	937db0        	movnez	a7, a13, a11
  79:	93f8a0        	movnez	a15, a8, a10
  7c:	938da0        	movnez	a8, a13, a10
  7f:	0000a1        	l32r	a10, fffc0080 <op_u64_Rotr_sr+0xfffc0080>
			7f: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotr_sr
  82:	1121d2        	l32i	a13, a1, 68
  85:	21a9      	s32i.n	a10, a1, 8
  87:	01c9      	s32i.n	a12, a1, 0
  89:	11d9      	s32i.n	a13, a1, 4
  8b:	20e890        	or	a14, a8, a9
  8e:	20ff70        	or	a15, a15, a7
  91:	04cd      	mov.n	a12, a4
  93:	03bd      	mov.n	a11, a3
  95:	02ad      	mov.n	a10, a2
  97:	000081        	l32r	a8, fffc0098 <op_u64_Rotr_sr+0xfffc0098>
			97: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotr_sr+0xc
			97: R_XTENSA_ASM_EXPAND	.text.profileOp
  9a:	0008e0        	callx8	a8
  9d:	0a2d      	mov.n	a2, a10
  9f:	f01d      	retw.n

Disassembly of section .text.op_u64_Rotr_rs:

00000000 <op_u64_Rotr_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Rotr_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotr_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_Rotr_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotr_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	549060        	extui	a9, a6, 0, 6
  24:	0ae8      	l32i.n	a14, a10, 0
  26:	60c090        	neg	a12, a9
  29:	1a88      	l32i.n	a8, a10, 4
  2b:	ff7c      	movi.n	a15, -1
  2d:	54a0c0        	extui	a10, a12, 0, 6
  30:	30b9f0        	xor	a11, a9, a15
  33:	4171e0        	srli	a7, a14, 1
  36:	30faf0        	xor	a15, a10, a15
  39:	400f00        	ssr	a15
  3c:	91f070        	srl	a15, a7
  3f:	71f9      	s32i.n	a15, a1, 28
  41:	588a      	add.n	a5, a8, a8
  43:	401b00        	ssl	a11
  46:	a15500        	sll	a5, a5
  49:	401a00        	ssl	a10
  4c:	a1f800        	sll	a15, a8
  4f:	400900        	ssr	a9
  52:	91b0e0        	srl	a11, a14
  55:	400900        	ssr	a9
  58:	918080        	srl	a8, a8
  5b:	7198      	l32i.n	a9, a1, 28
  5d:	0d2c      	movi.n	a13, 32
  5f:	10ccd0        	and	a12, a12, a13
  62:	070c      	movi.n	a7, 0
  64:	401a00        	ssl	a10
  67:	a1ee00        	sll	a14, a14
  6a:	20f9f0        	or	a15, a9, a15
  6d:	1066d0        	and	a6, a6, a13
  70:	000091        	l32r	a9, fffc0070 <op_u64_Rotr_rs+0xfffc0070>
			70: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotr_rs
  73:	1121d2        	l32i	a13, a1, 68
  76:	93fec0        	movnez	a15, a14, a12
  79:	20b5b0        	or	a11, a5, a11
  7c:	93e7c0        	movnez	a14, a7, a12
  7f:	1021c2        	l32i	a12, a1, 64
  82:	93b860        	movnez	a11, a8, a6
  85:	938760        	movnez	a8, a7, a6
  88:	01c9      	s32i.n	a12, a1, 0
  8a:	20eeb0        	or	a14, a14, a11
  8d:	2199      	s32i.n	a9, a1, 8
  8f:	11d9      	s32i.n	a13, a1, 4
  91:	20ff80        	or	a15, a15, a8
  94:	04cd      	mov.n	a12, a4
  96:	03bd      	mov.n	a11, a3
  98:	02ad      	mov.n	a10, a2
  9a:	000081        	l32r	a8, fffc009c <op_u64_Rotr_rs+0xfffc009c>
			9a: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotr_rs+0xc
			9a: R_XTENSA_ASM_EXPAND	.text.profileOp
  9d:	0008e0        	callx8	a8
  a0:	0a2d      	mov.n	a2, a10
  a2:	f01d      	retw.n

Disassembly of section .text.op_u64_Rotl_ss:

00000000 <op_u64_Rotl_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Rotl_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotl_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_Rotl_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotl_ss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002872        	l32i	a7, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_u64_Rotl_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotl_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_u64_Rotl_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotl_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	54b070        	extui	a11, a7, 0, 6
  44:	0a98      	l32i.n	a9, a10, 0
  46:	1af8      	l32i.n	a15, a10, 4
  48:	60a0b0        	neg	a10, a11
  4b:	5480a0        	extui	a8, a10, 0, 6
  4e:	fe7c      	movi.n	a14, -1
  50:	30cbe0        	xor	a12, a11, a14
  53:	6ffa      	add.n	a6, a15, a15
  55:	30e8e0        	xor	a14, a8, a14
  58:	401e00        	ssl	a14
  5b:	a1e600        	sll	a14, a6
  5e:	71e9      	s32i.n	a14, a1, 28
  60:	415190        	srli	a5, a9, 1
  63:	400c00        	ssr	a12
  66:	915050        	srl	a5, a5
  69:	400800        	ssr	a8
  6c:	91e090        	srl	a14, a9
  6f:	401b00        	ssl	a11
  72:	a1cf00        	sll	a12, a15
  75:	400800        	ssr	a8
  78:	91f0f0        	srl	a15, a15
  7b:	7188      	l32i.n	a8, a1, 28
  7d:	0d2c      	movi.n	a13, 32
  7f:	10aad0        	and	a10, a10, a13
  82:	060c      	movi.n	a6, 0
  84:	20e8e0        	or	a14, a8, a14
  87:	93efa0        	movnez	a14, a15, a10
  8a:	93f6a0        	movnez	a15, a6, a10
  8d:	0000a1        	l32r	a10, fffc0090 <op_u64_Rotl_ss+0xfffc0090>
			8d: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotl_ss
  90:	1077d0        	and	a7, a7, a13
  93:	401b00        	ssl	a11
  96:	a19900        	sll	a9, a9
  99:	21a9      	s32i.n	a10, a1, 8
  9b:	1121b2        	l32i	a11, a1, 68
  9e:	1021a2        	l32i	a10, a1, 64
  a1:	20c5c0        	or	a12, a5, a12
  a4:	93c970        	movnez	a12, a9, a7
  a7:	939670        	movnez	a9, a6, a7
  aa:	01a9      	s32i.n	a10, a1, 0
  ac:	11b9      	s32i.n	a11, a1, 4
  ae:	20fcf0        	or	a15, a12, a15
  b1:	20e9e0        	or	a14, a9, a14
  b4:	04cd      	mov.n	a12, a4
  b6:	03bd      	mov.n	a11, a3
  b8:	02ad      	mov.n	a10, a2
  ba:	000081        	l32r	a8, fffc00bc <op_u64_Rotl_ss+0xfffc00bc>
			ba: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotl_ss+0x14
			ba: R_XTENSA_ASM_EXPAND	.text.profileOp
  bd:	0008e0        	callx8	a8
  c0:	0a2d      	mov.n	a2, a10
  c2:	f01d      	retw.n

Disassembly of section .text.op_u64_Rotl_sr:

00000000 <op_u64_Rotl_sr>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Rotl_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotl_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_Rotl_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotl_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0ab8      	l32i.n	a11, a10, 0
  22:	fd7c      	movi.n	a13, -1
  24:	5450b0        	extui	a5, a11, 0, 6
  27:	60a050        	neg	a10, a5
  2a:	5480a0        	extui	a8, a10, 0, 6
  2d:	3095d0        	xor	a9, a5, a13
  30:	e77a      	add.n	a14, a7, a7
  32:	30d8d0        	xor	a13, a8, a13
  35:	401d00        	ssl	a13
  38:	a1de00        	sll	a13, a14
  3b:	41c160        	srli	a12, a6, 1
  3e:	71d9      	s32i.n	a13, a1, 28
  40:	400900        	ssr	a9
  43:	91c0c0        	srl	a12, a12
  46:	401500        	ssl	a5
  49:	a19700        	sll	a9, a7
  4c:	209c90        	or	a9, a12, a9
  4f:	71c8      	l32i.n	a12, a1, 28
  51:	0f2c      	movi.n	a15, 32
  53:	400800        	ssr	a8
  56:	91e060        	srl	a14, a6
  59:	10bbf0        	and	a11, a11, a15
  5c:	10aaf0        	and	a10, a10, a15
  5f:	0d0c      	movi.n	a13, 0
  61:	401500        	ssl	a5
  64:	a16600        	sll	a6, a6
  67:	400800        	ssr	a8
  6a:	918070        	srl	a8, a7
  6d:	20ece0        	or	a14, a12, a14
  70:	9396b0        	movnez	a9, a6, a11
  73:	1021c2        	l32i	a12, a1, 64
  76:	936db0        	movnez	a6, a13, a11
  79:	93e8a0        	movnez	a14, a8, a10
  7c:	938da0        	movnez	a8, a13, a10
  7f:	0000a1        	l32r	a10, fffc0080 <op_u64_Rotl_sr+0xfffc0080>
			7f: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotl_sr
  82:	1121d2        	l32i	a13, a1, 68
  85:	21a9      	s32i.n	a10, a1, 8
  87:	01c9      	s32i.n	a12, a1, 0
  89:	11d9      	s32i.n	a13, a1, 4
  8b:	20ee60        	or	a14, a14, a6
  8e:	20f890        	or	a15, a8, a9
  91:	04cd      	mov.n	a12, a4
  93:	03bd      	mov.n	a11, a3
  95:	02ad      	mov.n	a10, a2
  97:	000081        	l32r	a8, fffc0098 <op_u64_Rotl_sr+0xfffc0098>
			97: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotl_sr+0xc
			97: R_XTENSA_ASM_EXPAND	.text.profileOp
  9a:	0008e0        	callx8	a8
  9d:	0a2d      	mov.n	a2, a10
  9f:	f01d      	retw.n

Disassembly of section .text.op_u64_Rotl_rs:

00000000 <op_u64_Rotl_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Rotl_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotl_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_Rotl_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotl_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	54c060        	extui	a12, a6, 0, 6
  24:	0a98      	l32i.n	a9, a10, 0
  26:	1af8      	l32i.n	a15, a10, 4
  28:	60a0c0        	neg	a10, a12
  2b:	5480a0        	extui	a8, a10, 0, 6
  2e:	fe7c      	movi.n	a14, -1
  30:	30bce0        	xor	a11, a12, a14
  33:	7ffa      	add.n	a7, a15, a15
  35:	30e8e0        	xor	a14, a8, a14
  38:	401e00        	ssl	a14
  3b:	a1e700        	sll	a14, a7
  3e:	71e9      	s32i.n	a14, a1, 28
  40:	415190        	srli	a5, a9, 1
  43:	400b00        	ssr	a11
  46:	915050        	srl	a5, a5
  49:	400800        	ssr	a8
  4c:	91e090        	srl	a14, a9
  4f:	401c00        	ssl	a12
  52:	a1bf00        	sll	a11, a15
  55:	400800        	ssr	a8
  58:	91f0f0        	srl	a15, a15
  5b:	7188      	l32i.n	a8, a1, 28
  5d:	0d2c      	movi.n	a13, 32
  5f:	10aad0        	and	a10, a10, a13
  62:	070c      	movi.n	a7, 0
  64:	20e8e0        	or	a14, a8, a14
  67:	1066d0        	and	a6, a6, a13
  6a:	401c00        	ssl	a12
  6d:	a19900        	sll	a9, a9
  70:	1121d2        	l32i	a13, a1, 68
  73:	1021c2        	l32i	a12, a1, 64
  76:	93efa0        	movnez	a14, a15, a10
  79:	20b5b0        	or	a11, a5, a11
  7c:	93f7a0        	movnez	a15, a7, a10
  7f:	0000a1        	l32r	a10, fffc0080 <op_u64_Rotl_rs+0xfffc0080>
			7f: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotl_rs
  82:	93b960        	movnez	a11, a9, a6
  85:	939760        	movnez	a9, a7, a6
  88:	21a9      	s32i.n	a10, a1, 8
  8a:	01c9      	s32i.n	a12, a1, 0
  8c:	20ffb0        	or	a15, a15, a11
  8f:	11d9      	s32i.n	a13, a1, 4
  91:	20ee90        	or	a14, a14, a9
  94:	04cd      	mov.n	a12, a4
  96:	03bd      	mov.n	a11, a3
  98:	02ad      	mov.n	a10, a2
  9a:	000081        	l32r	a8, fffc009c <op_u64_Rotl_rs+0xfffc009c>
			9a: R_XTENSA_SLOT0_OP	.literal.op_u64_Rotl_rs+0xc
			9a: R_XTENSA_ASM_EXPAND	.text.profileOp
  9d:	0008e0        	callx8	a8
  a0:	0a2d      	mov.n	a2, a10
  a2:	f01d      	retw.n

Disassembly of section .text.op_u64_ShiftRight_ss:

00000000 <op_u64_ShiftRight_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_ShiftRight_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftRight_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_ShiftRight_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftRight_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_u64_ShiftRight_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftRight_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	8c0c      	movi.n	a12, 8
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_u64_ShiftRight_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftRight_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	1af8      	l32i.n	a15, a10, 4
  42:	0ae8      	l32i.n	a14, a10, 0
  44:	549070        	extui	a9, a7, 0, 6
  47:	fa7c      	movi.n	a10, -1
  49:	30a9a0        	xor	a10, a9, a10
  4c:	8ffa      	add.n	a8, a15, a15
  4e:	401a00        	ssl	a10
  51:	a18800        	sll	a8, a8
  54:	400900        	ssr	a9
  57:	91e0e0        	srl	a14, a14
  5a:	0a2c      	movi.n	a10, 32
  5c:	1077a0        	and	a7, a7, a10
  5f:	400900        	ssr	a9
  62:	91f0f0        	srl	a15, a15
  65:	20e8e0        	or	a14, a8, a14
  68:	080c      	movi.n	a8, 0
  6a:	93ef70        	movnez	a14, a15, a7
  6d:	93f870        	movnez	a15, a8, a7
  70:	000081        	l32r	a8, fffc0070 <op_u64_ShiftRight_ss+0xfffc0070>
			70: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftRight_ss
  73:	d198      	l32i.n	a9, a1, 52
  75:	2189      	s32i.n	a8, a1, 8
  77:	c188      	l32i.n	a8, a1, 48
  79:	1199      	s32i.n	a9, a1, 4
  7b:	0189      	s32i.n	a8, a1, 0
  7d:	04cd      	mov.n	a12, a4
  7f:	03bd      	mov.n	a11, a3
  81:	02ad      	mov.n	a10, a2
  83:	000081        	l32r	a8, fffc0084 <op_u64_ShiftRight_ss+0xfffc0084>
			83: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftRight_ss+0x14
			83: R_XTENSA_ASM_EXPAND	.text.profileOp
  86:	0008e0        	callx8	a8
  89:	0a2d      	mov.n	a2, a10
  8b:	f01d      	retw.n

Disassembly of section .text.op_u64_ShiftRight_sr:

00000000 <op_u64_ShiftRight_sr>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_ShiftRight_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftRight_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_ShiftRight_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftRight_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	fb7c      	movi.n	a11, -1
  25:	54a080        	extui	a10, a8, 0, 6
  28:	30bab0        	xor	a11, a10, a11
  2b:	977a      	add.n	a9, a7, a7
  2d:	401b00        	ssl	a11
  30:	a19900        	sll	a9, a9
  33:	400a00        	ssr	a10
  36:	91e060        	srl	a14, a6
  39:	0b2c      	movi.n	a11, 32
  3b:	1088b0        	and	a8, a8, a11
  3e:	400a00        	ssr	a10
  41:	91f070        	srl	a15, a7
  44:	20e9e0        	or	a14, a9, a14
  47:	090c      	movi.n	a9, 0
  49:	93ef80        	movnez	a14, a15, a8
  4c:	93f980        	movnez	a15, a9, a8
  4f:	000081        	l32r	a8, fffc0050 <op_u64_ShiftRight_sr+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftRight_sr
  52:	d198      	l32i.n	a9, a1, 52
  54:	2189      	s32i.n	a8, a1, 8
  56:	c188      	l32i.n	a8, a1, 48
  58:	1199      	s32i.n	a9, a1, 4
  5a:	0189      	s32i.n	a8, a1, 0
  5c:	04cd      	mov.n	a12, a4
  5e:	03bd      	mov.n	a11, a3
  60:	02ad      	mov.n	a10, a2
  62:	000081        	l32r	a8, fffc0064 <op_u64_ShiftRight_sr+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftRight_sr+0xc
			62: R_XTENSA_ASM_EXPAND	.text.profileOp
  65:	0008e0        	callx8	a8
  68:	0a2d      	mov.n	a2, a10
  6a:	f01d      	retw.n

Disassembly of section .text.op_u64_ShiftRight_rs:

00000000 <op_u64_ShiftRight_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_ShiftRight_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftRight_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_ShiftRight_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftRight_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1af8      	l32i.n	a15, a10, 4
  22:	0ae8      	l32i.n	a14, a10, 0
  24:	549060        	extui	a9, a6, 0, 6
  27:	fa7c      	movi.n	a10, -1
  29:	30a9a0        	xor	a10, a9, a10
  2c:	8ffa      	add.n	a8, a15, a15
  2e:	401a00        	ssl	a10
  31:	a18800        	sll	a8, a8
  34:	400900        	ssr	a9
  37:	91e0e0        	srl	a14, a14
  3a:	0a2c      	movi.n	a10, 32
  3c:	1066a0        	and	a6, a6, a10
  3f:	400900        	ssr	a9
  42:	91f0f0        	srl	a15, a15
  45:	20e8e0        	or	a14, a8, a14
  48:	080c      	movi.n	a8, 0
  4a:	93ef60        	movnez	a14, a15, a6
  4d:	93f860        	movnez	a15, a8, a6
  50:	000081        	l32r	a8, fffc0050 <op_u64_ShiftRight_rs+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftRight_rs
  53:	d198      	l32i.n	a9, a1, 52
  55:	2189      	s32i.n	a8, a1, 8
  57:	c188      	l32i.n	a8, a1, 48
  59:	1199      	s32i.n	a9, a1, 4
  5b:	0189      	s32i.n	a8, a1, 0
  5d:	04cd      	mov.n	a12, a4
  5f:	03bd      	mov.n	a11, a3
  61:	02ad      	mov.n	a10, a2
  63:	000081        	l32r	a8, fffc0064 <op_u64_ShiftRight_rs+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftRight_rs+0xc
			63: R_XTENSA_ASM_EXPAND	.text.profileOp
  66:	0008e0        	callx8	a8
  69:	0a2d      	mov.n	a2, a10
  6b:	f01d      	retw.n

Disassembly of section .text.op_i64_ShiftRight_ss:

00000000 <op_i64_ShiftRight_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_ShiftRight_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_ShiftRight_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_ShiftRight_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_ShiftRight_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i64_ShiftRight_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i64_ShiftRight_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	8c0c      	movi.n	a12, 8
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_i64_ShiftRight_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i64_ShiftRight_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	1a98      	l32i.n	a9, a10, 4
  42:	0ae8      	l32i.n	a14, a10, 0
  44:	548070        	extui	a8, a7, 0, 6
  47:	fb7c      	movi.n	a11, -1
  49:	30b8b0        	xor	a11, a8, a11
  4c:	a99a      	add.n	a10, a9, a9
  4e:	401b00        	ssl	a11
  51:	a1aa00        	sll	a10, a10
  54:	400800        	ssr	a8
  57:	91e0e0        	srl	a14, a14
  5a:	20eae0        	or	a14, a10, a14
  5d:	0000a1        	l32r	a10, fffc0060 <op_i64_ShiftRight_ss+0xfffc0060>
			5d: R_XTENSA_SLOT0_OP	.literal.op_i64_ShiftRight_ss
  60:	0b2c      	movi.n	a11, 32
  62:	10f7b0        	and	a15, a7, a11
  65:	400800        	ssr	a8
  68:	b18090        	sra	a8, a9
  6b:	d1b8      	l32i.n	a11, a1, 52
  6d:	319f90        	srai	a9, a9, 31
  70:	21a9      	s32i.n	a10, a1, 8
  72:	c1a8      	l32i.n	a10, a1, 48
  74:	93e8f0        	movnez	a14, a8, a15
  77:	9389f0        	movnez	a8, a9, a15
  7a:	01a9      	s32i.n	a10, a1, 0
  7c:	11b9      	s32i.n	a11, a1, 4
  7e:	08fd      	mov.n	a15, a8
  80:	04cd      	mov.n	a12, a4
  82:	03bd      	mov.n	a11, a3
  84:	02ad      	mov.n	a10, a2
  86:	000081        	l32r	a8, fffc0088 <op_i64_ShiftRight_ss+0xfffc0088>
			86: R_XTENSA_SLOT0_OP	.literal.op_i64_ShiftRight_ss+0x14
			86: R_XTENSA_ASM_EXPAND	.text.profileOp
  89:	0008e0        	callx8	a8
  8c:	0a2d      	mov.n	a2, a10
  8e:	f01d      	retw.n

Disassembly of section .text.op_i64_ShiftRight_sr:

00000000 <op_i64_ShiftRight_sr>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_ShiftRight_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_ShiftRight_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_ShiftRight_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_ShiftRight_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0af8      	l32i.n	a15, a10, 0
  22:	fa7c      	movi.n	a10, -1
  24:	5480f0        	extui	a8, a15, 0, 6
  27:	30a8a0        	xor	a10, a8, a10
  2a:	977a      	add.n	a9, a7, a7
  2c:	401a00        	ssl	a10
  2f:	a19900        	sll	a9, a9
  32:	400800        	ssr	a8
  35:	91e060        	srl	a14, a6
  38:	0a2c      	movi.n	a10, 32
  3a:	d1b8      	l32i.n	a11, a1, 52
  3c:	10ffa0        	and	a15, a15, a10
  3f:	400800        	ssr	a8
  42:	b18070        	sra	a8, a7
  45:	c1a8      	l32i.n	a10, a1, 48
  47:	20e9e0        	or	a14, a9, a14
  4a:	317f70        	srai	a7, a7, 31
  4d:	000091        	l32r	a9, fffc0050 <op_i64_ShiftRight_sr+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i64_ShiftRight_sr
  50:	93e8f0        	movnez	a14, a8, a15
  53:	9387f0        	movnez	a8, a7, a15
  56:	01a9      	s32i.n	a10, a1, 0
  58:	11b9      	s32i.n	a11, a1, 4
  5a:	2199      	s32i.n	a9, a1, 8
  5c:	08fd      	mov.n	a15, a8
  5e:	04cd      	mov.n	a12, a4
  60:	03bd      	mov.n	a11, a3
  62:	02ad      	mov.n	a10, a2
  64:	000081        	l32r	a8, fffc0064 <op_i64_ShiftRight_sr+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.op_i64_ShiftRight_sr+0xc
			64: R_XTENSA_ASM_EXPAND	.text.profileOp
  67:	0008e0        	callx8	a8
  6a:	0a2d      	mov.n	a2, a10
  6c:	f01d      	retw.n

Disassembly of section .text.op_i64_ShiftRight_rs:

00000000 <op_i64_ShiftRight_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_ShiftRight_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_ShiftRight_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_ShiftRight_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_ShiftRight_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a98      	l32i.n	a9, a10, 4
  22:	0ae8      	l32i.n	a14, a10, 0
  24:	548060        	extui	a8, a6, 0, 6
  27:	fa7c      	movi.n	a10, -1
  29:	30a8a0        	xor	a10, a8, a10
  2c:	b99a      	add.n	a11, a9, a9
  2e:	401a00        	ssl	a10
  31:	a1bb00        	sll	a11, a11
  34:	0a2c      	movi.n	a10, 32
  36:	10f6a0        	and	a15, a6, a10
  39:	0000a1        	l32r	a10, fffc003c <op_i64_ShiftRight_rs+0xfffc003c>
			39: R_XTENSA_SLOT0_OP	.literal.op_i64_ShiftRight_rs
  3c:	400800        	ssr	a8
  3f:	91e0e0        	srl	a14, a14
  42:	21a9      	s32i.n	a10, a1, 8
  44:	400800        	ssr	a8
  47:	b18090        	sra	a8, a9
  4a:	c1a8      	l32i.n	a10, a1, 48
  4c:	319f90        	srai	a9, a9, 31
  4f:	20ebe0        	or	a14, a11, a14
  52:	d1b8      	l32i.n	a11, a1, 52
  54:	93e8f0        	movnez	a14, a8, a15
  57:	9389f0        	movnez	a8, a9, a15
  5a:	01a9      	s32i.n	a10, a1, 0
  5c:	11b9      	s32i.n	a11, a1, 4
  5e:	08fd      	mov.n	a15, a8
  60:	04cd      	mov.n	a12, a4
  62:	03bd      	mov.n	a11, a3
  64:	02ad      	mov.n	a10, a2
  66:	000081        	l32r	a8, fffc0068 <op_i64_ShiftRight_rs+0xfffc0068>
			66: R_XTENSA_SLOT0_OP	.literal.op_i64_ShiftRight_rs+0xc
			66: R_XTENSA_ASM_EXPAND	.text.profileOp
  69:	0008e0        	callx8	a8
  6c:	0a2d      	mov.n	a2, a10
  6e:	f01d      	retw.n

Disassembly of section .text.op_u64_ShiftLeft_ss:

00000000 <op_u64_ShiftLeft_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_ShiftLeft_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftLeft_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_ShiftLeft_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftLeft_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_u64_ShiftLeft_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftLeft_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	8c0c      	movi.n	a12, 8
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_u64_ShiftLeft_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftLeft_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0ae8      	l32i.n	a14, a10, 0
  42:	1af8      	l32i.n	a15, a10, 4
  44:	549070        	extui	a9, a7, 0, 6
  47:	fa7c      	movi.n	a10, -1
  49:	30a9a0        	xor	a10, a9, a10
  4c:	4181e0        	srli	a8, a14, 1
  4f:	400a00        	ssr	a10
  52:	918080        	srl	a8, a8
  55:	401900        	ssl	a9
  58:	a1ff00        	sll	a15, a15
  5b:	0a2c      	movi.n	a10, 32
  5d:	1077a0        	and	a7, a7, a10
  60:	401900        	ssl	a9
  63:	a1ee00        	sll	a14, a14
  66:	20f8f0        	or	a15, a8, a15
  69:	080c      	movi.n	a8, 0
  6b:	93fe70        	movnez	a15, a14, a7
  6e:	93e870        	movnez	a14, a8, a7
  71:	000081        	l32r	a8, fffc0074 <op_u64_ShiftLeft_ss+0xfffc0074>
			71: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftLeft_ss
  74:	d198      	l32i.n	a9, a1, 52
  76:	2189      	s32i.n	a8, a1, 8
  78:	c188      	l32i.n	a8, a1, 48
  7a:	1199      	s32i.n	a9, a1, 4
  7c:	0189      	s32i.n	a8, a1, 0
  7e:	04cd      	mov.n	a12, a4
  80:	03bd      	mov.n	a11, a3
  82:	02ad      	mov.n	a10, a2
  84:	000081        	l32r	a8, fffc0084 <op_u64_ShiftLeft_ss+0xfffc0084>
			84: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftLeft_ss+0x14
			84: R_XTENSA_ASM_EXPAND	.text.profileOp
  87:	0008e0        	callx8	a8
  8a:	0a2d      	mov.n	a2, a10
  8c:	f01d      	retw.n

Disassembly of section .text.op_u64_ShiftLeft_sr:

00000000 <op_u64_ShiftLeft_sr>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_ShiftLeft_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftLeft_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_ShiftLeft_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftLeft_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a88      	l32i.n	a8, a10, 0
  22:	fb7c      	movi.n	a11, -1
  24:	54a080        	extui	a10, a8, 0, 6
  27:	30bab0        	xor	a11, a10, a11
  2a:	419160        	srli	a9, a6, 1
  2d:	400b00        	ssr	a11
  30:	919090        	srl	a9, a9
  33:	401a00        	ssl	a10
  36:	a1f700        	sll	a15, a7
  39:	0b2c      	movi.n	a11, 32
  3b:	1088b0        	and	a8, a8, a11
  3e:	401a00        	ssl	a10
  41:	a1e600        	sll	a14, a6
  44:	20f9f0        	or	a15, a9, a15
  47:	090c      	movi.n	a9, 0
  49:	93fe80        	movnez	a15, a14, a8
  4c:	93e980        	movnez	a14, a9, a8
  4f:	000081        	l32r	a8, fffc0050 <op_u64_ShiftLeft_sr+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftLeft_sr
  52:	d198      	l32i.n	a9, a1, 52
  54:	2189      	s32i.n	a8, a1, 8
  56:	c188      	l32i.n	a8, a1, 48
  58:	1199      	s32i.n	a9, a1, 4
  5a:	0189      	s32i.n	a8, a1, 0
  5c:	04cd      	mov.n	a12, a4
  5e:	03bd      	mov.n	a11, a3
  60:	02ad      	mov.n	a10, a2
  62:	000081        	l32r	a8, fffc0064 <op_u64_ShiftLeft_sr+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftLeft_sr+0xc
			62: R_XTENSA_ASM_EXPAND	.text.profileOp
  65:	0008e0        	callx8	a8
  68:	0a2d      	mov.n	a2, a10
  6a:	f01d      	retw.n

Disassembly of section .text.op_u64_ShiftLeft_rs:

00000000 <op_u64_ShiftLeft_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_ShiftLeft_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftLeft_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_ShiftLeft_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftLeft_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0ae8      	l32i.n	a14, a10, 0
  22:	1af8      	l32i.n	a15, a10, 4
  24:	549060        	extui	a9, a6, 0, 6
  27:	fa7c      	movi.n	a10, -1
  29:	30a9a0        	xor	a10, a9, a10
  2c:	4181e0        	srli	a8, a14, 1
  2f:	400a00        	ssr	a10
  32:	918080        	srl	a8, a8
  35:	401900        	ssl	a9
  38:	a1ff00        	sll	a15, a15
  3b:	0a2c      	movi.n	a10, 32
  3d:	1066a0        	and	a6, a6, a10
  40:	401900        	ssl	a9
  43:	a1ee00        	sll	a14, a14
  46:	20f8f0        	or	a15, a8, a15
  49:	080c      	movi.n	a8, 0
  4b:	93fe60        	movnez	a15, a14, a6
  4e:	93e860        	movnez	a14, a8, a6
  51:	000081        	l32r	a8, fffc0054 <op_u64_ShiftLeft_rs+0xfffc0054>
			51: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftLeft_rs
  54:	d198      	l32i.n	a9, a1, 52
  56:	2189      	s32i.n	a8, a1, 8
  58:	c188      	l32i.n	a8, a1, 48
  5a:	1199      	s32i.n	a9, a1, 4
  5c:	0189      	s32i.n	a8, a1, 0
  5e:	04cd      	mov.n	a12, a4
  60:	03bd      	mov.n	a11, a3
  62:	02ad      	mov.n	a10, a2
  64:	000081        	l32r	a8, fffc0064 <op_u64_ShiftLeft_rs+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.op_u64_ShiftLeft_rs+0xc
			64: R_XTENSA_ASM_EXPAND	.text.profileOp
  67:	0008e0        	callx8	a8
  6a:	0a2d      	mov.n	a2, a10
  6c:	f01d      	retw.n

Disassembly of section .text.op_u64_Xor_ss:

00000000 <op_u64_Xor_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Xor_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Xor_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_Xor_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_Xor_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0868      	l32i.n	a6, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_u64_Xor_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_Xor_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_u64_Xor_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u64_Xor_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	c188      	l32i.n	a8, a1, 48
  43:	0ae8      	l32i.n	a14, a10, 0
  45:	1af8      	l32i.n	a15, a10, 4
  47:	d198      	l32i.n	a9, a1, 52
  49:	0189      	s32i.n	a8, a1, 0
  4b:	000081        	l32r	a8, fffc004c <op_u64_Xor_ss+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_u64_Xor_ss
  4e:	1199      	s32i.n	a9, a1, 4
  50:	2189      	s32i.n	a8, a1, 8
  52:	30ee60        	xor	a14, a14, a6
  55:	30ff70        	xor	a15, a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_u64_Xor_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_u64_Xor_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_u64_Xor_rs:

00000000 <op_u64_Xor_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Xor_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Xor_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_Xor_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_Xor_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c188      	l32i.n	a8, a1, 48
  23:	0ae8      	l32i.n	a14, a10, 0
  25:	1af8      	l32i.n	a15, a10, 4
  27:	d198      	l32i.n	a9, a1, 52
  29:	0189      	s32i.n	a8, a1, 0
  2b:	000081        	l32r	a8, fffc002c <op_u64_Xor_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u64_Xor_rs
  2e:	1199      	s32i.n	a9, a1, 4
  30:	2189      	s32i.n	a8, a1, 8
  32:	30ee60        	xor	a14, a14, a6
  35:	30ff70        	xor	a15, a15, a7
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_u64_Xor_rs+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_u64_Xor_rs+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_u64_Or_ss:

00000000 <op_u64_Or_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Or_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Or_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_Or_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_Or_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0868      	l32i.n	a6, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_u64_Or_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_Or_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_u64_Or_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u64_Or_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	c188      	l32i.n	a8, a1, 48
  43:	0ae8      	l32i.n	a14, a10, 0
  45:	1af8      	l32i.n	a15, a10, 4
  47:	d198      	l32i.n	a9, a1, 52
  49:	0189      	s32i.n	a8, a1, 0
  4b:	000081        	l32r	a8, fffc004c <op_u64_Or_ss+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_u64_Or_ss
  4e:	1199      	s32i.n	a9, a1, 4
  50:	2189      	s32i.n	a8, a1, 8
  52:	20ee60        	or	a14, a14, a6
  55:	20ff70        	or	a15, a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_u64_Or_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_u64_Or_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_u64_Or_rs:

00000000 <op_u64_Or_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Or_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Or_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_Or_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_Or_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c188      	l32i.n	a8, a1, 48
  23:	0ae8      	l32i.n	a14, a10, 0
  25:	1af8      	l32i.n	a15, a10, 4
  27:	d198      	l32i.n	a9, a1, 52
  29:	0189      	s32i.n	a8, a1, 0
  2b:	000081        	l32r	a8, fffc002c <op_u64_Or_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u64_Or_rs
  2e:	1199      	s32i.n	a9, a1, 4
  30:	2189      	s32i.n	a8, a1, 8
  32:	20ee60        	or	a14, a14, a6
  35:	20ff70        	or	a15, a15, a7
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_u64_Or_rs+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_u64_Or_rs+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_u64_And_ss:

00000000 <op_u64_And_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_And_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_And_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_And_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_And_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0868      	l32i.n	a6, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_u64_And_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_And_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_u64_And_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u64_And_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	c188      	l32i.n	a8, a1, 48
  43:	0ae8      	l32i.n	a14, a10, 0
  45:	1af8      	l32i.n	a15, a10, 4
  47:	d198      	l32i.n	a9, a1, 52
  49:	0189      	s32i.n	a8, a1, 0
  4b:	000081        	l32r	a8, fffc004c <op_u64_And_ss+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_u64_And_ss
  4e:	1199      	s32i.n	a9, a1, 4
  50:	2189      	s32i.n	a8, a1, 8
  52:	10ee60        	and	a14, a14, a6
  55:	10ff70        	and	a15, a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_u64_And_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_u64_And_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_u64_And_rs:

00000000 <op_u64_And_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_And_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_And_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_And_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_And_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c188      	l32i.n	a8, a1, 48
  23:	0ae8      	l32i.n	a14, a10, 0
  25:	1af8      	l32i.n	a15, a10, 4
  27:	d198      	l32i.n	a9, a1, 52
  29:	0189      	s32i.n	a8, a1, 0
  2b:	000081        	l32r	a8, fffc002c <op_u64_And_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u64_And_rs
  2e:	1199      	s32i.n	a9, a1, 4
  30:	2189      	s32i.n	a8, a1, 8
  32:	10ee60        	and	a14, a14, a6
  35:	10ff70        	and	a15, a15, a7
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_u64_And_rs+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_u64_And_rs+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_u64_Remainder_ss:

00000000 <op_u64_Remainder_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Remainder_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_Remainder_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	0868      	l32i.n	a6, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_u64_Remainder_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_u64_Remainder_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	208670        	or	a8, a6, a7
  44:	1ab8      	l32i.n	a11, a10, 4
  46:	0aa8      	l32i.n	a10, a10, 0
  48:	98ac      	beqz.n	a8, 75 <op_u64_Remainder_ss+0x75>
			48: R_XTENSA_SLOT0_OP	.text.op_u64_Remainder_ss+0x75
  4a:	06cd      	mov.n	a12, a6
  4c:	07dd      	mov.n	a13, a7
  4e:	000081        	l32r	a8, fffc0050 <op_u64_Remainder_ss+0xfffc0050>
			4e: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_ss+0x14
			4e: R_XTENSA_ASM_EXPAND	__umoddi3
  51:	0008e0        	callx8	a8
  54:	c188      	l32i.n	a8, a1, 48
  56:	d198      	l32i.n	a9, a1, 52
  58:	0189      	s32i.n	a8, a1, 0
  5a:	000081        	l32r	a8, fffc005c <op_u64_Remainder_ss+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_ss
  5d:	0aed      	mov.n	a14, a10
  5f:	0bfd      	mov.n	a15, a11
  61:	1199      	s32i.n	a9, a1, 4
  63:	2189      	s32i.n	a8, a1, 8
  65:	04cd      	mov.n	a12, a4
  67:	03bd      	mov.n	a11, a3
  69:	02ad      	mov.n	a10, a2
  6b:	000081        	l32r	a8, fffc006c <op_u64_Remainder_ss+0xfffc006c>
			6b: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_ss+0x18
			6b: R_XTENSA_ASM_EXPAND	.text.profileOp
  6e:	0008e0        	callx8	a8
  71:	0a2d      	mov.n	a2, a10
  73:	f01d      	retw.n
  75:	08ad      	mov.n	a10, a8
  77:	000081        	l32r	a8, fffc0078 <op_u64_Remainder_ss+0xfffc0078>
			77: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_ss+0x1c
			77: R_XTENSA_ASM_EXPAND	backtrace_err
  7a:	0008e0        	callx8	a8
  7d:	0a2d      	mov.n	a2, a10
  7f:	f01d      	retw.n

Disassembly of section .text.op_u64_Remainder_sr:

00000000 <op_u64_Remainder_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Remainder_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_Remainder_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0ac8      	l32i.n	a12, a10, 0
  23:	1ad8      	l32i.n	a13, a10, 4
  25:	20acd0        	or	a10, a12, a13
  28:	9aac      	beqz.n	a10, 55 <op_u64_Remainder_sr+0x55>
			28: R_XTENSA_SLOT0_OP	.text.op_u64_Remainder_sr+0x55
  2a:	06ad      	mov.n	a10, a6
  2c:	07bd      	mov.n	a11, a7
  2e:	000081        	l32r	a8, fffc0030 <op_u64_Remainder_sr+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_sr+0xc
			2e: R_XTENSA_ASM_EXPAND	__umoddi3
  31:	0008e0        	callx8	a8
  34:	c188      	l32i.n	a8, a1, 48
  36:	d198      	l32i.n	a9, a1, 52
  38:	0189      	s32i.n	a8, a1, 0
  3a:	000081        	l32r	a8, fffc003c <op_u64_Remainder_sr+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_sr
  3d:	0aed      	mov.n	a14, a10
  3f:	0bfd      	mov.n	a15, a11
  41:	1199      	s32i.n	a9, a1, 4
  43:	2189      	s32i.n	a8, a1, 8
  45:	04cd      	mov.n	a12, a4
  47:	03bd      	mov.n	a11, a3
  49:	02ad      	mov.n	a10, a2
  4b:	000081        	l32r	a8, fffc004c <op_u64_Remainder_sr+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_sr+0x10
			4b: R_XTENSA_ASM_EXPAND	.text.profileOp
  4e:	0008e0        	callx8	a8
  51:	0a2d      	mov.n	a2, a10
  53:	f01d      	retw.n
  55:	000081        	l32r	a8, fffc0058 <op_u64_Remainder_sr+0xfffc0058>
			55: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_sr+0x14
			55: R_XTENSA_ASM_EXPAND	backtrace_err
  58:	0008e0        	callx8	a8
  5b:	0a2d      	mov.n	a2, a10
  5d:	f01d      	retw.n

Disassembly of section .text.op_u64_Remainder_rs:

00000000 <op_u64_Remainder_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Remainder_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_Remainder_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	208670        	or	a8, a6, a7
  24:	1ab8      	l32i.n	a11, a10, 4
  26:	0aa8      	l32i.n	a10, a10, 0
  28:	98ac      	beqz.n	a8, 55 <op_u64_Remainder_rs+0x55>
			28: R_XTENSA_SLOT0_OP	.text.op_u64_Remainder_rs+0x55
  2a:	06cd      	mov.n	a12, a6
  2c:	07dd      	mov.n	a13, a7
  2e:	000081        	l32r	a8, fffc0030 <op_u64_Remainder_rs+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_rs+0xc
			2e: R_XTENSA_ASM_EXPAND	__umoddi3
  31:	0008e0        	callx8	a8
  34:	c188      	l32i.n	a8, a1, 48
  36:	d198      	l32i.n	a9, a1, 52
  38:	0189      	s32i.n	a8, a1, 0
  3a:	000081        	l32r	a8, fffc003c <op_u64_Remainder_rs+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_rs
  3d:	0aed      	mov.n	a14, a10
  3f:	0bfd      	mov.n	a15, a11
  41:	1199      	s32i.n	a9, a1, 4
  43:	2189      	s32i.n	a8, a1, 8
  45:	04cd      	mov.n	a12, a4
  47:	03bd      	mov.n	a11, a3
  49:	02ad      	mov.n	a10, a2
  4b:	000081        	l32r	a8, fffc004c <op_u64_Remainder_rs+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_rs+0x10
			4b: R_XTENSA_ASM_EXPAND	.text.profileOp
  4e:	0008e0        	callx8	a8
  51:	0a2d      	mov.n	a2, a10
  53:	f01d      	retw.n
  55:	08ad      	mov.n	a10, a8
  57:	000081        	l32r	a8, fffc0058 <op_u64_Remainder_rs+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_u64_Remainder_rs+0x14
			57: R_XTENSA_ASM_EXPAND	backtrace_err
  5a:	0008e0        	callx8	a8
  5d:	0a2d      	mov.n	a2, a10
  5f:	f01d      	retw.n

Disassembly of section .text.op_i64_Remainder_ss:

00000000 <op_i64_Remainder_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Remainder_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_ss+0x8
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Remainder_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_ss+0xc
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	0868      	l32i.n	a6, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_i64_Remainder_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_ss+0x10
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_Remainder_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_ss+0x14
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	0a8d      	mov.n	a8, a10
  43:	209670        	or	a9, a6, a7
  46:	0aa8      	l32i.n	a10, a10, 0
  48:	18b8      	l32i.n	a11, a8, 4
  4a:	042916        	beqz	a9, 90 <op_i64_Remainder_ss+0x90>
			4a: R_XTENSA_SLOT0_OP	.text.op_i64_Remainder_ss+0x90
  4d:	108670        	and	a8, a6, a7
  50:	0a0866        	bnei	a8, -1, 5e <op_i64_Remainder_ss+0x5e>
			50: R_XTENSA_SLOT0_OP	.text.op_i64_Remainder_ss+0x5e
  53:	000081        	l32r	a8, fffc0054 <op_i64_Remainder_ss+0xfffc0054>
			53: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_ss+0x4
  56:	808b80        	add	a8, a11, a8
  59:	208a80        	or	a8, a10, a8
  5c:	98ac      	beqz.n	a8, 89 <op_i64_Remainder_ss+0x89>
			5c: R_XTENSA_SLOT0_OP	.text.op_i64_Remainder_ss+0x89
  5e:	06cd      	mov.n	a12, a6
  60:	07dd      	mov.n	a13, a7
  62:	000081        	l32r	a8, fffc0064 <op_i64_Remainder_ss+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_ss+0x18
			62: R_XTENSA_ASM_EXPAND	__moddi3
  65:	0008e0        	callx8	a8
  68:	0aed      	mov.n	a14, a10
  6a:	0bfd      	mov.n	a15, a11
  6c:	c188      	l32i.n	a8, a1, 48
  6e:	d198      	l32i.n	a9, a1, 52
  70:	0189      	s32i.n	a8, a1, 0
  72:	000081        	l32r	a8, fffc0074 <op_i64_Remainder_ss+0xfffc0074>
			72: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_ss
  75:	1199      	s32i.n	a9, a1, 4
  77:	2189      	s32i.n	a8, a1, 8
  79:	04cd      	mov.n	a12, a4
  7b:	03bd      	mov.n	a11, a3
  7d:	02ad      	mov.n	a10, a2
  7f:	000081        	l32r	a8, fffc0080 <op_i64_Remainder_ss+0xfffc0080>
			7f: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_ss+0x1c
			7f: R_XTENSA_ASM_EXPAND	.text.profileOp
  82:	0008e0        	callx8	a8
  85:	0a2d      	mov.n	a2, a10
  87:	f01d      	retw.n
  89:	0e0c      	movi.n	a14, 0
  8b:	0efd      	mov.n	a15, a14
  8d:	fff6c6        	j	6c <op_i64_Remainder_ss+0x6c>
			8d: R_XTENSA_SLOT0_OP	.text.op_i64_Remainder_ss+0x6c
  90:	09ad      	mov.n	a10, a9
  92:	000081        	l32r	a8, fffc0094 <op_i64_Remainder_ss+0xfffc0094>
			92: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_ss+0x20
			92: R_XTENSA_ASM_EXPAND	backtrace_err
  95:	0008e0        	callx8	a8
  98:	0a2d      	mov.n	a2, a10
  9a:	f01d      	retw.n

Disassembly of section .text.op_i64_Remainder_sr:

00000000 <op_i64_Remainder_sr>:
   0:	006136        	entry	a1, 48
   3:	04a0c2        	movi	a12, 4
   6:	20b220        	or	a11, a2, a2
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_i64_Remainder_sr+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_sr+0x8
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	8c0c      	movi.n	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_i64_Remainder_sr+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_sr+0xc
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0ac8      	l32i.n	a12, a10, 0
  24:	1ad8      	l32i.n	a13, a10, 4
  26:	20acd0        	or	a10, a12, a13
  29:	043a16        	beqz	a10, 70 <op_i64_Remainder_sr+0x70>
			29: R_XTENSA_SLOT0_OP	.text.op_i64_Remainder_sr+0x70
  2c:	108cd0        	and	a8, a12, a13
  2f:	090866        	bnei	a8, -1, 3c <op_i64_Remainder_sr+0x3c>
			2f: R_XTENSA_SLOT0_OP	.text.op_i64_Remainder_sr+0x3c
  32:	000081        	l32r	a8, fffc0034 <op_i64_Remainder_sr+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_sr+0x4
  35:	878a      	add.n	a8, a7, a8
  37:	208680        	or	a8, a6, a8
  3a:	a8ac      	beqz.n	a8, 68 <op_i64_Remainder_sr+0x68>
			3a: R_XTENSA_SLOT0_OP	.text.op_i64_Remainder_sr+0x68
  3c:	06ad      	mov.n	a10, a6
  3e:	07bd      	mov.n	a11, a7
  40:	000081        	l32r	a8, fffc0040 <op_i64_Remainder_sr+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_sr+0x10
			40: R_XTENSA_ASM_EXPAND	__moddi3
  43:	0008e0        	callx8	a8
  46:	0aed      	mov.n	a14, a10
  48:	0bfd      	mov.n	a15, a11
  4a:	c188      	l32i.n	a8, a1, 48
  4c:	d198      	l32i.n	a9, a1, 52
  4e:	0189      	s32i.n	a8, a1, 0
  50:	000081        	l32r	a8, fffc0050 <op_i64_Remainder_sr+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_sr
  53:	1199      	s32i.n	a9, a1, 4
  55:	2189      	s32i.n	a8, a1, 8
  57:	04cd      	mov.n	a12, a4
  59:	03bd      	mov.n	a11, a3
  5b:	20a220        	or	a10, a2, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i64_Remainder_sr+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_sr+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n
  68:	0e0c      	movi.n	a14, 0
  6a:	0efd      	mov.n	a15, a14
  6c:	fff686        	j	4a <op_i64_Remainder_sr+0x4a>
			6c: R_XTENSA_SLOT0_OP	.text.op_i64_Remainder_sr+0x4a
  6f:	00          	.byte	00
  70:	000081        	l32r	a8, fffc0070 <op_i64_Remainder_sr+0xfffc0070>
			70: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_sr+0x18
			70: R_XTENSA_ASM_EXPAND	backtrace_err
  73:	0008e0        	callx8	a8
  76:	0a2d      	mov.n	a2, a10
  78:	f01d      	retw.n

Disassembly of section .text.op_i64_Remainder_rs:

00000000 <op_i64_Remainder_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Remainder_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_rs+0x8
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Remainder_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_rs+0xc
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	209670        	or	a9, a6, a7
  25:	0aa8      	l32i.n	a10, a10, 0
  27:	18b8      	l32i.n	a11, a8, 4
  29:	043916        	beqz	a9, 70 <op_i64_Remainder_rs+0x70>
			29: R_XTENSA_SLOT0_OP	.text.op_i64_Remainder_rs+0x70
  2c:	108670        	and	a8, a6, a7
  2f:	090866        	bnei	a8, -1, 3c <op_i64_Remainder_rs+0x3c>
			2f: R_XTENSA_SLOT0_OP	.text.op_i64_Remainder_rs+0x3c
  32:	000081        	l32r	a8, fffc0034 <op_i64_Remainder_rs+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_rs+0x4
  35:	8b8a      	add.n	a8, a11, a8
  37:	208a80        	or	a8, a10, a8
  3a:	a8ac      	beqz.n	a8, 68 <op_i64_Remainder_rs+0x68>
			3a: R_XTENSA_SLOT0_OP	.text.op_i64_Remainder_rs+0x68
  3c:	06cd      	mov.n	a12, a6
  3e:	07dd      	mov.n	a13, a7
  40:	000081        	l32r	a8, fffc0040 <op_i64_Remainder_rs+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_rs+0x10
			40: R_XTENSA_ASM_EXPAND	__moddi3
  43:	0008e0        	callx8	a8
  46:	0aed      	mov.n	a14, a10
  48:	0bfd      	mov.n	a15, a11
  4a:	c188      	l32i.n	a8, a1, 48
  4c:	d198      	l32i.n	a9, a1, 52
  4e:	0189      	s32i.n	a8, a1, 0
  50:	000081        	l32r	a8, fffc0050 <op_i64_Remainder_rs+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_rs
  53:	1199      	s32i.n	a9, a1, 4
  55:	2189      	s32i.n	a8, a1, 8
  57:	04cd      	mov.n	a12, a4
  59:	03bd      	mov.n	a11, a3
  5b:	20a220        	or	a10, a2, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i64_Remainder_rs+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_rs+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n
  68:	0e0c      	movi.n	a14, 0
  6a:	0efd      	mov.n	a15, a14
  6c:	fff686        	j	4a <op_i64_Remainder_rs+0x4a>
			6c: R_XTENSA_SLOT0_OP	.text.op_i64_Remainder_rs+0x4a
  6f:	00          	.byte	00
  70:	09ad      	mov.n	a10, a9
  72:	000081        	l32r	a8, fffc0074 <op_i64_Remainder_rs+0xfffc0074>
			72: R_XTENSA_SLOT0_OP	.literal.op_i64_Remainder_rs+0x18
			72: R_XTENSA_ASM_EXPAND	backtrace_err
  75:	0008e0        	callx8	a8
  78:	0a2d      	mov.n	a2, a10
  7a:	f01d      	retw.n

Disassembly of section .text.op_u64_Divide_ss:

00000000 <op_u64_Divide_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Divide_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_Divide_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	0868      	l32i.n	a6, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_u64_Divide_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_u64_Divide_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	208670        	or	a8, a6, a7
  44:	1ab8      	l32i.n	a11, a10, 4
  46:	0aa8      	l32i.n	a10, a10, 0
  48:	98ac      	beqz.n	a8, 75 <op_u64_Divide_ss+0x75>
			48: R_XTENSA_SLOT0_OP	.text.op_u64_Divide_ss+0x75
  4a:	06cd      	mov.n	a12, a6
  4c:	07dd      	mov.n	a13, a7
  4e:	000081        	l32r	a8, fffc0050 <op_u64_Divide_ss+0xfffc0050>
			4e: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_ss+0x14
			4e: R_XTENSA_ASM_EXPAND	__udivdi3
  51:	0008e0        	callx8	a8
  54:	c188      	l32i.n	a8, a1, 48
  56:	d198      	l32i.n	a9, a1, 52
  58:	0189      	s32i.n	a8, a1, 0
  5a:	000081        	l32r	a8, fffc005c <op_u64_Divide_ss+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_ss
  5d:	0aed      	mov.n	a14, a10
  5f:	0bfd      	mov.n	a15, a11
  61:	1199      	s32i.n	a9, a1, 4
  63:	2189      	s32i.n	a8, a1, 8
  65:	04cd      	mov.n	a12, a4
  67:	03bd      	mov.n	a11, a3
  69:	02ad      	mov.n	a10, a2
  6b:	000081        	l32r	a8, fffc006c <op_u64_Divide_ss+0xfffc006c>
			6b: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_ss+0x18
			6b: R_XTENSA_ASM_EXPAND	.text.profileOp
  6e:	0008e0        	callx8	a8
  71:	0a2d      	mov.n	a2, a10
  73:	f01d      	retw.n
  75:	08ad      	mov.n	a10, a8
  77:	000081        	l32r	a8, fffc0078 <op_u64_Divide_ss+0xfffc0078>
			77: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_ss+0x1c
			77: R_XTENSA_ASM_EXPAND	backtrace_err
  7a:	0008e0        	callx8	a8
  7d:	0a2d      	mov.n	a2, a10
  7f:	f01d      	retw.n

Disassembly of section .text.op_u64_Divide_sr:

00000000 <op_u64_Divide_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Divide_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_Divide_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0ac8      	l32i.n	a12, a10, 0
  23:	1ad8      	l32i.n	a13, a10, 4
  25:	20acd0        	or	a10, a12, a13
  28:	9aac      	beqz.n	a10, 55 <op_u64_Divide_sr+0x55>
			28: R_XTENSA_SLOT0_OP	.text.op_u64_Divide_sr+0x55
  2a:	06ad      	mov.n	a10, a6
  2c:	07bd      	mov.n	a11, a7
  2e:	000081        	l32r	a8, fffc0030 <op_u64_Divide_sr+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_sr+0xc
			2e: R_XTENSA_ASM_EXPAND	__udivdi3
  31:	0008e0        	callx8	a8
  34:	c188      	l32i.n	a8, a1, 48
  36:	d198      	l32i.n	a9, a1, 52
  38:	0189      	s32i.n	a8, a1, 0
  3a:	000081        	l32r	a8, fffc003c <op_u64_Divide_sr+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_sr
  3d:	0aed      	mov.n	a14, a10
  3f:	0bfd      	mov.n	a15, a11
  41:	1199      	s32i.n	a9, a1, 4
  43:	2189      	s32i.n	a8, a1, 8
  45:	04cd      	mov.n	a12, a4
  47:	03bd      	mov.n	a11, a3
  49:	02ad      	mov.n	a10, a2
  4b:	000081        	l32r	a8, fffc004c <op_u64_Divide_sr+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_sr+0x10
			4b: R_XTENSA_ASM_EXPAND	.text.profileOp
  4e:	0008e0        	callx8	a8
  51:	0a2d      	mov.n	a2, a10
  53:	f01d      	retw.n
  55:	000081        	l32r	a8, fffc0058 <op_u64_Divide_sr+0xfffc0058>
			55: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_sr+0x14
			55: R_XTENSA_ASM_EXPAND	backtrace_err
  58:	0008e0        	callx8	a8
  5b:	0a2d      	mov.n	a2, a10
  5d:	f01d      	retw.n

Disassembly of section .text.op_u64_Divide_rs:

00000000 <op_u64_Divide_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Divide_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_Divide_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	208670        	or	a8, a6, a7
  24:	1ab8      	l32i.n	a11, a10, 4
  26:	0aa8      	l32i.n	a10, a10, 0
  28:	98ac      	beqz.n	a8, 55 <op_u64_Divide_rs+0x55>
			28: R_XTENSA_SLOT0_OP	.text.op_u64_Divide_rs+0x55
  2a:	06cd      	mov.n	a12, a6
  2c:	07dd      	mov.n	a13, a7
  2e:	000081        	l32r	a8, fffc0030 <op_u64_Divide_rs+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_rs+0xc
			2e: R_XTENSA_ASM_EXPAND	__udivdi3
  31:	0008e0        	callx8	a8
  34:	c188      	l32i.n	a8, a1, 48
  36:	d198      	l32i.n	a9, a1, 52
  38:	0189      	s32i.n	a8, a1, 0
  3a:	000081        	l32r	a8, fffc003c <op_u64_Divide_rs+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_rs
  3d:	0aed      	mov.n	a14, a10
  3f:	0bfd      	mov.n	a15, a11
  41:	1199      	s32i.n	a9, a1, 4
  43:	2189      	s32i.n	a8, a1, 8
  45:	04cd      	mov.n	a12, a4
  47:	03bd      	mov.n	a11, a3
  49:	02ad      	mov.n	a10, a2
  4b:	000081        	l32r	a8, fffc004c <op_u64_Divide_rs+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_rs+0x10
			4b: R_XTENSA_ASM_EXPAND	.text.profileOp
  4e:	0008e0        	callx8	a8
  51:	0a2d      	mov.n	a2, a10
  53:	f01d      	retw.n
  55:	08ad      	mov.n	a10, a8
  57:	000081        	l32r	a8, fffc0058 <op_u64_Divide_rs+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_u64_Divide_rs+0x14
			57: R_XTENSA_ASM_EXPAND	backtrace_err
  5a:	0008e0        	callx8	a8
  5d:	0a2d      	mov.n	a2, a10
  5f:	f01d      	retw.n

Disassembly of section .text.op_i64_Divide_ss:

00000000 <op_i64_Divide_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Divide_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_ss+0x8
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Divide_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_ss+0xc
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	0868      	l32i.n	a6, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_i64_Divide_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_ss+0x10
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_Divide_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_ss+0x14
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	0a8d      	mov.n	a8, a10
  43:	209670        	or	a9, a6, a7
  46:	0aa8      	l32i.n	a10, a10, 0
  48:	18b8      	l32i.n	a11, a8, 4
  4a:	a9bc      	beqz.n	a9, 88 <op_i64_Divide_ss+0x88>
			4a: R_XTENSA_SLOT0_OP	.text.op_i64_Divide_ss+0x88
  4c:	108670        	and	a8, a6, a7
  4f:	090866        	bnei	a8, -1, 5c <op_i64_Divide_ss+0x5c>
			4f: R_XTENSA_SLOT0_OP	.text.op_i64_Divide_ss+0x5c
  52:	000081        	l32r	a8, fffc0054 <op_i64_Divide_ss+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_ss+0x4
  55:	8b8a      	add.n	a8, a11, a8
  57:	208a80        	or	a8, a10, a8
  5a:	a8ac      	beqz.n	a8, 88 <op_i64_Divide_ss+0x88>
			5a: R_XTENSA_SLOT0_OP	.text.op_i64_Divide_ss+0x88
  5c:	06cd      	mov.n	a12, a6
  5e:	07dd      	mov.n	a13, a7
  60:	000081        	l32r	a8, fffc0060 <op_i64_Divide_ss+0xfffc0060>
			60: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_ss+0x18
			60: R_XTENSA_ASM_EXPAND	__divdi3
  63:	0008e0        	callx8	a8
  66:	c188      	l32i.n	a8, a1, 48
  68:	d198      	l32i.n	a9, a1, 52
  6a:	0189      	s32i.n	a8, a1, 0
  6c:	000081        	l32r	a8, fffc006c <op_i64_Divide_ss+0xfffc006c>
			6c: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_ss
  6f:	0aed      	mov.n	a14, a10
  71:	0bfd      	mov.n	a15, a11
  73:	1199      	s32i.n	a9, a1, 4
  75:	2189      	s32i.n	a8, a1, 8
  77:	04cd      	mov.n	a12, a4
  79:	03bd      	mov.n	a11, a3
  7b:	20a220        	or	a10, a2, a2
  7e:	000081        	l32r	a8, fffc0080 <op_i64_Divide_ss+0xfffc0080>
			7e: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_ss+0x1c
			7e: R_XTENSA_ASM_EXPAND	.text.profileOp
  81:	0008e0        	callx8	a8
  84:	0a2d      	mov.n	a2, a10
  86:	f01d      	retw.n
  88:	0a0c      	movi.n	a10, 0
  8a:	000081        	l32r	a8, fffc008c <op_i64_Divide_ss+0xfffc008c>
			8a: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_ss+0x20
			8a: R_XTENSA_ASM_EXPAND	backtrace_err
  8d:	0008e0        	callx8	a8
  90:	0a2d      	mov.n	a2, a10
  92:	f01d      	retw.n

Disassembly of section .text.op_i64_Divide_sr:

00000000 <op_i64_Divide_sr>:
   0:	006136        	entry	a1, 48
   3:	04a0c2        	movi	a12, 4
   6:	20b220        	or	a11, a2, a2
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_i64_Divide_sr+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_sr+0x8
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	8c0c      	movi.n	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_i64_Divide_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_sr+0xc
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0ac8      	l32i.n	a12, a10, 0
  23:	1ad8      	l32i.n	a13, a10, 4
  25:	208cd0        	or	a8, a12, a13
  28:	98bc      	beqz.n	a8, 65 <op_i64_Divide_sr+0x65>
			28: R_XTENSA_SLOT0_OP	.text.op_i64_Divide_sr+0x65
  2a:	108cd0        	and	a8, a12, a13
  2d:	090866        	bnei	a8, -1, 3a <op_i64_Divide_sr+0x3a>
			2d: R_XTENSA_SLOT0_OP	.text.op_i64_Divide_sr+0x3a
  30:	000081        	l32r	a8, fffc0030 <op_i64_Divide_sr+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_sr+0x4
  33:	878a      	add.n	a8, a7, a8
  35:	208680        	or	a8, a6, a8
  38:	98ac      	beqz.n	a8, 65 <op_i64_Divide_sr+0x65>
			38: R_XTENSA_SLOT0_OP	.text.op_i64_Divide_sr+0x65
  3a:	06ad      	mov.n	a10, a6
  3c:	07bd      	mov.n	a11, a7
  3e:	000081        	l32r	a8, fffc0040 <op_i64_Divide_sr+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_sr+0x10
			3e: R_XTENSA_ASM_EXPAND	__divdi3
  41:	0008e0        	callx8	a8
  44:	c188      	l32i.n	a8, a1, 48
  46:	d198      	l32i.n	a9, a1, 52
  48:	0189      	s32i.n	a8, a1, 0
  4a:	000081        	l32r	a8, fffc004c <op_i64_Divide_sr+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_sr
  4d:	0aed      	mov.n	a14, a10
  4f:	0bfd      	mov.n	a15, a11
  51:	1199      	s32i.n	a9, a1, 4
  53:	2189      	s32i.n	a8, a1, 8
  55:	04cd      	mov.n	a12, a4
  57:	03bd      	mov.n	a11, a3
  59:	02ad      	mov.n	a10, a2
  5b:	000081        	l32r	a8, fffc005c <op_i64_Divide_sr+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_sr+0x14
			5b: R_XTENSA_ASM_EXPAND	.text.profileOp
  5e:	0008e0        	callx8	a8
  61:	0a2d      	mov.n	a2, a10
  63:	f01d      	retw.n
  65:	0a0c      	movi.n	a10, 0
  67:	000081        	l32r	a8, fffc0068 <op_i64_Divide_sr+0xfffc0068>
			67: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_sr+0x18
			67: R_XTENSA_ASM_EXPAND	backtrace_err
  6a:	0008e0        	callx8	a8
  6d:	0a2d      	mov.n	a2, a10
  6f:	f01d      	retw.n

Disassembly of section .text.op_i64_Divide_rs:

00000000 <op_i64_Divide_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Divide_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_rs+0x8
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	08a0c2        	movi	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_i64_Divide_rs+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_rs+0xc
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0a8d      	mov.n	a8, a10
  24:	209670        	or	a9, a6, a7
  27:	0aa8      	l32i.n	a10, a10, 0
  29:	18b8      	l32i.n	a11, a8, 4
  2b:	a9bc      	beqz.n	a9, 69 <op_i64_Divide_rs+0x69>
			2b: R_XTENSA_SLOT0_OP	.text.op_i64_Divide_rs+0x69
  2d:	108670        	and	a8, a6, a7
  30:	0a0866        	bnei	a8, -1, 3e <op_i64_Divide_rs+0x3e>
			30: R_XTENSA_SLOT0_OP	.text.op_i64_Divide_rs+0x3e
  33:	000081        	l32r	a8, fffc0034 <op_i64_Divide_rs+0xfffc0034>
			33: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_rs+0x4
  36:	808b80        	add	a8, a11, a8
  39:	208a80        	or	a8, a10, a8
  3c:	98ac      	beqz.n	a8, 69 <op_i64_Divide_rs+0x69>
			3c: R_XTENSA_SLOT0_OP	.text.op_i64_Divide_rs+0x69
  3e:	06cd      	mov.n	a12, a6
  40:	07dd      	mov.n	a13, a7
  42:	000081        	l32r	a8, fffc0044 <op_i64_Divide_rs+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_rs+0x10
			42: R_XTENSA_ASM_EXPAND	__divdi3
  45:	0008e0        	callx8	a8
  48:	c188      	l32i.n	a8, a1, 48
  4a:	d198      	l32i.n	a9, a1, 52
  4c:	0189      	s32i.n	a8, a1, 0
  4e:	000081        	l32r	a8, fffc0050 <op_i64_Divide_rs+0xfffc0050>
			4e: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_rs
  51:	0aed      	mov.n	a14, a10
  53:	0bfd      	mov.n	a15, a11
  55:	1199      	s32i.n	a9, a1, 4
  57:	2189      	s32i.n	a8, a1, 8
  59:	04cd      	mov.n	a12, a4
  5b:	03bd      	mov.n	a11, a3
  5d:	02ad      	mov.n	a10, a2
  5f:	000081        	l32r	a8, fffc0060 <op_i64_Divide_rs+0xfffc0060>
			5f: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_rs+0x14
			5f: R_XTENSA_ASM_EXPAND	.text.profileOp
  62:	0008e0        	callx8	a8
  65:	0a2d      	mov.n	a2, a10
  67:	f01d      	retw.n
  69:	0a0c      	movi.n	a10, 0
  6b:	000081        	l32r	a8, fffc006c <op_i64_Divide_rs+0xfffc006c>
			6b: R_XTENSA_SLOT0_OP	.literal.op_i64_Divide_rs+0x18
			6b: R_XTENSA_ASM_EXPAND	backtrace_err
  6e:	0008e0        	callx8	a8
  71:	0a2d      	mov.n	a2, a10
  73:	f01d      	retw.n

Disassembly of section .text.op_i64_Multiply_ss:

00000000 <op_i64_Multiply_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Multiply_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Multiply_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Multiply_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Multiply_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0868      	l32i.n	a6, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_i64_Multiply_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_Multiply_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_Multiply_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_Multiply_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	0ae8      	l32i.n	a14, a10, 0
  43:	1a88      	l32i.n	a8, a10, 4
  45:	827e70        	mull	a7, a14, a7
  48:	828860        	mull	a8, a8, a6
  4b:	a2fe60        	muluh	a15, a14, a6
  4e:	778a      	add.n	a7, a7, a8
  50:	000081        	l32r	a8, fffc0050 <op_i64_Multiply_ss+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_i64_Multiply_ss
  53:	d198      	l32i.n	a9, a1, 52
  55:	2189      	s32i.n	a8, a1, 8
  57:	c188      	l32i.n	a8, a1, 48
  59:	82ee60        	mull	a14, a14, a6
  5c:	0189      	s32i.n	a8, a1, 0
  5e:	1199      	s32i.n	a9, a1, 4
  60:	f7fa      	add.n	a15, a7, a15
  62:	04cd      	mov.n	a12, a4
  64:	03bd      	mov.n	a11, a3
  66:	02ad      	mov.n	a10, a2
  68:	000081        	l32r	a8, fffc0068 <op_i64_Multiply_ss+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_i64_Multiply_ss+0x14
			68: R_XTENSA_ASM_EXPAND	.text.profileOp
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	f01d      	retw.n

Disassembly of section .text.op_i64_Multiply_rs:

00000000 <op_i64_Multiply_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Multiply_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Multiply_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Multiply_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Multiply_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0ae8      	l32i.n	a14, a10, 0
  22:	1a88      	l32i.n	a8, a10, 4
  24:	827e70        	mull	a7, a14, a7
  27:	828860        	mull	a8, a8, a6
  2a:	a2fe60        	muluh	a15, a14, a6
  2d:	778a      	add.n	a7, a7, a8
  2f:	000081        	l32r	a8, fffc0030 <op_i64_Multiply_rs+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_i64_Multiply_rs
  32:	d198      	l32i.n	a9, a1, 52
  34:	2189      	s32i.n	a8, a1, 8
  36:	c188      	l32i.n	a8, a1, 48
  38:	82ee60        	mull	a14, a14, a6
  3b:	0189      	s32i.n	a8, a1, 0
  3d:	1199      	s32i.n	a9, a1, 4
  3f:	f7fa      	add.n	a15, a7, a15
  41:	04cd      	mov.n	a12, a4
  43:	03bd      	mov.n	a11, a3
  45:	02ad      	mov.n	a10, a2
  47:	000081        	l32r	a8, fffc0048 <op_i64_Multiply_rs+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_i64_Multiply_rs+0xc
			47: R_XTENSA_ASM_EXPAND	.text.profileOp
  4a:	0008e0        	callx8	a8
  4d:	0a2d      	mov.n	a2, a10
  4f:	f01d      	retw.n

Disassembly of section .text.op_i64_Subtract_ss:

00000000 <op_i64_Subtract_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Subtract_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Subtract_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Subtract_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Subtract_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	1868      	l32i.n	a6, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_i64_Subtract_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_Subtract_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	20a440        	or	a10, a4, a4
  3c:	000081        	l32r	a8, fffc003c <op_i64_Subtract_ss+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_i64_Subtract_ss+0x10
			3c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3f:	0008e0        	callx8	a8
  42:	0a88      	l32i.n	a8, a10, 0
  44:	c0e870        	sub	a14, a8, a7
  47:	1aa8      	l32i.n	a10, a10, 4
  49:	1f0c      	movi.n	a15, 1
  4b:	0238e7        	bltu	a8, a14, 51 <op_i64_Subtract_ss+0x51>
			4b: R_XTENSA_SLOT0_OP	.text.op_i64_Subtract_ss+0x51
  4e:	00a0f2        	movi	a15, 0
  51:	000081        	l32r	a8, fffc0054 <op_i64_Subtract_ss+0xfffc0054>
			51: R_XTENSA_SLOT0_OP	.literal.op_i64_Subtract_ss
  54:	d198      	l32i.n	a9, a1, 52
  56:	2189      	s32i.n	a8, a1, 8
  58:	c188      	l32i.n	a8, a1, 48
  5a:	c0aa60        	sub	a10, a10, a6
  5d:	c0faf0        	sub	a15, a10, a15
  60:	0189      	s32i.n	a8, a1, 0
  62:	1199      	s32i.n	a9, a1, 4
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_i64_Subtract_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_i64_Subtract_ss+0x14
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_i64_Subtract_sr:

00000000 <op_i64_Subtract_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Subtract_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Subtract_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	08a0c2        	movi	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_i64_Subtract_sr+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_i64_Subtract_sr+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0ae8      	l32i.n	a14, a10, 0
  24:	1a88      	l32i.n	a8, a10, 4
  26:	c0e6e0        	sub	a14, a6, a14
  29:	1f0c      	movi.n	a15, 1
  2b:	0236e7        	bltu	a6, a14, 31 <op_i64_Subtract_sr+0x31>
			2b: R_XTENSA_SLOT0_OP	.text.op_i64_Subtract_sr+0x31
  2e:	00a0f2        	movi	a15, 0
  31:	c07780        	sub	a7, a7, a8
  34:	000081        	l32r	a8, fffc0034 <op_i64_Subtract_sr+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.op_i64_Subtract_sr
  37:	d198      	l32i.n	a9, a1, 52
  39:	2189      	s32i.n	a8, a1, 8
  3b:	c188      	l32i.n	a8, a1, 48
  3d:	1199      	s32i.n	a9, a1, 4
  3f:	0189      	s32i.n	a8, a1, 0
  41:	c0f7f0        	sub	a15, a7, a15
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_i64_Subtract_sr+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_i64_Subtract_sr+0xc
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n

Disassembly of section .text.op_i64_Subtract_rs:

00000000 <op_i64_Subtract_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Subtract_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Subtract_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	08a0c2        	movi	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_i64_Subtract_rs+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_i64_Subtract_rs+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0a88      	l32i.n	a8, a10, 0
  24:	c0e860        	sub	a14, a8, a6
  27:	1aa8      	l32i.n	a10, a10, 4
  29:	1f0c      	movi.n	a15, 1
  2b:	0238e7        	bltu	a8, a14, 31 <op_i64_Subtract_rs+0x31>
			2b: R_XTENSA_SLOT0_OP	.text.op_i64_Subtract_rs+0x31
  2e:	00a0f2        	movi	a15, 0
  31:	000081        	l32r	a8, fffc0034 <op_i64_Subtract_rs+0xfffc0034>
			31: R_XTENSA_SLOT0_OP	.literal.op_i64_Subtract_rs
  34:	d198      	l32i.n	a9, a1, 52
  36:	2189      	s32i.n	a8, a1, 8
  38:	c188      	l32i.n	a8, a1, 48
  3a:	c0aa70        	sub	a10, a10, a7
  3d:	c0faf0        	sub	a15, a10, a15
  40:	0189      	s32i.n	a8, a1, 0
  42:	1199      	s32i.n	a9, a1, 4
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_i64_Subtract_rs+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_i64_Subtract_rs+0xc
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n

Disassembly of section .text.op_i64_Add_ss:

00000000 <op_i64_Add_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Add_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Add_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Add_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Add_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	0868      	l32i.n	a6, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_i64_Add_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_Add_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_Add_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_Add_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	0ae8      	l32i.n	a14, a10, 0
  43:	1a88      	l32i.n	a8, a10, 4
  45:	e6ea      	add.n	a14, a6, a14
  47:	1f0c      	movi.n	a15, 1
  49:	013e67        	bltu	a14, a6, 4e <op_i64_Add_ss+0x4e>
			49: R_XTENSA_SLOT0_OP	.text.op_i64_Add_ss+0x4e
  4c:	0f0c      	movi.n	a15, 0
  4e:	778a      	add.n	a7, a7, a8
  50:	000081        	l32r	a8, fffc0050 <op_i64_Add_ss+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_i64_Add_ss
  53:	d198      	l32i.n	a9, a1, 52
  55:	2189      	s32i.n	a8, a1, 8
  57:	c188      	l32i.n	a8, a1, 48
  59:	1199      	s32i.n	a9, a1, 4
  5b:	0189      	s32i.n	a8, a1, 0
  5d:	ff7a      	add.n	a15, a15, a7
  5f:	04cd      	mov.n	a12, a4
  61:	03bd      	mov.n	a11, a3
  63:	20a220        	or	a10, a2, a2
  66:	000081        	l32r	a8, fffc0068 <op_i64_Add_ss+0xfffc0068>
			66: R_XTENSA_SLOT0_OP	.literal.op_i64_Add_ss+0x14
			66: R_XTENSA_ASM_EXPAND	.text.profileOp
  69:	0008e0        	callx8	a8
  6c:	0a2d      	mov.n	a2, a10
  6e:	f01d      	retw.n

Disassembly of section .text.op_i64_Add_rs:

00000000 <op_i64_Add_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Add_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Add_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Add_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Add_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0ae8      	l32i.n	a14, a10, 0
  22:	1a88      	l32i.n	a8, a10, 4
  24:	e6ea      	add.n	a14, a6, a14
  26:	1f0c      	movi.n	a15, 1
  28:	013e67        	bltu	a14, a6, 2d <op_i64_Add_rs+0x2d>
			28: R_XTENSA_SLOT0_OP	.text.op_i64_Add_rs+0x2d
  2b:	0f0c      	movi.n	a15, 0
  2d:	778a      	add.n	a7, a7, a8
  2f:	000081        	l32r	a8, fffc0030 <op_i64_Add_rs+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_i64_Add_rs
  32:	d198      	l32i.n	a9, a1, 52
  34:	2189      	s32i.n	a8, a1, 8
  36:	c188      	l32i.n	a8, a1, 48
  38:	1199      	s32i.n	a9, a1, 4
  3a:	0189      	s32i.n	a8, a1, 0
  3c:	ff7a      	add.n	a15, a15, a7
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_i64_Add_rs+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_i64_Add_rs+0xc
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n

Disassembly of section .text.op_u32_Rotr_ss:

00000000 <op_u32_Rotr_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Rotr_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotr_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_Rotr_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotr_ss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002872        	l32i	a7, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_u32_Rotr_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotr_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_u32_Rotr_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotr_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	c188      	l32i.n	a8, a1, 48
  43:	0ae8      	l32i.n	a14, a10, 0
  45:	d198      	l32i.n	a9, a1, 52
  47:	0189      	s32i.n	a8, a1, 0
  49:	000081        	l32r	a8, fffc004c <op_u32_Rotr_ss+0xfffc004c>
			49: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotr_ss
  4c:	1199      	s32i.n	a9, a1, 4
  4e:	2189      	s32i.n	a8, a1, 8
  50:	400700        	ssr	a7
  53:	81eee0        	src	a14, a14, a14
  56:	0f0c      	movi.n	a15, 0
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_u32_Rotr_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotr_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_u32_Rotr_sr:

00000000 <op_u32_Rotr_sr>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Rotr_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotr_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_Rotr_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotr_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c188      	l32i.n	a8, a1, 48
  23:	0ae8      	l32i.n	a14, a10, 0
  25:	d198      	l32i.n	a9, a1, 52
  27:	0189      	s32i.n	a8, a1, 0
  29:	000081        	l32r	a8, fffc002c <op_u32_Rotr_sr+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotr_sr
  2c:	1199      	s32i.n	a9, a1, 4
  2e:	2189      	s32i.n	a8, a1, 8
  30:	400e00        	ssr	a14
  33:	81e660        	src	a14, a6, a6
  36:	0f0c      	movi.n	a15, 0
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_u32_Rotr_sr+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotr_sr+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_u32_Rotr_rs:

00000000 <op_u32_Rotr_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Rotr_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotr_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_Rotr_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotr_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c188      	l32i.n	a8, a1, 48
  23:	0ae8      	l32i.n	a14, a10, 0
  25:	d198      	l32i.n	a9, a1, 52
  27:	0189      	s32i.n	a8, a1, 0
  29:	000081        	l32r	a8, fffc002c <op_u32_Rotr_rs+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotr_rs
  2c:	1199      	s32i.n	a9, a1, 4
  2e:	2189      	s32i.n	a8, a1, 8
  30:	400600        	ssr	a6
  33:	81eee0        	src	a14, a14, a14
  36:	0f0c      	movi.n	a15, 0
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_u32_Rotr_rs+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotr_rs+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_u32_Rotl_ss:

00000000 <op_u32_Rotl_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Rotl_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotl_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_Rotl_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotl_ss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002872        	l32i	a7, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_u32_Rotl_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotl_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_u32_Rotl_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotl_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	c188      	l32i.n	a8, a1, 48
  43:	0ae8      	l32i.n	a14, a10, 0
  45:	d198      	l32i.n	a9, a1, 52
  47:	0189      	s32i.n	a8, a1, 0
  49:	000081        	l32r	a8, fffc004c <op_u32_Rotl_ss+0xfffc004c>
			49: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotl_ss
  4c:	1199      	s32i.n	a9, a1, 4
  4e:	2189      	s32i.n	a8, a1, 8
  50:	401700        	ssl	a7
  53:	81eee0        	src	a14, a14, a14
  56:	0f0c      	movi.n	a15, 0
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_u32_Rotl_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotl_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_u32_Rotl_sr:

00000000 <op_u32_Rotl_sr>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Rotl_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotl_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_Rotl_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotl_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c188      	l32i.n	a8, a1, 48
  23:	0ae8      	l32i.n	a14, a10, 0
  25:	d198      	l32i.n	a9, a1, 52
  27:	0189      	s32i.n	a8, a1, 0
  29:	000081        	l32r	a8, fffc002c <op_u32_Rotl_sr+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotl_sr
  2c:	1199      	s32i.n	a9, a1, 4
  2e:	2189      	s32i.n	a8, a1, 8
  30:	401e00        	ssl	a14
  33:	81e660        	src	a14, a6, a6
  36:	0f0c      	movi.n	a15, 0
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_u32_Rotl_sr+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotl_sr+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_u32_Rotl_rs:

00000000 <op_u32_Rotl_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Rotl_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotl_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_Rotl_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotl_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c188      	l32i.n	a8, a1, 48
  23:	0ae8      	l32i.n	a14, a10, 0
  25:	d198      	l32i.n	a9, a1, 52
  27:	0189      	s32i.n	a8, a1, 0
  29:	000081        	l32r	a8, fffc002c <op_u32_Rotl_rs+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotl_rs
  2c:	1199      	s32i.n	a9, a1, 4
  2e:	2189      	s32i.n	a8, a1, 8
  30:	401600        	ssl	a6
  33:	81eee0        	src	a14, a14, a14
  36:	0f0c      	movi.n	a15, 0
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_u32_Rotl_rs+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_u32_Rotl_rs+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_u32_ShiftRight_ss:

00000000 <op_u32_ShiftRight_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_ShiftRight_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftRight_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_ShiftRight_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftRight_ss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002872        	l32i	a7, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_u32_ShiftRight_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftRight_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_u32_ShiftRight_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftRight_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	c188      	l32i.n	a8, a1, 48
  43:	0ae8      	l32i.n	a14, a10, 0
  45:	d198      	l32i.n	a9, a1, 52
  47:	0189      	s32i.n	a8, a1, 0
  49:	000081        	l32r	a8, fffc004c <op_u32_ShiftRight_ss+0xfffc004c>
			49: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftRight_ss
  4c:	1199      	s32i.n	a9, a1, 4
  4e:	2189      	s32i.n	a8, a1, 8
  50:	400700        	ssr	a7
  53:	91e0e0        	srl	a14, a14
  56:	0f0c      	movi.n	a15, 0
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_u32_ShiftRight_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftRight_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_u32_ShiftRight_sr:

00000000 <op_u32_ShiftRight_sr>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_ShiftRight_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftRight_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_ShiftRight_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftRight_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c188      	l32i.n	a8, a1, 48
  23:	0ae8      	l32i.n	a14, a10, 0
  25:	d198      	l32i.n	a9, a1, 52
  27:	0189      	s32i.n	a8, a1, 0
  29:	000081        	l32r	a8, fffc002c <op_u32_ShiftRight_sr+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftRight_sr
  2c:	1199      	s32i.n	a9, a1, 4
  2e:	2189      	s32i.n	a8, a1, 8
  30:	400e00        	ssr	a14
  33:	91e060        	srl	a14, a6
  36:	0f0c      	movi.n	a15, 0
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_u32_ShiftRight_sr+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftRight_sr+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_u32_ShiftRight_rs:

00000000 <op_u32_ShiftRight_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_ShiftRight_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftRight_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_ShiftRight_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftRight_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c188      	l32i.n	a8, a1, 48
  23:	0ae8      	l32i.n	a14, a10, 0
  25:	d198      	l32i.n	a9, a1, 52
  27:	0189      	s32i.n	a8, a1, 0
  29:	000081        	l32r	a8, fffc002c <op_u32_ShiftRight_rs+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftRight_rs
  2c:	1199      	s32i.n	a9, a1, 4
  2e:	2189      	s32i.n	a8, a1, 8
  30:	400600        	ssr	a6
  33:	91e0e0        	srl	a14, a14
  36:	0f0c      	movi.n	a15, 0
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_u32_ShiftRight_rs+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftRight_rs+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_i32_ShiftRight_ss:

00000000 <op_i32_ShiftRight_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_ShiftRight_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_ShiftRight_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_ShiftRight_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_ShiftRight_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_ShiftRight_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_ShiftRight_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_i32_ShiftRight_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i32_ShiftRight_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	000081        	l32r	a8, fffc0040 <op_i32_ShiftRight_ss+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.op_i32_ShiftRight_ss
  43:	0af8      	l32i.n	a15, a10, 0
  45:	d198      	l32i.n	a9, a1, 52
  47:	2189      	s32i.n	a8, a1, 8
  49:	c188      	l32i.n	a8, a1, 48
  4b:	400700        	ssr	a7
  4e:	b1f0f0        	sra	a15, a15
  51:	0fed      	mov.n	a14, a15
  53:	0189      	s32i.n	a8, a1, 0
  55:	1199      	s32i.n	a9, a1, 4
  57:	31fff0        	srai	a15, a15, 31
  5a:	04cd      	mov.n	a12, a4
  5c:	03bd      	mov.n	a11, a3
  5e:	02ad      	mov.n	a10, a2
  60:	000081        	l32r	a8, fffc0060 <op_i32_ShiftRight_ss+0xfffc0060>
			60: R_XTENSA_SLOT0_OP	.literal.op_i32_ShiftRight_ss+0x14
			60: R_XTENSA_ASM_EXPAND	.text.profileOp
  63:	0008e0        	callx8	a8
  66:	0a2d      	mov.n	a2, a10
  68:	f01d      	retw.n

Disassembly of section .text.op_i32_ShiftRight_sr:

00000000 <op_i32_ShiftRight_sr>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_ShiftRight_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_ShiftRight_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_ShiftRight_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_ShiftRight_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a88      	l32i.n	a8, a10, 0
  22:	d198      	l32i.n	a9, a1, 52
  24:	400800        	ssr	a8
  27:	b1f060        	sra	a15, a6
  2a:	000081        	l32r	a8, fffc002c <op_i32_ShiftRight_sr+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_i32_ShiftRight_sr
  2d:	0fed      	mov.n	a14, a15
  2f:	2189      	s32i.n	a8, a1, 8
  31:	c188      	l32i.n	a8, a1, 48
  33:	1199      	s32i.n	a9, a1, 4
  35:	0189      	s32i.n	a8, a1, 0
  37:	31fff0        	srai	a15, a15, 31
  3a:	04cd      	mov.n	a12, a4
  3c:	03bd      	mov.n	a11, a3
  3e:	02ad      	mov.n	a10, a2
  40:	000081        	l32r	a8, fffc0040 <op_i32_ShiftRight_sr+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.op_i32_ShiftRight_sr+0xc
			40: R_XTENSA_ASM_EXPAND	.text.profileOp
  43:	0008e0        	callx8	a8
  46:	0a2d      	mov.n	a2, a10
  48:	f01d      	retw.n

Disassembly of section .text.op_i32_ShiftRight_rs:

00000000 <op_i32_ShiftRight_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_ShiftRight_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_ShiftRight_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_ShiftRight_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_ShiftRight_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_i32_ShiftRight_rs+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_i32_ShiftRight_rs
  23:	0af8      	l32i.n	a15, a10, 0
  25:	d198      	l32i.n	a9, a1, 52
  27:	2189      	s32i.n	a8, a1, 8
  29:	c188      	l32i.n	a8, a1, 48
  2b:	400600        	ssr	a6
  2e:	b1f0f0        	sra	a15, a15
  31:	0fed      	mov.n	a14, a15
  33:	0189      	s32i.n	a8, a1, 0
  35:	1199      	s32i.n	a9, a1, 4
  37:	31fff0        	srai	a15, a15, 31
  3a:	04cd      	mov.n	a12, a4
  3c:	03bd      	mov.n	a11, a3
  3e:	02ad      	mov.n	a10, a2
  40:	000081        	l32r	a8, fffc0040 <op_i32_ShiftRight_rs+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.op_i32_ShiftRight_rs+0xc
			40: R_XTENSA_ASM_EXPAND	.text.profileOp
  43:	0008e0        	callx8	a8
  46:	0a2d      	mov.n	a2, a10
  48:	f01d      	retw.n

Disassembly of section .text.op_u32_ShiftLeft_ss:

00000000 <op_u32_ShiftLeft_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_ShiftLeft_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftLeft_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_ShiftLeft_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftLeft_ss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002872        	l32i	a7, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_u32_ShiftLeft_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftLeft_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_u32_ShiftLeft_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftLeft_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	c188      	l32i.n	a8, a1, 48
  43:	0ae8      	l32i.n	a14, a10, 0
  45:	d198      	l32i.n	a9, a1, 52
  47:	0189      	s32i.n	a8, a1, 0
  49:	000081        	l32r	a8, fffc004c <op_u32_ShiftLeft_ss+0xfffc004c>
			49: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftLeft_ss
  4c:	1199      	s32i.n	a9, a1, 4
  4e:	2189      	s32i.n	a8, a1, 8
  50:	401700        	ssl	a7
  53:	a1ee00        	sll	a14, a14
  56:	0f0c      	movi.n	a15, 0
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_u32_ShiftLeft_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftLeft_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_u32_ShiftLeft_sr:

00000000 <op_u32_ShiftLeft_sr>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_ShiftLeft_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftLeft_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_ShiftLeft_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftLeft_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c188      	l32i.n	a8, a1, 48
  23:	0ae8      	l32i.n	a14, a10, 0
  25:	d198      	l32i.n	a9, a1, 52
  27:	0189      	s32i.n	a8, a1, 0
  29:	000081        	l32r	a8, fffc002c <op_u32_ShiftLeft_sr+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftLeft_sr
  2c:	1199      	s32i.n	a9, a1, 4
  2e:	2189      	s32i.n	a8, a1, 8
  30:	401e00        	ssl	a14
  33:	a1e600        	sll	a14, a6
  36:	0f0c      	movi.n	a15, 0
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_u32_ShiftLeft_sr+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftLeft_sr+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_u32_ShiftLeft_rs:

00000000 <op_u32_ShiftLeft_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_ShiftLeft_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftLeft_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_ShiftLeft_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftLeft_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c188      	l32i.n	a8, a1, 48
  23:	0ae8      	l32i.n	a14, a10, 0
  25:	d198      	l32i.n	a9, a1, 52
  27:	0189      	s32i.n	a8, a1, 0
  29:	000081        	l32r	a8, fffc002c <op_u32_ShiftLeft_rs+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftLeft_rs
  2c:	1199      	s32i.n	a9, a1, 4
  2e:	2189      	s32i.n	a8, a1, 8
  30:	401600        	ssl	a6
  33:	a1ee00        	sll	a14, a14
  36:	0f0c      	movi.n	a15, 0
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_u32_ShiftLeft_rs+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_u32_ShiftLeft_rs+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_u32_Xor_ss:

00000000 <op_u32_Xor_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Xor_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Xor_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Xor_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Xor_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_u32_Xor_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u32_Xor_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_u32_Xor_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_Xor_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0ae8      	l32i.n	a14, a10, 0
  42:	d1b8      	l32i.n	a11, a1, 52
  44:	c1a8      	l32i.n	a10, a1, 48
  46:	000091        	l32r	a9, fffc0048 <op_u32_Xor_ss+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_u32_Xor_ss
  49:	01a9      	s32i.n	a10, a1, 0
  4b:	11b9      	s32i.n	a11, a1, 4
  4d:	2199      	s32i.n	a9, a1, 8
  4f:	30e7e0        	xor	a14, a7, a14
  52:	0f0c      	movi.n	a15, 0
  54:	04cd      	mov.n	a12, a4
  56:	03bd      	mov.n	a11, a3
  58:	02ad      	mov.n	a10, a2
  5a:	000081        	l32r	a8, fffc005c <op_u32_Xor_ss+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_u32_Xor_ss+0x14
			5a: R_XTENSA_ASM_EXPAND	.text.profileOp
  5d:	0008e0        	callx8	a8
  60:	0a2d      	mov.n	a2, a10
  62:	f01d      	retw.n

Disassembly of section .text.op_u32_Xor_rs:

00000000 <op_u32_Xor_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Xor_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Xor_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Xor_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Xor_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	c188      	l32i.n	a8, a1, 48
  22:	0ae8      	l32i.n	a14, a10, 0
  24:	d198      	l32i.n	a9, a1, 52
  26:	0189      	s32i.n	a8, a1, 0
  28:	000081        	l32r	a8, fffc0028 <op_u32_Xor_rs+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_u32_Xor_rs
  2b:	1199      	s32i.n	a9, a1, 4
  2d:	2189      	s32i.n	a8, a1, 8
  2f:	30ee60        	xor	a14, a14, a6
  32:	0f0c      	movi.n	a15, 0
  34:	04cd      	mov.n	a12, a4
  36:	03bd      	mov.n	a11, a3
  38:	02ad      	mov.n	a10, a2
  3a:	000081        	l32r	a8, fffc003c <op_u32_Xor_rs+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_Xor_rs+0xc
			3a: R_XTENSA_ASM_EXPAND	.text.profileOp
  3d:	0008e0        	callx8	a8
  40:	0a2d      	mov.n	a2, a10
  42:	f01d      	retw.n

Disassembly of section .text.op_u32_Or_ss:

00000000 <op_u32_Or_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Or_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Or_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Or_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Or_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_u32_Or_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u32_Or_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_u32_Or_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_Or_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0ae8      	l32i.n	a14, a10, 0
  42:	d1b8      	l32i.n	a11, a1, 52
  44:	c1a8      	l32i.n	a10, a1, 48
  46:	000091        	l32r	a9, fffc0048 <op_u32_Or_ss+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_u32_Or_ss
  49:	01a9      	s32i.n	a10, a1, 0
  4b:	11b9      	s32i.n	a11, a1, 4
  4d:	2199      	s32i.n	a9, a1, 8
  4f:	20e7e0        	or	a14, a7, a14
  52:	0f0c      	movi.n	a15, 0
  54:	04cd      	mov.n	a12, a4
  56:	03bd      	mov.n	a11, a3
  58:	02ad      	mov.n	a10, a2
  5a:	000081        	l32r	a8, fffc005c <op_u32_Or_ss+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_u32_Or_ss+0x14
			5a: R_XTENSA_ASM_EXPAND	.text.profileOp
  5d:	0008e0        	callx8	a8
  60:	0a2d      	mov.n	a2, a10
  62:	f01d      	retw.n

Disassembly of section .text.op_u32_Or_rs:

00000000 <op_u32_Or_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Or_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Or_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Or_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Or_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	c188      	l32i.n	a8, a1, 48
  22:	0ae8      	l32i.n	a14, a10, 0
  24:	d198      	l32i.n	a9, a1, 52
  26:	0189      	s32i.n	a8, a1, 0
  28:	000081        	l32r	a8, fffc0028 <op_u32_Or_rs+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_u32_Or_rs
  2b:	1199      	s32i.n	a9, a1, 4
  2d:	2189      	s32i.n	a8, a1, 8
  2f:	20ee60        	or	a14, a14, a6
  32:	0f0c      	movi.n	a15, 0
  34:	04cd      	mov.n	a12, a4
  36:	03bd      	mov.n	a11, a3
  38:	02ad      	mov.n	a10, a2
  3a:	000081        	l32r	a8, fffc003c <op_u32_Or_rs+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_Or_rs+0xc
			3a: R_XTENSA_ASM_EXPAND	.text.profileOp
  3d:	0008e0        	callx8	a8
  40:	0a2d      	mov.n	a2, a10
  42:	f01d      	retw.n

Disassembly of section .text.op_u32_And_ss:

00000000 <op_u32_And_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_And_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_And_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_And_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_And_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_u32_And_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u32_And_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_u32_And_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_And_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0ae8      	l32i.n	a14, a10, 0
  42:	d1b8      	l32i.n	a11, a1, 52
  44:	c1a8      	l32i.n	a10, a1, 48
  46:	000091        	l32r	a9, fffc0048 <op_u32_And_ss+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_u32_And_ss
  49:	01a9      	s32i.n	a10, a1, 0
  4b:	11b9      	s32i.n	a11, a1, 4
  4d:	2199      	s32i.n	a9, a1, 8
  4f:	10e7e0        	and	a14, a7, a14
  52:	0f0c      	movi.n	a15, 0
  54:	04cd      	mov.n	a12, a4
  56:	03bd      	mov.n	a11, a3
  58:	02ad      	mov.n	a10, a2
  5a:	000081        	l32r	a8, fffc005c <op_u32_And_ss+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_u32_And_ss+0x14
			5a: R_XTENSA_ASM_EXPAND	.text.profileOp
  5d:	0008e0        	callx8	a8
  60:	0a2d      	mov.n	a2, a10
  62:	f01d      	retw.n

Disassembly of section .text.op_u32_And_rs:

00000000 <op_u32_And_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_And_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_And_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_And_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_And_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	c188      	l32i.n	a8, a1, 48
  22:	0ae8      	l32i.n	a14, a10, 0
  24:	d198      	l32i.n	a9, a1, 52
  26:	0189      	s32i.n	a8, a1, 0
  28:	000081        	l32r	a8, fffc0028 <op_u32_And_rs+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_u32_And_rs
  2b:	1199      	s32i.n	a9, a1, 4
  2d:	2189      	s32i.n	a8, a1, 8
  2f:	10ee60        	and	a14, a14, a6
  32:	0f0c      	movi.n	a15, 0
  34:	04cd      	mov.n	a12, a4
  36:	03bd      	mov.n	a11, a3
  38:	02ad      	mov.n	a10, a2
  3a:	000081        	l32r	a8, fffc003c <op_u32_And_rs+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_And_rs+0xc
			3a: R_XTENSA_ASM_EXPAND	.text.profileOp
  3d:	0008e0        	callx8	a8
  40:	0a2d      	mov.n	a2, a10
  42:	f01d      	retw.n

Disassembly of section .text.op_u32_Remainder_ss:

00000000 <op_u32_Remainder_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Remainder_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Remainder_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_u32_Remainder_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_u32_Remainder_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0ae8      	l32i.n	a14, a10, 0
  42:	07ac      	beqz.n	a7, 66 <op_u32_Remainder_ss+0x66>
			42: R_XTENSA_SLOT0_OP	.text.op_u32_Remainder_ss+0x66
  44:	c188      	l32i.n	a8, a1, 48
  46:	d198      	l32i.n	a9, a1, 52
  48:	0189      	s32i.n	a8, a1, 0
  4a:	000081        	l32r	a8, fffc004c <op_u32_Remainder_ss+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_ss
  4d:	1199      	s32i.n	a9, a1, 4
  4f:	2189      	s32i.n	a8, a1, 8
  51:	e2ee70        	remu	a14, a14, a7
  54:	0f0c      	movi.n	a15, 0
  56:	04cd      	mov.n	a12, a4
  58:	03bd      	mov.n	a11, a3
  5a:	02ad      	mov.n	a10, a2
  5c:	000081        	l32r	a8, fffc005c <op_u32_Remainder_ss+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_ss+0x14
			5c: R_XTENSA_ASM_EXPAND	.text.profileOp
  5f:	0008e0        	callx8	a8
  62:	0a2d      	mov.n	a2, a10
  64:	f01d      	retw.n
  66:	07ad      	mov.n	a10, a7
  68:	000081        	l32r	a8, fffc0068 <op_u32_Remainder_ss+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_ss+0x18
			68: R_XTENSA_ASM_EXPAND	backtrace_err
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	f01d      	retw.n

Disassembly of section .text.op_u32_Remainder_sr:

00000000 <op_u32_Remainder_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Remainder_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Remainder_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0aa8      	l32i.n	a10, a10, 0
  22:	2aac      	beqz.n	a10, 48 <op_u32_Remainder_sr+0x48>
			22: R_XTENSA_SLOT0_OP	.text.op_u32_Remainder_sr+0x48
  24:	c188      	l32i.n	a8, a1, 48
  26:	d198      	l32i.n	a9, a1, 52
  28:	0189      	s32i.n	a8, a1, 0
  2a:	000081        	l32r	a8, fffc002c <op_u32_Remainder_sr+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_sr
  2d:	e2e6a0        	remu	a14, a6, a10
  30:	1199      	s32i.n	a9, a1, 4
  32:	2189      	s32i.n	a8, a1, 8
  34:	0f0c      	movi.n	a15, 0
  36:	04cd      	mov.n	a12, a4
  38:	03bd      	mov.n	a11, a3
  3a:	02ad      	mov.n	a10, a2
  3c:	000081        	l32r	a8, fffc003c <op_u32_Remainder_sr+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_sr+0xc
			3c: R_XTENSA_ASM_EXPAND	.text.profileOp
  3f:	0008e0        	callx8	a8
  42:	0a2d      	mov.n	a2, a10
  44:	f01d      	retw.n
  46:	00          	.byte	00
  47:	00          	.byte	00
  48:	000081        	l32r	a8, fffc0048 <op_u32_Remainder_sr+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_sr+0x10
			48: R_XTENSA_ASM_EXPAND	backtrace_err
  4b:	0008e0        	callx8	a8
  4e:	0a2d      	mov.n	a2, a10
  50:	f01d      	retw.n

Disassembly of section .text.op_u32_Remainder_rs:

00000000 <op_u32_Remainder_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Remainder_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Remainder_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0ae8      	l32i.n	a14, a10, 0
  22:	06ac      	beqz.n	a6, 46 <op_u32_Remainder_rs+0x46>
			22: R_XTENSA_SLOT0_OP	.text.op_u32_Remainder_rs+0x46
  24:	c188      	l32i.n	a8, a1, 48
  26:	d198      	l32i.n	a9, a1, 52
  28:	0189      	s32i.n	a8, a1, 0
  2a:	000081        	l32r	a8, fffc002c <op_u32_Remainder_rs+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_rs
  2d:	1199      	s32i.n	a9, a1, 4
  2f:	2189      	s32i.n	a8, a1, 8
  31:	e2ee60        	remu	a14, a14, a6
  34:	0f0c      	movi.n	a15, 0
  36:	04cd      	mov.n	a12, a4
  38:	03bd      	mov.n	a11, a3
  3a:	02ad      	mov.n	a10, a2
  3c:	000081        	l32r	a8, fffc003c <op_u32_Remainder_rs+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_rs+0xc
			3c: R_XTENSA_ASM_EXPAND	.text.profileOp
  3f:	0008e0        	callx8	a8
  42:	0a2d      	mov.n	a2, a10
  44:	f01d      	retw.n
  46:	06ad      	mov.n	a10, a6
  48:	000081        	l32r	a8, fffc0048 <op_u32_Remainder_rs+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_u32_Remainder_rs+0x10
			48: R_XTENSA_ASM_EXPAND	backtrace_err
  4b:	0008e0        	callx8	a8
  4e:	0a2d      	mov.n	a2, a10
  50:	f01d      	retw.n

Disassembly of section .text.op_i32_Remainder_ss:

00000000 <op_i32_Remainder_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Remainder_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_ss+0x8
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Remainder_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_ss+0xc
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	4c0c      	movi.n	a12, 4
  25:	02bd      	mov.n	a11, a2
  27:	04ad      	mov.n	a10, a4
  29:	002872        	l32i	a7, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_i32_Remainder_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_ss+0x10
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	20a440        	or	a10, a4, a4
  3c:	000081        	l32r	a8, fffc003c <op_i32_Remainder_ss+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_ss+0x14
			3c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3f:	0008e0        	callx8	a8
  42:	0ae8      	l32i.n	a14, a10, 0
  44:	47bc      	beqz.n	a7, 7c <op_i32_Remainder_ss+0x7c>
			44: R_XTENSA_SLOT0_OP	.text.op_i32_Remainder_ss+0x7c
  46:	070766        	bnei	a7, -1, 51 <op_i32_Remainder_ss+0x51>
			46: R_XTENSA_SLOT0_OP	.text.op_i32_Remainder_ss+0x51
  49:	000081        	l32r	a8, fffc004c <op_i32_Remainder_ss+0xfffc004c>
			49: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_ss+0x4
  4c:	8e8a      	add.n	a8, a14, a8
  4e:	022816        	beqz	a8, 74 <op_i32_Remainder_ss+0x74>
			4e: R_XTENSA_SLOT0_OP	.text.op_i32_Remainder_ss+0x74
  51:	f2ee70        	rems	a14, a14, a7
  54:	31ffe0        	srai	a15, a14, 31
  57:	c188      	l32i.n	a8, a1, 48
  59:	d198      	l32i.n	a9, a1, 52
  5b:	0189      	s32i.n	a8, a1, 0
  5d:	000081        	l32r	a8, fffc0060 <op_i32_Remainder_ss+0xfffc0060>
			5d: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_ss
  60:	1199      	s32i.n	a9, a1, 4
  62:	2189      	s32i.n	a8, a1, 8
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_i32_Remainder_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_ss+0x18
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n
  74:	0e0c      	movi.n	a14, 0
  76:	0efd      	mov.n	a15, a14
  78:	fff6c6        	j	57 <op_i32_Remainder_ss+0x57>
			78: R_XTENSA_SLOT0_OP	.text.op_i32_Remainder_ss+0x57
  7b:	00          	.byte	00
  7c:	07ad      	mov.n	a10, a7
  7e:	000081        	l32r	a8, fffc0080 <op_i32_Remainder_ss+0xfffc0080>
			7e: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_ss+0x1c
			7e: R_XTENSA_ASM_EXPAND	backtrace_err
  81:	0008e0        	callx8	a8
  84:	0a2d      	mov.n	a2, a10
  86:	f01d      	retw.n

Disassembly of section .text.op_i32_Remainder_sr:

00000000 <op_i32_Remainder_sr>:
   0:	006136        	entry	a1, 48
   3:	04a0c2        	movi	a12, 4
   6:	20b220        	or	a11, a2, a2
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_i32_Remainder_sr+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_sr+0x8
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	4c0c      	movi.n	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_i32_Remainder_sr+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_sr+0xc
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0aa8      	l32i.n	a10, a10, 0
  24:	4aac      	beqz.n	a10, 4c <op_i32_Remainder_sr+0x4c>
			24: R_XTENSA_SLOT0_OP	.text.op_i32_Remainder_sr+0x4c
  26:	2e0a26        	beqi	a10, -1, 58 <op_i32_Remainder_sr+0x58>
			26: R_XTENSA_SLOT0_OP	.text.op_i32_Remainder_sr+0x58
  29:	f2e6a0        	rems	a14, a6, a10
  2c:	31ffe0        	srai	a15, a14, 31
  2f:	c188      	l32i.n	a8, a1, 48
  31:	d198      	l32i.n	a9, a1, 52
  33:	0189      	s32i.n	a8, a1, 0
  35:	000081        	l32r	a8, fffc0038 <op_i32_Remainder_sr+0xfffc0038>
			35: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_sr
  38:	1199      	s32i.n	a9, a1, 4
  3a:	2189      	s32i.n	a8, a1, 8
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i32_Remainder_sr+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_sr+0x10
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n
  4c:	000081        	l32r	a8, fffc004c <op_i32_Remainder_sr+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_sr+0x14
			4c: R_XTENSA_ASM_EXPAND	backtrace_err
  4f:	0008e0        	callx8	a8
  52:	0a2d      	mov.n	a2, a10
  54:	f01d      	retw.n
  56:	00          	.byte	00
  57:	00          	.byte	00
  58:	000081        	l32r	a8, fffc0058 <op_i32_Remainder_sr+0xfffc0058>
			58: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_sr+0x4
  5b:	ca9687        	bne	a6, a8, 29 <op_i32_Remainder_sr+0x29>
			5b: R_XTENSA_SLOT0_OP	.text.op_i32_Remainder_sr+0x29
  5e:	0e0c      	movi.n	a14, 0
  60:	0efd      	mov.n	a15, a14
  62:	fff246        	j	2f <op_i32_Remainder_sr+0x2f>
			62: R_XTENSA_SLOT0_OP	.text.op_i32_Remainder_sr+0x2f

Disassembly of section .text.op_i32_Remainder_rs:

00000000 <op_i32_Remainder_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Remainder_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_rs+0x8
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	04a0c2        	movi	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_i32_Remainder_rs+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_rs+0xc
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0ae8      	l32i.n	a14, a10, 0
  24:	c6ac      	beqz.n	a6, 54 <op_i32_Remainder_rs+0x54>
			24: R_XTENSA_SLOT0_OP	.text.op_i32_Remainder_rs+0x54
  26:	000081        	l32r	a8, fffc0028 <op_i32_Remainder_rs+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_rs+0x4
  29:	8e8a      	add.n	a8, a14, a8
  2b:	002856        	bnez	a8, 31 <op_i32_Remainder_rs+0x31>
			2b: R_XTENSA_SLOT0_OP	.text.op_i32_Remainder_rs+0x31
  2e:	2e0626        	beqi	a6, -1, 60 <op_i32_Remainder_rs+0x60>
			2e: R_XTENSA_SLOT0_OP	.text.op_i32_Remainder_rs+0x60
  31:	f2ee60        	rems	a14, a14, a6
  34:	31ffe0        	srai	a15, a14, 31
  37:	c188      	l32i.n	a8, a1, 48
  39:	d198      	l32i.n	a9, a1, 52
  3b:	0189      	s32i.n	a8, a1, 0
  3d:	000081        	l32r	a8, fffc0040 <op_i32_Remainder_rs+0xfffc0040>
			3d: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_rs
  40:	1199      	s32i.n	a9, a1, 4
  42:	2189      	s32i.n	a8, a1, 8
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_i32_Remainder_rs+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_rs+0x10
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n
  54:	06ad      	mov.n	a10, a6
  56:	000081        	l32r	a8, fffc0058 <op_i32_Remainder_rs+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_i32_Remainder_rs+0x14
			56: R_XTENSA_ASM_EXPAND	backtrace_err
  59:	0008e0        	callx8	a8
  5c:	0a2d      	mov.n	a2, a10
  5e:	f01d      	retw.n
  60:	0e0c      	movi.n	a14, 0
  62:	0efd      	mov.n	a15, a14
  64:	fff3c6        	j	37 <op_i32_Remainder_rs+0x37>
			64: R_XTENSA_SLOT0_OP	.text.op_i32_Remainder_rs+0x37

Disassembly of section .text.op_u32_Divide_ss:

00000000 <op_u32_Divide_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Divide_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Divide_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_u32_Divide_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_u32_Divide_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0ae8      	l32i.n	a14, a10, 0
  42:	07ac      	beqz.n	a7, 66 <op_u32_Divide_ss+0x66>
			42: R_XTENSA_SLOT0_OP	.text.op_u32_Divide_ss+0x66
  44:	c188      	l32i.n	a8, a1, 48
  46:	d198      	l32i.n	a9, a1, 52
  48:	0189      	s32i.n	a8, a1, 0
  4a:	000081        	l32r	a8, fffc004c <op_u32_Divide_ss+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_ss
  4d:	1199      	s32i.n	a9, a1, 4
  4f:	2189      	s32i.n	a8, a1, 8
  51:	c2ee70        	quou	a14, a14, a7
  54:	0f0c      	movi.n	a15, 0
  56:	04cd      	mov.n	a12, a4
  58:	03bd      	mov.n	a11, a3
  5a:	02ad      	mov.n	a10, a2
  5c:	000081        	l32r	a8, fffc005c <op_u32_Divide_ss+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_ss+0x14
			5c: R_XTENSA_ASM_EXPAND	.text.profileOp
  5f:	0008e0        	callx8	a8
  62:	0a2d      	mov.n	a2, a10
  64:	f01d      	retw.n
  66:	07ad      	mov.n	a10, a7
  68:	000081        	l32r	a8, fffc0068 <op_u32_Divide_ss+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_ss+0x18
			68: R_XTENSA_ASM_EXPAND	backtrace_err
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	f01d      	retw.n

Disassembly of section .text.op_u32_Divide_sr:

00000000 <op_u32_Divide_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Divide_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Divide_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0aa8      	l32i.n	a10, a10, 0
  22:	2aac      	beqz.n	a10, 48 <op_u32_Divide_sr+0x48>
			22: R_XTENSA_SLOT0_OP	.text.op_u32_Divide_sr+0x48
  24:	c188      	l32i.n	a8, a1, 48
  26:	d198      	l32i.n	a9, a1, 52
  28:	0189      	s32i.n	a8, a1, 0
  2a:	000081        	l32r	a8, fffc002c <op_u32_Divide_sr+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_sr
  2d:	c2e6a0        	quou	a14, a6, a10
  30:	1199      	s32i.n	a9, a1, 4
  32:	2189      	s32i.n	a8, a1, 8
  34:	0f0c      	movi.n	a15, 0
  36:	04cd      	mov.n	a12, a4
  38:	03bd      	mov.n	a11, a3
  3a:	02ad      	mov.n	a10, a2
  3c:	000081        	l32r	a8, fffc003c <op_u32_Divide_sr+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_sr+0xc
			3c: R_XTENSA_ASM_EXPAND	.text.profileOp
  3f:	0008e0        	callx8	a8
  42:	0a2d      	mov.n	a2, a10
  44:	f01d      	retw.n
  46:	00          	.byte	00
  47:	00          	.byte	00
  48:	000081        	l32r	a8, fffc0048 <op_u32_Divide_sr+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_sr+0x10
			48: R_XTENSA_ASM_EXPAND	backtrace_err
  4b:	0008e0        	callx8	a8
  4e:	0a2d      	mov.n	a2, a10
  50:	f01d      	retw.n

Disassembly of section .text.op_u32_Divide_rs:

00000000 <op_u32_Divide_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Divide_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Divide_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0ae8      	l32i.n	a14, a10, 0
  22:	06ac      	beqz.n	a6, 46 <op_u32_Divide_rs+0x46>
			22: R_XTENSA_SLOT0_OP	.text.op_u32_Divide_rs+0x46
  24:	c188      	l32i.n	a8, a1, 48
  26:	d198      	l32i.n	a9, a1, 52
  28:	0189      	s32i.n	a8, a1, 0
  2a:	000081        	l32r	a8, fffc002c <op_u32_Divide_rs+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_rs
  2d:	1199      	s32i.n	a9, a1, 4
  2f:	2189      	s32i.n	a8, a1, 8
  31:	c2ee60        	quou	a14, a14, a6
  34:	0f0c      	movi.n	a15, 0
  36:	04cd      	mov.n	a12, a4
  38:	03bd      	mov.n	a11, a3
  3a:	02ad      	mov.n	a10, a2
  3c:	000081        	l32r	a8, fffc003c <op_u32_Divide_rs+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_rs+0xc
			3c: R_XTENSA_ASM_EXPAND	.text.profileOp
  3f:	0008e0        	callx8	a8
  42:	0a2d      	mov.n	a2, a10
  44:	f01d      	retw.n
  46:	06ad      	mov.n	a10, a6
  48:	000081        	l32r	a8, fffc0048 <op_u32_Divide_rs+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_u32_Divide_rs+0x10
			48: R_XTENSA_ASM_EXPAND	backtrace_err
  4b:	0008e0        	callx8	a8
  4e:	0a2d      	mov.n	a2, a10
  50:	f01d      	retw.n

Disassembly of section .text.op_i32_Divide_ss:

00000000 <op_i32_Divide_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Divide_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_ss+0x8
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Divide_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_ss+0xc
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_Divide_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_ss+0x10
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	04a0c2        	movi	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	20a440        	or	a10, a4, a4
  3c:	000081        	l32r	a8, fffc003c <op_i32_Divide_ss+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_ss+0x14
			3c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3f:	0008e0        	callx8	a8
  42:	0af8      	l32i.n	a15, a10, 0
  44:	d7ac      	beqz.n	a7, 75 <op_i32_Divide_ss+0x75>
			44: R_XTENSA_SLOT0_OP	.text.op_i32_Divide_ss+0x75
  46:	060766        	bnei	a7, -1, 50 <op_i32_Divide_ss+0x50>
			46: R_XTENSA_SLOT0_OP	.text.op_i32_Divide_ss+0x50
  49:	000081        	l32r	a8, fffc004c <op_i32_Divide_ss+0xfffc004c>
			49: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_ss+0x4
  4c:	8f8a      	add.n	a8, a15, a8
  4e:	38ac      	beqz.n	a8, 75 <op_i32_Divide_ss+0x75>
			4e: R_XTENSA_SLOT0_OP	.text.op_i32_Divide_ss+0x75
  50:	000081        	l32r	a8, fffc0050 <op_i32_Divide_ss+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_ss
  53:	d198      	l32i.n	a9, a1, 52
  55:	2189      	s32i.n	a8, a1, 8
  57:	c188      	l32i.n	a8, a1, 48
  59:	d2ff70        	quos	a15, a15, a7
  5c:	0fed      	mov.n	a14, a15
  5e:	0189      	s32i.n	a8, a1, 0
  60:	1199      	s32i.n	a9, a1, 4
  62:	31fff0        	srai	a15, a15, 31
  65:	04cd      	mov.n	a12, a4
  67:	03bd      	mov.n	a11, a3
  69:	02ad      	mov.n	a10, a2
  6b:	000081        	l32r	a8, fffc006c <op_i32_Divide_ss+0xfffc006c>
			6b: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_ss+0x18
			6b: R_XTENSA_ASM_EXPAND	.text.profileOp
  6e:	0008e0        	callx8	a8
  71:	0a2d      	mov.n	a2, a10
  73:	f01d      	retw.n
  75:	0a0c      	movi.n	a10, 0
  77:	000081        	l32r	a8, fffc0078 <op_i32_Divide_ss+0xfffc0078>
			77: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_ss+0x1c
			77: R_XTENSA_ASM_EXPAND	backtrace_err
  7a:	0008e0        	callx8	a8
  7d:	0a2d      	mov.n	a2, a10
  7f:	f01d      	retw.n

Disassembly of section .text.op_i32_Divide_sr:

00000000 <op_i32_Divide_sr>:
   0:	006136        	entry	a1, 48
   3:	04a0c2        	movi	a12, 4
   6:	20b220        	or	a11, a2, a2
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_i32_Divide_sr+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_sr+0x8
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	4c0c      	movi.n	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Divide_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_sr+0xc
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	c8ac      	beqz.n	a8, 53 <op_i32_Divide_sr+0x53>
			23: R_XTENSA_SLOT0_OP	.text.op_i32_Divide_sr+0x53
  25:	240826        	beqi	a8, -1, 4d <op_i32_Divide_sr+0x4d>
			25: R_XTENSA_SLOT0_OP	.text.op_i32_Divide_sr+0x4d
  28:	d2f680        	quos	a15, a6, a8
  2b:	000081        	l32r	a8, fffc002c <op_i32_Divide_sr+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_sr
  2e:	d198      	l32i.n	a9, a1, 52
  30:	2189      	s32i.n	a8, a1, 8
  32:	c188      	l32i.n	a8, a1, 48
  34:	0fed      	mov.n	a14, a15
  36:	0189      	s32i.n	a8, a1, 0
  38:	1199      	s32i.n	a9, a1, 4
  3a:	31fff0        	srai	a15, a15, 31
  3d:	04cd      	mov.n	a12, a4
  3f:	03bd      	mov.n	a11, a3
  41:	02ad      	mov.n	a10, a2
  43:	000081        	l32r	a8, fffc0044 <op_i32_Divide_sr+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_sr+0x10
			43: R_XTENSA_ASM_EXPAND	.text.profileOp
  46:	0008e0        	callx8	a8
  49:	0a2d      	mov.n	a2, a10
  4b:	f01d      	retw.n
  4d:	000091        	l32r	a9, fffc0050 <op_i32_Divide_sr+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_sr+0x4
  50:	d49697        	bne	a6, a9, 28 <op_i32_Divide_sr+0x28>
			50: R_XTENSA_SLOT0_OP	.text.op_i32_Divide_sr+0x28
  53:	0a0c      	movi.n	a10, 0
  55:	000081        	l32r	a8, fffc0058 <op_i32_Divide_sr+0xfffc0058>
			55: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_sr+0x14
			55: R_XTENSA_ASM_EXPAND	backtrace_err
  58:	0008e0        	callx8	a8
  5b:	0a2d      	mov.n	a2, a10
  5d:	f01d      	retw.n

Disassembly of section .text.op_i32_Divide_rs:

00000000 <op_i32_Divide_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Divide_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_rs+0x8
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	04a0c2        	movi	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_i32_Divide_rs+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_rs+0xc
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0af8      	l32i.n	a15, a10, 0
  24:	d6ac      	beqz.n	a6, 55 <op_i32_Divide_rs+0x55>
			24: R_XTENSA_SLOT0_OP	.text.op_i32_Divide_rs+0x55
  26:	000081        	l32r	a8, fffc0028 <op_i32_Divide_rs+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_rs+0x4
  29:	8f8a      	add.n	a8, a15, a8
  2b:	18cc      	bnez.n	a8, 30 <op_i32_Divide_rs+0x30>
			2b: R_XTENSA_SLOT0_OP	.text.op_i32_Divide_rs+0x30
  2d:	240626        	beqi	a6, -1, 55 <op_i32_Divide_rs+0x55>
			2d: R_XTENSA_SLOT0_OP	.text.op_i32_Divide_rs+0x55
  30:	000081        	l32r	a8, fffc0030 <op_i32_Divide_rs+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_rs
  33:	d198      	l32i.n	a9, a1, 52
  35:	2189      	s32i.n	a8, a1, 8
  37:	c188      	l32i.n	a8, a1, 48
  39:	d2ff60        	quos	a15, a15, a6
  3c:	0fed      	mov.n	a14, a15
  3e:	0189      	s32i.n	a8, a1, 0
  40:	1199      	s32i.n	a9, a1, 4
  42:	31fff0        	srai	a15, a15, 31
  45:	04cd      	mov.n	a12, a4
  47:	03bd      	mov.n	a11, a3
  49:	02ad      	mov.n	a10, a2
  4b:	000081        	l32r	a8, fffc004c <op_i32_Divide_rs+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_rs+0x10
			4b: R_XTENSA_ASM_EXPAND	.text.profileOp
  4e:	0008e0        	callx8	a8
  51:	0a2d      	mov.n	a2, a10
  53:	f01d      	retw.n
  55:	0a0c      	movi.n	a10, 0
  57:	000081        	l32r	a8, fffc0058 <op_i32_Divide_rs+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_i32_Divide_rs+0x14
			57: R_XTENSA_ASM_EXPAND	backtrace_err
  5a:	0008e0        	callx8	a8
  5d:	0a2d      	mov.n	a2, a10
  5f:	f01d      	retw.n

Disassembly of section .text.op_i32_Multiply_ss:

00000000 <op_i32_Multiply_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Multiply_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Multiply_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Multiply_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Multiply_ss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002872        	l32i	a7, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_i32_Multiply_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i32_Multiply_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i32_Multiply_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i32_Multiply_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	0a88      	l32i.n	a8, a10, 0
  43:	d198      	l32i.n	a9, a1, 52
  45:	82f780        	mull	a15, a7, a8
  48:	000081        	l32r	a8, fffc0048 <op_i32_Multiply_ss+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_i32_Multiply_ss
  4b:	0fed      	mov.n	a14, a15
  4d:	2189      	s32i.n	a8, a1, 8
  4f:	c188      	l32i.n	a8, a1, 48
  51:	1199      	s32i.n	a9, a1, 4
  53:	0189      	s32i.n	a8, a1, 0
  55:	31fff0        	srai	a15, a15, 31
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i32_Multiply_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i32_Multiply_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i32_Multiply_rs:

00000000 <op_i32_Multiply_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Multiply_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Multiply_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Multiply_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Multiply_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0af8      	l32i.n	a15, a10, 0
  23:	000081        	l32r	a8, fffc0024 <op_i32_Multiply_rs+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.op_i32_Multiply_rs
  26:	82ff60        	mull	a15, a15, a6
  29:	d198      	l32i.n	a9, a1, 52
  2b:	2189      	s32i.n	a8, a1, 8
  2d:	c188      	l32i.n	a8, a1, 48
  2f:	0fed      	mov.n	a14, a15
  31:	0189      	s32i.n	a8, a1, 0
  33:	1199      	s32i.n	a9, a1, 4
  35:	31fff0        	srai	a15, a15, 31
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_i32_Multiply_rs+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_i32_Multiply_rs+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_i32_Subtract_ss:

00000000 <op_i32_Subtract_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Subtract_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Subtract_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Subtract_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Subtract_ss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	002872        	l32i	a7, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_i32_Subtract_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i32_Subtract_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i32_Subtract_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i32_Subtract_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	000081        	l32r	a8, fffc0044 <op_i32_Subtract_ss+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.op_i32_Subtract_ss
  44:	0af8      	l32i.n	a15, a10, 0
  46:	d198      	l32i.n	a9, a1, 52
  48:	2189      	s32i.n	a8, a1, 8
  4a:	c188      	l32i.n	a8, a1, 48
  4c:	c0ff70        	sub	a15, a15, a7
  4f:	0fed      	mov.n	a14, a15
  51:	0189      	s32i.n	a8, a1, 0
  53:	1199      	s32i.n	a9, a1, 4
  55:	31fff0        	srai	a15, a15, 31
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i32_Subtract_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i32_Subtract_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i32_Subtract_sr:

00000000 <op_i32_Subtract_sr>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Subtract_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Subtract_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Subtract_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Subtract_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	d198      	l32i.n	a9, a1, 52
  25:	c0f680        	sub	a15, a6, a8
  28:	000081        	l32r	a8, fffc0028 <op_i32_Subtract_sr+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_i32_Subtract_sr
  2b:	0fed      	mov.n	a14, a15
  2d:	2189      	s32i.n	a8, a1, 8
  2f:	c188      	l32i.n	a8, a1, 48
  31:	1199      	s32i.n	a9, a1, 4
  33:	0189      	s32i.n	a8, a1, 0
  35:	31fff0        	srai	a15, a15, 31
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_i32_Subtract_sr+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_i32_Subtract_sr+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_i32_Subtract_rs:

00000000 <op_i32_Subtract_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Subtract_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Subtract_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Subtract_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Subtract_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	000081        	l32r	a8, fffc0024 <op_i32_Subtract_rs+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.op_i32_Subtract_rs
  24:	0af8      	l32i.n	a15, a10, 0
  26:	d198      	l32i.n	a9, a1, 52
  28:	2189      	s32i.n	a8, a1, 8
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	c0ff60        	sub	a15, a15, a6
  2f:	0fed      	mov.n	a14, a15
  31:	0189      	s32i.n	a8, a1, 0
  33:	1199      	s32i.n	a9, a1, 4
  35:	31fff0        	srai	a15, a15, 31
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_i32_Subtract_rs+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_i32_Subtract_rs+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_i32_Add_ss:

00000000 <op_i32_Add_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Add_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Add_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Add_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Add_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_Add_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_Add_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_i32_Add_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i32_Add_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a88      	l32i.n	a8, a10, 0
  42:	d198      	l32i.n	a9, a1, 52
  44:	f78a      	add.n	a15, a7, a8
  46:	000081        	l32r	a8, fffc0048 <op_i32_Add_ss+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_i32_Add_ss
  49:	0fed      	mov.n	a14, a15
  4b:	2189      	s32i.n	a8, a1, 8
  4d:	c188      	l32i.n	a8, a1, 48
  4f:	1199      	s32i.n	a9, a1, 4
  51:	0189      	s32i.n	a8, a1, 0
  53:	31fff0        	srai	a15, a15, 31
  56:	04cd      	mov.n	a12, a4
  58:	03bd      	mov.n	a11, a3
  5a:	02ad      	mov.n	a10, a2
  5c:	000081        	l32r	a8, fffc005c <op_i32_Add_ss+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.op_i32_Add_ss+0x14
			5c: R_XTENSA_ASM_EXPAND	.text.profileOp
  5f:	0008e0        	callx8	a8
  62:	0a2d      	mov.n	a2, a10
  64:	f01d      	retw.n

Disassembly of section .text.op_i32_Add_rs:

00000000 <op_i32_Add_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Add_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Add_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Add_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Add_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000081        	l32r	a8, fffc0020 <op_i32_Add_rs+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_i32_Add_rs
  23:	0af8      	l32i.n	a15, a10, 0
  25:	d198      	l32i.n	a9, a1, 52
  27:	2189      	s32i.n	a8, a1, 8
  29:	c188      	l32i.n	a8, a1, 48
  2b:	ff6a      	add.n	a15, a15, a6
  2d:	0fed      	mov.n	a14, a15
  2f:	0189      	s32i.n	a8, a1, 0
  31:	1199      	s32i.n	a9, a1, 4
  33:	31fff0        	srai	a15, a15, 31
  36:	04cd      	mov.n	a12, a4
  38:	03bd      	mov.n	a11, a3
  3a:	02ad      	mov.n	a10, a2
  3c:	000081        	l32r	a8, fffc003c <op_i32_Add_rs+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_i32_Add_rs+0xc
			3c: R_XTENSA_ASM_EXPAND	.text.profileOp
  3f:	0008e0        	callx8	a8
  42:	0a2d      	mov.n	a2, a10
  44:	f01d      	retw.n

Disassembly of section .text.op_f64_GreaterThanOrEqual_ss:

00000000 <op_f64_GreaterThanOrEqual_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_GreaterThanOrEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_GreaterThanOrEqual_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	1878      	l32i.n	a7, a8, 4
  2a:	0868      	l32i.n	a6, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_f64_GreaterThanOrEqual_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_f64_GreaterThanOrEqual_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	0ac8      	l32i.n	a12, a10, 0
  43:	1ad8      	l32i.n	a13, a10, 4
  45:	07bd      	mov.n	a11, a7
  47:	06ad      	mov.n	a10, a6
  49:	170c      	movi.n	a7, 1
  4b:	000081        	l32r	a8, fffc004c <op_f64_GreaterThanOrEqual_ss+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_ss+0x14
			4b: R_XTENSA_ASM_EXPAND	__ledf2
  4e:	0008e0        	callx8	a8
  51:	011aa6        	blti	a10, 1, 56 <op_f64_GreaterThanOrEqual_ss+0x56>
			51: R_XTENSA_SLOT0_OP	.text.op_f64_GreaterThanOrEqual_ss+0x56
  54:	070c      	movi.n	a7, 0
  56:	c188      	l32i.n	a8, a1, 48
  58:	d198      	l32i.n	a9, a1, 52
  5a:	0189      	s32i.n	a8, a1, 0
  5c:	000081        	l32r	a8, fffc005c <op_f64_GreaterThanOrEqual_ss+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_ss
  5f:	1199      	s32i.n	a9, a1, 4
  61:	2189      	s32i.n	a8, a1, 8
  63:	07ed      	mov.n	a14, a7
  65:	0f0c      	movi.n	a15, 0
  67:	04cd      	mov.n	a12, a4
  69:	03bd      	mov.n	a11, a3
  6b:	20a220        	or	a10, a2, a2
  6e:	000081        	l32r	a8, fffc0070 <op_f64_GreaterThanOrEqual_ss+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_ss+0x18
			6e: R_XTENSA_ASM_EXPAND	.text.profileOp
  71:	0008e0        	callx8	a8
  74:	0a2d      	mov.n	a2, a10
  76:	f01d      	retw.n

Disassembly of section .text.op_f64_GreaterThanOrEqual_sr:

00000000 <op_f64_GreaterThanOrEqual_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	04ad      	mov.n	a10, a4
   9:	0c2162        	l32i	a6, a1, 48
   c:	0d2172        	l32i	a7, a1, 52
   f:	000081        	l32r	a8, fffc0010 <op_f64_GreaterThanOrEqual_sr+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_sr+0x4
			f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  12:	0008e0        	callx8	a8
  15:	0ab8      	l32i.n	a11, a10, 0
  17:	8c0c      	movi.n	a12, 8
  19:	a0bb30        	addx4	a11, a11, a3
  1c:	04ad      	mov.n	a10, a4
  1e:	000081        	l32r	a8, fffc0020 <op_f64_GreaterThanOrEqual_sr+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_sr+0x8
			1e: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  21:	0008e0        	callx8	a8
  24:	1ab8      	l32i.n	a11, a10, 4
  26:	0aa8      	l32i.n	a10, a10, 0
  28:	06cd      	mov.n	a12, a6
  2a:	07dd      	mov.n	a13, a7
  2c:	150c      	movi.n	a5, 1
  2e:	000081        	l32r	a8, fffc0030 <op_f64_GreaterThanOrEqual_sr+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_sr+0xc
			2e: R_XTENSA_ASM_EXPAND	__ledf2
  31:	0008e0        	callx8	a8
  34:	011aa6        	blti	a10, 1, 39 <op_f64_GreaterThanOrEqual_sr+0x39>
			34: R_XTENSA_SLOT0_OP	.text.op_f64_GreaterThanOrEqual_sr+0x39
  37:	050c      	movi.n	a5, 0
  39:	000081        	l32r	a8, fffc003c <op_f64_GreaterThanOrEqual_sr+0xfffc003c>
			39: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_sr
  3c:	0169      	s32i.n	a6, a1, 0
  3e:	1179      	s32i.n	a7, a1, 4
  40:	2189      	s32i.n	a8, a1, 8
  42:	05ed      	mov.n	a14, a5
  44:	0f0c      	movi.n	a15, 0
  46:	04cd      	mov.n	a12, a4
  48:	03bd      	mov.n	a11, a3
  4a:	02ad      	mov.n	a10, a2
  4c:	000081        	l32r	a8, fffc004c <op_f64_GreaterThanOrEqual_sr+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_sr+0x10
			4c: R_XTENSA_ASM_EXPAND	.text.profileOp
  4f:	0008e0        	callx8	a8
  52:	0a2d      	mov.n	a2, a10
  54:	f01d      	retw.n

Disassembly of section .text.op_f64_GreaterThanOrEqual_rs:

00000000 <op_f64_GreaterThanOrEqual_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	04ad      	mov.n	a10, a4
   9:	0c2162        	l32i	a6, a1, 48
   c:	0d2172        	l32i	a7, a1, 52
   f:	000081        	l32r	a8, fffc0010 <op_f64_GreaterThanOrEqual_rs+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_rs+0x4
			f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  12:	0008e0        	callx8	a8
  15:	0ab8      	l32i.n	a11, a10, 0
  17:	08a0c2        	movi	a12, 8
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	20a440        	or	a10, a4, a4
  20:	000081        	l32r	a8, fffc0020 <op_f64_GreaterThanOrEqual_rs+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_rs+0x8
			20: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  23:	0008e0        	callx8	a8
  26:	1ab8      	l32i.n	a11, a10, 4
  28:	0aa8      	l32i.n	a10, a10, 0
  2a:	06cd      	mov.n	a12, a6
  2c:	07dd      	mov.n	a13, a7
  2e:	000081        	l32r	a8, fffc0030 <op_f64_GreaterThanOrEqual_rs+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_rs+0xc
			2e: R_XTENSA_ASM_EXPAND	__gedf2
  31:	0008e0        	callx8	a8
  34:	000081        	l32r	a8, fffc0034 <op_f64_GreaterThanOrEqual_rs+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_rs
  37:	31efa0        	srai	a14, a10, 31
  3a:	2189      	s32i.n	a8, a1, 8
  3c:	0169      	s32i.n	a6, a1, 0
  3e:	1179      	s32i.n	a7, a1, 4
  40:	ee1b      	addi.n	a14, a14, 1
  42:	0f0c      	movi.n	a15, 0
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_f64_GreaterThanOrEqual_rs+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThanOrEqual_rs+0x10
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n

Disassembly of section .text.op_f64_LessThanOrEqual_ss:

00000000 <op_f64_LessThanOrEqual_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_LessThanOrEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_LessThanOrEqual_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0868      	l32i.n	a6, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_f64_LessThanOrEqual_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	20a440        	or	a10, a4, a4
  3c:	000081        	l32r	a8, fffc003c <op_f64_LessThanOrEqual_ss+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_ss+0x10
			3c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3f:	0008e0        	callx8	a8
  42:	0ac8      	l32i.n	a12, a10, 0
  44:	1ad8      	l32i.n	a13, a10, 4
  46:	07bd      	mov.n	a11, a7
  48:	06ad      	mov.n	a10, a6
  4a:	000081        	l32r	a8, fffc004c <op_f64_LessThanOrEqual_ss+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_ss+0x14
			4a: R_XTENSA_ASM_EXPAND	__gedf2
  4d:	0008e0        	callx8	a8
  50:	000081        	l32r	a8, fffc0050 <op_f64_LessThanOrEqual_ss+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_ss
  53:	d198      	l32i.n	a9, a1, 52
  55:	2189      	s32i.n	a8, a1, 8
  57:	c188      	l32i.n	a8, a1, 48
  59:	31efa0        	srai	a14, a10, 31
  5c:	0189      	s32i.n	a8, a1, 0
  5e:	1199      	s32i.n	a9, a1, 4
  60:	ee1b      	addi.n	a14, a14, 1
  62:	0f0c      	movi.n	a15, 0
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_f64_LessThanOrEqual_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_ss+0x18
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_f64_LessThanOrEqual_sr:

00000000 <op_f64_LessThanOrEqual_sr>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	04ad      	mov.n	a10, a4
   9:	0c2162        	l32i	a6, a1, 48
   c:	0d2172        	l32i	a7, a1, 52
   f:	000081        	l32r	a8, fffc0010 <op_f64_LessThanOrEqual_sr+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_sr+0x4
			f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  12:	0008e0        	callx8	a8
  15:	0ab8      	l32i.n	a11, a10, 0
  17:	08a0c2        	movi	a12, 8
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	20a440        	or	a10, a4, a4
  20:	000081        	l32r	a8, fffc0020 <op_f64_LessThanOrEqual_sr+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_sr+0x8
			20: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  23:	0008e0        	callx8	a8
  26:	1ab8      	l32i.n	a11, a10, 4
  28:	0aa8      	l32i.n	a10, a10, 0
  2a:	06cd      	mov.n	a12, a6
  2c:	07dd      	mov.n	a13, a7
  2e:	000081        	l32r	a8, fffc0030 <op_f64_LessThanOrEqual_sr+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_sr+0xc
			2e: R_XTENSA_ASM_EXPAND	__gedf2
  31:	0008e0        	callx8	a8
  34:	000081        	l32r	a8, fffc0034 <op_f64_LessThanOrEqual_sr+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_sr
  37:	31efa0        	srai	a14, a10, 31
  3a:	2189      	s32i.n	a8, a1, 8
  3c:	0169      	s32i.n	a6, a1, 0
  3e:	1179      	s32i.n	a7, a1, 4
  40:	ee1b      	addi.n	a14, a14, 1
  42:	0f0c      	movi.n	a15, 0
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_f64_LessThanOrEqual_sr+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_sr+0x10
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n

Disassembly of section .text.op_f64_LessThanOrEqual_rs:

00000000 <op_f64_LessThanOrEqual_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	04ad      	mov.n	a10, a4
   9:	0c2162        	l32i	a6, a1, 48
   c:	0d2172        	l32i	a7, a1, 52
   f:	000081        	l32r	a8, fffc0010 <op_f64_LessThanOrEqual_rs+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_rs+0x4
			f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  12:	0008e0        	callx8	a8
  15:	0ab8      	l32i.n	a11, a10, 0
  17:	8c0c      	movi.n	a12, 8
  19:	a0bb30        	addx4	a11, a11, a3
  1c:	04ad      	mov.n	a10, a4
  1e:	000081        	l32r	a8, fffc0020 <op_f64_LessThanOrEqual_rs+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_rs+0x8
			1e: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  21:	0008e0        	callx8	a8
  24:	1ab8      	l32i.n	a11, a10, 4
  26:	0aa8      	l32i.n	a10, a10, 0
  28:	06cd      	mov.n	a12, a6
  2a:	07dd      	mov.n	a13, a7
  2c:	150c      	movi.n	a5, 1
  2e:	000081        	l32r	a8, fffc0030 <op_f64_LessThanOrEqual_rs+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_rs+0xc
			2e: R_XTENSA_ASM_EXPAND	__ledf2
  31:	0008e0        	callx8	a8
  34:	011aa6        	blti	a10, 1, 39 <op_f64_LessThanOrEqual_rs+0x39>
			34: R_XTENSA_SLOT0_OP	.text.op_f64_LessThanOrEqual_rs+0x39
  37:	050c      	movi.n	a5, 0
  39:	000081        	l32r	a8, fffc003c <op_f64_LessThanOrEqual_rs+0xfffc003c>
			39: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_rs
  3c:	0169      	s32i.n	a6, a1, 0
  3e:	1179      	s32i.n	a7, a1, 4
  40:	2189      	s32i.n	a8, a1, 8
  42:	05ed      	mov.n	a14, a5
  44:	0f0c      	movi.n	a15, 0
  46:	04cd      	mov.n	a12, a4
  48:	03bd      	mov.n	a11, a3
  4a:	02ad      	mov.n	a10, a2
  4c:	000081        	l32r	a8, fffc004c <op_f64_LessThanOrEqual_rs+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThanOrEqual_rs+0x10
			4c: R_XTENSA_ASM_EXPAND	.text.profileOp
  4f:	0008e0        	callx8	a8
  52:	0a2d      	mov.n	a2, a10
  54:	f01d      	retw.n

Disassembly of section .text.op_f64_GreaterThan_ss:

00000000 <op_f64_GreaterThan_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_GreaterThan_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_GreaterThan_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0868      	l32i.n	a6, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_f64_GreaterThan_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	20a440        	or	a10, a4, a4
  3c:	000081        	l32r	a8, fffc003c <op_f64_GreaterThan_ss+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_ss+0x10
			3c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3f:	0008e0        	callx8	a8
  42:	0ac8      	l32i.n	a12, a10, 0
  44:	1ad8      	l32i.n	a13, a10, 4
  46:	07bd      	mov.n	a11, a7
  48:	06ad      	mov.n	a10, a6
  4a:	000081        	l32r	a8, fffc004c <op_f64_GreaterThan_ss+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_ss+0x14
			4a: R_XTENSA_ASM_EXPAND	__ltdf2
  4d:	0008e0        	callx8	a8
  50:	c188      	l32i.n	a8, a1, 48
  52:	d198      	l32i.n	a9, a1, 52
  54:	0189      	s32i.n	a8, a1, 0
  56:	000081        	l32r	a8, fffc0058 <op_f64_GreaterThan_ss+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_ss
  59:	05efa0        	extui	a14, a10, 31, 1
  5c:	1199      	s32i.n	a9, a1, 4
  5e:	2189      	s32i.n	a8, a1, 8
  60:	0f0c      	movi.n	a15, 0
  62:	04cd      	mov.n	a12, a4
  64:	03bd      	mov.n	a11, a3
  66:	02ad      	mov.n	a10, a2
  68:	000081        	l32r	a8, fffc0068 <op_f64_GreaterThan_ss+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_ss+0x18
			68: R_XTENSA_ASM_EXPAND	.text.profileOp
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	f01d      	retw.n

Disassembly of section .text.op_f64_GreaterThan_sr:

00000000 <op_f64_GreaterThan_sr>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	04ad      	mov.n	a10, a4
   9:	0c2162        	l32i	a6, a1, 48
   c:	0d2172        	l32i	a7, a1, 52
   f:	000081        	l32r	a8, fffc0010 <op_f64_GreaterThan_sr+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_sr+0x4
			f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  12:	0008e0        	callx8	a8
  15:	0ab8      	l32i.n	a11, a10, 0
  17:	08a0c2        	movi	a12, 8
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	20a440        	or	a10, a4, a4
  20:	000081        	l32r	a8, fffc0020 <op_f64_GreaterThan_sr+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_sr+0x8
			20: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  23:	0008e0        	callx8	a8
  26:	1ab8      	l32i.n	a11, a10, 4
  28:	0aa8      	l32i.n	a10, a10, 0
  2a:	06cd      	mov.n	a12, a6
  2c:	07dd      	mov.n	a13, a7
  2e:	000081        	l32r	a8, fffc0030 <op_f64_GreaterThan_sr+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_sr+0xc
			2e: R_XTENSA_ASM_EXPAND	__ltdf2
  31:	0008e0        	callx8	a8
  34:	000081        	l32r	a8, fffc0034 <op_f64_GreaterThan_sr+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_sr
  37:	05efa0        	extui	a14, a10, 31, 1
  3a:	0169      	s32i.n	a6, a1, 0
  3c:	1179      	s32i.n	a7, a1, 4
  3e:	2189      	s32i.n	a8, a1, 8
  40:	0f0c      	movi.n	a15, 0
  42:	04cd      	mov.n	a12, a4
  44:	03bd      	mov.n	a11, a3
  46:	02ad      	mov.n	a10, a2
  48:	000081        	l32r	a8, fffc0048 <op_f64_GreaterThan_sr+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_sr+0x10
			48: R_XTENSA_ASM_EXPAND	.text.profileOp
  4b:	0008e0        	callx8	a8
  4e:	0a2d      	mov.n	a2, a10
  50:	f01d      	retw.n

Disassembly of section .text.op_f64_GreaterThan_rs:

00000000 <op_f64_GreaterThan_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	04ad      	mov.n	a10, a4
   9:	0c2162        	l32i	a6, a1, 48
   c:	0d2172        	l32i	a7, a1, 52
   f:	000081        	l32r	a8, fffc0010 <op_f64_GreaterThan_rs+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_rs+0x4
			f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  12:	0008e0        	callx8	a8
  15:	0ab8      	l32i.n	a11, a10, 0
  17:	8c0c      	movi.n	a12, 8
  19:	a0bb30        	addx4	a11, a11, a3
  1c:	04ad      	mov.n	a10, a4
  1e:	000081        	l32r	a8, fffc0020 <op_f64_GreaterThan_rs+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_rs+0x8
			1e: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  21:	0008e0        	callx8	a8
  24:	1ab8      	l32i.n	a11, a10, 4
  26:	0aa8      	l32i.n	a10, a10, 0
  28:	06cd      	mov.n	a12, a6
  2a:	07dd      	mov.n	a13, a7
  2c:	150c      	movi.n	a5, 1
  2e:	000081        	l32r	a8, fffc0030 <op_f64_GreaterThan_rs+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_rs+0xc
			2e: R_XTENSA_ASM_EXPAND	__gtdf2
  31:	0008e0        	callx8	a8
  34:	011ae6        	bgei	a10, 1, 39 <op_f64_GreaterThan_rs+0x39>
			34: R_XTENSA_SLOT0_OP	.text.op_f64_GreaterThan_rs+0x39
  37:	050c      	movi.n	a5, 0
  39:	000081        	l32r	a8, fffc003c <op_f64_GreaterThan_rs+0xfffc003c>
			39: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_rs
  3c:	0169      	s32i.n	a6, a1, 0
  3e:	1179      	s32i.n	a7, a1, 4
  40:	2189      	s32i.n	a8, a1, 8
  42:	05ed      	mov.n	a14, a5
  44:	0f0c      	movi.n	a15, 0
  46:	04cd      	mov.n	a12, a4
  48:	03bd      	mov.n	a11, a3
  4a:	02ad      	mov.n	a10, a2
  4c:	000081        	l32r	a8, fffc004c <op_f64_GreaterThan_rs+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_f64_GreaterThan_rs+0x10
			4c: R_XTENSA_ASM_EXPAND	.text.profileOp
  4f:	0008e0        	callx8	a8
  52:	0a2d      	mov.n	a2, a10
  54:	f01d      	retw.n

Disassembly of section .text.op_f64_LessThan_ss:

00000000 <op_f64_LessThan_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_LessThan_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_LessThan_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	1878      	l32i.n	a7, a8, 4
  2a:	0868      	l32i.n	a6, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_f64_LessThan_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_f64_LessThan_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	0ac8      	l32i.n	a12, a10, 0
  43:	1ad8      	l32i.n	a13, a10, 4
  45:	07bd      	mov.n	a11, a7
  47:	06ad      	mov.n	a10, a6
  49:	170c      	movi.n	a7, 1
  4b:	000081        	l32r	a8, fffc004c <op_f64_LessThan_ss+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_ss+0x14
			4b: R_XTENSA_ASM_EXPAND	__gtdf2
  4e:	0008e0        	callx8	a8
  51:	011ae6        	bgei	a10, 1, 56 <op_f64_LessThan_ss+0x56>
			51: R_XTENSA_SLOT0_OP	.text.op_f64_LessThan_ss+0x56
  54:	070c      	movi.n	a7, 0
  56:	c188      	l32i.n	a8, a1, 48
  58:	d198      	l32i.n	a9, a1, 52
  5a:	0189      	s32i.n	a8, a1, 0
  5c:	000081        	l32r	a8, fffc005c <op_f64_LessThan_ss+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_ss
  5f:	1199      	s32i.n	a9, a1, 4
  61:	2189      	s32i.n	a8, a1, 8
  63:	07ed      	mov.n	a14, a7
  65:	0f0c      	movi.n	a15, 0
  67:	04cd      	mov.n	a12, a4
  69:	03bd      	mov.n	a11, a3
  6b:	20a220        	or	a10, a2, a2
  6e:	000081        	l32r	a8, fffc0070 <op_f64_LessThan_ss+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_ss+0x18
			6e: R_XTENSA_ASM_EXPAND	.text.profileOp
  71:	0008e0        	callx8	a8
  74:	0a2d      	mov.n	a2, a10
  76:	f01d      	retw.n

Disassembly of section .text.op_f64_LessThan_sr:

00000000 <op_f64_LessThan_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	04ad      	mov.n	a10, a4
   9:	0c2162        	l32i	a6, a1, 48
   c:	0d2172        	l32i	a7, a1, 52
   f:	000081        	l32r	a8, fffc0010 <op_f64_LessThan_sr+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_sr+0x4
			f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  12:	0008e0        	callx8	a8
  15:	0ab8      	l32i.n	a11, a10, 0
  17:	8c0c      	movi.n	a12, 8
  19:	a0bb30        	addx4	a11, a11, a3
  1c:	04ad      	mov.n	a10, a4
  1e:	000081        	l32r	a8, fffc0020 <op_f64_LessThan_sr+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_sr+0x8
			1e: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  21:	0008e0        	callx8	a8
  24:	1ab8      	l32i.n	a11, a10, 4
  26:	0aa8      	l32i.n	a10, a10, 0
  28:	06cd      	mov.n	a12, a6
  2a:	07dd      	mov.n	a13, a7
  2c:	150c      	movi.n	a5, 1
  2e:	000081        	l32r	a8, fffc0030 <op_f64_LessThan_sr+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_sr+0xc
			2e: R_XTENSA_ASM_EXPAND	__gtdf2
  31:	0008e0        	callx8	a8
  34:	011ae6        	bgei	a10, 1, 39 <op_f64_LessThan_sr+0x39>
			34: R_XTENSA_SLOT0_OP	.text.op_f64_LessThan_sr+0x39
  37:	050c      	movi.n	a5, 0
  39:	000081        	l32r	a8, fffc003c <op_f64_LessThan_sr+0xfffc003c>
			39: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_sr
  3c:	0169      	s32i.n	a6, a1, 0
  3e:	1179      	s32i.n	a7, a1, 4
  40:	2189      	s32i.n	a8, a1, 8
  42:	05ed      	mov.n	a14, a5
  44:	0f0c      	movi.n	a15, 0
  46:	04cd      	mov.n	a12, a4
  48:	03bd      	mov.n	a11, a3
  4a:	02ad      	mov.n	a10, a2
  4c:	000081        	l32r	a8, fffc004c <op_f64_LessThan_sr+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_sr+0x10
			4c: R_XTENSA_ASM_EXPAND	.text.profileOp
  4f:	0008e0        	callx8	a8
  52:	0a2d      	mov.n	a2, a10
  54:	f01d      	retw.n

Disassembly of section .text.op_f64_LessThan_rs:

00000000 <op_f64_LessThan_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	04ad      	mov.n	a10, a4
   9:	0c2162        	l32i	a6, a1, 48
   c:	0d2172        	l32i	a7, a1, 52
   f:	000081        	l32r	a8, fffc0010 <op_f64_LessThan_rs+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_rs+0x4
			f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  12:	0008e0        	callx8	a8
  15:	0ab8      	l32i.n	a11, a10, 0
  17:	08a0c2        	movi	a12, 8
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	20a440        	or	a10, a4, a4
  20:	000081        	l32r	a8, fffc0020 <op_f64_LessThan_rs+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_rs+0x8
			20: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  23:	0008e0        	callx8	a8
  26:	1ab8      	l32i.n	a11, a10, 4
  28:	0aa8      	l32i.n	a10, a10, 0
  2a:	06cd      	mov.n	a12, a6
  2c:	07dd      	mov.n	a13, a7
  2e:	000081        	l32r	a8, fffc0030 <op_f64_LessThan_rs+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_rs+0xc
			2e: R_XTENSA_ASM_EXPAND	__ltdf2
  31:	0008e0        	callx8	a8
  34:	000081        	l32r	a8, fffc0034 <op_f64_LessThan_rs+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_rs
  37:	05efa0        	extui	a14, a10, 31, 1
  3a:	0169      	s32i.n	a6, a1, 0
  3c:	1179      	s32i.n	a7, a1, 4
  3e:	2189      	s32i.n	a8, a1, 8
  40:	0f0c      	movi.n	a15, 0
  42:	04cd      	mov.n	a12, a4
  44:	03bd      	mov.n	a11, a3
  46:	02ad      	mov.n	a10, a2
  48:	000081        	l32r	a8, fffc0048 <op_f64_LessThan_rs+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_f64_LessThan_rs+0x10
			48: R_XTENSA_ASM_EXPAND	.text.profileOp
  4b:	0008e0        	callx8	a8
  4e:	0a2d      	mov.n	a2, a10
  50:	f01d      	retw.n

Disassembly of section .text.op_f64_NotEqual_ss:

00000000 <op_f64_NotEqual_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_NotEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_NotEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_NotEqual_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_NotEqual_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0868      	l32i.n	a6, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_f64_NotEqual_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f64_NotEqual_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	20a440        	or	a10, a4, a4
  3c:	000081        	l32r	a8, fffc003c <op_f64_NotEqual_ss+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_f64_NotEqual_ss+0x10
			3c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3f:	0008e0        	callx8	a8
  42:	1ab8      	l32i.n	a11, a10, 4
  44:	0aa8      	l32i.n	a10, a10, 0
  46:	06cd      	mov.n	a12, a6
  48:	07dd      	mov.n	a13, a7
  4a:	000081        	l32r	a8, fffc004c <op_f64_NotEqual_ss+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_f64_NotEqual_ss+0x14
			4a: R_XTENSA_ASM_EXPAND	__nedf2
  4d:	0008e0        	callx8	a8
  50:	000081        	l32r	a8, fffc0050 <op_f64_NotEqual_ss+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_f64_NotEqual_ss
  53:	d198      	l32i.n	a9, a1, 52
  55:	2189      	s32i.n	a8, a1, 8
  57:	c188      	l32i.n	a8, a1, 48
  59:	0f0c      	movi.n	a15, 0
  5b:	1e0c      	movi.n	a14, 1
  5d:	83efa0        	moveqz	a14, a15, a10
  60:	0189      	s32i.n	a8, a1, 0
  62:	1199      	s32i.n	a9, a1, 4
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_f64_NotEqual_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_f64_NotEqual_ss+0x18
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_f64_NotEqual_rs:

00000000 <op_f64_NotEqual_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	04ad      	mov.n	a10, a4
   9:	0c2162        	l32i	a6, a1, 48
   c:	0d2172        	l32i	a7, a1, 52
   f:	000081        	l32r	a8, fffc0010 <op_f64_NotEqual_rs+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_f64_NotEqual_rs+0x4
			f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  12:	0008e0        	callx8	a8
  15:	0ab8      	l32i.n	a11, a10, 0
  17:	08a0c2        	movi	a12, 8
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	20a440        	or	a10, a4, a4
  20:	000081        	l32r	a8, fffc0020 <op_f64_NotEqual_rs+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_NotEqual_rs+0x8
			20: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  23:	0008e0        	callx8	a8
  26:	1ab8      	l32i.n	a11, a10, 4
  28:	0aa8      	l32i.n	a10, a10, 0
  2a:	06cd      	mov.n	a12, a6
  2c:	07dd      	mov.n	a13, a7
  2e:	000081        	l32r	a8, fffc0030 <op_f64_NotEqual_rs+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f64_NotEqual_rs+0xc
			2e: R_XTENSA_ASM_EXPAND	__nedf2
  31:	0008e0        	callx8	a8
  34:	000081        	l32r	a8, fffc0034 <op_f64_NotEqual_rs+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.op_f64_NotEqual_rs
  37:	0f0c      	movi.n	a15, 0
  39:	1e0c      	movi.n	a14, 1
  3b:	83efa0        	moveqz	a14, a15, a10
  3e:	2189      	s32i.n	a8, a1, 8
  40:	0169      	s32i.n	a6, a1, 0
  42:	1179      	s32i.n	a7, a1, 4
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_f64_NotEqual_rs+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_f64_NotEqual_rs+0x10
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n

Disassembly of section .text.op_f64_Equal_ss:

00000000 <op_f64_Equal_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Equal_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Equal_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Equal_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Equal_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0868      	l32i.n	a6, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_f64_Equal_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f64_Equal_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	20a440        	or	a10, a4, a4
  3c:	000081        	l32r	a8, fffc003c <op_f64_Equal_ss+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_f64_Equal_ss+0x10
			3c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3f:	0008e0        	callx8	a8
  42:	1ab8      	l32i.n	a11, a10, 4
  44:	0aa8      	l32i.n	a10, a10, 0
  46:	06cd      	mov.n	a12, a6
  48:	07dd      	mov.n	a13, a7
  4a:	000081        	l32r	a8, fffc004c <op_f64_Equal_ss+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_f64_Equal_ss+0x14
			4a: R_XTENSA_ASM_EXPAND	__eqdf2
  4d:	0008e0        	callx8	a8
  50:	000081        	l32r	a8, fffc0050 <op_f64_Equal_ss+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_f64_Equal_ss
  53:	d198      	l32i.n	a9, a1, 52
  55:	2189      	s32i.n	a8, a1, 8
  57:	c188      	l32i.n	a8, a1, 48
  59:	0f0c      	movi.n	a15, 0
  5b:	1e0c      	movi.n	a14, 1
  5d:	93efa0        	movnez	a14, a15, a10
  60:	0189      	s32i.n	a8, a1, 0
  62:	1199      	s32i.n	a9, a1, 4
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_f64_Equal_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_f64_Equal_ss+0x18
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_f64_Equal_rs:

00000000 <op_f64_Equal_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	04ad      	mov.n	a10, a4
   9:	0c2162        	l32i	a6, a1, 48
   c:	0d2172        	l32i	a7, a1, 52
   f:	000081        	l32r	a8, fffc0010 <op_f64_Equal_rs+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_f64_Equal_rs+0x4
			f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  12:	0008e0        	callx8	a8
  15:	0ab8      	l32i.n	a11, a10, 0
  17:	08a0c2        	movi	a12, 8
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	20a440        	or	a10, a4, a4
  20:	000081        	l32r	a8, fffc0020 <op_f64_Equal_rs+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Equal_rs+0x8
			20: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  23:	0008e0        	callx8	a8
  26:	1ab8      	l32i.n	a11, a10, 4
  28:	0aa8      	l32i.n	a10, a10, 0
  2a:	06cd      	mov.n	a12, a6
  2c:	07dd      	mov.n	a13, a7
  2e:	000081        	l32r	a8, fffc0030 <op_f64_Equal_rs+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f64_Equal_rs+0xc
			2e: R_XTENSA_ASM_EXPAND	__eqdf2
  31:	0008e0        	callx8	a8
  34:	000081        	l32r	a8, fffc0034 <op_f64_Equal_rs+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.op_f64_Equal_rs
  37:	0f0c      	movi.n	a15, 0
  39:	1e0c      	movi.n	a14, 1
  3b:	93efa0        	movnez	a14, a15, a10
  3e:	2189      	s32i.n	a8, a1, 8
  40:	0169      	s32i.n	a6, a1, 0
  42:	1179      	s32i.n	a7, a1, 4
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_f64_Equal_rs+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_f64_Equal_rs+0x10
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n

Disassembly of section .text.op_f32_GreaterThanOrEqual_ss:

00000000 <op_f32_GreaterThanOrEqual_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_GreaterThanOrEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_GreaterThanOrEqual_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_ss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	000813        	lsi	f1, a8, 0
  26:	02bd      	mov.n	a11, a2
  28:	074113        	ssi	f1, a1, 28
  2b:	4c0c      	movi.n	a12, 4
  2d:	20a440        	or	a10, a4, a4
  30:	000081        	l32r	a8, fffc0030 <op_f32_GreaterThanOrEqual_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f32_GreaterThanOrEqual_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_ss+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	000081        	l32r	a8, fffc0048 <op_f32_GreaterThanOrEqual_ss+0xfffc0048>
			45: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_ss
  48:	000a03        	lsi	f0, a10, 0
  4b:	070113        	lsi	f1, a1, 28
  4e:	112192        	l32i	a9, a1, 68
  51:	2189      	s32i.n	a8, a1, 8
  53:	102182        	l32i	a8, a1, 64
  56:	0f0c      	movi.n	a15, 0
  58:	6b0100        	ole.s	b0, f1, f0
  5b:	1e0c      	movi.n	a14, 1
  5d:	c3ef00        	movf	a14, a15, b0
  60:	0189      	s32i.n	a8, a1, 0
  62:	1199      	s32i.n	a9, a1, 4
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_f32_GreaterThanOrEqual_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_ss+0x14
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_f32_GreaterThanOrEqual_sr:

00000000 <op_f32_GreaterThanOrEqual_sr>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	102162        	l32i	a6, a1, 64
   d:	112172        	l32i	a7, a1, 68
  10:	000081        	l32r	a8, fffc0010 <op_f32_GreaterThanOrEqual_sr+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_sr+0x4
			10: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  13:	0008e0        	callx8	a8
  16:	0ab8      	l32i.n	a11, a10, 0
  18:	4c0c      	movi.n	a12, 4
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	04ad      	mov.n	a10, a4
  1f:	000081        	l32r	a8, fffc0020 <op_f32_GreaterThanOrEqual_sr+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_sr+0x8
			1f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  22:	0008e0        	callx8	a8
  25:	0a5d      	mov.n	a5, a10
  27:	07bd      	mov.n	a11, a7
  29:	06ad      	mov.n	a10, a6
  2b:	000081        	l32r	a8, fffc002c <op_f32_GreaterThanOrEqual_sr+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_sr+0xc
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	000503        	lsi	f0, a5, 0
  34:	fa1a50        	wfr	f1, a10
  37:	000081        	l32r	a8, fffc0038 <op_f32_GreaterThanOrEqual_sr+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_sr
  3a:	0f0c      	movi.n	a15, 0
  3c:	6b0010        	ole.s	b0, f0, f1
  3f:	1e0c      	movi.n	a14, 1
  41:	71a9      	s32i.n	a10, a1, 28
  43:	c3ef00        	movf	a14, a15, b0
  46:	2189      	s32i.n	a8, a1, 8
  48:	0169      	s32i.n	a6, a1, 0
  4a:	1179      	s32i.n	a7, a1, 4
  4c:	04cd      	mov.n	a12, a4
  4e:	03bd      	mov.n	a11, a3
  50:	02ad      	mov.n	a10, a2
  52:	000081        	l32r	a8, fffc0054 <op_f32_GreaterThanOrEqual_sr+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_sr+0x10
			52: R_XTENSA_ASM_EXPAND	.text.profileOp
  55:	0008e0        	callx8	a8
  58:	0a2d      	mov.n	a2, a10
  5a:	f01d      	retw.n

Disassembly of section .text.op_f32_GreaterThanOrEqual_rs:

00000000 <op_f32_GreaterThanOrEqual_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	102162        	l32i	a6, a1, 64
   d:	112172        	l32i	a7, a1, 68
  10:	000081        	l32r	a8, fffc0010 <op_f32_GreaterThanOrEqual_rs+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_rs+0x4
			10: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  13:	0008e0        	callx8	a8
  16:	0ab8      	l32i.n	a11, a10, 0
  18:	4c0c      	movi.n	a12, 4
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	04ad      	mov.n	a10, a4
  1f:	000081        	l32r	a8, fffc0020 <op_f32_GreaterThanOrEqual_rs+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_rs+0x8
			1f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  22:	0008e0        	callx8	a8
  25:	0a5d      	mov.n	a5, a10
  27:	07bd      	mov.n	a11, a7
  29:	06ad      	mov.n	a10, a6
  2b:	000081        	l32r	a8, fffc002c <op_f32_GreaterThanOrEqual_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_rs+0xc
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	000503        	lsi	f0, a5, 0
  34:	fa1a50        	wfr	f1, a10
  37:	000081        	l32r	a8, fffc0038 <op_f32_GreaterThanOrEqual_rs+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_rs
  3a:	0f0c      	movi.n	a15, 0
  3c:	6b0100        	ole.s	b0, f1, f0
  3f:	1e0c      	movi.n	a14, 1
  41:	71a9      	s32i.n	a10, a1, 28
  43:	c3ef00        	movf	a14, a15, b0
  46:	2189      	s32i.n	a8, a1, 8
  48:	0169      	s32i.n	a6, a1, 0
  4a:	1179      	s32i.n	a7, a1, 4
  4c:	04cd      	mov.n	a12, a4
  4e:	03bd      	mov.n	a11, a3
  50:	02ad      	mov.n	a10, a2
  52:	000081        	l32r	a8, fffc0054 <op_f32_GreaterThanOrEqual_rs+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThanOrEqual_rs+0x10
			52: R_XTENSA_ASM_EXPAND	.text.profileOp
  55:	0008e0        	callx8	a8
  58:	0a2d      	mov.n	a2, a10
  5a:	f01d      	retw.n

Disassembly of section .text.op_f32_LessThanOrEqual_ss:

00000000 <op_f32_LessThanOrEqual_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_LessThanOrEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_LessThanOrEqual_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_ss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	000803        	lsi	f0, a8, 0
  26:	02bd      	mov.n	a11, a2
  28:	074103        	ssi	f0, a1, 28
  2b:	4c0c      	movi.n	a12, 4
  2d:	20a440        	or	a10, a4, a4
  30:	000081        	l32r	a8, fffc0030 <op_f32_LessThanOrEqual_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f32_LessThanOrEqual_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_ss+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	000081        	l32r	a8, fffc0048 <op_f32_LessThanOrEqual_ss+0xfffc0048>
			45: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_ss
  48:	000a13        	lsi	f1, a10, 0
  4b:	070103        	lsi	f0, a1, 28
  4e:	112192        	l32i	a9, a1, 68
  51:	2189      	s32i.n	a8, a1, 8
  53:	102182        	l32i	a8, a1, 64
  56:	0f0c      	movi.n	a15, 0
  58:	6b0100        	ole.s	b0, f1, f0
  5b:	1e0c      	movi.n	a14, 1
  5d:	c3ef00        	movf	a14, a15, b0
  60:	0189      	s32i.n	a8, a1, 0
  62:	1199      	s32i.n	a9, a1, 4
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_f32_LessThanOrEqual_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_ss+0x14
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_f32_LessThanOrEqual_sr:

00000000 <op_f32_LessThanOrEqual_sr>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	102162        	l32i	a6, a1, 64
   d:	112172        	l32i	a7, a1, 68
  10:	000081        	l32r	a8, fffc0010 <op_f32_LessThanOrEqual_sr+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_sr+0x4
			10: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  13:	0008e0        	callx8	a8
  16:	0ab8      	l32i.n	a11, a10, 0
  18:	4c0c      	movi.n	a12, 4
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	04ad      	mov.n	a10, a4
  1f:	000081        	l32r	a8, fffc0020 <op_f32_LessThanOrEqual_sr+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_sr+0x8
			1f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  22:	0008e0        	callx8	a8
  25:	0a5d      	mov.n	a5, a10
  27:	07bd      	mov.n	a11, a7
  29:	06ad      	mov.n	a10, a6
  2b:	000081        	l32r	a8, fffc002c <op_f32_LessThanOrEqual_sr+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_sr+0xc
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	000503        	lsi	f0, a5, 0
  34:	fa1a50        	wfr	f1, a10
  37:	000081        	l32r	a8, fffc0038 <op_f32_LessThanOrEqual_sr+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_sr
  3a:	0f0c      	movi.n	a15, 0
  3c:	6b0100        	ole.s	b0, f1, f0
  3f:	1e0c      	movi.n	a14, 1
  41:	71a9      	s32i.n	a10, a1, 28
  43:	c3ef00        	movf	a14, a15, b0
  46:	2189      	s32i.n	a8, a1, 8
  48:	0169      	s32i.n	a6, a1, 0
  4a:	1179      	s32i.n	a7, a1, 4
  4c:	04cd      	mov.n	a12, a4
  4e:	03bd      	mov.n	a11, a3
  50:	02ad      	mov.n	a10, a2
  52:	000081        	l32r	a8, fffc0054 <op_f32_LessThanOrEqual_sr+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_sr+0x10
			52: R_XTENSA_ASM_EXPAND	.text.profileOp
  55:	0008e0        	callx8	a8
  58:	0a2d      	mov.n	a2, a10
  5a:	f01d      	retw.n

Disassembly of section .text.op_f32_LessThanOrEqual_rs:

00000000 <op_f32_LessThanOrEqual_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	102162        	l32i	a6, a1, 64
   d:	112172        	l32i	a7, a1, 68
  10:	000081        	l32r	a8, fffc0010 <op_f32_LessThanOrEqual_rs+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_rs+0x4
			10: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  13:	0008e0        	callx8	a8
  16:	0ab8      	l32i.n	a11, a10, 0
  18:	4c0c      	movi.n	a12, 4
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	04ad      	mov.n	a10, a4
  1f:	000081        	l32r	a8, fffc0020 <op_f32_LessThanOrEqual_rs+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_rs+0x8
			1f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  22:	0008e0        	callx8	a8
  25:	0a5d      	mov.n	a5, a10
  27:	07bd      	mov.n	a11, a7
  29:	06ad      	mov.n	a10, a6
  2b:	000081        	l32r	a8, fffc002c <op_f32_LessThanOrEqual_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_rs+0xc
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	000503        	lsi	f0, a5, 0
  34:	fa1a50        	wfr	f1, a10
  37:	000081        	l32r	a8, fffc0038 <op_f32_LessThanOrEqual_rs+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_rs
  3a:	0f0c      	movi.n	a15, 0
  3c:	6b0010        	ole.s	b0, f0, f1
  3f:	1e0c      	movi.n	a14, 1
  41:	71a9      	s32i.n	a10, a1, 28
  43:	c3ef00        	movf	a14, a15, b0
  46:	2189      	s32i.n	a8, a1, 8
  48:	0169      	s32i.n	a6, a1, 0
  4a:	1179      	s32i.n	a7, a1, 4
  4c:	04cd      	mov.n	a12, a4
  4e:	03bd      	mov.n	a11, a3
  50:	02ad      	mov.n	a10, a2
  52:	000081        	l32r	a8, fffc0054 <op_f32_LessThanOrEqual_rs+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThanOrEqual_rs+0x10
			52: R_XTENSA_ASM_EXPAND	.text.profileOp
  55:	0008e0        	callx8	a8
  58:	0a2d      	mov.n	a2, a10
  5a:	f01d      	retw.n

Disassembly of section .text.op_f32_GreaterThan_ss:

00000000 <op_f32_GreaterThan_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_GreaterThan_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_GreaterThan_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_ss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	000813        	lsi	f1, a8, 0
  26:	02bd      	mov.n	a11, a2
  28:	074113        	ssi	f1, a1, 28
  2b:	4c0c      	movi.n	a12, 4
  2d:	20a440        	or	a10, a4, a4
  30:	000081        	l32r	a8, fffc0030 <op_f32_GreaterThan_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f32_GreaterThan_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_ss+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	000081        	l32r	a8, fffc0048 <op_f32_GreaterThan_ss+0xfffc0048>
			45: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_ss
  48:	000a03        	lsi	f0, a10, 0
  4b:	070113        	lsi	f1, a1, 28
  4e:	112192        	l32i	a9, a1, 68
  51:	2189      	s32i.n	a8, a1, 8
  53:	102182        	l32i	a8, a1, 64
  56:	0f0c      	movi.n	a15, 0
  58:	4b0100        	olt.s	b0, f1, f0
  5b:	1e0c      	movi.n	a14, 1
  5d:	c3ef00        	movf	a14, a15, b0
  60:	0189      	s32i.n	a8, a1, 0
  62:	1199      	s32i.n	a9, a1, 4
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_f32_GreaterThan_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_ss+0x14
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_f32_GreaterThan_sr:

00000000 <op_f32_GreaterThan_sr>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	102162        	l32i	a6, a1, 64
   d:	112172        	l32i	a7, a1, 68
  10:	000081        	l32r	a8, fffc0010 <op_f32_GreaterThan_sr+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_sr+0x4
			10: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  13:	0008e0        	callx8	a8
  16:	0ab8      	l32i.n	a11, a10, 0
  18:	4c0c      	movi.n	a12, 4
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	04ad      	mov.n	a10, a4
  1f:	000081        	l32r	a8, fffc0020 <op_f32_GreaterThan_sr+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_sr+0x8
			1f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  22:	0008e0        	callx8	a8
  25:	0a5d      	mov.n	a5, a10
  27:	07bd      	mov.n	a11, a7
  29:	06ad      	mov.n	a10, a6
  2b:	000081        	l32r	a8, fffc002c <op_f32_GreaterThan_sr+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_sr+0xc
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	000503        	lsi	f0, a5, 0
  34:	fa1a50        	wfr	f1, a10
  37:	000081        	l32r	a8, fffc0038 <op_f32_GreaterThan_sr+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_sr
  3a:	0f0c      	movi.n	a15, 0
  3c:	4b0010        	olt.s	b0, f0, f1
  3f:	1e0c      	movi.n	a14, 1
  41:	71a9      	s32i.n	a10, a1, 28
  43:	c3ef00        	movf	a14, a15, b0
  46:	2189      	s32i.n	a8, a1, 8
  48:	0169      	s32i.n	a6, a1, 0
  4a:	1179      	s32i.n	a7, a1, 4
  4c:	04cd      	mov.n	a12, a4
  4e:	03bd      	mov.n	a11, a3
  50:	02ad      	mov.n	a10, a2
  52:	000081        	l32r	a8, fffc0054 <op_f32_GreaterThan_sr+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_sr+0x10
			52: R_XTENSA_ASM_EXPAND	.text.profileOp
  55:	0008e0        	callx8	a8
  58:	0a2d      	mov.n	a2, a10
  5a:	f01d      	retw.n

Disassembly of section .text.op_f32_GreaterThan_rs:

00000000 <op_f32_GreaterThan_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	102162        	l32i	a6, a1, 64
   d:	112172        	l32i	a7, a1, 68
  10:	000081        	l32r	a8, fffc0010 <op_f32_GreaterThan_rs+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_rs+0x4
			10: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  13:	0008e0        	callx8	a8
  16:	0ab8      	l32i.n	a11, a10, 0
  18:	4c0c      	movi.n	a12, 4
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	04ad      	mov.n	a10, a4
  1f:	000081        	l32r	a8, fffc0020 <op_f32_GreaterThan_rs+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_rs+0x8
			1f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  22:	0008e0        	callx8	a8
  25:	0a5d      	mov.n	a5, a10
  27:	07bd      	mov.n	a11, a7
  29:	06ad      	mov.n	a10, a6
  2b:	000081        	l32r	a8, fffc002c <op_f32_GreaterThan_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_rs+0xc
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	000503        	lsi	f0, a5, 0
  34:	fa1a50        	wfr	f1, a10
  37:	000081        	l32r	a8, fffc0038 <op_f32_GreaterThan_rs+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_rs
  3a:	0f0c      	movi.n	a15, 0
  3c:	4b0100        	olt.s	b0, f1, f0
  3f:	1e0c      	movi.n	a14, 1
  41:	71a9      	s32i.n	a10, a1, 28
  43:	c3ef00        	movf	a14, a15, b0
  46:	2189      	s32i.n	a8, a1, 8
  48:	0169      	s32i.n	a6, a1, 0
  4a:	1179      	s32i.n	a7, a1, 4
  4c:	04cd      	mov.n	a12, a4
  4e:	03bd      	mov.n	a11, a3
  50:	02ad      	mov.n	a10, a2
  52:	000081        	l32r	a8, fffc0054 <op_f32_GreaterThan_rs+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_f32_GreaterThan_rs+0x10
			52: R_XTENSA_ASM_EXPAND	.text.profileOp
  55:	0008e0        	callx8	a8
  58:	0a2d      	mov.n	a2, a10
  5a:	f01d      	retw.n

Disassembly of section .text.op_f32_LessThan_ss:

00000000 <op_f32_LessThan_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_LessThan_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_LessThan_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_ss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	000803        	lsi	f0, a8, 0
  26:	02bd      	mov.n	a11, a2
  28:	074103        	ssi	f0, a1, 28
  2b:	4c0c      	movi.n	a12, 4
  2d:	20a440        	or	a10, a4, a4
  30:	000081        	l32r	a8, fffc0030 <op_f32_LessThan_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f32_LessThan_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_ss+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	000081        	l32r	a8, fffc0048 <op_f32_LessThan_ss+0xfffc0048>
			45: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_ss
  48:	000a13        	lsi	f1, a10, 0
  4b:	070103        	lsi	f0, a1, 28
  4e:	112192        	l32i	a9, a1, 68
  51:	2189      	s32i.n	a8, a1, 8
  53:	102182        	l32i	a8, a1, 64
  56:	0f0c      	movi.n	a15, 0
  58:	4b0100        	olt.s	b0, f1, f0
  5b:	1e0c      	movi.n	a14, 1
  5d:	c3ef00        	movf	a14, a15, b0
  60:	0189      	s32i.n	a8, a1, 0
  62:	1199      	s32i.n	a9, a1, 4
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_f32_LessThan_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_ss+0x14
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_f32_LessThan_sr:

00000000 <op_f32_LessThan_sr>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	102162        	l32i	a6, a1, 64
   d:	112172        	l32i	a7, a1, 68
  10:	000081        	l32r	a8, fffc0010 <op_f32_LessThan_sr+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_sr+0x4
			10: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  13:	0008e0        	callx8	a8
  16:	0ab8      	l32i.n	a11, a10, 0
  18:	4c0c      	movi.n	a12, 4
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	04ad      	mov.n	a10, a4
  1f:	000081        	l32r	a8, fffc0020 <op_f32_LessThan_sr+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_sr+0x8
			1f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  22:	0008e0        	callx8	a8
  25:	0a5d      	mov.n	a5, a10
  27:	07bd      	mov.n	a11, a7
  29:	06ad      	mov.n	a10, a6
  2b:	000081        	l32r	a8, fffc002c <op_f32_LessThan_sr+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_sr+0xc
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	000503        	lsi	f0, a5, 0
  34:	fa1a50        	wfr	f1, a10
  37:	000081        	l32r	a8, fffc0038 <op_f32_LessThan_sr+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_sr
  3a:	0f0c      	movi.n	a15, 0
  3c:	4b0100        	olt.s	b0, f1, f0
  3f:	1e0c      	movi.n	a14, 1
  41:	71a9      	s32i.n	a10, a1, 28
  43:	c3ef00        	movf	a14, a15, b0
  46:	2189      	s32i.n	a8, a1, 8
  48:	0169      	s32i.n	a6, a1, 0
  4a:	1179      	s32i.n	a7, a1, 4
  4c:	04cd      	mov.n	a12, a4
  4e:	03bd      	mov.n	a11, a3
  50:	02ad      	mov.n	a10, a2
  52:	000081        	l32r	a8, fffc0054 <op_f32_LessThan_sr+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_sr+0x10
			52: R_XTENSA_ASM_EXPAND	.text.profileOp
  55:	0008e0        	callx8	a8
  58:	0a2d      	mov.n	a2, a10
  5a:	f01d      	retw.n

Disassembly of section .text.op_f32_LessThan_rs:

00000000 <op_f32_LessThan_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	102162        	l32i	a6, a1, 64
   d:	112172        	l32i	a7, a1, 68
  10:	000081        	l32r	a8, fffc0010 <op_f32_LessThan_rs+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_rs+0x4
			10: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  13:	0008e0        	callx8	a8
  16:	0ab8      	l32i.n	a11, a10, 0
  18:	4c0c      	movi.n	a12, 4
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	04ad      	mov.n	a10, a4
  1f:	000081        	l32r	a8, fffc0020 <op_f32_LessThan_rs+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_rs+0x8
			1f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  22:	0008e0        	callx8	a8
  25:	0a5d      	mov.n	a5, a10
  27:	07bd      	mov.n	a11, a7
  29:	06ad      	mov.n	a10, a6
  2b:	000081        	l32r	a8, fffc002c <op_f32_LessThan_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_rs+0xc
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	000503        	lsi	f0, a5, 0
  34:	fa1a50        	wfr	f1, a10
  37:	000081        	l32r	a8, fffc0038 <op_f32_LessThan_rs+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_rs
  3a:	0f0c      	movi.n	a15, 0
  3c:	4b0010        	olt.s	b0, f0, f1
  3f:	1e0c      	movi.n	a14, 1
  41:	71a9      	s32i.n	a10, a1, 28
  43:	c3ef00        	movf	a14, a15, b0
  46:	2189      	s32i.n	a8, a1, 8
  48:	0169      	s32i.n	a6, a1, 0
  4a:	1179      	s32i.n	a7, a1, 4
  4c:	04cd      	mov.n	a12, a4
  4e:	03bd      	mov.n	a11, a3
  50:	02ad      	mov.n	a10, a2
  52:	000081        	l32r	a8, fffc0054 <op_f32_LessThan_rs+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_f32_LessThan_rs+0x10
			52: R_XTENSA_ASM_EXPAND	.text.profileOp
  55:	0008e0        	callx8	a8
  58:	0a2d      	mov.n	a2, a10
  5a:	f01d      	retw.n

Disassembly of section .text.op_f32_NotEqual_ss:

00000000 <op_f32_NotEqual_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_NotEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_NotEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_NotEqual_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_NotEqual_ss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	000803        	lsi	f0, a8, 0
  26:	02bd      	mov.n	a11, a2
  28:	074103        	ssi	f0, a1, 28
  2b:	4c0c      	movi.n	a12, 4
  2d:	20a440        	or	a10, a4, a4
  30:	000081        	l32r	a8, fffc0030 <op_f32_NotEqual_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_NotEqual_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f32_NotEqual_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f32_NotEqual_ss+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	000081        	l32r	a8, fffc0048 <op_f32_NotEqual_ss+0xfffc0048>
			45: R_XTENSA_SLOT0_OP	.literal.op_f32_NotEqual_ss
  48:	000a13        	lsi	f1, a10, 0
  4b:	070103        	lsi	f0, a1, 28
  4e:	112192        	l32i	a9, a1, 68
  51:	2189      	s32i.n	a8, a1, 8
  53:	102182        	l32i	a8, a1, 64
  56:	0f0c      	movi.n	a15, 0
  58:	2b0100        	oeq.s	b0, f1, f0
  5b:	1e0c      	movi.n	a14, 1
  5d:	d3ef00        	movt	a14, a15, b0
  60:	0189      	s32i.n	a8, a1, 0
  62:	1199      	s32i.n	a9, a1, 4
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_f32_NotEqual_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_f32_NotEqual_ss+0x14
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_f32_NotEqual_rs:

00000000 <op_f32_NotEqual_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	102162        	l32i	a6, a1, 64
   d:	112172        	l32i	a7, a1, 68
  10:	000081        	l32r	a8, fffc0010 <op_f32_NotEqual_rs+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.op_f32_NotEqual_rs+0x4
			10: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  13:	0008e0        	callx8	a8
  16:	0ab8      	l32i.n	a11, a10, 0
  18:	4c0c      	movi.n	a12, 4
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	04ad      	mov.n	a10, a4
  1f:	000081        	l32r	a8, fffc0020 <op_f32_NotEqual_rs+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_f32_NotEqual_rs+0x8
			1f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  22:	0008e0        	callx8	a8
  25:	0a5d      	mov.n	a5, a10
  27:	07bd      	mov.n	a11, a7
  29:	06ad      	mov.n	a10, a6
  2b:	000081        	l32r	a8, fffc002c <op_f32_NotEqual_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f32_NotEqual_rs+0xc
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	000503        	lsi	f0, a5, 0
  34:	fa1a50        	wfr	f1, a10
  37:	000081        	l32r	a8, fffc0038 <op_f32_NotEqual_rs+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_f32_NotEqual_rs
  3a:	0f0c      	movi.n	a15, 0
  3c:	2b0010        	oeq.s	b0, f0, f1
  3f:	1e0c      	movi.n	a14, 1
  41:	71a9      	s32i.n	a10, a1, 28
  43:	d3ef00        	movt	a14, a15, b0
  46:	2189      	s32i.n	a8, a1, 8
  48:	0169      	s32i.n	a6, a1, 0
  4a:	1179      	s32i.n	a7, a1, 4
  4c:	04cd      	mov.n	a12, a4
  4e:	03bd      	mov.n	a11, a3
  50:	02ad      	mov.n	a10, a2
  52:	000081        	l32r	a8, fffc0054 <op_f32_NotEqual_rs+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_f32_NotEqual_rs+0x10
			52: R_XTENSA_ASM_EXPAND	.text.profileOp
  55:	0008e0        	callx8	a8
  58:	0a2d      	mov.n	a2, a10
  5a:	f01d      	retw.n

Disassembly of section .text.op_f32_Equal_ss:

00000000 <op_f32_Equal_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Equal_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Equal_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Equal_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Equal_ss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	000803        	lsi	f0, a8, 0
  26:	02bd      	mov.n	a11, a2
  28:	074103        	ssi	f0, a1, 28
  2b:	4c0c      	movi.n	a12, 4
  2d:	20a440        	or	a10, a4, a4
  30:	000081        	l32r	a8, fffc0030 <op_f32_Equal_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_Equal_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f32_Equal_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f32_Equal_ss+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	000081        	l32r	a8, fffc0048 <op_f32_Equal_ss+0xfffc0048>
			45: R_XTENSA_SLOT0_OP	.literal.op_f32_Equal_ss
  48:	000a13        	lsi	f1, a10, 0
  4b:	070103        	lsi	f0, a1, 28
  4e:	112192        	l32i	a9, a1, 68
  51:	2189      	s32i.n	a8, a1, 8
  53:	102182        	l32i	a8, a1, 64
  56:	0f0c      	movi.n	a15, 0
  58:	2b0100        	oeq.s	b0, f1, f0
  5b:	1e0c      	movi.n	a14, 1
  5d:	c3ef00        	movf	a14, a15, b0
  60:	0189      	s32i.n	a8, a1, 0
  62:	1199      	s32i.n	a9, a1, 4
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	02ad      	mov.n	a10, a2
  6a:	000081        	l32r	a8, fffc006c <op_f32_Equal_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_f32_Equal_ss+0x14
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_f32_Equal_rs:

00000000 <op_f32_Equal_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	102162        	l32i	a6, a1, 64
   d:	112172        	l32i	a7, a1, 68
  10:	000081        	l32r	a8, fffc0010 <op_f32_Equal_rs+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.op_f32_Equal_rs+0x4
			10: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  13:	0008e0        	callx8	a8
  16:	0ab8      	l32i.n	a11, a10, 0
  18:	4c0c      	movi.n	a12, 4
  1a:	a0bb30        	addx4	a11, a11, a3
  1d:	04ad      	mov.n	a10, a4
  1f:	000081        	l32r	a8, fffc0020 <op_f32_Equal_rs+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_f32_Equal_rs+0x8
			1f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  22:	0008e0        	callx8	a8
  25:	0a5d      	mov.n	a5, a10
  27:	07bd      	mov.n	a11, a7
  29:	06ad      	mov.n	a10, a6
  2b:	000081        	l32r	a8, fffc002c <op_f32_Equal_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f32_Equal_rs+0xc
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	000503        	lsi	f0, a5, 0
  34:	fa1a50        	wfr	f1, a10
  37:	000081        	l32r	a8, fffc0038 <op_f32_Equal_rs+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_f32_Equal_rs
  3a:	0f0c      	movi.n	a15, 0
  3c:	2b0010        	oeq.s	b0, f0, f1
  3f:	1e0c      	movi.n	a14, 1
  41:	71a9      	s32i.n	a10, a1, 28
  43:	c3ef00        	movf	a14, a15, b0
  46:	2189      	s32i.n	a8, a1, 8
  48:	0169      	s32i.n	a6, a1, 0
  4a:	1179      	s32i.n	a7, a1, 4
  4c:	04cd      	mov.n	a12, a4
  4e:	03bd      	mov.n	a11, a3
  50:	02ad      	mov.n	a10, a2
  52:	000081        	l32r	a8, fffc0054 <op_f32_Equal_rs+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_f32_Equal_rs+0x10
			52: R_XTENSA_ASM_EXPAND	.text.profileOp
  55:	0008e0        	callx8	a8
  58:	0a2d      	mov.n	a2, a10
  5a:	f01d      	retw.n

Disassembly of section .text.op_u64_GreaterThanOrEqual_ss:

00000000 <op_u64_GreaterThanOrEqual_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_GreaterThanOrEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThanOrEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_GreaterThanOrEqual_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThanOrEqual_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	1868      	l32i.n	a6, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_u64_GreaterThanOrEqual_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThanOrEqual_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_u64_GreaterThanOrEqual_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThanOrEqual_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	1a88      	l32i.n	a8, a10, 4
  43:	1e0c      	movi.n	a14, 1
  45:	0f0c      	movi.n	a15, 0
  47:	243867        	bltu	a8, a6, 6f <op_u64_GreaterThanOrEqual_ss+0x6f>
			47: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThanOrEqual_ss+0x6f
  4a:	1c1867        	beq	a8, a6, 6a <op_u64_GreaterThanOrEqual_ss+0x6a>
			4a: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThanOrEqual_ss+0x6a
  4d:	c188      	l32i.n	a8, a1, 48
  4f:	d198      	l32i.n	a9, a1, 52
  51:	0189      	s32i.n	a8, a1, 0
  53:	000081        	l32r	a8, fffc0054 <op_u64_GreaterThanOrEqual_ss+0xfffc0054>
			53: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThanOrEqual_ss
  56:	1199      	s32i.n	a9, a1, 4
  58:	2189      	s32i.n	a8, a1, 8
  5a:	04cd      	mov.n	a12, a4
  5c:	03bd      	mov.n	a11, a3
  5e:	02ad      	mov.n	a10, a2
  60:	000081        	l32r	a8, fffc0060 <op_u64_GreaterThanOrEqual_ss+0xfffc0060>
			60: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThanOrEqual_ss+0x14
			60: R_XTENSA_ASM_EXPAND	.text.profileOp
  63:	0008e0        	callx8	a8
  66:	0a2d      	mov.n	a2, a10
  68:	f01d      	retw.n
  6a:	0a88      	l32i.n	a8, a10, 0
  6c:	ddb877        	bgeu	a8, a7, 4d <op_u64_GreaterThanOrEqual_ss+0x4d>
			6c: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThanOrEqual_ss+0x4d
  6f:	0e0c      	movi.n	a14, 0
  71:	0efd      	mov.n	a15, a14
  73:	fff586        	j	4d <op_u64_GreaterThanOrEqual_ss+0x4d>
			73: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThanOrEqual_ss+0x4d

Disassembly of section .text.op_u64_GreaterThanOrEqual_sr:

00000000 <op_u64_GreaterThanOrEqual_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_GreaterThanOrEqual_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThanOrEqual_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_GreaterThanOrEqual_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThanOrEqual_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	293787        	bltu	a7, a8, 51 <op_u64_GreaterThanOrEqual_sr+0x51>
			24: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThanOrEqual_sr+0x51
  27:	211877        	beq	a8, a7, 4c <op_u64_GreaterThanOrEqual_sr+0x4c>
			27: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThanOrEqual_sr+0x4c
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_u64_GreaterThanOrEqual_sr+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThanOrEqual_sr
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_u64_GreaterThanOrEqual_sr+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThanOrEqual_sr+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n
  4c:	0a88      	l32i.n	a8, a10, 0
  4e:	d8b687        	bgeu	a6, a8, 2a <op_u64_GreaterThanOrEqual_sr+0x2a>
			4e: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThanOrEqual_sr+0x2a
  51:	0e0c      	movi.n	a14, 0
  53:	fff4c6        	j	2a <op_u64_GreaterThanOrEqual_sr+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThanOrEqual_sr+0x2a

Disassembly of section .text.op_u64_GreaterThanOrEqual_rs:

00000000 <op_u64_GreaterThanOrEqual_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_GreaterThanOrEqual_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThanOrEqual_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_GreaterThanOrEqual_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThanOrEqual_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	293877        	bltu	a8, a7, 51 <op_u64_GreaterThanOrEqual_rs+0x51>
			24: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThanOrEqual_rs+0x51
  27:	211877        	beq	a8, a7, 4c <op_u64_GreaterThanOrEqual_rs+0x4c>
			27: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThanOrEqual_rs+0x4c
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_u64_GreaterThanOrEqual_rs+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThanOrEqual_rs
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_u64_GreaterThanOrEqual_rs+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThanOrEqual_rs+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n
  4c:	0a88      	l32i.n	a8, a10, 0
  4e:	d8b867        	bgeu	a8, a6, 2a <op_u64_GreaterThanOrEqual_rs+0x2a>
			4e: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThanOrEqual_rs+0x2a
  51:	0e0c      	movi.n	a14, 0
  53:	fff4c6        	j	2a <op_u64_GreaterThanOrEqual_rs+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThanOrEqual_rs+0x2a

Disassembly of section .text.op_i64_GreaterThanOrEqual_ss:

00000000 <op_i64_GreaterThanOrEqual_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_GreaterThanOrEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThanOrEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_GreaterThanOrEqual_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThanOrEqual_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	1868      	l32i.n	a6, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_i64_GreaterThanOrEqual_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThanOrEqual_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_GreaterThanOrEqual_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThanOrEqual_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	1a88      	l32i.n	a8, a10, 4
  43:	1e0c      	movi.n	a14, 1
  45:	0f0c      	movi.n	a15, 0
  47:	242867        	blt	a8, a6, 6f <op_i64_GreaterThanOrEqual_ss+0x6f>
			47: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThanOrEqual_ss+0x6f
  4a:	1c1867        	beq	a8, a6, 6a <op_i64_GreaterThanOrEqual_ss+0x6a>
			4a: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThanOrEqual_ss+0x6a
  4d:	c188      	l32i.n	a8, a1, 48
  4f:	d198      	l32i.n	a9, a1, 52
  51:	0189      	s32i.n	a8, a1, 0
  53:	000081        	l32r	a8, fffc0054 <op_i64_GreaterThanOrEqual_ss+0xfffc0054>
			53: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThanOrEqual_ss
  56:	1199      	s32i.n	a9, a1, 4
  58:	2189      	s32i.n	a8, a1, 8
  5a:	04cd      	mov.n	a12, a4
  5c:	03bd      	mov.n	a11, a3
  5e:	02ad      	mov.n	a10, a2
  60:	000081        	l32r	a8, fffc0060 <op_i64_GreaterThanOrEqual_ss+0xfffc0060>
			60: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThanOrEqual_ss+0x14
			60: R_XTENSA_ASM_EXPAND	.text.profileOp
  63:	0008e0        	callx8	a8
  66:	0a2d      	mov.n	a2, a10
  68:	f01d      	retw.n
  6a:	0a88      	l32i.n	a8, a10, 0
  6c:	ddb877        	bgeu	a8, a7, 4d <op_i64_GreaterThanOrEqual_ss+0x4d>
			6c: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThanOrEqual_ss+0x4d
  6f:	0e0c      	movi.n	a14, 0
  71:	0efd      	mov.n	a15, a14
  73:	fff586        	j	4d <op_i64_GreaterThanOrEqual_ss+0x4d>
			73: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThanOrEqual_ss+0x4d

Disassembly of section .text.op_i64_GreaterThanOrEqual_sr:

00000000 <op_i64_GreaterThanOrEqual_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_GreaterThanOrEqual_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThanOrEqual_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_GreaterThanOrEqual_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThanOrEqual_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	292787        	blt	a7, a8, 51 <op_i64_GreaterThanOrEqual_sr+0x51>
			24: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThanOrEqual_sr+0x51
  27:	211877        	beq	a8, a7, 4c <op_i64_GreaterThanOrEqual_sr+0x4c>
			27: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThanOrEqual_sr+0x4c
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_i64_GreaterThanOrEqual_sr+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThanOrEqual_sr
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i64_GreaterThanOrEqual_sr+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThanOrEqual_sr+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n
  4c:	0a88      	l32i.n	a8, a10, 0
  4e:	d8b687        	bgeu	a6, a8, 2a <op_i64_GreaterThanOrEqual_sr+0x2a>
			4e: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThanOrEqual_sr+0x2a
  51:	0e0c      	movi.n	a14, 0
  53:	fff4c6        	j	2a <op_i64_GreaterThanOrEqual_sr+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThanOrEqual_sr+0x2a

Disassembly of section .text.op_i64_GreaterThanOrEqual_rs:

00000000 <op_i64_GreaterThanOrEqual_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_GreaterThanOrEqual_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThanOrEqual_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_GreaterThanOrEqual_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThanOrEqual_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	292877        	blt	a8, a7, 51 <op_i64_GreaterThanOrEqual_rs+0x51>
			24: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThanOrEqual_rs+0x51
  27:	211877        	beq	a8, a7, 4c <op_i64_GreaterThanOrEqual_rs+0x4c>
			27: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThanOrEqual_rs+0x4c
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_i64_GreaterThanOrEqual_rs+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThanOrEqual_rs
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i64_GreaterThanOrEqual_rs+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThanOrEqual_rs+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n
  4c:	0a88      	l32i.n	a8, a10, 0
  4e:	d8b867        	bgeu	a8, a6, 2a <op_i64_GreaterThanOrEqual_rs+0x2a>
			4e: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThanOrEqual_rs+0x2a
  51:	0e0c      	movi.n	a14, 0
  53:	fff4c6        	j	2a <op_i64_GreaterThanOrEqual_rs+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThanOrEqual_rs+0x2a

Disassembly of section .text.op_u64_LessThanOrEqual_ss:

00000000 <op_u64_LessThanOrEqual_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_LessThanOrEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThanOrEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_LessThanOrEqual_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThanOrEqual_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	1868      	l32i.n	a6, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_u64_LessThanOrEqual_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThanOrEqual_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_u64_LessThanOrEqual_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThanOrEqual_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	1a88      	l32i.n	a8, a10, 4
  43:	1e0c      	movi.n	a14, 1
  45:	0f0c      	movi.n	a15, 0
  47:	243687        	bltu	a6, a8, 6f <op_u64_LessThanOrEqual_ss+0x6f>
			47: R_XTENSA_SLOT0_OP	.text.op_u64_LessThanOrEqual_ss+0x6f
  4a:	1c1867        	beq	a8, a6, 6a <op_u64_LessThanOrEqual_ss+0x6a>
			4a: R_XTENSA_SLOT0_OP	.text.op_u64_LessThanOrEqual_ss+0x6a
  4d:	c188      	l32i.n	a8, a1, 48
  4f:	d198      	l32i.n	a9, a1, 52
  51:	0189      	s32i.n	a8, a1, 0
  53:	000081        	l32r	a8, fffc0054 <op_u64_LessThanOrEqual_ss+0xfffc0054>
			53: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThanOrEqual_ss
  56:	1199      	s32i.n	a9, a1, 4
  58:	2189      	s32i.n	a8, a1, 8
  5a:	04cd      	mov.n	a12, a4
  5c:	03bd      	mov.n	a11, a3
  5e:	02ad      	mov.n	a10, a2
  60:	000081        	l32r	a8, fffc0060 <op_u64_LessThanOrEqual_ss+0xfffc0060>
			60: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThanOrEqual_ss+0x14
			60: R_XTENSA_ASM_EXPAND	.text.profileOp
  63:	0008e0        	callx8	a8
  66:	0a2d      	mov.n	a2, a10
  68:	f01d      	retw.n
  6a:	0a88      	l32i.n	a8, a10, 0
  6c:	ddb787        	bgeu	a7, a8, 4d <op_u64_LessThanOrEqual_ss+0x4d>
			6c: R_XTENSA_SLOT0_OP	.text.op_u64_LessThanOrEqual_ss+0x4d
  6f:	0e0c      	movi.n	a14, 0
  71:	0efd      	mov.n	a15, a14
  73:	fff586        	j	4d <op_u64_LessThanOrEqual_ss+0x4d>
			73: R_XTENSA_SLOT0_OP	.text.op_u64_LessThanOrEqual_ss+0x4d

Disassembly of section .text.op_u64_LessThanOrEqual_sr:

00000000 <op_u64_LessThanOrEqual_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_LessThanOrEqual_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThanOrEqual_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_LessThanOrEqual_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThanOrEqual_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	293877        	bltu	a8, a7, 51 <op_u64_LessThanOrEqual_sr+0x51>
			24: R_XTENSA_SLOT0_OP	.text.op_u64_LessThanOrEqual_sr+0x51
  27:	211877        	beq	a8, a7, 4c <op_u64_LessThanOrEqual_sr+0x4c>
			27: R_XTENSA_SLOT0_OP	.text.op_u64_LessThanOrEqual_sr+0x4c
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_u64_LessThanOrEqual_sr+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThanOrEqual_sr
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_u64_LessThanOrEqual_sr+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThanOrEqual_sr+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n
  4c:	0a88      	l32i.n	a8, a10, 0
  4e:	d8b867        	bgeu	a8, a6, 2a <op_u64_LessThanOrEqual_sr+0x2a>
			4e: R_XTENSA_SLOT0_OP	.text.op_u64_LessThanOrEqual_sr+0x2a
  51:	0e0c      	movi.n	a14, 0
  53:	fff4c6        	j	2a <op_u64_LessThanOrEqual_sr+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_u64_LessThanOrEqual_sr+0x2a

Disassembly of section .text.op_u64_LessThanOrEqual_rs:

00000000 <op_u64_LessThanOrEqual_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_LessThanOrEqual_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThanOrEqual_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_LessThanOrEqual_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThanOrEqual_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	293787        	bltu	a7, a8, 51 <op_u64_LessThanOrEqual_rs+0x51>
			24: R_XTENSA_SLOT0_OP	.text.op_u64_LessThanOrEqual_rs+0x51
  27:	211877        	beq	a8, a7, 4c <op_u64_LessThanOrEqual_rs+0x4c>
			27: R_XTENSA_SLOT0_OP	.text.op_u64_LessThanOrEqual_rs+0x4c
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_u64_LessThanOrEqual_rs+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThanOrEqual_rs
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_u64_LessThanOrEqual_rs+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThanOrEqual_rs+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n
  4c:	0a88      	l32i.n	a8, a10, 0
  4e:	d8b687        	bgeu	a6, a8, 2a <op_u64_LessThanOrEqual_rs+0x2a>
			4e: R_XTENSA_SLOT0_OP	.text.op_u64_LessThanOrEqual_rs+0x2a
  51:	0e0c      	movi.n	a14, 0
  53:	fff4c6        	j	2a <op_u64_LessThanOrEqual_rs+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_u64_LessThanOrEqual_rs+0x2a

Disassembly of section .text.op_i64_LessThanOrEqual_ss:

00000000 <op_i64_LessThanOrEqual_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_LessThanOrEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThanOrEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_LessThanOrEqual_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThanOrEqual_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	1868      	l32i.n	a6, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_i64_LessThanOrEqual_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThanOrEqual_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_LessThanOrEqual_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThanOrEqual_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	1a88      	l32i.n	a8, a10, 4
  43:	1e0c      	movi.n	a14, 1
  45:	0f0c      	movi.n	a15, 0
  47:	242687        	blt	a6, a8, 6f <op_i64_LessThanOrEqual_ss+0x6f>
			47: R_XTENSA_SLOT0_OP	.text.op_i64_LessThanOrEqual_ss+0x6f
  4a:	1c1867        	beq	a8, a6, 6a <op_i64_LessThanOrEqual_ss+0x6a>
			4a: R_XTENSA_SLOT0_OP	.text.op_i64_LessThanOrEqual_ss+0x6a
  4d:	c188      	l32i.n	a8, a1, 48
  4f:	d198      	l32i.n	a9, a1, 52
  51:	0189      	s32i.n	a8, a1, 0
  53:	000081        	l32r	a8, fffc0054 <op_i64_LessThanOrEqual_ss+0xfffc0054>
			53: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThanOrEqual_ss
  56:	1199      	s32i.n	a9, a1, 4
  58:	2189      	s32i.n	a8, a1, 8
  5a:	04cd      	mov.n	a12, a4
  5c:	03bd      	mov.n	a11, a3
  5e:	02ad      	mov.n	a10, a2
  60:	000081        	l32r	a8, fffc0060 <op_i64_LessThanOrEqual_ss+0xfffc0060>
			60: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThanOrEqual_ss+0x14
			60: R_XTENSA_ASM_EXPAND	.text.profileOp
  63:	0008e0        	callx8	a8
  66:	0a2d      	mov.n	a2, a10
  68:	f01d      	retw.n
  6a:	0a88      	l32i.n	a8, a10, 0
  6c:	ddb787        	bgeu	a7, a8, 4d <op_i64_LessThanOrEqual_ss+0x4d>
			6c: R_XTENSA_SLOT0_OP	.text.op_i64_LessThanOrEqual_ss+0x4d
  6f:	0e0c      	movi.n	a14, 0
  71:	0efd      	mov.n	a15, a14
  73:	fff586        	j	4d <op_i64_LessThanOrEqual_ss+0x4d>
			73: R_XTENSA_SLOT0_OP	.text.op_i64_LessThanOrEqual_ss+0x4d

Disassembly of section .text.op_i64_LessThanOrEqual_sr:

00000000 <op_i64_LessThanOrEqual_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_LessThanOrEqual_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThanOrEqual_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_LessThanOrEqual_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThanOrEqual_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	292877        	blt	a8, a7, 51 <op_i64_LessThanOrEqual_sr+0x51>
			24: R_XTENSA_SLOT0_OP	.text.op_i64_LessThanOrEqual_sr+0x51
  27:	211877        	beq	a8, a7, 4c <op_i64_LessThanOrEqual_sr+0x4c>
			27: R_XTENSA_SLOT0_OP	.text.op_i64_LessThanOrEqual_sr+0x4c
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_i64_LessThanOrEqual_sr+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThanOrEqual_sr
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i64_LessThanOrEqual_sr+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThanOrEqual_sr+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n
  4c:	0a88      	l32i.n	a8, a10, 0
  4e:	d8b867        	bgeu	a8, a6, 2a <op_i64_LessThanOrEqual_sr+0x2a>
			4e: R_XTENSA_SLOT0_OP	.text.op_i64_LessThanOrEqual_sr+0x2a
  51:	0e0c      	movi.n	a14, 0
  53:	fff4c6        	j	2a <op_i64_LessThanOrEqual_sr+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_i64_LessThanOrEqual_sr+0x2a

Disassembly of section .text.op_i64_LessThanOrEqual_rs:

00000000 <op_i64_LessThanOrEqual_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_LessThanOrEqual_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThanOrEqual_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_LessThanOrEqual_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThanOrEqual_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	292787        	blt	a7, a8, 51 <op_i64_LessThanOrEqual_rs+0x51>
			24: R_XTENSA_SLOT0_OP	.text.op_i64_LessThanOrEqual_rs+0x51
  27:	211877        	beq	a8, a7, 4c <op_i64_LessThanOrEqual_rs+0x4c>
			27: R_XTENSA_SLOT0_OP	.text.op_i64_LessThanOrEqual_rs+0x4c
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_i64_LessThanOrEqual_rs+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThanOrEqual_rs
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i64_LessThanOrEqual_rs+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThanOrEqual_rs+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n
  4c:	0a88      	l32i.n	a8, a10, 0
  4e:	d8b687        	bgeu	a6, a8, 2a <op_i64_LessThanOrEqual_rs+0x2a>
			4e: R_XTENSA_SLOT0_OP	.text.op_i64_LessThanOrEqual_rs+0x2a
  51:	0e0c      	movi.n	a14, 0
  53:	fff4c6        	j	2a <op_i64_LessThanOrEqual_rs+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_i64_LessThanOrEqual_rs+0x2a

Disassembly of section .text.op_u64_GreaterThan_ss:

00000000 <op_u64_GreaterThan_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_GreaterThan_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThan_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_GreaterThan_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThan_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	1868      	l32i.n	a6, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_u64_GreaterThan_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThan_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_u64_GreaterThan_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThan_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	1a88      	l32i.n	a8, a10, 4
  43:	1e0c      	movi.n	a14, 1
  45:	0f0c      	movi.n	a15, 0
  47:	063687        	bltu	a6, a8, 51 <op_u64_GreaterThan_ss+0x51>
			47: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThan_ss+0x51
  4a:	201867        	beq	a8, a6, 6e <op_u64_GreaterThan_ss+0x6e>
			4a: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThan_ss+0x6e
  4d:	0e0c      	movi.n	a14, 0
  4f:	0efd      	mov.n	a15, a14
  51:	c188      	l32i.n	a8, a1, 48
  53:	d198      	l32i.n	a9, a1, 52
  55:	0189      	s32i.n	a8, a1, 0
  57:	000081        	l32r	a8, fffc0058 <op_u64_GreaterThan_ss+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThan_ss
  5a:	1199      	s32i.n	a9, a1, 4
  5c:	2189      	s32i.n	a8, a1, 8
  5e:	04cd      	mov.n	a12, a4
  60:	03bd      	mov.n	a11, a3
  62:	02ad      	mov.n	a10, a2
  64:	000081        	l32r	a8, fffc0064 <op_u64_GreaterThan_ss+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThan_ss+0x14
			64: R_XTENSA_ASM_EXPAND	.text.profileOp
  67:	0008e0        	callx8	a8
  6a:	0a2d      	mov.n	a2, a10
  6c:	f01d      	retw.n
  6e:	0a88      	l32i.n	a8, a10, 0
  70:	dd3787        	bltu	a7, a8, 51 <op_u64_GreaterThan_ss+0x51>
			70: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThan_ss+0x51
  73:	fff586        	j	4d <op_u64_GreaterThan_ss+0x4d>
			73: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThan_ss+0x4d

Disassembly of section .text.op_u64_GreaterThan_sr:

00000000 <op_u64_GreaterThan_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_GreaterThan_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThan_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_GreaterThan_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThan_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	043877        	bltu	a8, a7, 2c <op_u64_GreaterThan_sr+0x2c>
			24: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThan_sr+0x2c
  27:	231877        	beq	a8, a7, 4e <op_u64_GreaterThan_sr+0x4e>
			27: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThan_sr+0x4e
  2a:	0e0c      	movi.n	a14, 0
  2c:	c188      	l32i.n	a8, a1, 48
  2e:	d198      	l32i.n	a9, a1, 52
  30:	0189      	s32i.n	a8, a1, 0
  32:	000081        	l32r	a8, fffc0034 <op_u64_GreaterThan_sr+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThan_sr
  35:	1199      	s32i.n	a9, a1, 4
  37:	2189      	s32i.n	a8, a1, 8
  39:	04e0e0        	extui	a14, a14, 0, 1
  3c:	0f0c      	movi.n	a15, 0
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_u64_GreaterThan_sr+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThan_sr+0xc
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n
  4e:	0a88      	l32i.n	a8, a10, 0
  50:	d83867        	bltu	a8, a6, 2c <op_u64_GreaterThan_sr+0x2c>
			50: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThan_sr+0x2c
  53:	fff4c6        	j	2a <op_u64_GreaterThan_sr+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThan_sr+0x2a

Disassembly of section .text.op_u64_GreaterThan_rs:

00000000 <op_u64_GreaterThan_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_GreaterThan_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThan_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_GreaterThan_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThan_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	043787        	bltu	a7, a8, 2c <op_u64_GreaterThan_rs+0x2c>
			24: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThan_rs+0x2c
  27:	231877        	beq	a8, a7, 4e <op_u64_GreaterThan_rs+0x4e>
			27: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThan_rs+0x4e
  2a:	0e0c      	movi.n	a14, 0
  2c:	c188      	l32i.n	a8, a1, 48
  2e:	d198      	l32i.n	a9, a1, 52
  30:	0189      	s32i.n	a8, a1, 0
  32:	000081        	l32r	a8, fffc0034 <op_u64_GreaterThan_rs+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThan_rs
  35:	1199      	s32i.n	a9, a1, 4
  37:	2189      	s32i.n	a8, a1, 8
  39:	04e0e0        	extui	a14, a14, 0, 1
  3c:	0f0c      	movi.n	a15, 0
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_u64_GreaterThan_rs+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_u64_GreaterThan_rs+0xc
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n
  4e:	0a88      	l32i.n	a8, a10, 0
  50:	d83687        	bltu	a6, a8, 2c <op_u64_GreaterThan_rs+0x2c>
			50: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThan_rs+0x2c
  53:	fff4c6        	j	2a <op_u64_GreaterThan_rs+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_u64_GreaterThan_rs+0x2a

Disassembly of section .text.op_i64_GreaterThan_ss:

00000000 <op_i64_GreaterThan_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_GreaterThan_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThan_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_GreaterThan_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThan_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	1868      	l32i.n	a6, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_i64_GreaterThan_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThan_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_GreaterThan_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThan_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	1a88      	l32i.n	a8, a10, 4
  43:	1e0c      	movi.n	a14, 1
  45:	0f0c      	movi.n	a15, 0
  47:	062687        	blt	a6, a8, 51 <op_i64_GreaterThan_ss+0x51>
			47: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThan_ss+0x51
  4a:	201867        	beq	a8, a6, 6e <op_i64_GreaterThan_ss+0x6e>
			4a: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThan_ss+0x6e
  4d:	0e0c      	movi.n	a14, 0
  4f:	0efd      	mov.n	a15, a14
  51:	c188      	l32i.n	a8, a1, 48
  53:	d198      	l32i.n	a9, a1, 52
  55:	0189      	s32i.n	a8, a1, 0
  57:	000081        	l32r	a8, fffc0058 <op_i64_GreaterThan_ss+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThan_ss
  5a:	1199      	s32i.n	a9, a1, 4
  5c:	2189      	s32i.n	a8, a1, 8
  5e:	04cd      	mov.n	a12, a4
  60:	03bd      	mov.n	a11, a3
  62:	02ad      	mov.n	a10, a2
  64:	000081        	l32r	a8, fffc0064 <op_i64_GreaterThan_ss+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThan_ss+0x14
			64: R_XTENSA_ASM_EXPAND	.text.profileOp
  67:	0008e0        	callx8	a8
  6a:	0a2d      	mov.n	a2, a10
  6c:	f01d      	retw.n
  6e:	0a88      	l32i.n	a8, a10, 0
  70:	dd3787        	bltu	a7, a8, 51 <op_i64_GreaterThan_ss+0x51>
			70: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThan_ss+0x51
  73:	fff586        	j	4d <op_i64_GreaterThan_ss+0x4d>
			73: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThan_ss+0x4d

Disassembly of section .text.op_i64_GreaterThan_sr:

00000000 <op_i64_GreaterThan_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_GreaterThan_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThan_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_GreaterThan_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThan_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	042877        	blt	a8, a7, 2c <op_i64_GreaterThan_sr+0x2c>
			24: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThan_sr+0x2c
  27:	231877        	beq	a8, a7, 4e <op_i64_GreaterThan_sr+0x4e>
			27: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThan_sr+0x4e
  2a:	0e0c      	movi.n	a14, 0
  2c:	c188      	l32i.n	a8, a1, 48
  2e:	d198      	l32i.n	a9, a1, 52
  30:	0189      	s32i.n	a8, a1, 0
  32:	000081        	l32r	a8, fffc0034 <op_i64_GreaterThan_sr+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThan_sr
  35:	1199      	s32i.n	a9, a1, 4
  37:	2189      	s32i.n	a8, a1, 8
  39:	04e0e0        	extui	a14, a14, 0, 1
  3c:	0f0c      	movi.n	a15, 0
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_i64_GreaterThan_sr+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThan_sr+0xc
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n
  4e:	0a88      	l32i.n	a8, a10, 0
  50:	d83867        	bltu	a8, a6, 2c <op_i64_GreaterThan_sr+0x2c>
			50: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThan_sr+0x2c
  53:	fff4c6        	j	2a <op_i64_GreaterThan_sr+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThan_sr+0x2a

Disassembly of section .text.op_i64_GreaterThan_rs:

00000000 <op_i64_GreaterThan_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_GreaterThan_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThan_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_GreaterThan_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThan_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	042787        	blt	a7, a8, 2c <op_i64_GreaterThan_rs+0x2c>
			24: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThan_rs+0x2c
  27:	231877        	beq	a8, a7, 4e <op_i64_GreaterThan_rs+0x4e>
			27: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThan_rs+0x4e
  2a:	0e0c      	movi.n	a14, 0
  2c:	c188      	l32i.n	a8, a1, 48
  2e:	d198      	l32i.n	a9, a1, 52
  30:	0189      	s32i.n	a8, a1, 0
  32:	000081        	l32r	a8, fffc0034 <op_i64_GreaterThan_rs+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThan_rs
  35:	1199      	s32i.n	a9, a1, 4
  37:	2189      	s32i.n	a8, a1, 8
  39:	04e0e0        	extui	a14, a14, 0, 1
  3c:	0f0c      	movi.n	a15, 0
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_i64_GreaterThan_rs+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_i64_GreaterThan_rs+0xc
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n
  4e:	0a88      	l32i.n	a8, a10, 0
  50:	d83687        	bltu	a6, a8, 2c <op_i64_GreaterThan_rs+0x2c>
			50: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThan_rs+0x2c
  53:	fff4c6        	j	2a <op_i64_GreaterThan_rs+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_i64_GreaterThan_rs+0x2a

Disassembly of section .text.op_u64_LessThan_ss:

00000000 <op_u64_LessThan_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_LessThan_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThan_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_LessThan_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThan_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	1868      	l32i.n	a6, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_u64_LessThan_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThan_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_u64_LessThan_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThan_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	1a88      	l32i.n	a8, a10, 4
  43:	1e0c      	movi.n	a14, 1
  45:	0f0c      	movi.n	a15, 0
  47:	063867        	bltu	a8, a6, 51 <op_u64_LessThan_ss+0x51>
			47: R_XTENSA_SLOT0_OP	.text.op_u64_LessThan_ss+0x51
  4a:	201867        	beq	a8, a6, 6e <op_u64_LessThan_ss+0x6e>
			4a: R_XTENSA_SLOT0_OP	.text.op_u64_LessThan_ss+0x6e
  4d:	0e0c      	movi.n	a14, 0
  4f:	0efd      	mov.n	a15, a14
  51:	c188      	l32i.n	a8, a1, 48
  53:	d198      	l32i.n	a9, a1, 52
  55:	0189      	s32i.n	a8, a1, 0
  57:	000081        	l32r	a8, fffc0058 <op_u64_LessThan_ss+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThan_ss
  5a:	1199      	s32i.n	a9, a1, 4
  5c:	2189      	s32i.n	a8, a1, 8
  5e:	04cd      	mov.n	a12, a4
  60:	03bd      	mov.n	a11, a3
  62:	02ad      	mov.n	a10, a2
  64:	000081        	l32r	a8, fffc0064 <op_u64_LessThan_ss+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThan_ss+0x14
			64: R_XTENSA_ASM_EXPAND	.text.profileOp
  67:	0008e0        	callx8	a8
  6a:	0a2d      	mov.n	a2, a10
  6c:	f01d      	retw.n
  6e:	0a88      	l32i.n	a8, a10, 0
  70:	dd3877        	bltu	a8, a7, 51 <op_u64_LessThan_ss+0x51>
			70: R_XTENSA_SLOT0_OP	.text.op_u64_LessThan_ss+0x51
  73:	fff586        	j	4d <op_u64_LessThan_ss+0x4d>
			73: R_XTENSA_SLOT0_OP	.text.op_u64_LessThan_ss+0x4d

Disassembly of section .text.op_u64_LessThan_sr:

00000000 <op_u64_LessThan_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_LessThan_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThan_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_LessThan_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThan_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	043787        	bltu	a7, a8, 2c <op_u64_LessThan_sr+0x2c>
			24: R_XTENSA_SLOT0_OP	.text.op_u64_LessThan_sr+0x2c
  27:	231877        	beq	a8, a7, 4e <op_u64_LessThan_sr+0x4e>
			27: R_XTENSA_SLOT0_OP	.text.op_u64_LessThan_sr+0x4e
  2a:	0e0c      	movi.n	a14, 0
  2c:	c188      	l32i.n	a8, a1, 48
  2e:	d198      	l32i.n	a9, a1, 52
  30:	0189      	s32i.n	a8, a1, 0
  32:	000081        	l32r	a8, fffc0034 <op_u64_LessThan_sr+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThan_sr
  35:	1199      	s32i.n	a9, a1, 4
  37:	2189      	s32i.n	a8, a1, 8
  39:	04e0e0        	extui	a14, a14, 0, 1
  3c:	0f0c      	movi.n	a15, 0
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_u64_LessThan_sr+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThan_sr+0xc
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n
  4e:	0a88      	l32i.n	a8, a10, 0
  50:	d83687        	bltu	a6, a8, 2c <op_u64_LessThan_sr+0x2c>
			50: R_XTENSA_SLOT0_OP	.text.op_u64_LessThan_sr+0x2c
  53:	fff4c6        	j	2a <op_u64_LessThan_sr+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_u64_LessThan_sr+0x2a

Disassembly of section .text.op_u64_LessThan_rs:

00000000 <op_u64_LessThan_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_LessThan_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThan_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_LessThan_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThan_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	043877        	bltu	a8, a7, 2c <op_u64_LessThan_rs+0x2c>
			24: R_XTENSA_SLOT0_OP	.text.op_u64_LessThan_rs+0x2c
  27:	231877        	beq	a8, a7, 4e <op_u64_LessThan_rs+0x4e>
			27: R_XTENSA_SLOT0_OP	.text.op_u64_LessThan_rs+0x4e
  2a:	0e0c      	movi.n	a14, 0
  2c:	c188      	l32i.n	a8, a1, 48
  2e:	d198      	l32i.n	a9, a1, 52
  30:	0189      	s32i.n	a8, a1, 0
  32:	000081        	l32r	a8, fffc0034 <op_u64_LessThan_rs+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThan_rs
  35:	1199      	s32i.n	a9, a1, 4
  37:	2189      	s32i.n	a8, a1, 8
  39:	04e0e0        	extui	a14, a14, 0, 1
  3c:	0f0c      	movi.n	a15, 0
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_u64_LessThan_rs+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_u64_LessThan_rs+0xc
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n
  4e:	0a88      	l32i.n	a8, a10, 0
  50:	d83867        	bltu	a8, a6, 2c <op_u64_LessThan_rs+0x2c>
			50: R_XTENSA_SLOT0_OP	.text.op_u64_LessThan_rs+0x2c
  53:	fff4c6        	j	2a <op_u64_LessThan_rs+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_u64_LessThan_rs+0x2a

Disassembly of section .text.op_i64_LessThan_ss:

00000000 <op_i64_LessThan_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_LessThan_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThan_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_LessThan_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThan_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	1868      	l32i.n	a6, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_i64_LessThan_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThan_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_LessThan_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThan_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	1a88      	l32i.n	a8, a10, 4
  43:	1e0c      	movi.n	a14, 1
  45:	0f0c      	movi.n	a15, 0
  47:	062867        	blt	a8, a6, 51 <op_i64_LessThan_ss+0x51>
			47: R_XTENSA_SLOT0_OP	.text.op_i64_LessThan_ss+0x51
  4a:	201867        	beq	a8, a6, 6e <op_i64_LessThan_ss+0x6e>
			4a: R_XTENSA_SLOT0_OP	.text.op_i64_LessThan_ss+0x6e
  4d:	0e0c      	movi.n	a14, 0
  4f:	0efd      	mov.n	a15, a14
  51:	c188      	l32i.n	a8, a1, 48
  53:	d198      	l32i.n	a9, a1, 52
  55:	0189      	s32i.n	a8, a1, 0
  57:	000081        	l32r	a8, fffc0058 <op_i64_LessThan_ss+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThan_ss
  5a:	1199      	s32i.n	a9, a1, 4
  5c:	2189      	s32i.n	a8, a1, 8
  5e:	04cd      	mov.n	a12, a4
  60:	03bd      	mov.n	a11, a3
  62:	02ad      	mov.n	a10, a2
  64:	000081        	l32r	a8, fffc0064 <op_i64_LessThan_ss+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThan_ss+0x14
			64: R_XTENSA_ASM_EXPAND	.text.profileOp
  67:	0008e0        	callx8	a8
  6a:	0a2d      	mov.n	a2, a10
  6c:	f01d      	retw.n
  6e:	0a88      	l32i.n	a8, a10, 0
  70:	dd3877        	bltu	a8, a7, 51 <op_i64_LessThan_ss+0x51>
			70: R_XTENSA_SLOT0_OP	.text.op_i64_LessThan_ss+0x51
  73:	fff586        	j	4d <op_i64_LessThan_ss+0x4d>
			73: R_XTENSA_SLOT0_OP	.text.op_i64_LessThan_ss+0x4d

Disassembly of section .text.op_i64_LessThan_sr:

00000000 <op_i64_LessThan_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_LessThan_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThan_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_LessThan_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThan_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	042787        	blt	a7, a8, 2c <op_i64_LessThan_sr+0x2c>
			24: R_XTENSA_SLOT0_OP	.text.op_i64_LessThan_sr+0x2c
  27:	231877        	beq	a8, a7, 4e <op_i64_LessThan_sr+0x4e>
			27: R_XTENSA_SLOT0_OP	.text.op_i64_LessThan_sr+0x4e
  2a:	0e0c      	movi.n	a14, 0
  2c:	c188      	l32i.n	a8, a1, 48
  2e:	d198      	l32i.n	a9, a1, 52
  30:	0189      	s32i.n	a8, a1, 0
  32:	000081        	l32r	a8, fffc0034 <op_i64_LessThan_sr+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThan_sr
  35:	1199      	s32i.n	a9, a1, 4
  37:	2189      	s32i.n	a8, a1, 8
  39:	04e0e0        	extui	a14, a14, 0, 1
  3c:	0f0c      	movi.n	a15, 0
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_i64_LessThan_sr+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThan_sr+0xc
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n
  4e:	0a88      	l32i.n	a8, a10, 0
  50:	d83687        	bltu	a6, a8, 2c <op_i64_LessThan_sr+0x2c>
			50: R_XTENSA_SLOT0_OP	.text.op_i64_LessThan_sr+0x2c
  53:	fff4c6        	j	2a <op_i64_LessThan_sr+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_i64_LessThan_sr+0x2a

Disassembly of section .text.op_i64_LessThan_rs:

00000000 <op_i64_LessThan_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_LessThan_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThan_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_LessThan_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThan_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	1e0c      	movi.n	a14, 1
  24:	042877        	blt	a8, a7, 2c <op_i64_LessThan_rs+0x2c>
			24: R_XTENSA_SLOT0_OP	.text.op_i64_LessThan_rs+0x2c
  27:	231877        	beq	a8, a7, 4e <op_i64_LessThan_rs+0x4e>
			27: R_XTENSA_SLOT0_OP	.text.op_i64_LessThan_rs+0x4e
  2a:	0e0c      	movi.n	a14, 0
  2c:	c188      	l32i.n	a8, a1, 48
  2e:	d198      	l32i.n	a9, a1, 52
  30:	0189      	s32i.n	a8, a1, 0
  32:	000081        	l32r	a8, fffc0034 <op_i64_LessThan_rs+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThan_rs
  35:	1199      	s32i.n	a9, a1, 4
  37:	2189      	s32i.n	a8, a1, 8
  39:	04e0e0        	extui	a14, a14, 0, 1
  3c:	0f0c      	movi.n	a15, 0
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_i64_LessThan_rs+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_i64_LessThan_rs+0xc
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n
  4e:	0a88      	l32i.n	a8, a10, 0
  50:	d83867        	bltu	a8, a6, 2c <op_i64_LessThan_rs+0x2c>
			50: R_XTENSA_SLOT0_OP	.text.op_i64_LessThan_rs+0x2c
  53:	fff4c6        	j	2a <op_i64_LessThan_rs+0x2a>
			53: R_XTENSA_SLOT0_OP	.text.op_i64_LessThan_rs+0x2a

Disassembly of section .text.op_i64_NotEqual_ss:

00000000 <op_i64_NotEqual_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_NotEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_NotEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_NotEqual_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_NotEqual_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0868      	l32i.n	a6, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_i64_NotEqual_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_NotEqual_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_NotEqual_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_NotEqual_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	0a88      	l32i.n	a8, a10, 0
  43:	1a98      	l32i.n	a9, a10, 4
  45:	308860        	xor	a8, a8, a6
  48:	309970        	xor	a9, a9, a7
  4b:	0f0c      	movi.n	a15, 0
  4d:	208890        	or	a8, a8, a9
  50:	1e0c      	movi.n	a14, 1
  52:	83ef80        	moveqz	a14, a15, a8
  55:	000081        	l32r	a8, fffc0058 <op_i64_NotEqual_ss+0xfffc0058>
			55: R_XTENSA_SLOT0_OP	.literal.op_i64_NotEqual_ss
  58:	d198      	l32i.n	a9, a1, 52
  5a:	2189      	s32i.n	a8, a1, 8
  5c:	c188      	l32i.n	a8, a1, 48
  5e:	1199      	s32i.n	a9, a1, 4
  60:	0189      	s32i.n	a8, a1, 0
  62:	04cd      	mov.n	a12, a4
  64:	03bd      	mov.n	a11, a3
  66:	02ad      	mov.n	a10, a2
  68:	000081        	l32r	a8, fffc0068 <op_i64_NotEqual_ss+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_i64_NotEqual_ss+0x14
			68: R_XTENSA_ASM_EXPAND	.text.profileOp
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	f01d      	retw.n

Disassembly of section .text.op_i64_NotEqual_rs:

00000000 <op_i64_NotEqual_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_NotEqual_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_NotEqual_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i64_NotEqual_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i64_NotEqual_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	1a88      	l32i.n	a8, a10, 4
  23:	065d      	mov.n	a5, a6
  25:	0a68      	l32i.n	a6, a10, 0
  27:	308870        	xor	a8, a8, a7
  2a:	306650        	xor	a6, a6, a5
  2d:	206680        	or	a6, a6, a8
  30:	000081        	l32r	a8, fffc0030 <op_i64_NotEqual_rs+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i64_NotEqual_rs
  33:	d198      	l32i.n	a9, a1, 52
  35:	2189      	s32i.n	a8, a1, 8
  37:	c188      	l32i.n	a8, a1, 48
  39:	0f0c      	movi.n	a15, 0
  3b:	1e0c      	movi.n	a14, 1
  3d:	83ef60        	moveqz	a14, a15, a6
  40:	0189      	s32i.n	a8, a1, 0
  42:	1199      	s32i.n	a9, a1, 4
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_i64_NotEqual_rs+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_i64_NotEqual_rs+0xc
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n

Disassembly of section .text.op_i64_Equal_ss:

00000000 <op_i64_Equal_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Equal_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Equal_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Equal_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Equal_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0868      	l32i.n	a6, a8, 0
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	000081        	l32r	a8, fffc002c <op_i64_Equal_ss+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_Equal_ss+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	8c0c      	movi.n	a12, 8
  36:	a0bb30        	addx4	a11, a11, a3
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_Equal_ss+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_Equal_ss+0x10
			3b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3e:	0008e0        	callx8	a8
  41:	0a88      	l32i.n	a8, a10, 0
  43:	1a98      	l32i.n	a9, a10, 4
  45:	308860        	xor	a8, a8, a6
  48:	309970        	xor	a9, a9, a7
  4b:	0f0c      	movi.n	a15, 0
  4d:	208890        	or	a8, a8, a9
  50:	1e0c      	movi.n	a14, 1
  52:	93ef80        	movnez	a14, a15, a8
  55:	000081        	l32r	a8, fffc0058 <op_i64_Equal_ss+0xfffc0058>
			55: R_XTENSA_SLOT0_OP	.literal.op_i64_Equal_ss
  58:	d198      	l32i.n	a9, a1, 52
  5a:	2189      	s32i.n	a8, a1, 8
  5c:	c188      	l32i.n	a8, a1, 48
  5e:	1199      	s32i.n	a9, a1, 4
  60:	0189      	s32i.n	a8, a1, 0
  62:	04cd      	mov.n	a12, a4
  64:	03bd      	mov.n	a11, a3
  66:	02ad      	mov.n	a10, a2
  68:	000081        	l32r	a8, fffc0068 <op_i64_Equal_ss+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_i64_Equal_ss+0x14
			68: R_XTENSA_ASM_EXPAND	.text.profileOp
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	f01d      	retw.n

Disassembly of section .text.op_i64_Equal_rs:

00000000 <op_i64_Equal_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Equal_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Equal_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i64_Equal_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i64_Equal_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	1a88      	l32i.n	a8, a10, 4
  23:	065d      	mov.n	a5, a6
  25:	0a68      	l32i.n	a6, a10, 0
  27:	308870        	xor	a8, a8, a7
  2a:	306650        	xor	a6, a6, a5
  2d:	206680        	or	a6, a6, a8
  30:	000081        	l32r	a8, fffc0030 <op_i64_Equal_rs+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i64_Equal_rs
  33:	d198      	l32i.n	a9, a1, 52
  35:	2189      	s32i.n	a8, a1, 8
  37:	c188      	l32i.n	a8, a1, 48
  39:	0f0c      	movi.n	a15, 0
  3b:	1e0c      	movi.n	a14, 1
  3d:	93ef60        	movnez	a14, a15, a6
  40:	0189      	s32i.n	a8, a1, 0
  42:	1199      	s32i.n	a9, a1, 4
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_i64_Equal_rs+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_i64_Equal_rs+0xc
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n

Disassembly of section .text.op_i64_EqualToZero_s:

00000000 <op_i64_EqualToZero_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_EqualToZero_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_EqualToZero_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i64_EqualToZero_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i64_EqualToZero_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	1a98      	l32i.n	a9, a10, 4
  23:	0a88      	l32i.n	a8, a10, 0
  25:	0f0c      	movi.n	a15, 0
  27:	208890        	or	a8, a8, a9
  2a:	1e0c      	movi.n	a14, 1
  2c:	93ef80        	movnez	a14, a15, a8
  2f:	000081        	l32r	a8, fffc0030 <op_i64_EqualToZero_s+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_i64_EqualToZero_s
  32:	d198      	l32i.n	a9, a1, 52
  34:	2189      	s32i.n	a8, a1, 8
  36:	c188      	l32i.n	a8, a1, 48
  38:	1199      	s32i.n	a9, a1, 4
  3a:	0189      	s32i.n	a8, a1, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i64_EqualToZero_s+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i64_EqualToZero_s+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_i64_EqualToZero_r:

00000000 <op_i64_EqualToZero_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_i64_EqualToZero_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_i64_EqualToZero_r
   6:	d198      	l32i.n	a9, a1, 52
   8:	2189      	s32i.n	a8, a1, 8
   a:	c188      	l32i.n	a8, a1, 48
   c:	0f0c      	movi.n	a15, 0
   e:	206670        	or	a6, a6, a7
  11:	1e0c      	movi.n	a14, 1
  13:	02ad      	mov.n	a10, a2
  15:	03bd      	mov.n	a11, a3
  17:	04cd      	mov.n	a12, a4
  19:	93ef60        	movnez	a14, a15, a6
  1c:	0189      	s32i.n	a8, a1, 0
  1e:	1199      	s32i.n	a9, a1, 4
  20:	000081        	l32r	a8, fffc0020 <op_i64_EqualToZero_r+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_i64_EqualToZero_r+0x4
			20: R_XTENSA_ASM_EXPAND	.text.profileOp
  23:	0008e0        	callx8	a8
  26:	0a2d      	mov.n	a2, a10
  28:	f01d      	retw.n

Disassembly of section .text.op_u32_GreaterThanOrEqual_ss:

00000000 <op_u32_GreaterThanOrEqual_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_GreaterThanOrEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThanOrEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_GreaterThanOrEqual_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThanOrEqual_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_u32_GreaterThanOrEqual_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThanOrEqual_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_u32_GreaterThanOrEqual_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThanOrEqual_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a88      	l32i.n	a8, a10, 0
  42:	1e0c      	movi.n	a14, 1
  44:	01b877        	bgeu	a8, a7, 49 <op_u32_GreaterThanOrEqual_ss+0x49>
			44: R_XTENSA_SLOT0_OP	.text.op_u32_GreaterThanOrEqual_ss+0x49
  47:	0e0c      	movi.n	a14, 0
  49:	c188      	l32i.n	a8, a1, 48
  4b:	d198      	l32i.n	a9, a1, 52
  4d:	0189      	s32i.n	a8, a1, 0
  4f:	000081        	l32r	a8, fffc0050 <op_u32_GreaterThanOrEqual_ss+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThanOrEqual_ss
  52:	1199      	s32i.n	a9, a1, 4
  54:	2189      	s32i.n	a8, a1, 8
  56:	0f0c      	movi.n	a15, 0
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_u32_GreaterThanOrEqual_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThanOrEqual_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_u32_GreaterThanOrEqual_sr:

00000000 <op_u32_GreaterThanOrEqual_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_GreaterThanOrEqual_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThanOrEqual_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_GreaterThanOrEqual_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThanOrEqual_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	01b687        	bgeu	a6, a8, 2a <op_u32_GreaterThanOrEqual_sr+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_u32_GreaterThanOrEqual_sr+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_u32_GreaterThanOrEqual_sr+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThanOrEqual_sr
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_u32_GreaterThanOrEqual_sr+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThanOrEqual_sr+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_u32_GreaterThanOrEqual_rs:

00000000 <op_u32_GreaterThanOrEqual_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_GreaterThanOrEqual_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThanOrEqual_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_GreaterThanOrEqual_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThanOrEqual_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	01b867        	bgeu	a8, a6, 2a <op_u32_GreaterThanOrEqual_rs+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_u32_GreaterThanOrEqual_rs+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_u32_GreaterThanOrEqual_rs+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThanOrEqual_rs
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_u32_GreaterThanOrEqual_rs+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThanOrEqual_rs+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_i32_GreaterThanOrEqual_ss:

00000000 <op_i32_GreaterThanOrEqual_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_GreaterThanOrEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThanOrEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_GreaterThanOrEqual_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThanOrEqual_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_GreaterThanOrEqual_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThanOrEqual_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_i32_GreaterThanOrEqual_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThanOrEqual_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a88      	l32i.n	a8, a10, 0
  42:	1e0c      	movi.n	a14, 1
  44:	01a877        	bge	a8, a7, 49 <op_i32_GreaterThanOrEqual_ss+0x49>
			44: R_XTENSA_SLOT0_OP	.text.op_i32_GreaterThanOrEqual_ss+0x49
  47:	0e0c      	movi.n	a14, 0
  49:	c188      	l32i.n	a8, a1, 48
  4b:	d198      	l32i.n	a9, a1, 52
  4d:	0189      	s32i.n	a8, a1, 0
  4f:	000081        	l32r	a8, fffc0050 <op_i32_GreaterThanOrEqual_ss+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThanOrEqual_ss
  52:	1199      	s32i.n	a9, a1, 4
  54:	2189      	s32i.n	a8, a1, 8
  56:	0f0c      	movi.n	a15, 0
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i32_GreaterThanOrEqual_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThanOrEqual_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i32_GreaterThanOrEqual_sr:

00000000 <op_i32_GreaterThanOrEqual_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_GreaterThanOrEqual_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThanOrEqual_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_GreaterThanOrEqual_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThanOrEqual_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	01a687        	bge	a6, a8, 2a <op_i32_GreaterThanOrEqual_sr+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_i32_GreaterThanOrEqual_sr+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_i32_GreaterThanOrEqual_sr+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThanOrEqual_sr
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i32_GreaterThanOrEqual_sr+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThanOrEqual_sr+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_i32_GreaterThanOrEqual_rs:

00000000 <op_i32_GreaterThanOrEqual_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_GreaterThanOrEqual_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThanOrEqual_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_GreaterThanOrEqual_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThanOrEqual_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	01a867        	bge	a8, a6, 2a <op_i32_GreaterThanOrEqual_rs+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_i32_GreaterThanOrEqual_rs+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_i32_GreaterThanOrEqual_rs+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThanOrEqual_rs
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i32_GreaterThanOrEqual_rs+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThanOrEqual_rs+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_u32_LessThanOrEqual_ss:

00000000 <op_u32_LessThanOrEqual_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_LessThanOrEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThanOrEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_LessThanOrEqual_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThanOrEqual_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_u32_LessThanOrEqual_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThanOrEqual_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_u32_LessThanOrEqual_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThanOrEqual_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a88      	l32i.n	a8, a10, 0
  42:	1e0c      	movi.n	a14, 1
  44:	01b787        	bgeu	a7, a8, 49 <op_u32_LessThanOrEqual_ss+0x49>
			44: R_XTENSA_SLOT0_OP	.text.op_u32_LessThanOrEqual_ss+0x49
  47:	0e0c      	movi.n	a14, 0
  49:	c188      	l32i.n	a8, a1, 48
  4b:	d198      	l32i.n	a9, a1, 52
  4d:	0189      	s32i.n	a8, a1, 0
  4f:	000081        	l32r	a8, fffc0050 <op_u32_LessThanOrEqual_ss+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThanOrEqual_ss
  52:	1199      	s32i.n	a9, a1, 4
  54:	2189      	s32i.n	a8, a1, 8
  56:	0f0c      	movi.n	a15, 0
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_u32_LessThanOrEqual_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThanOrEqual_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_u32_LessThanOrEqual_sr:

00000000 <op_u32_LessThanOrEqual_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_LessThanOrEqual_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThanOrEqual_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_LessThanOrEqual_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThanOrEqual_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	01b867        	bgeu	a8, a6, 2a <op_u32_LessThanOrEqual_sr+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_u32_LessThanOrEqual_sr+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_u32_LessThanOrEqual_sr+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThanOrEqual_sr
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_u32_LessThanOrEqual_sr+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThanOrEqual_sr+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_u32_LessThanOrEqual_rs:

00000000 <op_u32_LessThanOrEqual_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_LessThanOrEqual_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThanOrEqual_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_LessThanOrEqual_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThanOrEqual_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	01b687        	bgeu	a6, a8, 2a <op_u32_LessThanOrEqual_rs+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_u32_LessThanOrEqual_rs+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_u32_LessThanOrEqual_rs+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThanOrEqual_rs
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_u32_LessThanOrEqual_rs+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThanOrEqual_rs+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_i32_LessThanOrEqual_ss:

00000000 <op_i32_LessThanOrEqual_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_LessThanOrEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThanOrEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_LessThanOrEqual_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThanOrEqual_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_LessThanOrEqual_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThanOrEqual_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_i32_LessThanOrEqual_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThanOrEqual_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a88      	l32i.n	a8, a10, 0
  42:	1e0c      	movi.n	a14, 1
  44:	01a787        	bge	a7, a8, 49 <op_i32_LessThanOrEqual_ss+0x49>
			44: R_XTENSA_SLOT0_OP	.text.op_i32_LessThanOrEqual_ss+0x49
  47:	0e0c      	movi.n	a14, 0
  49:	c188      	l32i.n	a8, a1, 48
  4b:	d198      	l32i.n	a9, a1, 52
  4d:	0189      	s32i.n	a8, a1, 0
  4f:	000081        	l32r	a8, fffc0050 <op_i32_LessThanOrEqual_ss+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThanOrEqual_ss
  52:	1199      	s32i.n	a9, a1, 4
  54:	2189      	s32i.n	a8, a1, 8
  56:	0f0c      	movi.n	a15, 0
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i32_LessThanOrEqual_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThanOrEqual_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i32_LessThanOrEqual_sr:

00000000 <op_i32_LessThanOrEqual_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_LessThanOrEqual_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThanOrEqual_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_LessThanOrEqual_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThanOrEqual_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	01a867        	bge	a8, a6, 2a <op_i32_LessThanOrEqual_sr+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_i32_LessThanOrEqual_sr+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_i32_LessThanOrEqual_sr+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThanOrEqual_sr
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i32_LessThanOrEqual_sr+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThanOrEqual_sr+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_i32_LessThanOrEqual_rs:

00000000 <op_i32_LessThanOrEqual_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_LessThanOrEqual_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThanOrEqual_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_LessThanOrEqual_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThanOrEqual_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	01a687        	bge	a6, a8, 2a <op_i32_LessThanOrEqual_rs+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_i32_LessThanOrEqual_rs+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_i32_LessThanOrEqual_rs+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThanOrEqual_rs
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i32_LessThanOrEqual_rs+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThanOrEqual_rs+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_u32_GreaterThan_ss:

00000000 <op_u32_GreaterThan_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_GreaterThan_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThan_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_GreaterThan_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThan_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_u32_GreaterThan_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThan_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_u32_GreaterThan_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThan_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a88      	l32i.n	a8, a10, 0
  42:	1e0c      	movi.n	a14, 1
  44:	013787        	bltu	a7, a8, 49 <op_u32_GreaterThan_ss+0x49>
			44: R_XTENSA_SLOT0_OP	.text.op_u32_GreaterThan_ss+0x49
  47:	0e0c      	movi.n	a14, 0
  49:	c188      	l32i.n	a8, a1, 48
  4b:	d198      	l32i.n	a9, a1, 52
  4d:	0189      	s32i.n	a8, a1, 0
  4f:	000081        	l32r	a8, fffc0050 <op_u32_GreaterThan_ss+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThan_ss
  52:	1199      	s32i.n	a9, a1, 4
  54:	2189      	s32i.n	a8, a1, 8
  56:	0f0c      	movi.n	a15, 0
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_u32_GreaterThan_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThan_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_u32_GreaterThan_sr:

00000000 <op_u32_GreaterThan_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_GreaterThan_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThan_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_GreaterThan_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThan_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	013867        	bltu	a8, a6, 2a <op_u32_GreaterThan_sr+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_u32_GreaterThan_sr+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_u32_GreaterThan_sr+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThan_sr
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_u32_GreaterThan_sr+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThan_sr+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_u32_GreaterThan_rs:

00000000 <op_u32_GreaterThan_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_GreaterThan_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThan_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_GreaterThan_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThan_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	013687        	bltu	a6, a8, 2a <op_u32_GreaterThan_rs+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_u32_GreaterThan_rs+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_u32_GreaterThan_rs+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThan_rs
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_u32_GreaterThan_rs+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u32_GreaterThan_rs+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_i32_GreaterThan_ss:

00000000 <op_i32_GreaterThan_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_GreaterThan_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThan_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_GreaterThan_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThan_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_GreaterThan_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThan_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_i32_GreaterThan_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThan_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a88      	l32i.n	a8, a10, 0
  42:	1e0c      	movi.n	a14, 1
  44:	012787        	blt	a7, a8, 49 <op_i32_GreaterThan_ss+0x49>
			44: R_XTENSA_SLOT0_OP	.text.op_i32_GreaterThan_ss+0x49
  47:	0e0c      	movi.n	a14, 0
  49:	c188      	l32i.n	a8, a1, 48
  4b:	d198      	l32i.n	a9, a1, 52
  4d:	0189      	s32i.n	a8, a1, 0
  4f:	000081        	l32r	a8, fffc0050 <op_i32_GreaterThan_ss+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThan_ss
  52:	1199      	s32i.n	a9, a1, 4
  54:	2189      	s32i.n	a8, a1, 8
  56:	0f0c      	movi.n	a15, 0
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i32_GreaterThan_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThan_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i32_GreaterThan_sr:

00000000 <op_i32_GreaterThan_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_GreaterThan_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThan_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_GreaterThan_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThan_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	012867        	blt	a8, a6, 2a <op_i32_GreaterThan_sr+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_i32_GreaterThan_sr+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_i32_GreaterThan_sr+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThan_sr
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i32_GreaterThan_sr+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThan_sr+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_i32_GreaterThan_rs:

00000000 <op_i32_GreaterThan_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_GreaterThan_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThan_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_GreaterThan_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThan_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	012687        	blt	a6, a8, 2a <op_i32_GreaterThan_rs+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_i32_GreaterThan_rs+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_i32_GreaterThan_rs+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThan_rs
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i32_GreaterThan_rs+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i32_GreaterThan_rs+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_u32_LessThan_ss:

00000000 <op_u32_LessThan_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_LessThan_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThan_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_LessThan_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThan_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_u32_LessThan_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThan_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_u32_LessThan_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThan_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a88      	l32i.n	a8, a10, 0
  42:	1e0c      	movi.n	a14, 1
  44:	013877        	bltu	a8, a7, 49 <op_u32_LessThan_ss+0x49>
			44: R_XTENSA_SLOT0_OP	.text.op_u32_LessThan_ss+0x49
  47:	0e0c      	movi.n	a14, 0
  49:	c188      	l32i.n	a8, a1, 48
  4b:	d198      	l32i.n	a9, a1, 52
  4d:	0189      	s32i.n	a8, a1, 0
  4f:	000081        	l32r	a8, fffc0050 <op_u32_LessThan_ss+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThan_ss
  52:	1199      	s32i.n	a9, a1, 4
  54:	2189      	s32i.n	a8, a1, 8
  56:	0f0c      	movi.n	a15, 0
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_u32_LessThan_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThan_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_u32_LessThan_sr:

00000000 <op_u32_LessThan_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_LessThan_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThan_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_LessThan_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThan_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	013687        	bltu	a6, a8, 2a <op_u32_LessThan_sr+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_u32_LessThan_sr+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_u32_LessThan_sr+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThan_sr
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_u32_LessThan_sr+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThan_sr+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_u32_LessThan_rs:

00000000 <op_u32_LessThan_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_LessThan_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThan_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_LessThan_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThan_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	013867        	bltu	a8, a6, 2a <op_u32_LessThan_rs+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_u32_LessThan_rs+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_u32_LessThan_rs+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThan_rs
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_u32_LessThan_rs+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u32_LessThan_rs+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_i32_LessThan_ss:

00000000 <op_i32_LessThan_ss>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_LessThan_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThan_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_LessThan_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThan_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_LessThan_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThan_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_i32_LessThan_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThan_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a88      	l32i.n	a8, a10, 0
  42:	1e0c      	movi.n	a14, 1
  44:	012877        	blt	a8, a7, 49 <op_i32_LessThan_ss+0x49>
			44: R_XTENSA_SLOT0_OP	.text.op_i32_LessThan_ss+0x49
  47:	0e0c      	movi.n	a14, 0
  49:	c188      	l32i.n	a8, a1, 48
  4b:	d198      	l32i.n	a9, a1, 52
  4d:	0189      	s32i.n	a8, a1, 0
  4f:	000081        	l32r	a8, fffc0050 <op_i32_LessThan_ss+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThan_ss
  52:	1199      	s32i.n	a9, a1, 4
  54:	2189      	s32i.n	a8, a1, 8
  56:	0f0c      	movi.n	a15, 0
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i32_LessThan_ss+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThan_ss+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i32_LessThan_sr:

00000000 <op_i32_LessThan_sr>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_LessThan_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThan_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_LessThan_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThan_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	012687        	blt	a6, a8, 2a <op_i32_LessThan_sr+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_i32_LessThan_sr+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_i32_LessThan_sr+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThan_sr
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i32_LessThan_sr+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThan_sr+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_i32_LessThan_rs:

00000000 <op_i32_LessThan_rs>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_LessThan_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThan_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_LessThan_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThan_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a88      	l32i.n	a8, a10, 0
  23:	1e0c      	movi.n	a14, 1
  25:	012867        	blt	a8, a6, 2a <op_i32_LessThan_rs+0x2a>
			25: R_XTENSA_SLOT0_OP	.text.op_i32_LessThan_rs+0x2a
  28:	0e0c      	movi.n	a14, 0
  2a:	c188      	l32i.n	a8, a1, 48
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_i32_LessThan_rs+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThan_rs
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	04e0e0        	extui	a14, a14, 0, 1
  3a:	0f0c      	movi.n	a15, 0
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i32_LessThan_rs+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i32_LessThan_rs+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_i32_NotEqual_ss:

00000000 <op_i32_NotEqual_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_NotEqual_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_NotEqual_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_NotEqual_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_NotEqual_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_NotEqual_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_NotEqual_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_i32_NotEqual_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i32_NotEqual_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a88      	l32i.n	a8, a10, 0
  42:	0f0c      	movi.n	a15, 0
  44:	c08870        	sub	a8, a8, a7
  47:	1e0c      	movi.n	a14, 1
  49:	83ef80        	moveqz	a14, a15, a8
  4c:	000081        	l32r	a8, fffc004c <op_i32_NotEqual_ss+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_i32_NotEqual_ss
  4f:	d198      	l32i.n	a9, a1, 52
  51:	2189      	s32i.n	a8, a1, 8
  53:	c188      	l32i.n	a8, a1, 48
  55:	1199      	s32i.n	a9, a1, 4
  57:	0189      	s32i.n	a8, a1, 0
  59:	04cd      	mov.n	a12, a4
  5b:	03bd      	mov.n	a11, a3
  5d:	02ad      	mov.n	a10, a2
  5f:	000081        	l32r	a8, fffc0060 <op_i32_NotEqual_ss+0xfffc0060>
			5f: R_XTENSA_SLOT0_OP	.literal.op_i32_NotEqual_ss+0x14
			5f: R_XTENSA_ASM_EXPAND	.text.profileOp
  62:	0008e0        	callx8	a8
  65:	0a2d      	mov.n	a2, a10
  67:	f01d      	retw.n

Disassembly of section .text.op_i32_NotEqual_rs:

00000000 <op_i32_NotEqual_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_NotEqual_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_NotEqual_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_NotEqual_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_NotEqual_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a88      	l32i.n	a8, a10, 0
  22:	d198      	l32i.n	a9, a1, 52
  24:	c06860        	sub	a6, a8, a6
  27:	000081        	l32r	a8, fffc0028 <op_i32_NotEqual_rs+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_i32_NotEqual_rs
  2a:	0f0c      	movi.n	a15, 0
  2c:	2189      	s32i.n	a8, a1, 8
  2e:	c188      	l32i.n	a8, a1, 48
  30:	1e0c      	movi.n	a14, 1
  32:	83ef60        	moveqz	a14, a15, a6
  35:	0189      	s32i.n	a8, a1, 0
  37:	1199      	s32i.n	a9, a1, 4
  39:	04cd      	mov.n	a12, a4
  3b:	03bd      	mov.n	a11, a3
  3d:	02ad      	mov.n	a10, a2
  3f:	000081        	l32r	a8, fffc0040 <op_i32_NotEqual_rs+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i32_NotEqual_rs+0xc
			3f: R_XTENSA_ASM_EXPAND	.text.profileOp
  42:	0008e0        	callx8	a8
  45:	0a2d      	mov.n	a2, a10
  47:	f01d      	retw.n

Disassembly of section .text.op_i32_Equal_ss:

00000000 <op_i32_Equal_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Equal_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Equal_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Equal_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Equal_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002872        	l32i	a7, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_Equal_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_Equal_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_i32_Equal_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i32_Equal_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a88      	l32i.n	a8, a10, 0
  42:	0f0c      	movi.n	a15, 0
  44:	c08870        	sub	a8, a8, a7
  47:	1e0c      	movi.n	a14, 1
  49:	93ef80        	movnez	a14, a15, a8
  4c:	000081        	l32r	a8, fffc004c <op_i32_Equal_ss+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_i32_Equal_ss
  4f:	d198      	l32i.n	a9, a1, 52
  51:	2189      	s32i.n	a8, a1, 8
  53:	c188      	l32i.n	a8, a1, 48
  55:	1199      	s32i.n	a9, a1, 4
  57:	0189      	s32i.n	a8, a1, 0
  59:	04cd      	mov.n	a12, a4
  5b:	03bd      	mov.n	a11, a3
  5d:	02ad      	mov.n	a10, a2
  5f:	000081        	l32r	a8, fffc0060 <op_i32_Equal_ss+0xfffc0060>
			5f: R_XTENSA_SLOT0_OP	.literal.op_i32_Equal_ss+0x14
			5f: R_XTENSA_ASM_EXPAND	.text.profileOp
  62:	0008e0        	callx8	a8
  65:	0a2d      	mov.n	a2, a10
  67:	f01d      	retw.n

Disassembly of section .text.op_i32_Equal_rs:

00000000 <op_i32_Equal_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Equal_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Equal_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Equal_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Equal_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a88      	l32i.n	a8, a10, 0
  22:	d198      	l32i.n	a9, a1, 52
  24:	c06860        	sub	a6, a8, a6
  27:	000081        	l32r	a8, fffc0028 <op_i32_Equal_rs+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_i32_Equal_rs
  2a:	0f0c      	movi.n	a15, 0
  2c:	2189      	s32i.n	a8, a1, 8
  2e:	c188      	l32i.n	a8, a1, 48
  30:	1e0c      	movi.n	a14, 1
  32:	93ef60        	movnez	a14, a15, a6
  35:	0189      	s32i.n	a8, a1, 0
  37:	1199      	s32i.n	a9, a1, 4
  39:	04cd      	mov.n	a12, a4
  3b:	03bd      	mov.n	a11, a3
  3d:	02ad      	mov.n	a10, a2
  3f:	000081        	l32r	a8, fffc0040 <op_i32_Equal_rs+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i32_Equal_rs+0xc
			3f: R_XTENSA_ASM_EXPAND	.text.profileOp
  42:	0008e0        	callx8	a8
  45:	0a2d      	mov.n	a2, a10
  47:	f01d      	retw.n

Disassembly of section .text.op_i32_EqualToZero_s:

00000000 <op_i32_EqualToZero_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_EqualToZero_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_EqualToZero_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_EqualToZero_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_EqualToZero_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a88      	l32i.n	a8, a10, 0
  22:	0f0c      	movi.n	a15, 0
  24:	1e0c      	movi.n	a14, 1
  26:	93ef80        	movnez	a14, a15, a8
  29:	000081        	l32r	a8, fffc002c <op_i32_EqualToZero_s+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_i32_EqualToZero_s
  2c:	d198      	l32i.n	a9, a1, 52
  2e:	2189      	s32i.n	a8, a1, 8
  30:	c188      	l32i.n	a8, a1, 48
  32:	1199      	s32i.n	a9, a1, 4
  34:	0189      	s32i.n	a8, a1, 0
  36:	04cd      	mov.n	a12, a4
  38:	03bd      	mov.n	a11, a3
  3a:	02ad      	mov.n	a10, a2
  3c:	000081        	l32r	a8, fffc003c <op_i32_EqualToZero_s+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_i32_EqualToZero_s+0xc
			3c: R_XTENSA_ASM_EXPAND	.text.profileOp
  3f:	0008e0        	callx8	a8
  42:	0a2d      	mov.n	a2, a10
  44:	f01d      	retw.n

Disassembly of section .text.op_i32_EqualToZero_r:

00000000 <op_i32_EqualToZero_r>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_i32_EqualToZero_r+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_i32_EqualToZero_r
   6:	d198      	l32i.n	a9, a1, 52
   8:	2189      	s32i.n	a8, a1, 8
   a:	c188      	l32i.n	a8, a1, 48
   c:	0f0c      	movi.n	a15, 0
   e:	1e0c      	movi.n	a14, 1
  10:	02ad      	mov.n	a10, a2
  12:	03bd      	mov.n	a11, a3
  14:	04cd      	mov.n	a12, a4
  16:	93ef60        	movnez	a14, a15, a6
  19:	0189      	s32i.n	a8, a1, 0
  1b:	016192        	s32i	a9, a1, 4
  1e:	000081        	l32r	a8, fffc0020 <op_i32_EqualToZero_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_i32_EqualToZero_r+0x4
			1e: R_XTENSA_ASM_EXPAND	.text.profileOp
  21:	0008e0        	callx8	a8
  24:	0a2d      	mov.n	a2, a10
  26:	f01d      	retw.n

Disassembly of section .text.op_Const32:

00000000 <op_Const32>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	04ad      	mov.n	a10, a4
   9:	22ca      	add.n	a2, a2, a12
   b:	000081        	l32r	a8, fffc000c <op_Const32+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x1c
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0a8d      	mov.n	a8, a10
  13:	046a16        	beqz	a10, 5d <op_Const32+0x5d>
			13: R_XTENSA_SLOT0_OP	.text.op_Const32+0x5d
  16:	4c0c      	movi.n	a12, 4
  18:	02bd      	mov.n	a11, a2
  1a:	04ad      	mov.n	a10, a4
  1c:	002852        	l32i	a5, a8, 0
  1f:	000081        	l32r	a8, fffc0020 <op_Const32+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x20
			1f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  22:	0008e0        	callx8	a8
  25:	0ab8      	l32i.n	a11, a10, 0
  27:	4c0c      	movi.n	a12, 4
  29:	a0bb30        	addx4	a11, a11, a3
  2c:	04ad      	mov.n	a10, a4
  2e:	000081        	l32r	a8, fffc0030 <op_Const32+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x24
			2e: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  31:	0008e0        	callx8	a8
  34:	000081        	l32r	a8, fffc0034 <op_Const32+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.op_Const32+0xc
  37:	621a87        	beq	a10, a8, 9d <op_Const32+0x9d>
			37: R_XTENSA_SLOT0_OP	.text.op_Const32+0x9d
  3a:	000081        	l32r	a8, fffc003c <op_Const32+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x14
  3d:	0a59      	s32i.n	a5, a10, 0
  3f:	d198      	l32i.n	a9, a1, 52
  41:	2189      	s32i.n	a8, a1, 8
  43:	c188      	l32i.n	a8, a1, 48
  45:	1199      	s32i.n	a9, a1, 4
  47:	0189      	s32i.n	a8, a1, 0
  49:	06ed      	mov.n	a14, a6
  4b:	07fd      	mov.n	a15, a7
  4d:	04cd      	mov.n	a12, a4
  4f:	03bd      	mov.n	a11, a3
  51:	02ad      	mov.n	a10, a2
  53:	000081        	l32r	a8, fffc0054 <op_Const32+0xfffc0054>
			53: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x28
			53: R_XTENSA_ASM_EXPAND	.text.profileOp
  56:	0008e0        	callx8	a8
  59:	0a2d      	mov.n	a2, a10
  5b:	f01d      	retw.n
  5d:	0000a1        	l32r	a10, fffc0060 <op_Const32+0xfffc0060>
			5d: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x18
  60:	000081        	l32r	a8, fffc0060 <op_Const32+0xfffc0060>
			60: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x2c
			60: R_XTENSA_ASM_EXPAND	malloc
  63:	0008e0        	callx8	a8
  66:	0a7d      	mov.n	a7, a10
  68:	000081        	l32r	a8, fffc0068 <op_Const32+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x30
			68: R_XTENSA_ASM_EXPAND	esp_log_system_timestamp
  6b:	0008e0        	callx8	a8
  6e:	0000e1        	l32r	a14, fffc0070 <op_Const32+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.op_Const32
  71:	0000c1        	l32r	a12, fffc0074 <op_Const32+0xfffc0074>
			71: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x4
  74:	0000b1        	l32r	a11, fffc0074 <op_Const32+0xfffc0074>
			74: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x18
  77:	0add      	mov.n	a13, a10
  79:	20f220        	or	a15, a2, a2
  7c:	20a770        	or	a10, a7, a7
  7f:	000081        	l32r	a8, fffc0080 <op_Const32+0xfffc0080>
			7f: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x34
			7f: R_XTENSA_ASM_EXPAND	snprintf
  82:	0008e0        	callx8	a8
  85:	0000a1        	l32r	a10, fffc0088 <op_Const32+0xfffc0088>
			85: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x8
  88:	07bd      	mov.n	a11, a7
  8a:	000081        	l32r	a8, fffc008c <op_Const32+0xfffc008c>
			8a: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x38
			8a: R_XTENSA_ASM_EXPAND	safe_printf
  8d:	0008e0        	callx8	a8
  90:	07ad      	mov.n	a10, a7
  92:	000081        	l32r	a8, fffc0094 <op_Const32+0xfffc0094>
			92: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x3c
			92: R_XTENSA_ASM_EXPAND	free
  95:	0008e0        	callx8	a8
  98:	020c      	movi.n	a2, 0
  9a:	f01d      	retw.n
  9c:	00          	.byte	00
  9d:	0000a1        	l32r	a10, fffc00a0 <op_Const32+0xfffc00a0>
			9d: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x18
  a0:	000081        	l32r	a8, fffc00a0 <op_Const32+0xfffc00a0>
			a0: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x40
			a0: R_XTENSA_ASM_EXPAND	malloc
  a3:	0008e0        	callx8	a8
  a6:	0a7d      	mov.n	a7, a10
  a8:	000081        	l32r	a8, fffc00a8 <op_Const32+0xfffc00a8>
			a8: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x44
			a8: R_XTENSA_ASM_EXPAND	esp_log_system_timestamp
  ab:	0008e0        	callx8	a8
  ae:	0a6d      	mov.n	a6, a10
  b0:	02bd      	mov.n	a11, a2
  b2:	04a0c2        	movi	a12, 4
  b5:	04ad      	mov.n	a10, a4
  b7:	000081        	l32r	a8, fffc00b8 <op_Const32+0xfffc00b8>
			b7: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x48
			b7: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  ba:	0008e0        	callx8	a8
  bd:	0a88      	l32i.n	a8, a10, 0
  bf:	0000e1        	l32r	a14, fffc00c0 <op_Const32+0xfffc00c0>
			bf: R_XTENSA_SLOT0_OP	.literal.op_Const32
  c2:	0000c1        	l32r	a12, fffc00c4 <op_Const32+0xfffc00c4>
			c2: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x10
  c5:	0000b1        	l32r	a11, fffc00c8 <op_Const32+0xfffc00c8>
			c5: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x18
  c8:	0189      	s32i.n	a8, a1, 0
  ca:	03fd      	mov.n	a15, a3
  cc:	20d660        	or	a13, a6, a6
  cf:	20a770        	or	a10, a7, a7
  d2:	000081        	l32r	a8, fffc00d4 <op_Const32+0xfffc00d4>
			d2: R_XTENSA_SLOT0_OP	.literal.op_Const32+0x4c
			d2: R_XTENSA_ASM_EXPAND	snprintf
  d5:	0008e0        	callx8	a8
  d8:	ffea46        	j	85 <op_Const32+0x85>
			d8: R_XTENSA_SLOT0_OP	.text.op_Const32+0x85

Disassembly of section .text.op_MemSize:

00000000 <op_MemSize>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <op_MemSize+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_MemSize
   6:	74e8      	l32i.n	a14, a4, 28
   8:	d198      	l32i.n	a9, a1, 52
   a:	2189      	s32i.n	a8, a1, 8
   c:	c188      	l32i.n	a8, a1, 48
   e:	04cd      	mov.n	a12, a4
  10:	02ad      	mov.n	a10, a2
  12:	03bd      	mov.n	a11, a3
  14:	0189      	s32i.n	a8, a1, 0
  16:	1199      	s32i.n	a9, a1, 4
  18:	0f0c      	movi.n	a15, 0
  1a:	000081        	l32r	a8, fffc001c <op_MemSize+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_MemSize+0x4
			1a: R_XTENSA_ASM_EXPAND	.text.profileOp
  1d:	0008e0        	callx8	a8
  20:	0a2d      	mov.n	a2, a10
  22:	f01d      	retw.n

Disassembly of section .text.op_BranchIf_s:

00000000 <op_BranchIf_s>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_BranchIf_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_BranchIf_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	04a0c2        	movi	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_BranchIf_s+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_BranchIf_s+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0a8d      	mov.n	a8, a10
  24:	0858      	l32i.n	a5, a8, 0
  26:	4c0c      	movi.n	a12, 4
  28:	02bd      	mov.n	a11, a2
  2a:	04ad      	mov.n	a10, a4
  2c:	000081        	l32r	a8, fffc002c <op_BranchIf_s+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_BranchIf_s+0xc
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0a98      	l32i.n	a9, a10, 0
  34:	15bc      	beqz.n	a5, 69 <op_BranchIf_s+0x69>
			34: R_XTENSA_SLOT0_OP	.text.op_BranchIf_s+0x69
  36:	09bd      	mov.n	a11, a9
  38:	7199      	s32i.n	a9, a1, 28
  3a:	4c0c      	movi.n	a12, 4
  3c:	04ad      	mov.n	a10, a4
  3e:	000081        	l32r	a8, fffc0040 <op_BranchIf_s+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_BranchIf_s+0x10
			3e: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  41:	0008e0        	callx8	a8
  44:	1021c2        	l32i	a12, a1, 64
  47:	1121d2        	l32i	a13, a1, 68
  4a:	000081        	l32r	a8, fffc004c <op_BranchIf_s+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_BranchIf_s
  4d:	01c9      	s32i.n	a12, a1, 0
  4f:	7198      	l32i.n	a9, a1, 28
  51:	11d9      	s32i.n	a13, a1, 4
  53:	2189      	s32i.n	a8, a1, 8
  55:	0a88      	l32i.n	a8, a10, 0
  57:	06ed      	mov.n	a14, a6
  59:	07fd      	mov.n	a15, a7
  5b:	04cd      	mov.n	a12, a4
  5d:	03bd      	mov.n	a11, a3
  5f:	a94b      	addi.n	a10, a9, 4
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n
  68:	00          	.byte	00
  69:	102182        	l32i	a8, a1, 64
  6c:	112192        	l32i	a9, a1, 68
  6f:	0189      	s32i.n	a8, a1, 0
  71:	000081        	l32r	a8, fffc0074 <op_BranchIf_s+0xfffc0074>
			71: R_XTENSA_SLOT0_OP	.literal.op_BranchIf_s
  74:	1199      	s32i.n	a9, a1, 4
  76:	2189      	s32i.n	a8, a1, 8
  78:	06ed      	mov.n	a14, a6
  7a:	07fd      	mov.n	a15, a7
  7c:	04cd      	mov.n	a12, a4
  7e:	03bd      	mov.n	a11, a3
  80:	02ad      	mov.n	a10, a2
  82:	000081        	l32r	a8, fffc0084 <op_BranchIf_s+0xfffc0084>
			82: R_XTENSA_SLOT0_OP	.literal.op_BranchIf_s+0x14
			82: R_XTENSA_ASM_EXPAND	.text.profileOp
  85:	0008e0        	callx8	a8
  88:	0a2d      	mov.n	a2, a10
  8a:	f01d      	retw.n

Disassembly of section .text.op_BranchIf_r:

00000000 <op_BranchIf_r>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_BranchIf_r+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_BranchIf_r+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	0a58      	l32i.n	a5, a10, 0
  12:	a6ac      	beqz.n	a6, 40 <op_BranchIf_r+0x40>
			12: R_XTENSA_SLOT0_OP	.text.op_BranchIf_r+0x40
  14:	05bd      	mov.n	a11, a5
  16:	4c0c      	movi.n	a12, 4
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_BranchIf_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_BranchIf_r+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	c188      	l32i.n	a8, a1, 48
  22:	d198      	l32i.n	a9, a1, 52
  24:	0189      	s32i.n	a8, a1, 0
  26:	000081        	l32r	a8, fffc0028 <op_BranchIf_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_BranchIf_r
  29:	1199      	s32i.n	a9, a1, 4
  2b:	2189      	s32i.n	a8, a1, 8
  2d:	0a88      	l32i.n	a8, a10, 0
  2f:	06ed      	mov.n	a14, a6
  31:	07fd      	mov.n	a15, a7
  33:	04cd      	mov.n	a12, a4
  35:	03bd      	mov.n	a11, a3
  37:	a54b      	addi.n	a10, a5, 4
  39:	0008e0        	callx8	a8
  3c:	0a2d      	mov.n	a2, a10
  3e:	f01d      	retw.n
  40:	c188      	l32i.n	a8, a1, 48
  42:	d198      	l32i.n	a9, a1, 52
  44:	0189      	s32i.n	a8, a1, 0
  46:	000081        	l32r	a8, fffc0048 <op_BranchIf_r+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_BranchIf_r
  49:	1199      	s32i.n	a9, a1, 4
  4b:	2189      	s32i.n	a8, a1, 8
  4d:	06ed      	mov.n	a14, a6
  4f:	07fd      	mov.n	a15, a7
  51:	04cd      	mov.n	a12, a4
  53:	03bd      	mov.n	a11, a3
  55:	02ad      	mov.n	a10, a2
  57:	000081        	l32r	a8, fffc0058 <op_BranchIf_r+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_BranchIf_r+0xc
			57: R_XTENSA_ASM_EXPAND	.text.profileOp
  5a:	0008e0        	callx8	a8
  5d:	0a2d      	mov.n	a2, a10
  5f:	f01d      	retw.n

Disassembly of section .text.op_u64_TruncSat_f64_s_s:

00000000 <op_u64_TruncSat_f64_s_s>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_TruncSat_f64_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_TruncSat_f64_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_u64_TruncSat_f64_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_s+0x14
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	8c0c      	movi.n	a12, 8
  32:	a0bb30        	addx4	a11, a11, a3
  35:	20a440        	or	a10, a4, a4
  38:	000081        	l32r	a8, fffc0038 <op_u64_TruncSat_f64_s_s+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_s+0x18
			38: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3b:	0008e0        	callx8	a8
  3e:	15b8      	l32i.n	a11, a5, 4
  40:	0a8d      	mov.n	a8, a10
  42:	05a8      	l32i.n	a10, a5, 0
  44:	71b9      	s32i.n	a11, a1, 28
  46:	61a9      	s32i.n	a10, a1, 24
  48:	0acd      	mov.n	a12, a10
  4a:	20dbb0        	or	a13, a11, a11
  4d:	205880        	or	a5, a8, a8
  50:	000081        	l32r	a8, fffc0050 <op_u64_TruncSat_f64_s_s+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_s+0x1c
			50: R_XTENSA_ASM_EXPAND	__unorddf2
  53:	0008e0        	callx8	a8
  56:	0a8d      	mov.n	a8, a10
  58:	058a56        	bnez	a10, b4 <op_u64_TruncSat_f64_s_s+0xb4>
			58: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_s_s+0xb4
  5b:	0000d1        	l32r	a13, fffc005c <op_u64_TruncSat_f64_s_s+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_s+0x8
  5e:	61a8      	l32i.n	a10, a1, 24
  60:	71b8      	l32i.n	a11, a1, 28
  62:	0c0c      	movi.n	a12, 0
  64:	056182        	s32i	a8, a1, 20
  67:	000081        	l32r	a8, fffc0068 <op_u64_TruncSat_f64_s_s+0xfffc0068>
			67: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_s+0x20
			67: R_XTENSA_ASM_EXPAND	__ledf2
  6a:	0008e0        	callx8	a8
  6d:	431aa6        	blti	a10, 1, b4 <op_u64_TruncSat_f64_s_s+0xb4>
			6d: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_s_s+0xb4
  70:	0000d1        	l32r	a13, fffc0070 <op_u64_TruncSat_f64_s_s+0xfffc0070>
			70: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_s+0x4
  73:	61a8      	l32i.n	a10, a1, 24
  75:	71b8      	l32i.n	a11, a1, 28
  77:	00a0c2        	movi	a12, 0
  7a:	000081        	l32r	a8, fffc007c <op_u64_TruncSat_f64_s_s+0xfffc007c>
			7a: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_s+0x24
			7a: R_XTENSA_ASM_EXPAND	__gedf2
  7d:	0008e0        	callx8	a8
  80:	038ad6        	bgez	a10, bc <op_u64_TruncSat_f64_s_s+0xbc>
			80: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_s_s+0xbc
  83:	61a8      	l32i.n	a10, a1, 24
  85:	71b8      	l32i.n	a11, a1, 28
  87:	000081        	l32r	a8, fffc0088 <op_u64_TruncSat_f64_s_s+0xfffc0088>
			87: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_s+0x28
			87: R_XTENSA_ASM_EXPAND	__fixunsdfdi
  8a:	0008e0        	callx8	a8
  8d:	000081        	l32r	a8, fffc0090 <op_u64_TruncSat_f64_s_s+0xfffc0090>
			8d: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_s
  90:	05a9      	s32i.n	a10, a5, 0
  92:	15b9      	s32i.n	a11, a5, 4
  94:	112192        	l32i	a9, a1, 68
  97:	2189      	s32i.n	a8, a1, 8
  99:	102182        	l32i	a8, a1, 64
  9c:	1199      	s32i.n	a9, a1, 4
  9e:	0189      	s32i.n	a8, a1, 0
  a0:	06ed      	mov.n	a14, a6
  a2:	07fd      	mov.n	a15, a7
  a4:	04cd      	mov.n	a12, a4
  a6:	03bd      	mov.n	a11, a3
  a8:	02ad      	mov.n	a10, a2
  aa:	000081        	l32r	a8, fffc00ac <op_u64_TruncSat_f64_s_s+0xfffc00ac>
			aa: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_s+0x2c
			aa: R_XTENSA_ASM_EXPAND	.text.profileOp
  ad:	0008e0        	callx8	a8
  b0:	0a2d      	mov.n	a2, a10
  b2:	f01d      	retw.n
  b4:	0a0c      	movi.n	a10, 0
  b6:	0abd      	mov.n	a11, a10
  b8:	fff446        	j	8d <op_u64_TruncSat_f64_s_s+0x8d>
			b8: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_s_s+0x8d
  bb:	00          	.byte	00
  bc:	fa7c      	movi.n	a10, -1
  be:	0abd      	mov.n	a11, a10
  c0:	fff246        	j	8d <op_u64_TruncSat_f64_s_s+0x8d>
			c0: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_s_s+0x8d

Disassembly of section .text.op_u64_TruncSat_f64_s_r:

00000000 <op_u64_TruncSat_f64_s_r>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_TruncSat_f64_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_r+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_TruncSat_f64_s_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_r+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1021c2        	l32i	a12, a1, 64
  23:	1121d2        	l32i	a13, a1, 68
  26:	205aa0        	or	a5, a10, a10
  29:	20bdd0        	or	a11, a13, a13
  2c:	20acc0        	or	a10, a12, a12
  2f:	000081        	l32r	a8, fffc0030 <op_u64_TruncSat_f64_s_r+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_r+0x14
			2f: R_XTENSA_ASM_EXPAND	__unorddf2
  32:	0008e0        	callx8	a8
  35:	0a8d      	mov.n	a8, a10
  37:	05da56        	bnez	a10, 98 <op_u64_TruncSat_f64_s_r+0x98>
			37: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_s_r+0x98
  3a:	0000d1        	l32r	a13, fffc003c <op_u64_TruncSat_f64_s_r+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_r+0x8
  3d:	1021a2        	l32i	a10, a1, 64
  40:	1121b2        	l32i	a11, a1, 68
  43:	0c0c      	movi.n	a12, 0
  45:	7189      	s32i.n	a8, a1, 28
  47:	000081        	l32r	a8, fffc0048 <op_u64_TruncSat_f64_s_r+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_r+0x18
			47: R_XTENSA_ASM_EXPAND	__ledf2
  4a:	0008e0        	callx8	a8
  4d:	471aa6        	blti	a10, 1, 98 <op_u64_TruncSat_f64_s_r+0x98>
			4d: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_s_r+0x98
  50:	0000d1        	l32r	a13, fffc0050 <op_u64_TruncSat_f64_s_r+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_r+0x4
  53:	1021a2        	l32i	a10, a1, 64
  56:	1121b2        	l32i	a11, a1, 68
  59:	0c0c      	movi.n	a12, 0
  5b:	000081        	l32r	a8, fffc005c <op_u64_TruncSat_f64_s_r+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_r+0x1c
			5b: R_XTENSA_ASM_EXPAND	__gedf2
  5e:	0008e0        	callx8	a8
  61:	03bad6        	bgez	a10, a0 <op_u64_TruncSat_f64_s_r+0xa0>
			61: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_s_r+0xa0
  64:	1021a2        	l32i	a10, a1, 64
  67:	1121b2        	l32i	a11, a1, 68
  6a:	000081        	l32r	a8, fffc006c <op_u64_TruncSat_f64_s_r+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_r+0x20
			6a: R_XTENSA_ASM_EXPAND	__fixunsdfdi
  6d:	0008e0        	callx8	a8
  70:	000081        	l32r	a8, fffc0070 <op_u64_TruncSat_f64_s_r+0xfffc0070>
			70: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_r
  73:	05a9      	s32i.n	a10, a5, 0
  75:	15b9      	s32i.n	a11, a5, 4
  77:	112192        	l32i	a9, a1, 68
  7a:	2189      	s32i.n	a8, a1, 8
  7c:	102182        	l32i	a8, a1, 64
  7f:	1199      	s32i.n	a9, a1, 4
  81:	0189      	s32i.n	a8, a1, 0
  83:	06ed      	mov.n	a14, a6
  85:	07fd      	mov.n	a15, a7
  87:	04cd      	mov.n	a12, a4
  89:	03bd      	mov.n	a11, a3
  8b:	20a220        	or	a10, a2, a2
  8e:	000081        	l32r	a8, fffc0090 <op_u64_TruncSat_f64_s_r+0xfffc0090>
			8e: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_s_r+0x24
			8e: R_XTENSA_ASM_EXPAND	.text.profileOp
  91:	0008e0        	callx8	a8
  94:	0a2d      	mov.n	a2, a10
  96:	f01d      	retw.n
  98:	0a0c      	movi.n	a10, 0
  9a:	0abd      	mov.n	a11, a10
  9c:	fff406        	j	70 <op_u64_TruncSat_f64_s_r+0x70>
			9c: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_s_r+0x70
  9f:	00          	.byte	00
  a0:	fa7c      	movi.n	a10, -1
  a2:	0abd      	mov.n	a11, a10
  a4:	fff206        	j	70 <op_u64_TruncSat_f64_s_r+0x70>
			a4: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_s_r+0x70

Disassembly of section .text.op_u64_TruncSat_f64_r_s:

00000000 <op_u64_TruncSat_f64_r_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_TruncSat_f64_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_TruncSat_f64_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a78      	l32i.n	a7, a10, 4
  22:	0a68      	l32i.n	a6, a10, 0
  24:	07dd      	mov.n	a13, a7
  26:	06cd      	mov.n	a12, a6
  28:	06ad      	mov.n	a10, a6
  2a:	07bd      	mov.n	a11, a7
  2c:	000081        	l32r	a8, fffc002c <op_u64_TruncSat_f64_r_s+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_s+0x14
			2c: R_XTENSA_ASM_EXPAND	__unorddf2
  2f:	0008e0        	callx8	a8
  32:	0a5d      	mov.n	a5, a10
  34:	052a56        	bnez	a10, 8a <op_u64_TruncSat_f64_r_s+0x8a>
			34: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_r_s+0x8a
  37:	0000d1        	l32r	a13, fffc0038 <op_u64_TruncSat_f64_r_s+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_s+0x8
  3a:	00a0c2        	movi	a12, 0
  3d:	20a660        	or	a10, a6, a6
  40:	20b770        	or	a11, a7, a7
  43:	000081        	l32r	a8, fffc0044 <op_u64_TruncSat_f64_r_s+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_s+0x18
			43: R_XTENSA_ASM_EXPAND	__ledf2
  46:	0008e0        	callx8	a8
  49:	3d1aa6        	blti	a10, 1, 8a <op_u64_TruncSat_f64_r_s+0x8a>
			49: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_r_s+0x8a
  4c:	0000d1        	l32r	a13, fffc004c <op_u64_TruncSat_f64_r_s+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_s+0x4
  4f:	0c0c      	movi.n	a12, 0
  51:	06ad      	mov.n	a10, a6
  53:	20b770        	or	a11, a7, a7
  56:	000081        	l32r	a8, fffc0058 <op_u64_TruncSat_f64_r_s+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_s+0x1c
			56: R_XTENSA_ASM_EXPAND	__gedf2
  59:	0008e0        	callx8	a8
  5c:	031ad6        	bgez	a10, 91 <op_u64_TruncSat_f64_r_s+0x91>
			5c: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_r_s+0x91
  5f:	06ad      	mov.n	a10, a6
  61:	07bd      	mov.n	a11, a7
  63:	000081        	l32r	a8, fffc0064 <op_u64_TruncSat_f64_r_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_s+0x20
			63: R_XTENSA_ASM_EXPAND	__fixunsdfdi
  66:	0008e0        	callx8	a8
  69:	0aed      	mov.n	a14, a10
  6b:	0bfd      	mov.n	a15, a11
  6d:	c188      	l32i.n	a8, a1, 48
  6f:	d198      	l32i.n	a9, a1, 52
  71:	0189      	s32i.n	a8, a1, 0
  73:	000081        	l32r	a8, fffc0074 <op_u64_TruncSat_f64_r_s+0xfffc0074>
			73: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_s
  76:	1199      	s32i.n	a9, a1, 4
  78:	2189      	s32i.n	a8, a1, 8
  7a:	04cd      	mov.n	a12, a4
  7c:	03bd      	mov.n	a11, a3
  7e:	02ad      	mov.n	a10, a2
  80:	000081        	l32r	a8, fffc0080 <op_u64_TruncSat_f64_r_s+0xfffc0080>
			80: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_s+0x24
			80: R_XTENSA_ASM_EXPAND	.text.profileOp
  83:	0008e0        	callx8	a8
  86:	0a2d      	mov.n	a2, a10
  88:	f01d      	retw.n
  8a:	0e0c      	movi.n	a14, 0
  8c:	0efd      	mov.n	a15, a14
  8e:	fff6c6        	j	6d <op_u64_TruncSat_f64_r_s+0x6d>
			8e: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_r_s+0x6d
  91:	fe7c      	movi.n	a14, -1
  93:	0efd      	mov.n	a15, a14
  95:	fff506        	j	6d <op_u64_TruncSat_f64_r_s+0x6d>
			95: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_r_s+0x6d

Disassembly of section .text.op_u64_TruncSat_f64_r_r:

00000000 <op_u64_TruncSat_f64_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06cd      	mov.n	a12, a6
   9:	07dd      	mov.n	a13, a7
   b:	06ad      	mov.n	a10, a6
   d:	07bd      	mov.n	a11, a7
   f:	000081        	l32r	a8, fffc0010 <op_u64_TruncSat_f64_r_r+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_r+0xc
			f: R_XTENSA_ASM_EXPAND	__unorddf2
  12:	0008e0        	callx8	a8
  15:	0a5d      	mov.n	a5, a10
  17:	04da56        	bnez	a10, 68 <op_u64_TruncSat_f64_r_r+0x68>
			17: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_r_r+0x68
  1a:	0000d1        	l32r	a13, fffc001c <op_u64_TruncSat_f64_r_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_r+0x8
  1d:	0c0c      	movi.n	a12, 0
  1f:	06ad      	mov.n	a10, a6
  21:	07bd      	mov.n	a11, a7
  23:	000081        	l32r	a8, fffc0024 <op_u64_TruncSat_f64_r_r+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_r+0x10
			23: R_XTENSA_ASM_EXPAND	__ledf2
  26:	0008e0        	callx8	a8
  29:	3b1aa6        	blti	a10, 1, 68 <op_u64_TruncSat_f64_r_r+0x68>
			29: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_r_r+0x68
  2c:	0000d1        	l32r	a13, fffc002c <op_u64_TruncSat_f64_r_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_r+0x4
  2f:	0c0c      	movi.n	a12, 0
  31:	06ad      	mov.n	a10, a6
  33:	20b770        	or	a11, a7, a7
  36:	000081        	l32r	a8, fffc0038 <op_u64_TruncSat_f64_r_r+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_r+0x14
			36: R_XTENSA_ASM_EXPAND	__gedf2
  39:	0008e0        	callx8	a8
  3c:	045ad6        	bgez	a10, 85 <op_u64_TruncSat_f64_r_r+0x85>
			3c: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_r_r+0x85
  3f:	06ad      	mov.n	a10, a6
  41:	07bd      	mov.n	a11, a7
  43:	000081        	l32r	a8, fffc0044 <op_u64_TruncSat_f64_r_r+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_r+0x18
			43: R_XTENSA_ASM_EXPAND	__fixunsdfdi
  46:	0008e0        	callx8	a8
  49:	0aed      	mov.n	a14, a10
  4b:	0bfd      	mov.n	a15, a11
  4d:	000081        	l32r	a8, fffc0050 <op_u64_TruncSat_f64_r_r+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_r
  50:	0169      	s32i.n	a6, a1, 0
  52:	1179      	s32i.n	a7, a1, 4
  54:	2189      	s32i.n	a8, a1, 8
  56:	04cd      	mov.n	a12, a4
  58:	03bd      	mov.n	a11, a3
  5a:	02ad      	mov.n	a10, a2
  5c:	000081        	l32r	a8, fffc005c <op_u64_TruncSat_f64_r_r+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_r+0x1c
			5c: R_XTENSA_ASM_EXPAND	.text.profileOp
  5f:	0008e0        	callx8	a8
  62:	0a2d      	mov.n	a2, a10
  64:	f01d      	retw.n
  66:	00          	.byte	00
  67:	00          	.byte	00
  68:	000081        	l32r	a8, fffc0068 <op_u64_TruncSat_f64_r_r+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_r
  6b:	0e0c      	movi.n	a14, 0
  6d:	0efd      	mov.n	a15, a14
  6f:	0169      	s32i.n	a6, a1, 0
  71:	1179      	s32i.n	a7, a1, 4
  73:	2189      	s32i.n	a8, a1, 8
  75:	04cd      	mov.n	a12, a4
  77:	03bd      	mov.n	a11, a3
  79:	02ad      	mov.n	a10, a2
  7b:	000081        	l32r	a8, fffc007c <op_u64_TruncSat_f64_r_r+0xfffc007c>
			7b: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f64_r_r+0x20
			7b: R_XTENSA_ASM_EXPAND	.text.profileOp
  7e:	0008e0        	callx8	a8
  81:	0a2d      	mov.n	a2, a10
  83:	f01d      	retw.n
  85:	fe7c      	movi.n	a14, -1
  87:	0efd      	mov.n	a15, a14
  89:	fff006        	j	4d <op_u64_TruncSat_f64_r_r+0x4d>
			89: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f64_r_r+0x4d

Disassembly of section .text.op_i64_TruncSat_f64_s_s:

00000000 <op_i64_TruncSat_f64_s_s>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_TruncSat_f64_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_s+0x14
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_TruncSat_f64_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_s+0x18
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_i64_TruncSat_f64_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_s+0x1c
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	8c0c      	movi.n	a12, 8
  32:	a0bb30        	addx4	a11, a11, a3
  35:	20a440        	or	a10, a4, a4
  38:	000081        	l32r	a8, fffc0038 <op_i64_TruncSat_f64_s_s+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_s+0x20
			38: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3b:	0008e0        	callx8	a8
  3e:	15b8      	l32i.n	a11, a5, 4
  40:	0a8d      	mov.n	a8, a10
  42:	05a8      	l32i.n	a10, a5, 0
  44:	71b9      	s32i.n	a11, a1, 28
  46:	61a9      	s32i.n	a10, a1, 24
  48:	0acd      	mov.n	a12, a10
  4a:	20dbb0        	or	a13, a11, a11
  4d:	205880        	or	a5, a8, a8
  50:	000081        	l32r	a8, fffc0050 <op_i64_TruncSat_f64_s_s+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_s+0x24
			50: R_XTENSA_ASM_EXPAND	__unorddf2
  53:	0008e0        	callx8	a8
  56:	0a8d      	mov.n	a8, a10
  58:	05ca56        	bnez	a10, b8 <op_i64_TruncSat_f64_s_s+0xb8>
			58: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_s_s+0xb8
  5b:	0000d1        	l32r	a13, fffc005c <op_i64_TruncSat_f64_s_s+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_s+0x10
  5e:	61a8      	l32i.n	a10, a1, 24
  60:	71b8      	l32i.n	a11, a1, 28
  62:	5189      	s32i.n	a8, a1, 20
  64:	01a0c2        	movi	a12, 1
  67:	000081        	l32r	a8, fffc0068 <op_i64_TruncSat_f64_s_s+0xfffc0068>
			67: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_s+0x28
			67: R_XTENSA_ASM_EXPAND	__ledf2
  6a:	0008e0        	callx8	a8
  6d:	5188      	l32i.n	a8, a1, 20
  6f:	4d1aa6        	blti	a10, 1, c0 <op_i64_TruncSat_f64_s_s+0xc0>
			6f: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_s_s+0xc0
  72:	0000d1        	l32r	a13, fffc0074 <op_i64_TruncSat_f64_s_s+0xfffc0074>
			72: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_s+0xc
  75:	61a8      	l32i.n	a10, a1, 24
  77:	71b8      	l32i.n	a11, a1, 28
  79:	0c0c      	movi.n	a12, 0
  7b:	000081        	l32r	a8, fffc007c <op_i64_TruncSat_f64_s_s+0xfffc007c>
			7b: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_s+0x2c
			7b: R_XTENSA_ASM_EXPAND	__gedf2
  7e:	0008e0        	callx8	a8
  81:	043ad6        	bgez	a10, c8 <op_i64_TruncSat_f64_s_s+0xc8>
			81: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_s_s+0xc8
  84:	0621a2        	l32i	a10, a1, 24
  87:	0721b2        	l32i	a11, a1, 28
  8a:	000081        	l32r	a8, fffc008c <op_i64_TruncSat_f64_s_s+0xfffc008c>
			8a: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_s+0x30
			8a: R_XTENSA_ASM_EXPAND	__fixdfdi
  8d:	0008e0        	callx8	a8
  90:	000081        	l32r	a8, fffc0090 <op_i64_TruncSat_f64_s_s+0xfffc0090>
			90: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_s
  93:	05a9      	s32i.n	a10, a5, 0
  95:	15b9      	s32i.n	a11, a5, 4
  97:	112192        	l32i	a9, a1, 68
  9a:	2189      	s32i.n	a8, a1, 8
  9c:	102182        	l32i	a8, a1, 64
  9f:	1199      	s32i.n	a9, a1, 4
  a1:	0189      	s32i.n	a8, a1, 0
  a3:	06ed      	mov.n	a14, a6
  a5:	07fd      	mov.n	a15, a7
  a7:	04cd      	mov.n	a12, a4
  a9:	03bd      	mov.n	a11, a3
  ab:	20a220        	or	a10, a2, a2
  ae:	000081        	l32r	a8, fffc00b0 <op_i64_TruncSat_f64_s_s+0xfffc00b0>
			ae: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_s+0x34
			ae: R_XTENSA_ASM_EXPAND	.text.profileOp
  b1:	0008e0        	callx8	a8
  b4:	0a2d      	mov.n	a2, a10
  b6:	f01d      	retw.n
  b8:	0a0c      	movi.n	a10, 0
  ba:	0abd      	mov.n	a11, a10
  bc:	fff406        	j	90 <op_i64_TruncSat_f64_s_s+0x90>
			bc: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_s_s+0x90
  bf:	00          	.byte	00
  c0:	0000b1        	l32r	a11, fffc00c0 <op_i64_TruncSat_f64_s_s+0xfffc00c0>
			c0: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_s+0x8
  c3:	08ad      	mov.n	a10, a8
  c5:	fff1c6        	j	90 <op_i64_TruncSat_f64_s_s+0x90>
			c5: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_s_s+0x90
  c8:	0000b1        	l32r	a11, fffc00c8 <op_i64_TruncSat_f64_s_s+0xfffc00c8>
			c8: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_s+0x4
  cb:	fa7c      	movi.n	a10, -1
  cd:	ffefc6        	j	90 <op_i64_TruncSat_f64_s_s+0x90>
			cd: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_s_s+0x90

Disassembly of section .text.op_i64_TruncSat_f64_s_r:

00000000 <op_i64_TruncSat_f64_s_r>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_TruncSat_f64_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_r+0x14
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_TruncSat_f64_s_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_r+0x18
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1021c2        	l32i	a12, a1, 64
  23:	1121d2        	l32i	a13, a1, 68
  26:	0a5d      	mov.n	a5, a10
  28:	0dbd      	mov.n	a11, a13
  2a:	0cad      	mov.n	a10, a12
  2c:	000081        	l32r	a8, fffc002c <op_i64_TruncSat_f64_s_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_r+0x1c
			2c: R_XTENSA_ASM_EXPAND	__unorddf2
  2f:	0008e0        	callx8	a8
  32:	0a8d      	mov.n	a8, a10
  34:	060a56        	bnez	a10, 98 <op_i64_TruncSat_f64_s_r+0x98>
			34: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_s_r+0x98
  37:	0000d1        	l32r	a13, fffc0038 <op_i64_TruncSat_f64_s_r+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_r+0x10
  3a:	1021a2        	l32i	a10, a1, 64
  3d:	1121b2        	l32i	a11, a1, 68
  40:	7189      	s32i.n	a8, a1, 28
  42:	1c0c      	movi.n	a12, 1
  44:	000081        	l32r	a8, fffc0044 <op_i64_TruncSat_f64_s_r+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_r+0x20
			44: R_XTENSA_ASM_EXPAND	__ledf2
  47:	0008e0        	callx8	a8
  4a:	7188      	l32i.n	a8, a1, 28
  4c:	501aa6        	blti	a10, 1, a0 <op_i64_TruncSat_f64_s_r+0xa0>
			4c: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_s_r+0xa0
  4f:	0000d1        	l32r	a13, fffc0050 <op_i64_TruncSat_f64_s_r+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_r+0xc
  52:	1021a2        	l32i	a10, a1, 64
  55:	1121b2        	l32i	a11, a1, 68
  58:	00a0c2        	movi	a12, 0
  5b:	000081        	l32r	a8, fffc005c <op_i64_TruncSat_f64_s_r+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_r+0x24
			5b: R_XTENSA_ASM_EXPAND	__gedf2
  5e:	0008e0        	callx8	a8
  61:	043ad6        	bgez	a10, a8 <op_i64_TruncSat_f64_s_r+0xa8>
			61: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_s_r+0xa8
  64:	1021a2        	l32i	a10, a1, 64
  67:	1121b2        	l32i	a11, a1, 68
  6a:	000081        	l32r	a8, fffc006c <op_i64_TruncSat_f64_s_r+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_r+0x28
			6a: R_XTENSA_ASM_EXPAND	__fixdfdi
  6d:	0008e0        	callx8	a8
  70:	000081        	l32r	a8, fffc0070 <op_i64_TruncSat_f64_s_r+0xfffc0070>
			70: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_r
  73:	05a9      	s32i.n	a10, a5, 0
  75:	15b9      	s32i.n	a11, a5, 4
  77:	112192        	l32i	a9, a1, 68
  7a:	2189      	s32i.n	a8, a1, 8
  7c:	102182        	l32i	a8, a1, 64
  7f:	1199      	s32i.n	a9, a1, 4
  81:	0189      	s32i.n	a8, a1, 0
  83:	06ed      	mov.n	a14, a6
  85:	07fd      	mov.n	a15, a7
  87:	04cd      	mov.n	a12, a4
  89:	03bd      	mov.n	a11, a3
  8b:	20a220        	or	a10, a2, a2
  8e:	000081        	l32r	a8, fffc0090 <op_i64_TruncSat_f64_s_r+0xfffc0090>
			8e: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_r+0x2c
			8e: R_XTENSA_ASM_EXPAND	.text.profileOp
  91:	0008e0        	callx8	a8
  94:	0a2d      	mov.n	a2, a10
  96:	f01d      	retw.n
  98:	0a0c      	movi.n	a10, 0
  9a:	0abd      	mov.n	a11, a10
  9c:	fff406        	j	70 <op_i64_TruncSat_f64_s_r+0x70>
			9c: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_s_r+0x70
  9f:	00          	.byte	00
  a0:	0000b1        	l32r	a11, fffc00a0 <op_i64_TruncSat_f64_s_r+0xfffc00a0>
			a0: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_r+0x8
  a3:	08ad      	mov.n	a10, a8
  a5:	fff1c6        	j	70 <op_i64_TruncSat_f64_s_r+0x70>
			a5: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_s_r+0x70
  a8:	0000b1        	l32r	a11, fffc00a8 <op_i64_TruncSat_f64_s_r+0xfffc00a8>
			a8: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_s_r+0x4
  ab:	fa7c      	movi.n	a10, -1
  ad:	ffefc6        	j	70 <op_i64_TruncSat_f64_s_r+0x70>
			ad: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_s_r+0x70

Disassembly of section .text.op_i64_TruncSat_f64_r_s:

00000000 <op_i64_TruncSat_f64_r_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_TruncSat_f64_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_s+0x14
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_TruncSat_f64_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_s+0x18
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a78      	l32i.n	a7, a10, 4
  22:	0a68      	l32i.n	a6, a10, 0
  24:	07dd      	mov.n	a13, a7
  26:	06cd      	mov.n	a12, a6
  28:	06ad      	mov.n	a10, a6
  2a:	07bd      	mov.n	a11, a7
  2c:	000081        	l32r	a8, fffc002c <op_i64_TruncSat_f64_r_s+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_s+0x1c
			2c: R_XTENSA_ASM_EXPAND	__unorddf2
  2f:	0008e0        	callx8	a8
  32:	0a5d      	mov.n	a5, a10
  34:	052a56        	bnez	a10, 8a <op_i64_TruncSat_f64_r_s+0x8a>
			34: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_r_s+0x8a
  37:	0000d1        	l32r	a13, fffc0038 <op_i64_TruncSat_f64_r_s+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_s+0x10
  3a:	01a0c2        	movi	a12, 1
  3d:	20a660        	or	a10, a6, a6
  40:	20b770        	or	a11, a7, a7
  43:	000081        	l32r	a8, fffc0044 <op_i64_TruncSat_f64_r_s+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_s+0x20
			43: R_XTENSA_ASM_EXPAND	__ledf2
  46:	0008e0        	callx8	a8
  49:	441aa6        	blti	a10, 1, 91 <op_i64_TruncSat_f64_r_s+0x91>
			49: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_r_s+0x91
  4c:	0000d1        	l32r	a13, fffc004c <op_i64_TruncSat_f64_r_s+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_s+0xc
  4f:	0c0c      	movi.n	a12, 0
  51:	06ad      	mov.n	a10, a6
  53:	20b770        	or	a11, a7, a7
  56:	000081        	l32r	a8, fffc0058 <op_i64_TruncSat_f64_r_s+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_s+0x24
			56: R_XTENSA_ASM_EXPAND	__gedf2
  59:	0008e0        	callx8	a8
  5c:	039ad6        	bgez	a10, 99 <op_i64_TruncSat_f64_r_s+0x99>
			5c: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_r_s+0x99
  5f:	06ad      	mov.n	a10, a6
  61:	07bd      	mov.n	a11, a7
  63:	000081        	l32r	a8, fffc0064 <op_i64_TruncSat_f64_r_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_s+0x28
			63: R_XTENSA_ASM_EXPAND	__fixdfdi
  66:	0008e0        	callx8	a8
  69:	0aed      	mov.n	a14, a10
  6b:	0bfd      	mov.n	a15, a11
  6d:	c188      	l32i.n	a8, a1, 48
  6f:	d198      	l32i.n	a9, a1, 52
  71:	0189      	s32i.n	a8, a1, 0
  73:	000081        	l32r	a8, fffc0074 <op_i64_TruncSat_f64_r_s+0xfffc0074>
			73: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_s
  76:	1199      	s32i.n	a9, a1, 4
  78:	2189      	s32i.n	a8, a1, 8
  7a:	04cd      	mov.n	a12, a4
  7c:	03bd      	mov.n	a11, a3
  7e:	02ad      	mov.n	a10, a2
  80:	000081        	l32r	a8, fffc0080 <op_i64_TruncSat_f64_r_s+0xfffc0080>
			80: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_s+0x2c
			80: R_XTENSA_ASM_EXPAND	.text.profileOp
  83:	0008e0        	callx8	a8
  86:	0a2d      	mov.n	a2, a10
  88:	f01d      	retw.n
  8a:	0e0c      	movi.n	a14, 0
  8c:	0efd      	mov.n	a15, a14
  8e:	fff6c6        	j	6d <op_i64_TruncSat_f64_r_s+0x6d>
			8e: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_r_s+0x6d
  91:	0000f1        	l32r	a15, fffc0094 <op_i64_TruncSat_f64_r_s+0xfffc0094>
			91: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_s+0x8
  94:	05ed      	mov.n	a14, a5
  96:	fff4c6        	j	6d <op_i64_TruncSat_f64_r_s+0x6d>
			96: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_r_s+0x6d
  99:	0000f1        	l32r	a15, fffc009c <op_i64_TruncSat_f64_r_s+0xfffc009c>
			99: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_s+0x4
  9c:	fe7c      	movi.n	a14, -1
  9e:	fff2c6        	j	6d <op_i64_TruncSat_f64_r_s+0x6d>
			9e: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_r_s+0x6d

Disassembly of section .text.op_i64_TruncSat_f64_r_r:

00000000 <op_i64_TruncSat_f64_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06cd      	mov.n	a12, a6
   9:	07dd      	mov.n	a13, a7
   b:	06ad      	mov.n	a10, a6
   d:	07bd      	mov.n	a11, a7
   f:	000081        	l32r	a8, fffc0010 <op_i64_TruncSat_f64_r_r+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_r+0x14
			f: R_XTENSA_ASM_EXPAND	__unorddf2
  12:	0008e0        	callx8	a8
  15:	0a5d      	mov.n	a5, a10
  17:	04da56        	bnez	a10, 68 <op_i64_TruncSat_f64_r_r+0x68>
			17: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_r_r+0x68
  1a:	0000d1        	l32r	a13, fffc001c <op_i64_TruncSat_f64_r_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_r+0x10
  1d:	1c0c      	movi.n	a12, 1
  1f:	06ad      	mov.n	a10, a6
  21:	07bd      	mov.n	a11, a7
  23:	000081        	l32r	a8, fffc0024 <op_i64_TruncSat_f64_r_r+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_r+0x18
			23: R_XTENSA_ASM_EXPAND	__ledf2
  26:	0008e0        	callx8	a8
  29:	581aa6        	blti	a10, 1, 85 <op_i64_TruncSat_f64_r_r+0x85>
			29: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_r_r+0x85
  2c:	0000d1        	l32r	a13, fffc002c <op_i64_TruncSat_f64_r_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_r+0xc
  2f:	0c0c      	movi.n	a12, 0
  31:	06ad      	mov.n	a10, a6
  33:	20b770        	or	a11, a7, a7
  36:	000081        	l32r	a8, fffc0038 <op_i64_TruncSat_f64_r_r+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_r+0x1c
			36: R_XTENSA_ASM_EXPAND	__gedf2
  39:	0008e0        	callx8	a8
  3c:	04dad6        	bgez	a10, 8d <op_i64_TruncSat_f64_r_r+0x8d>
			3c: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_r_r+0x8d
  3f:	06ad      	mov.n	a10, a6
  41:	07bd      	mov.n	a11, a7
  43:	000081        	l32r	a8, fffc0044 <op_i64_TruncSat_f64_r_r+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_r+0x20
			43: R_XTENSA_ASM_EXPAND	__fixdfdi
  46:	0008e0        	callx8	a8
  49:	0aed      	mov.n	a14, a10
  4b:	0bfd      	mov.n	a15, a11
  4d:	000081        	l32r	a8, fffc0050 <op_i64_TruncSat_f64_r_r+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_r
  50:	0169      	s32i.n	a6, a1, 0
  52:	1179      	s32i.n	a7, a1, 4
  54:	2189      	s32i.n	a8, a1, 8
  56:	04cd      	mov.n	a12, a4
  58:	03bd      	mov.n	a11, a3
  5a:	02ad      	mov.n	a10, a2
  5c:	000081        	l32r	a8, fffc005c <op_i64_TruncSat_f64_r_r+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_r+0x24
			5c: R_XTENSA_ASM_EXPAND	.text.profileOp
  5f:	0008e0        	callx8	a8
  62:	0a2d      	mov.n	a2, a10
  64:	f01d      	retw.n
  66:	00          	.byte	00
  67:	00          	.byte	00
  68:	000081        	l32r	a8, fffc0068 <op_i64_TruncSat_f64_r_r+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_r
  6b:	0e0c      	movi.n	a14, 0
  6d:	0efd      	mov.n	a15, a14
  6f:	0169      	s32i.n	a6, a1, 0
  71:	1179      	s32i.n	a7, a1, 4
  73:	2189      	s32i.n	a8, a1, 8
  75:	04cd      	mov.n	a12, a4
  77:	03bd      	mov.n	a11, a3
  79:	02ad      	mov.n	a10, a2
  7b:	000081        	l32r	a8, fffc007c <op_i64_TruncSat_f64_r_r+0xfffc007c>
			7b: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_r+0x28
			7b: R_XTENSA_ASM_EXPAND	.text.profileOp
  7e:	0008e0        	callx8	a8
  81:	0a2d      	mov.n	a2, a10
  83:	f01d      	retw.n
  85:	0000f1        	l32r	a15, fffc0088 <op_i64_TruncSat_f64_r_r+0xfffc0088>
			85: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_r+0x8
  88:	05ed      	mov.n	a14, a5
  8a:	ffefc6        	j	4d <op_i64_TruncSat_f64_r_r+0x4d>
			8a: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_r_r+0x4d
  8d:	0000f1        	l32r	a15, fffc0090 <op_i64_TruncSat_f64_r_r+0xfffc0090>
			8d: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f64_r_r+0x4
  90:	fe7c      	movi.n	a14, -1
  92:	ffedc6        	j	4d <op_i64_TruncSat_f64_r_r+0x4d>
			92: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f64_r_r+0x4d

Disassembly of section .text.op_u64_TruncSat_f32_s_s:

00000000 <op_u64_TruncSat_f32_s_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_TruncSat_f32_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_TruncSat_f32_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_u64_TruncSat_f32_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_s+0x14
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	8c0c      	movi.n	a12, 8
  32:	a0bb30        	addx4	a11, a11, a3
  35:	04ad      	mov.n	a10, a4
  37:	000081        	l32r	a8, fffc0038 <op_u64_TruncSat_f32_s_s+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_s+0x18
			37: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3a:	0008e0        	callx8	a8
  3d:	000503        	lsi	f0, a5, 0
  40:	1b0000        	un.s	b0, f0, f0
  43:	0a5d      	mov.n	a5, a10
  45:	451076        	bt	b0, 8e <op_u64_TruncSat_f32_s_s+0x8e>
			45: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_s_s+0x8e
  48:	000081        	l32r	a8, fffc0048 <op_u64_TruncSat_f32_s_s+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_s+0x8
  4b:	fa1850        	wfr	f1, a8
  4e:	6b0010        	ole.s	b0, f0, f1
  51:	391076        	bt	b0, 8e <op_u64_TruncSat_f32_s_s+0x8e>
			51: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_s_s+0x8e
  54:	000081        	l32r	a8, fffc0054 <op_u64_TruncSat_f32_s_s+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_s+0x4
  57:	fa1850        	wfr	f1, a8
  5a:	6b0100        	ole.s	b0, f1, f0
  5d:	341076        	bt	b0, 95 <op_u64_TruncSat_f32_s_s+0x95>
			5d: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_s_s+0x95
  60:	faa040        	rfr	a10, f0
  63:	000081        	l32r	a8, fffc0064 <op_u64_TruncSat_f32_s_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_s+0x1c
			63: R_XTENSA_ASM_EXPAND	__fixunssfdi
  66:	0008e0        	callx8	a8
  69:	000081        	l32r	a8, fffc006c <op_u64_TruncSat_f32_s_s+0xfffc006c>
			69: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_s
  6c:	05a9      	s32i.n	a10, a5, 0
  6e:	15b9      	s32i.n	a11, a5, 4
  70:	d198      	l32i.n	a9, a1, 52
  72:	2189      	s32i.n	a8, a1, 8
  74:	c188      	l32i.n	a8, a1, 48
  76:	1199      	s32i.n	a9, a1, 4
  78:	0189      	s32i.n	a8, a1, 0
  7a:	06ed      	mov.n	a14, a6
  7c:	07fd      	mov.n	a15, a7
  7e:	04cd      	mov.n	a12, a4
  80:	03bd      	mov.n	a11, a3
  82:	02ad      	mov.n	a10, a2
  84:	000081        	l32r	a8, fffc0084 <op_u64_TruncSat_f32_s_s+0xfffc0084>
			84: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_s+0x20
			84: R_XTENSA_ASM_EXPAND	.text.profileOp
  87:	0008e0        	callx8	a8
  8a:	0a2d      	mov.n	a2, a10
  8c:	f01d      	retw.n
  8e:	0a0c      	movi.n	a10, 0
  90:	0abd      	mov.n	a11, a10
  92:	fff4c6        	j	69 <op_u64_TruncSat_f32_s_s+0x69>
			92: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_s_s+0x69
  95:	fa7c      	movi.n	a10, -1
  97:	0abd      	mov.n	a11, a10
  99:	fff306        	j	69 <op_u64_TruncSat_f32_s_s+0x69>
			99: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_s_s+0x69

Disassembly of section .text.op_u64_TruncSat_f32_s_r:

00000000 <op_u64_TruncSat_f32_s_r>:
   0:	006136        	entry	a1, 48
   3:	04a0c2        	movi	a12, 4
   6:	20b220        	or	a11, a2, a2
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_u64_TruncSat_f32_s_r+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_r+0xc
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	8c0c      	movi.n	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_TruncSat_f32_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_r+0x10
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	d1b8      	l32i.n	a11, a1, 52
  23:	0a5d      	mov.n	a5, a10
  25:	c1a8      	l32i.n	a10, a1, 48
  27:	000081        	l32r	a8, fffc0028 <op_u64_TruncSat_f32_s_r+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_r+0x14
			27: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2a:	0008e0        	callx8	a8
  2d:	fa0a50        	wfr	f0, a10
  30:	1b0000        	un.s	b0, f0, f0
  33:	421076        	bt	b0, 79 <op_u64_TruncSat_f32_s_r+0x79>
			33: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_s_r+0x79
  36:	000081        	l32r	a8, fffc0038 <op_u64_TruncSat_f32_s_r+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_r+0x8
  39:	fa1850        	wfr	f1, a8
  3c:	6b0010        	ole.s	b0, f0, f1
  3f:	361076        	bt	b0, 79 <op_u64_TruncSat_f32_s_r+0x79>
			3f: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_s_r+0x79
  42:	000081        	l32r	a8, fffc0044 <op_u64_TruncSat_f32_s_r+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_r+0x4
  45:	fa1850        	wfr	f1, a8
  48:	6b0100        	ole.s	b0, f1, f0
  4b:	311076        	bt	b0, 80 <op_u64_TruncSat_f32_s_r+0x80>
			4b: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_s_r+0x80
  4e:	000081        	l32r	a8, fffc0050 <op_u64_TruncSat_f32_s_r+0xfffc0050>
			4e: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_r+0x18
			4e: R_XTENSA_ASM_EXPAND	__fixunssfdi
  51:	0008e0        	callx8	a8
  54:	000081        	l32r	a8, fffc0054 <op_u64_TruncSat_f32_s_r+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_r
  57:	05a9      	s32i.n	a10, a5, 0
  59:	15b9      	s32i.n	a11, a5, 4
  5b:	d198      	l32i.n	a9, a1, 52
  5d:	2189      	s32i.n	a8, a1, 8
  5f:	c188      	l32i.n	a8, a1, 48
  61:	1199      	s32i.n	a9, a1, 4
  63:	0189      	s32i.n	a8, a1, 0
  65:	06ed      	mov.n	a14, a6
  67:	07fd      	mov.n	a15, a7
  69:	04cd      	mov.n	a12, a4
  6b:	03bd      	mov.n	a11, a3
  6d:	02ad      	mov.n	a10, a2
  6f:	000081        	l32r	a8, fffc0070 <op_u64_TruncSat_f32_s_r+0xfffc0070>
			6f: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_s_r+0x1c
			6f: R_XTENSA_ASM_EXPAND	.text.profileOp
  72:	0008e0        	callx8	a8
  75:	0a2d      	mov.n	a2, a10
  77:	f01d      	retw.n
  79:	0a0c      	movi.n	a10, 0
  7b:	0abd      	mov.n	a11, a10
  7d:	fff4c6        	j	54 <op_u64_TruncSat_f32_s_r+0x54>
			7d: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_s_r+0x54
  80:	fa7c      	movi.n	a10, -1
  82:	0abd      	mov.n	a11, a10
  84:	fff306        	j	54 <op_u64_TruncSat_f32_s_r+0x54>
			84: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_s_r+0x54

Disassembly of section .text.op_u64_TruncSat_f32_r_s:

00000000 <op_u64_TruncSat_f32_r_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_TruncSat_f32_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_r_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_TruncSat_f32_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_r_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000a03        	lsi	f0, a10, 0
  23:	1b0000        	un.s	b0, f0, f0
  26:	421076        	bt	b0, 6c <op_u64_TruncSat_f32_r_s+0x6c>
			26: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_r_s+0x6c
  29:	000081        	l32r	a8, fffc002c <op_u64_TruncSat_f32_r_s+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_r_s+0x8
  2c:	fa1850        	wfr	f1, a8
  2f:	6b0010        	ole.s	b0, f0, f1
  32:	361076        	bt	b0, 6c <op_u64_TruncSat_f32_r_s+0x6c>
			32: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_r_s+0x6c
  35:	000081        	l32r	a8, fffc0038 <op_u64_TruncSat_f32_r_s+0xfffc0038>
			35: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_r_s+0x4
  38:	fa1850        	wfr	f1, a8
  3b:	6b0100        	ole.s	b0, f1, f0
  3e:	321076        	bt	b0, 74 <op_u64_TruncSat_f32_r_s+0x74>
			3e: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_r_s+0x74
  41:	faa040        	rfr	a10, f0
  44:	000081        	l32r	a8, fffc0044 <op_u64_TruncSat_f32_r_s+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_r_s+0x14
			44: R_XTENSA_ASM_EXPAND	__fixunssfdi
  47:	0008e0        	callx8	a8
  4a:	0aed      	mov.n	a14, a10
  4c:	0bfd      	mov.n	a15, a11
  4e:	c188      	l32i.n	a8, a1, 48
  50:	d198      	l32i.n	a9, a1, 52
  52:	0189      	s32i.n	a8, a1, 0
  54:	000081        	l32r	a8, fffc0054 <op_u64_TruncSat_f32_r_s+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_r_s
  57:	1199      	s32i.n	a9, a1, 4
  59:	2189      	s32i.n	a8, a1, 8
  5b:	04cd      	mov.n	a12, a4
  5d:	03bd      	mov.n	a11, a3
  5f:	20a220        	or	a10, a2, a2
  62:	000081        	l32r	a8, fffc0064 <op_u64_TruncSat_f32_r_s+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_r_s+0x18
			62: R_XTENSA_ASM_EXPAND	.text.profileOp
  65:	0008e0        	callx8	a8
  68:	0a2d      	mov.n	a2, a10
  6a:	f01d      	retw.n
  6c:	0e0c      	movi.n	a14, 0
  6e:	0efd      	mov.n	a15, a14
  70:	fff686        	j	4e <op_u64_TruncSat_f32_r_s+0x4e>
			70: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_r_s+0x4e
  73:	00          	.byte	00
  74:	fe7c      	movi.n	a14, -1
  76:	0efd      	mov.n	a15, a14
  78:	fff486        	j	4e <op_u64_TruncSat_f32_r_s+0x4e>
			78: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_r_s+0x4e

Disassembly of section .text.op_u64_TruncSat_f32_r_r:

00000000 <op_u64_TruncSat_f32_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06ad      	mov.n	a10, a6
   9:	07bd      	mov.n	a11, a7
   b:	000081        	l32r	a8, fffc000c <op_u64_TruncSat_f32_r_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_r_r+0xc
			b: R_XTENSA_ASM_EXPAND	__truncdfsf2
   e:	0008e0        	callx8	a8
  11:	fa0a50        	wfr	f0, a10
  14:	1b0000        	un.s	b0, f0, f0
  17:	3a1076        	bt	b0, 55 <op_u64_TruncSat_f32_r_r+0x55>
			17: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_r_r+0x55
  1a:	000081        	l32r	a8, fffc001c <op_u64_TruncSat_f32_r_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_r_r+0x8
  1d:	fa1850        	wfr	f1, a8
  20:	6b0010        	ole.s	b0, f0, f1
  23:	2e1076        	bt	b0, 55 <op_u64_TruncSat_f32_r_r+0x55>
			23: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_r_r+0x55
  26:	000081        	l32r	a8, fffc0028 <op_u64_TruncSat_f32_r_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_r_r+0x4
  29:	fa1850        	wfr	f1, a8
  2c:	6b0100        	ole.s	b0, f1, f0
  2f:	3f1076        	bt	b0, 72 <op_u64_TruncSat_f32_r_r+0x72>
			2f: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_r_r+0x72
  32:	000081        	l32r	a8, fffc0034 <op_u64_TruncSat_f32_r_r+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_r_r+0x10
			32: R_XTENSA_ASM_EXPAND	__fixunssfdi
  35:	0008e0        	callx8	a8
  38:	0aed      	mov.n	a14, a10
  3a:	0bfd      	mov.n	a15, a11
  3c:	000081        	l32r	a8, fffc003c <op_u64_TruncSat_f32_r_r+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_r_r
  3f:	0169      	s32i.n	a6, a1, 0
  41:	1179      	s32i.n	a7, a1, 4
  43:	2189      	s32i.n	a8, a1, 8
  45:	04cd      	mov.n	a12, a4
  47:	03bd      	mov.n	a11, a3
  49:	02ad      	mov.n	a10, a2
  4b:	000081        	l32r	a8, fffc004c <op_u64_TruncSat_f32_r_r+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_r_r+0x14
			4b: R_XTENSA_ASM_EXPAND	.text.profileOp
  4e:	0008e0        	callx8	a8
  51:	0a2d      	mov.n	a2, a10
  53:	f01d      	retw.n
  55:	000081        	l32r	a8, fffc0058 <op_u64_TruncSat_f32_r_r+0xfffc0058>
			55: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_r_r
  58:	0e0c      	movi.n	a14, 0
  5a:	0efd      	mov.n	a15, a14
  5c:	0169      	s32i.n	a6, a1, 0
  5e:	1179      	s32i.n	a7, a1, 4
  60:	2189      	s32i.n	a8, a1, 8
  62:	04cd      	mov.n	a12, a4
  64:	03bd      	mov.n	a11, a3
  66:	02ad      	mov.n	a10, a2
  68:	000081        	l32r	a8, fffc0068 <op_u64_TruncSat_f32_r_r+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_u64_TruncSat_f32_r_r+0x18
			68: R_XTENSA_ASM_EXPAND	.text.profileOp
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	f01d      	retw.n
  72:	fe7c      	movi.n	a14, -1
  74:	0efd      	mov.n	a15, a14
  76:	fff086        	j	3c <op_u64_TruncSat_f32_r_r+0x3c>
			76: R_XTENSA_SLOT0_OP	.text.op_u64_TruncSat_f32_r_r+0x3c

Disassembly of section .text.op_i64_TruncSat_f32_s_s:

00000000 <op_i64_TruncSat_f32_s_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_TruncSat_f32_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_s+0x14
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_TruncSat_f32_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_s+0x18
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_i64_TruncSat_f32_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_s+0x1c
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	8c0c      	movi.n	a12, 8
  32:	a0bb30        	addx4	a11, a11, a3
  35:	04ad      	mov.n	a10, a4
  37:	000081        	l32r	a8, fffc0038 <op_i64_TruncSat_f32_s_s+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_s+0x20
			37: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3a:	0008e0        	callx8	a8
  3d:	000503        	lsi	f0, a5, 0
  40:	1b0000        	un.s	b0, f0, f0
  43:	0a5d      	mov.n	a5, a10
  45:	451076        	bt	b0, 8e <op_i64_TruncSat_f32_s_s+0x8e>
			45: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_s_s+0x8e
  48:	000081        	l32r	a8, fffc0048 <op_i64_TruncSat_f32_s_s+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_s+0x10
  4b:	fa1850        	wfr	f1, a8
  4e:	6b0010        	ole.s	b0, f0, f1
  51:	401076        	bt	b0, 95 <op_i64_TruncSat_f32_s_s+0x95>
			51: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_s_s+0x95
  54:	000081        	l32r	a8, fffc0054 <op_i64_TruncSat_f32_s_s+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_s+0xc
  57:	fa1850        	wfr	f1, a8
  5a:	6b0100        	ole.s	b0, f1, f0
  5d:	3c1076        	bt	b0, 9d <op_i64_TruncSat_f32_s_s+0x9d>
			5d: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_s_s+0x9d
  60:	faa040        	rfr	a10, f0
  63:	000081        	l32r	a8, fffc0064 <op_i64_TruncSat_f32_s_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_s+0x24
			63: R_XTENSA_ASM_EXPAND	__fixsfdi
  66:	0008e0        	callx8	a8
  69:	000081        	l32r	a8, fffc006c <op_i64_TruncSat_f32_s_s+0xfffc006c>
			69: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_s
  6c:	05a9      	s32i.n	a10, a5, 0
  6e:	15b9      	s32i.n	a11, a5, 4
  70:	d198      	l32i.n	a9, a1, 52
  72:	2189      	s32i.n	a8, a1, 8
  74:	c188      	l32i.n	a8, a1, 48
  76:	1199      	s32i.n	a9, a1, 4
  78:	0189      	s32i.n	a8, a1, 0
  7a:	06ed      	mov.n	a14, a6
  7c:	07fd      	mov.n	a15, a7
  7e:	04cd      	mov.n	a12, a4
  80:	03bd      	mov.n	a11, a3
  82:	02ad      	mov.n	a10, a2
  84:	000081        	l32r	a8, fffc0084 <op_i64_TruncSat_f32_s_s+0xfffc0084>
			84: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_s+0x28
			84: R_XTENSA_ASM_EXPAND	.text.profileOp
  87:	0008e0        	callx8	a8
  8a:	0a2d      	mov.n	a2, a10
  8c:	f01d      	retw.n
  8e:	0a0c      	movi.n	a10, 0
  90:	0abd      	mov.n	a11, a10
  92:	fff4c6        	j	69 <op_i64_TruncSat_f32_s_s+0x69>
			92: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_s_s+0x69
  95:	0000b1        	l32r	a11, fffc0098 <op_i64_TruncSat_f32_s_s+0xfffc0098>
			95: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_s+0x8
  98:	0a0c      	movi.n	a10, 0
  9a:	fff2c6        	j	69 <op_i64_TruncSat_f32_s_s+0x69>
			9a: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_s_s+0x69
  9d:	0000b1        	l32r	a11, fffc00a0 <op_i64_TruncSat_f32_s_s+0xfffc00a0>
			9d: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_s+0x4
  a0:	fa7c      	movi.n	a10, -1
  a2:	fff0c6        	j	69 <op_i64_TruncSat_f32_s_s+0x69>
			a2: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_s_s+0x69

Disassembly of section .text.op_i64_TruncSat_f32_s_r:

00000000 <op_i64_TruncSat_f32_s_r>:
   0:	006136        	entry	a1, 48
   3:	04a0c2        	movi	a12, 4
   6:	20b220        	or	a11, a2, a2
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_i64_TruncSat_f32_s_r+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_r+0x14
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	8c0c      	movi.n	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_i64_TruncSat_f32_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_r+0x18
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	d1b8      	l32i.n	a11, a1, 52
  23:	0a5d      	mov.n	a5, a10
  25:	c1a8      	l32i.n	a10, a1, 48
  27:	000081        	l32r	a8, fffc0028 <op_i64_TruncSat_f32_s_r+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_r+0x1c
			27: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2a:	0008e0        	callx8	a8
  2d:	fa0a50        	wfr	f0, a10
  30:	1b0000        	un.s	b0, f0, f0
  33:	421076        	bt	b0, 79 <op_i64_TruncSat_f32_s_r+0x79>
			33: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_s_r+0x79
  36:	000081        	l32r	a8, fffc0038 <op_i64_TruncSat_f32_s_r+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_r+0x10
  39:	fa1850        	wfr	f1, a8
  3c:	6b0010        	ole.s	b0, f0, f1
  3f:	3d1076        	bt	b0, 80 <op_i64_TruncSat_f32_s_r+0x80>
			3f: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_s_r+0x80
  42:	000081        	l32r	a8, fffc0044 <op_i64_TruncSat_f32_s_r+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_r+0xc
  45:	fa1850        	wfr	f1, a8
  48:	6b0100        	ole.s	b0, f1, f0
  4b:	391076        	bt	b0, 88 <op_i64_TruncSat_f32_s_r+0x88>
			4b: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_s_r+0x88
  4e:	000081        	l32r	a8, fffc0050 <op_i64_TruncSat_f32_s_r+0xfffc0050>
			4e: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_r+0x20
			4e: R_XTENSA_ASM_EXPAND	__fixsfdi
  51:	0008e0        	callx8	a8
  54:	000081        	l32r	a8, fffc0054 <op_i64_TruncSat_f32_s_r+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_r
  57:	05a9      	s32i.n	a10, a5, 0
  59:	15b9      	s32i.n	a11, a5, 4
  5b:	d198      	l32i.n	a9, a1, 52
  5d:	2189      	s32i.n	a8, a1, 8
  5f:	c188      	l32i.n	a8, a1, 48
  61:	1199      	s32i.n	a9, a1, 4
  63:	0189      	s32i.n	a8, a1, 0
  65:	06ed      	mov.n	a14, a6
  67:	07fd      	mov.n	a15, a7
  69:	04cd      	mov.n	a12, a4
  6b:	03bd      	mov.n	a11, a3
  6d:	02ad      	mov.n	a10, a2
  6f:	000081        	l32r	a8, fffc0070 <op_i64_TruncSat_f32_s_r+0xfffc0070>
			6f: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_r+0x24
			6f: R_XTENSA_ASM_EXPAND	.text.profileOp
  72:	0008e0        	callx8	a8
  75:	0a2d      	mov.n	a2, a10
  77:	f01d      	retw.n
  79:	0a0c      	movi.n	a10, 0
  7b:	0abd      	mov.n	a11, a10
  7d:	fff4c6        	j	54 <op_i64_TruncSat_f32_s_r+0x54>
			7d: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_s_r+0x54
  80:	0000b1        	l32r	a11, fffc0080 <op_i64_TruncSat_f32_s_r+0xfffc0080>
			80: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_r+0x8
  83:	0a0c      	movi.n	a10, 0
  85:	fff2c6        	j	54 <op_i64_TruncSat_f32_s_r+0x54>
			85: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_s_r+0x54
  88:	0000b1        	l32r	a11, fffc0088 <op_i64_TruncSat_f32_s_r+0xfffc0088>
			88: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_s_r+0x4
  8b:	fa7c      	movi.n	a10, -1
  8d:	fff0c6        	j	54 <op_i64_TruncSat_f32_s_r+0x54>
			8d: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_s_r+0x54

Disassembly of section .text.op_i64_TruncSat_f32_r_s:

00000000 <op_i64_TruncSat_f32_r_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_TruncSat_f32_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_s+0x14
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_TruncSat_f32_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_s+0x18
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000a03        	lsi	f0, a10, 0
  23:	1b0000        	un.s	b0, f0, f0
  26:	421076        	bt	b0, 6c <op_i64_TruncSat_f32_r_s+0x6c>
			26: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_r_s+0x6c
  29:	000081        	l32r	a8, fffc002c <op_i64_TruncSat_f32_r_s+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_s+0x10
  2c:	fa1850        	wfr	f1, a8
  2f:	6b0010        	ole.s	b0, f0, f1
  32:	3e1076        	bt	b0, 74 <op_i64_TruncSat_f32_r_s+0x74>
			32: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_r_s+0x74
  35:	000081        	l32r	a8, fffc0038 <op_i64_TruncSat_f32_r_s+0xfffc0038>
			35: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_s+0xc
  38:	fa1850        	wfr	f1, a8
  3b:	6b0100        	ole.s	b0, f1, f0
  3e:	3a1076        	bt	b0, 7c <op_i64_TruncSat_f32_r_s+0x7c>
			3e: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_r_s+0x7c
  41:	faa040        	rfr	a10, f0
  44:	000081        	l32r	a8, fffc0044 <op_i64_TruncSat_f32_r_s+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_s+0x1c
			44: R_XTENSA_ASM_EXPAND	__fixsfdi
  47:	0008e0        	callx8	a8
  4a:	0aed      	mov.n	a14, a10
  4c:	0bfd      	mov.n	a15, a11
  4e:	c188      	l32i.n	a8, a1, 48
  50:	d198      	l32i.n	a9, a1, 52
  52:	0189      	s32i.n	a8, a1, 0
  54:	000081        	l32r	a8, fffc0054 <op_i64_TruncSat_f32_r_s+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_s
  57:	1199      	s32i.n	a9, a1, 4
  59:	2189      	s32i.n	a8, a1, 8
  5b:	04cd      	mov.n	a12, a4
  5d:	03bd      	mov.n	a11, a3
  5f:	20a220        	or	a10, a2, a2
  62:	000081        	l32r	a8, fffc0064 <op_i64_TruncSat_f32_r_s+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_s+0x20
			62: R_XTENSA_ASM_EXPAND	.text.profileOp
  65:	0008e0        	callx8	a8
  68:	0a2d      	mov.n	a2, a10
  6a:	f01d      	retw.n
  6c:	0e0c      	movi.n	a14, 0
  6e:	0efd      	mov.n	a15, a14
  70:	fff686        	j	4e <op_i64_TruncSat_f32_r_s+0x4e>
			70: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_r_s+0x4e
  73:	00          	.byte	00
  74:	0000f1        	l32r	a15, fffc0074 <op_i64_TruncSat_f32_r_s+0xfffc0074>
			74: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_s+0x8
  77:	0e0c      	movi.n	a14, 0
  79:	fff446        	j	4e <op_i64_TruncSat_f32_r_s+0x4e>
			79: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_r_s+0x4e
  7c:	0000f1        	l32r	a15, fffc007c <op_i64_TruncSat_f32_r_s+0xfffc007c>
			7c: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_s+0x4
  7f:	fe7c      	movi.n	a14, -1
  81:	fff246        	j	4e <op_i64_TruncSat_f32_r_s+0x4e>
			81: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_r_s+0x4e

Disassembly of section .text.op_i64_TruncSat_f32_r_r:

00000000 <op_i64_TruncSat_f32_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06ad      	mov.n	a10, a6
   9:	07bd      	mov.n	a11, a7
   b:	000081        	l32r	a8, fffc000c <op_i64_TruncSat_f32_r_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_r+0x14
			b: R_XTENSA_ASM_EXPAND	__truncdfsf2
   e:	0008e0        	callx8	a8
  11:	fa0a50        	wfr	f0, a10
  14:	1b0000        	un.s	b0, f0, f0
  17:	3a1076        	bt	b0, 55 <op_i64_TruncSat_f32_r_r+0x55>
			17: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_r_r+0x55
  1a:	000081        	l32r	a8, fffc001c <op_i64_TruncSat_f32_r_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_r+0x10
  1d:	fa1850        	wfr	f1, a8
  20:	6b0010        	ole.s	b0, f0, f1
  23:	4d1076        	bt	b0, 74 <op_i64_TruncSat_f32_r_r+0x74>
			23: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_r_r+0x74
  26:	000081        	l32r	a8, fffc0028 <op_i64_TruncSat_f32_r_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_r+0xc
  29:	fa1850        	wfr	f1, a8
  2c:	6b0100        	ole.s	b0, f1, f0
  2f:	491076        	bt	b0, 7c <op_i64_TruncSat_f32_r_r+0x7c>
			2f: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_r_r+0x7c
  32:	000081        	l32r	a8, fffc0034 <op_i64_TruncSat_f32_r_r+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_r+0x18
			32: R_XTENSA_ASM_EXPAND	__fixsfdi
  35:	0008e0        	callx8	a8
  38:	0aed      	mov.n	a14, a10
  3a:	0bfd      	mov.n	a15, a11
  3c:	000081        	l32r	a8, fffc003c <op_i64_TruncSat_f32_r_r+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_r
  3f:	0169      	s32i.n	a6, a1, 0
  41:	1179      	s32i.n	a7, a1, 4
  43:	2189      	s32i.n	a8, a1, 8
  45:	04cd      	mov.n	a12, a4
  47:	03bd      	mov.n	a11, a3
  49:	02ad      	mov.n	a10, a2
  4b:	000081        	l32r	a8, fffc004c <op_i64_TruncSat_f32_r_r+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_r+0x1c
			4b: R_XTENSA_ASM_EXPAND	.text.profileOp
  4e:	0008e0        	callx8	a8
  51:	0a2d      	mov.n	a2, a10
  53:	f01d      	retw.n
  55:	000081        	l32r	a8, fffc0058 <op_i64_TruncSat_f32_r_r+0xfffc0058>
			55: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_r
  58:	0e0c      	movi.n	a14, 0
  5a:	0efd      	mov.n	a15, a14
  5c:	0169      	s32i.n	a6, a1, 0
  5e:	1179      	s32i.n	a7, a1, 4
  60:	2189      	s32i.n	a8, a1, 8
  62:	04cd      	mov.n	a12, a4
  64:	03bd      	mov.n	a11, a3
  66:	02ad      	mov.n	a10, a2
  68:	000081        	l32r	a8, fffc0068 <op_i64_TruncSat_f32_r_r+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_r+0x20
			68: R_XTENSA_ASM_EXPAND	.text.profileOp
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	f01d      	retw.n
  72:	00          	.byte	00
  73:	00          	.byte	00
  74:	0000f1        	l32r	a15, fffc0074 <op_i64_TruncSat_f32_r_r+0xfffc0074>
			74: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_r+0x8
  77:	0e0c      	movi.n	a14, 0
  79:	ffefc6        	j	3c <op_i64_TruncSat_f32_r_r+0x3c>
			79: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_r_r+0x3c
  7c:	0000f1        	l32r	a15, fffc007c <op_i64_TruncSat_f32_r_r+0xfffc007c>
			7c: R_XTENSA_SLOT0_OP	.literal.op_i64_TruncSat_f32_r_r+0x4
  7f:	fe7c      	movi.n	a14, -1
  81:	ffedc6        	j	3c <op_i64_TruncSat_f32_r_r+0x3c>
			81: R_XTENSA_SLOT0_OP	.text.op_i64_TruncSat_f32_r_r+0x3c

Disassembly of section .text.op_u32_TruncSat_f64_s_s:

00000000 <op_u32_TruncSat_f64_s_s>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_TruncSat_f64_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_TruncSat_f64_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_u32_TruncSat_f64_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_s+0x14
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	4c0c      	movi.n	a12, 4
  32:	a0bb30        	addx4	a11, a11, a3
  35:	20a440        	or	a10, a4, a4
  38:	000081        	l32r	a8, fffc0038 <op_u32_TruncSat_f64_s_s+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_s+0x18
			38: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3b:	0008e0        	callx8	a8
  3e:	15b8      	l32i.n	a11, a5, 4
  40:	0a8d      	mov.n	a8, a10
  42:	05a8      	l32i.n	a10, a5, 0
  44:	71b9      	s32i.n	a11, a1, 28
  46:	61a9      	s32i.n	a10, a1, 24
  48:	0acd      	mov.n	a12, a10
  4a:	20dbb0        	or	a13, a11, a11
  4d:	205880        	or	a5, a8, a8
  50:	000081        	l32r	a8, fffc0050 <op_u32_TruncSat_f64_s_s+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_s+0x1c
			50: R_XTENSA_ASM_EXPAND	__unorddf2
  53:	0008e0        	callx8	a8
  56:	0a8d      	mov.n	a8, a10
  58:	056a56        	bnez	a10, b2 <op_u32_TruncSat_f64_s_s+0xb2>
			58: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_s_s+0xb2
  5b:	0000d1        	l32r	a13, fffc005c <op_u32_TruncSat_f64_s_s+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_s+0x8
  5e:	61a8      	l32i.n	a10, a1, 24
  60:	71b8      	l32i.n	a11, a1, 28
  62:	0c0c      	movi.n	a12, 0
  64:	056182        	s32i	a8, a1, 20
  67:	000081        	l32r	a8, fffc0068 <op_u32_TruncSat_f64_s_s+0xfffc0068>
			67: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_s+0x20
			67: R_XTENSA_ASM_EXPAND	__ledf2
  6a:	0008e0        	callx8	a8
  6d:	411aa6        	blti	a10, 1, b2 <op_u32_TruncSat_f64_s_s+0xb2>
			6d: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_s_s+0xb2
  70:	0000d1        	l32r	a13, fffc0070 <op_u32_TruncSat_f64_s_s+0xfffc0070>
			70: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_s+0x4
  73:	61a8      	l32i.n	a10, a1, 24
  75:	0721b2        	l32i	a11, a1, 28
  78:	0c0c      	movi.n	a12, 0
  7a:	000081        	l32r	a8, fffc007c <op_u32_TruncSat_f64_s_s+0xfffc007c>
			7a: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_s+0x24
			7a: R_XTENSA_ASM_EXPAND	__gedf2
  7d:	0008e0        	callx8	a8
  80:	034ad6        	bgez	a10, b8 <op_u32_TruncSat_f64_s_s+0xb8>
			80: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_s_s+0xb8
  83:	61a8      	l32i.n	a10, a1, 24
  85:	71b8      	l32i.n	a11, a1, 28
  87:	000081        	l32r	a8, fffc0088 <op_u32_TruncSat_f64_s_s+0xfffc0088>
			87: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_s+0x28
			87: R_XTENSA_ASM_EXPAND	__fixunsdfsi
  8a:	0008e0        	callx8	a8
  8d:	000081        	l32r	a8, fffc0090 <op_u32_TruncSat_f64_s_s+0xfffc0090>
			8d: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_s
  90:	05a9      	s32i.n	a10, a5, 0
  92:	112192        	l32i	a9, a1, 68
  95:	2189      	s32i.n	a8, a1, 8
  97:	102182        	l32i	a8, a1, 64
  9a:	1199      	s32i.n	a9, a1, 4
  9c:	0189      	s32i.n	a8, a1, 0
  9e:	06ed      	mov.n	a14, a6
  a0:	07fd      	mov.n	a15, a7
  a2:	04cd      	mov.n	a12, a4
  a4:	03bd      	mov.n	a11, a3
  a6:	02ad      	mov.n	a10, a2
  a8:	000081        	l32r	a8, fffc00a8 <op_u32_TruncSat_f64_s_s+0xfffc00a8>
			a8: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_s+0x2c
			a8: R_XTENSA_ASM_EXPAND	.text.profileOp
  ab:	0008e0        	callx8	a8
  ae:	0a2d      	mov.n	a2, a10
  b0:	f01d      	retw.n
  b2:	0a0c      	movi.n	a10, 0
  b4:	fff546        	j	8d <op_u32_TruncSat_f64_s_s+0x8d>
			b4: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_s_s+0x8d
  b7:	00          	.byte	00
  b8:	fa7c      	movi.n	a10, -1
  ba:	fff3c6        	j	8d <op_u32_TruncSat_f64_s_s+0x8d>
			ba: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_s_s+0x8d

Disassembly of section .text.op_u32_TruncSat_f64_s_r:

00000000 <op_u32_TruncSat_f64_s_r>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_TruncSat_f64_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_r+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_TruncSat_f64_s_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_r+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1021c2        	l32i	a12, a1, 64
  23:	1121d2        	l32i	a13, a1, 68
  26:	205aa0        	or	a5, a10, a10
  29:	20bdd0        	or	a11, a13, a13
  2c:	20acc0        	or	a10, a12, a12
  2f:	000081        	l32r	a8, fffc0030 <op_u32_TruncSat_f64_s_r+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_r+0x14
			2f: R_XTENSA_ASM_EXPAND	__unorddf2
  32:	0008e0        	callx8	a8
  35:	0a8d      	mov.n	a8, a10
  37:	05aa56        	bnez	a10, 95 <op_u32_TruncSat_f64_s_r+0x95>
			37: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_s_r+0x95
  3a:	0000d1        	l32r	a13, fffc003c <op_u32_TruncSat_f64_s_r+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_r+0x8
  3d:	1021a2        	l32i	a10, a1, 64
  40:	1121b2        	l32i	a11, a1, 68
  43:	0c0c      	movi.n	a12, 0
  45:	7189      	s32i.n	a8, a1, 28
  47:	000081        	l32r	a8, fffc0048 <op_u32_TruncSat_f64_s_r+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_r+0x18
			47: R_XTENSA_ASM_EXPAND	__ledf2
  4a:	0008e0        	callx8	a8
  4d:	441aa6        	blti	a10, 1, 95 <op_u32_TruncSat_f64_s_r+0x95>
			4d: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_s_r+0x95
  50:	0000d1        	l32r	a13, fffc0050 <op_u32_TruncSat_f64_s_r+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_r+0x4
  53:	1021a2        	l32i	a10, a1, 64
  56:	1121b2        	l32i	a11, a1, 68
  59:	0c0c      	movi.n	a12, 0
  5b:	000081        	l32r	a8, fffc005c <op_u32_TruncSat_f64_s_r+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_r+0x1c
			5b: R_XTENSA_ASM_EXPAND	__gedf2
  5e:	0008e0        	callx8	a8
  61:	035ad6        	bgez	a10, 9a <op_u32_TruncSat_f64_s_r+0x9a>
			61: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_s_r+0x9a
  64:	1021a2        	l32i	a10, a1, 64
  67:	1121b2        	l32i	a11, a1, 68
  6a:	000081        	l32r	a8, fffc006c <op_u32_TruncSat_f64_s_r+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_r+0x20
			6a: R_XTENSA_ASM_EXPAND	__fixunsdfsi
  6d:	0008e0        	callx8	a8
  70:	000081        	l32r	a8, fffc0070 <op_u32_TruncSat_f64_s_r+0xfffc0070>
			70: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_r
  73:	05a9      	s32i.n	a10, a5, 0
  75:	112192        	l32i	a9, a1, 68
  78:	2189      	s32i.n	a8, a1, 8
  7a:	102182        	l32i	a8, a1, 64
  7d:	1199      	s32i.n	a9, a1, 4
  7f:	0189      	s32i.n	a8, a1, 0
  81:	06ed      	mov.n	a14, a6
  83:	07fd      	mov.n	a15, a7
  85:	04cd      	mov.n	a12, a4
  87:	03bd      	mov.n	a11, a3
  89:	02ad      	mov.n	a10, a2
  8b:	000081        	l32r	a8, fffc008c <op_u32_TruncSat_f64_s_r+0xfffc008c>
			8b: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_s_r+0x24
			8b: R_XTENSA_ASM_EXPAND	.text.profileOp
  8e:	0008e0        	callx8	a8
  91:	0a2d      	mov.n	a2, a10
  93:	f01d      	retw.n
  95:	0a0c      	movi.n	a10, 0
  97:	fff546        	j	70 <op_u32_TruncSat_f64_s_r+0x70>
			97: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_s_r+0x70
  9a:	fa7c      	movi.n	a10, -1
  9c:	fff406        	j	70 <op_u32_TruncSat_f64_s_r+0x70>
			9c: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_s_r+0x70

Disassembly of section .text.op_u32_TruncSat_f64_r_s:

00000000 <op_u32_TruncSat_f64_r_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_TruncSat_f64_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_TruncSat_f64_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	026d      	mov.n	a6, a2
  22:	035d      	mov.n	a5, a3
  24:	0a28      	l32i.n	a2, a10, 0
  26:	1a38      	l32i.n	a3, a10, 4
  28:	02cd      	mov.n	a12, a2
  2a:	03dd      	mov.n	a13, a3
  2c:	02ad      	mov.n	a10, a2
  2e:	03bd      	mov.n	a11, a3
  30:	000081        	l32r	a8, fffc0030 <op_u32_TruncSat_f64_r_s+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_s+0x14
			30: R_XTENSA_ASM_EXPAND	__unorddf2
  33:	0008e0        	callx8	a8
  36:	0a7d      	mov.n	a7, a10
  38:	052a56        	bnez	a10, 8e <op_u32_TruncSat_f64_r_s+0x8e>
			38: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_r_s+0x8e
  3b:	0000d1        	l32r	a13, fffc003c <op_u32_TruncSat_f64_r_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_s+0x8
  3e:	00a0c2        	movi	a12, 0
  41:	20a220        	or	a10, a2, a2
  44:	20b330        	or	a11, a3, a3
  47:	000081        	l32r	a8, fffc0048 <op_u32_TruncSat_f64_r_s+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_s+0x18
			47: R_XTENSA_ASM_EXPAND	__ledf2
  4a:	0008e0        	callx8	a8
  4d:	3d1aa6        	blti	a10, 1, 8e <op_u32_TruncSat_f64_r_s+0x8e>
			4d: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_r_s+0x8e
  50:	0000d1        	l32r	a13, fffc0050 <op_u32_TruncSat_f64_r_s+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_s+0x4
  53:	0c0c      	movi.n	a12, 0
  55:	02ad      	mov.n	a10, a2
  57:	20b330        	or	a11, a3, a3
  5a:	000081        	l32r	a8, fffc005c <op_u32_TruncSat_f64_r_s+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_s+0x1c
			5a: R_XTENSA_ASM_EXPAND	__gedf2
  5d:	0008e0        	callx8	a8
  60:	031ad6        	bgez	a10, 95 <op_u32_TruncSat_f64_r_s+0x95>
			60: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_r_s+0x95
  63:	02ad      	mov.n	a10, a2
  65:	03bd      	mov.n	a11, a3
  67:	000081        	l32r	a8, fffc0068 <op_u32_TruncSat_f64_r_s+0xfffc0068>
			67: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_s+0x20
			67: R_XTENSA_ASM_EXPAND	__fixunsdfsi
  6a:	0008e0        	callx8	a8
  6d:	0aed      	mov.n	a14, a10
  6f:	07fd      	mov.n	a15, a7
  71:	c188      	l32i.n	a8, a1, 48
  73:	d198      	l32i.n	a9, a1, 52
  75:	0189      	s32i.n	a8, a1, 0
  77:	000081        	l32r	a8, fffc0078 <op_u32_TruncSat_f64_r_s+0xfffc0078>
			77: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_s
  7a:	1199      	s32i.n	a9, a1, 4
  7c:	2189      	s32i.n	a8, a1, 8
  7e:	04cd      	mov.n	a12, a4
  80:	05bd      	mov.n	a11, a5
  82:	06ad      	mov.n	a10, a6
  84:	000081        	l32r	a8, fffc0084 <op_u32_TruncSat_f64_r_s+0xfffc0084>
			84: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_s+0x24
			84: R_XTENSA_ASM_EXPAND	.text.profileOp
  87:	0008e0        	callx8	a8
  8a:	0a2d      	mov.n	a2, a10
  8c:	f01d      	retw.n
  8e:	0e0c      	movi.n	a14, 0
  90:	0efd      	mov.n	a15, a14
  92:	fff6c6        	j	71 <op_u32_TruncSat_f64_r_s+0x71>
			92: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_r_s+0x71
  95:	fe7c      	movi.n	a14, -1
  97:	07fd      	mov.n	a15, a7
  99:	fff506        	j	71 <op_u32_TruncSat_f64_r_s+0x71>
			99: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_r_s+0x71

Disassembly of section .text.op_u32_TruncSat_f64_r_r:

00000000 <op_u32_TruncSat_f64_r_r>:
   0:	006136        	entry	a1, 48
   3:	c1c8      	l32i.n	a12, a1, 48
   5:	d1d8      	l32i.n	a13, a1, 52
   7:	0cad      	mov.n	a10, a12
   9:	0dbd      	mov.n	a11, a13
   b:	000081        	l32r	a8, fffc000c <op_u32_TruncSat_f64_r_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_r+0xc
			b: R_XTENSA_ASM_EXPAND	__unorddf2
   e:	0008e0        	callx8	a8
  11:	0a7d      	mov.n	a7, a10
  13:	04fa56        	bnez	a10, 66 <op_u32_TruncSat_f64_r_r+0x66>
			13: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_r_r+0x66
  16:	0000d1        	l32r	a13, fffc0018 <op_u32_TruncSat_f64_r_r+0xfffc0018>
			16: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_r+0x8
  19:	c1a8      	l32i.n	a10, a1, 48
  1b:	d1b8      	l32i.n	a11, a1, 52
  1d:	0c0c      	movi.n	a12, 0
  1f:	000081        	l32r	a8, fffc0020 <op_u32_TruncSat_f64_r_r+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_r+0x10
			1f: R_XTENSA_ASM_EXPAND	__ledf2
  22:	0008e0        	callx8	a8
  25:	3d1aa6        	blti	a10, 1, 66 <op_u32_TruncSat_f64_r_r+0x66>
			25: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_r_r+0x66
  28:	0000d1        	l32r	a13, fffc0028 <op_u32_TruncSat_f64_r_r+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_r+0x4
  2b:	c1a8      	l32i.n	a10, a1, 48
  2d:	d1b8      	l32i.n	a11, a1, 52
  2f:	00a0c2        	movi	a12, 0
  32:	000081        	l32r	a8, fffc0034 <op_u32_TruncSat_f64_r_r+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_r+0x14
			32: R_XTENSA_ASM_EXPAND	__gedf2
  35:	0008e0        	callx8	a8
  38:	031ad6        	bgez	a10, 6d <op_u32_TruncSat_f64_r_r+0x6d>
			38: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_r_r+0x6d
  3b:	c1a8      	l32i.n	a10, a1, 48
  3d:	d1b8      	l32i.n	a11, a1, 52
  3f:	000081        	l32r	a8, fffc0040 <op_u32_TruncSat_f64_r_r+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_r+0x18
			3f: R_XTENSA_ASM_EXPAND	__fixunsdfsi
  42:	0008e0        	callx8	a8
  45:	0aed      	mov.n	a14, a10
  47:	07fd      	mov.n	a15, a7
  49:	c188      	l32i.n	a8, a1, 48
  4b:	d198      	l32i.n	a9, a1, 52
  4d:	0189      	s32i.n	a8, a1, 0
  4f:	000081        	l32r	a8, fffc0050 <op_u32_TruncSat_f64_r_r+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_r
  52:	1199      	s32i.n	a9, a1, 4
  54:	2189      	s32i.n	a8, a1, 8
  56:	04cd      	mov.n	a12, a4
  58:	03bd      	mov.n	a11, a3
  5a:	02ad      	mov.n	a10, a2
  5c:	000081        	l32r	a8, fffc005c <op_u32_TruncSat_f64_r_r+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f64_r_r+0x1c
			5c: R_XTENSA_ASM_EXPAND	.text.profileOp
  5f:	0008e0        	callx8	a8
  62:	0a2d      	mov.n	a2, a10
  64:	f01d      	retw.n
  66:	0e0c      	movi.n	a14, 0
  68:	0efd      	mov.n	a15, a14
  6a:	fff6c6        	j	49 <op_u32_TruncSat_f64_r_r+0x49>
			6a: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_r_r+0x49
  6d:	fe7c      	movi.n	a14, -1
  6f:	07fd      	mov.n	a15, a7
  71:	fff506        	j	49 <op_u32_TruncSat_f64_r_r+0x49>
			71: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f64_r_r+0x49

Disassembly of section .text.op_i32_TruncSat_f64_s_s:

00000000 <op_i32_TruncSat_f64_s_s>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_TruncSat_f64_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_s+0x18
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_TruncSat_f64_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_s+0x1c
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_i32_TruncSat_f64_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_s+0x20
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	4c0c      	movi.n	a12, 4
  32:	a0bb30        	addx4	a11, a11, a3
  35:	20a440        	or	a10, a4, a4
  38:	000081        	l32r	a8, fffc0038 <op_i32_TruncSat_f64_s_s+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_s+0x24
			38: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3b:	0008e0        	callx8	a8
  3e:	15b8      	l32i.n	a11, a5, 4
  40:	0a8d      	mov.n	a8, a10
  42:	05a8      	l32i.n	a10, a5, 0
  44:	71b9      	s32i.n	a11, a1, 28
  46:	61a9      	s32i.n	a10, a1, 24
  48:	0acd      	mov.n	a12, a10
  4a:	0bdd      	mov.n	a13, a11
  4c:	205880        	or	a5, a8, a8
  4f:	000081        	l32r	a8, fffc0050 <op_i32_TruncSat_f64_s_s+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_s+0x28
			4f: R_XTENSA_ASM_EXPAND	__unorddf2
  52:	0008e0        	callx8	a8
  55:	055a56        	bnez	a10, ae <op_i32_TruncSat_f64_s_s+0xae>
			55: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_s_s+0xae
  58:	0000c1        	l32r	a12, fffc0058 <op_i32_TruncSat_f64_s_s+0xfffc0058>
			58: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_s+0x10
  5b:	0000d1        	l32r	a13, fffc005c <op_i32_TruncSat_f64_s_s+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_s+0x14
  5e:	61a8      	l32i.n	a10, a1, 24
  60:	0721b2        	l32i	a11, a1, 28
  63:	000081        	l32r	a8, fffc0064 <op_i32_TruncSat_f64_s_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_s+0x2c
			63: R_XTENSA_ASM_EXPAND	__ledf2
  66:	0008e0        	callx8	a8
  69:	471aa6        	blti	a10, 1, b4 <op_i32_TruncSat_f64_s_s+0xb4>
			69: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_s_s+0xb4
  6c:	0000d1        	l32r	a13, fffc006c <op_i32_TruncSat_f64_s_s+0xfffc006c>
			6c: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_s+0xc
  6f:	61a8      	l32i.n	a10, a1, 24
  71:	0721b2        	l32i	a11, a1, 28
  74:	0c0c      	movi.n	a12, 0
  76:	000081        	l32r	a8, fffc0078 <op_i32_TruncSat_f64_s_s+0xfffc0078>
			76: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_s+0x30
			76: R_XTENSA_ASM_EXPAND	__gedf2
  79:	0008e0        	callx8	a8
  7c:	03cad6        	bgez	a10, bc <op_i32_TruncSat_f64_s_s+0xbc>
			7c: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_s_s+0xbc
  7f:	61a8      	l32i.n	a10, a1, 24
  81:	71b8      	l32i.n	a11, a1, 28
  83:	000081        	l32r	a8, fffc0084 <op_i32_TruncSat_f64_s_s+0xfffc0084>
			83: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_s+0x34
			83: R_XTENSA_ASM_EXPAND	__fixdfsi
  86:	0008e0        	callx8	a8
  89:	000081        	l32r	a8, fffc008c <op_i32_TruncSat_f64_s_s+0xfffc008c>
			89: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_s
  8c:	05a9      	s32i.n	a10, a5, 0
  8e:	112192        	l32i	a9, a1, 68
  91:	2189      	s32i.n	a8, a1, 8
  93:	102182        	l32i	a8, a1, 64
  96:	1199      	s32i.n	a9, a1, 4
  98:	0189      	s32i.n	a8, a1, 0
  9a:	06ed      	mov.n	a14, a6
  9c:	07fd      	mov.n	a15, a7
  9e:	04cd      	mov.n	a12, a4
  a0:	03bd      	mov.n	a11, a3
  a2:	02ad      	mov.n	a10, a2
  a4:	000081        	l32r	a8, fffc00a4 <op_i32_TruncSat_f64_s_s+0xfffc00a4>
			a4: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_s+0x38
			a4: R_XTENSA_ASM_EXPAND	.text.profileOp
  a7:	0008e0        	callx8	a8
  aa:	0a2d      	mov.n	a2, a10
  ac:	f01d      	retw.n
  ae:	0a0c      	movi.n	a10, 0
  b0:	fff546        	j	89 <op_i32_TruncSat_f64_s_s+0x89>
			b0: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_s_s+0x89
  b3:	00          	.byte	00
  b4:	0000a1        	l32r	a10, fffc00b4 <op_i32_TruncSat_f64_s_s+0xfffc00b4>
			b4: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_s+0x8
  b7:	fff386        	j	89 <op_i32_TruncSat_f64_s_s+0x89>
			b7: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_s_s+0x89
  ba:	00          	.byte	00
  bb:	00          	.byte	00
  bc:	0000a1        	l32r	a10, fffc00bc <op_i32_TruncSat_f64_s_s+0xfffc00bc>
			bc: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_s+0x4
  bf:	fff186        	j	89 <op_i32_TruncSat_f64_s_s+0x89>
			bf: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_s_s+0x89

Disassembly of section .text.op_i32_TruncSat_f64_s_r:

00000000 <op_i32_TruncSat_f64_s_r>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_TruncSat_f64_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_r+0x18
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_TruncSat_f64_s_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_r+0x1c
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	c1c8      	l32i.n	a12, a1, 48
  23:	d1d8      	l32i.n	a13, a1, 52
  25:	0a5d      	mov.n	a5, a10
  27:	0dbd      	mov.n	a11, a13
  29:	0cad      	mov.n	a10, a12
  2b:	000081        	l32r	a8, fffc002c <op_i32_TruncSat_f64_s_r+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_r+0x20
			2b: R_XTENSA_ASM_EXPAND	__unorddf2
  2e:	0008e0        	callx8	a8
  31:	053a56        	bnez	a10, 88 <op_i32_TruncSat_f64_s_r+0x88>
			31: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_s_r+0x88
  34:	0000c1        	l32r	a12, fffc0034 <op_i32_TruncSat_f64_s_r+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_r+0x10
  37:	0000d1        	l32r	a13, fffc0038 <op_i32_TruncSat_f64_s_r+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_r+0x14
  3a:	c1a8      	l32i.n	a10, a1, 48
  3c:	0d21b2        	l32i	a11, a1, 52
  3f:	000081        	l32r	a8, fffc0040 <op_i32_TruncSat_f64_s_r+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_r+0x24
			3f: R_XTENSA_ASM_EXPAND	__ledf2
  42:	0008e0        	callx8	a8
  45:	441aa6        	blti	a10, 1, 8d <op_i32_TruncSat_f64_s_r+0x8d>
			45: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_s_r+0x8d
  48:	0000d1        	l32r	a13, fffc0048 <op_i32_TruncSat_f64_s_r+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_r+0xc
  4b:	c1a8      	l32i.n	a10, a1, 48
  4d:	d1b8      	l32i.n	a11, a1, 52
  4f:	00a0c2        	movi	a12, 0
  52:	000081        	l32r	a8, fffc0054 <op_i32_TruncSat_f64_s_r+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_r+0x28
			52: R_XTENSA_ASM_EXPAND	__gedf2
  55:	0008e0        	callx8	a8
  58:	038ad6        	bgez	a10, 94 <op_i32_TruncSat_f64_s_r+0x94>
			58: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_s_r+0x94
  5b:	c1a8      	l32i.n	a10, a1, 48
  5d:	d1b8      	l32i.n	a11, a1, 52
  5f:	000081        	l32r	a8, fffc0060 <op_i32_TruncSat_f64_s_r+0xfffc0060>
			5f: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_r+0x2c
			5f: R_XTENSA_ASM_EXPAND	__fixdfsi
  62:	0008e0        	callx8	a8
  65:	000081        	l32r	a8, fffc0068 <op_i32_TruncSat_f64_s_r+0xfffc0068>
			65: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_r
  68:	05a9      	s32i.n	a10, a5, 0
  6a:	d198      	l32i.n	a9, a1, 52
  6c:	2189      	s32i.n	a8, a1, 8
  6e:	c188      	l32i.n	a8, a1, 48
  70:	1199      	s32i.n	a9, a1, 4
  72:	0189      	s32i.n	a8, a1, 0
  74:	06ed      	mov.n	a14, a6
  76:	07fd      	mov.n	a15, a7
  78:	04cd      	mov.n	a12, a4
  7a:	03bd      	mov.n	a11, a3
  7c:	02ad      	mov.n	a10, a2
  7e:	000081        	l32r	a8, fffc0080 <op_i32_TruncSat_f64_s_r+0xfffc0080>
			7e: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_r+0x30
			7e: R_XTENSA_ASM_EXPAND	.text.profileOp
  81:	0008e0        	callx8	a8
  84:	0a2d      	mov.n	a2, a10
  86:	f01d      	retw.n
  88:	0a0c      	movi.n	a10, 0
  8a:	fff5c6        	j	65 <op_i32_TruncSat_f64_s_r+0x65>
			8a: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_s_r+0x65
  8d:	0000a1        	l32r	a10, fffc0090 <op_i32_TruncSat_f64_s_r+0xfffc0090>
			8d: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_r+0x8
  90:	fff446        	j	65 <op_i32_TruncSat_f64_s_r+0x65>
			90: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_s_r+0x65
  93:	00          	.byte	00
  94:	0000a1        	l32r	a10, fffc0094 <op_i32_TruncSat_f64_s_r+0xfffc0094>
			94: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_s_r+0x4
  97:	fff286        	j	65 <op_i32_TruncSat_f64_s_r+0x65>
			97: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_s_r+0x65

Disassembly of section .text.op_i32_TruncSat_f64_r_s:

00000000 <op_i32_TruncSat_f64_r_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_TruncSat_f64_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_s+0x18
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_TruncSat_f64_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_s+0x1c
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	026d      	mov.n	a6, a2
  22:	035d      	mov.n	a5, a3
  24:	0a28      	l32i.n	a2, a10, 0
  26:	1a38      	l32i.n	a3, a10, 4
  28:	02cd      	mov.n	a12, a2
  2a:	03dd      	mov.n	a13, a3
  2c:	02ad      	mov.n	a10, a2
  2e:	03bd      	mov.n	a11, a3
  30:	000081        	l32r	a8, fffc0030 <op_i32_TruncSat_f64_r_s+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_s+0x20
			30: R_XTENSA_ASM_EXPAND	__unorddf2
  33:	0008e0        	callx8	a8
  36:	0a7d      	mov.n	a7, a10
  38:	054a56        	bnez	a10, 90 <op_i32_TruncSat_f64_r_s+0x90>
			38: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_r_s+0x90
  3b:	0000c1        	l32r	a12, fffc003c <op_i32_TruncSat_f64_r_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_s+0x10
  3e:	0000d1        	l32r	a13, fffc0040 <op_i32_TruncSat_f64_r_s+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_s+0x14
  41:	20a220        	or	a10, a2, a2
  44:	20b330        	or	a11, a3, a3
  47:	000081        	l32r	a8, fffc0048 <op_i32_TruncSat_f64_r_s+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_s+0x24
			47: R_XTENSA_ASM_EXPAND	__ledf2
  4a:	0008e0        	callx8	a8
  4d:	471aa6        	blti	a10, 1, 98 <op_i32_TruncSat_f64_r_s+0x98>
			4d: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_r_s+0x98
  50:	0000d1        	l32r	a13, fffc0050 <op_i32_TruncSat_f64_r_s+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_s+0xc
  53:	0c0c      	movi.n	a12, 0
  55:	02ad      	mov.n	a10, a2
  57:	20b330        	or	a11, a3, a3
  5a:	000081        	l32r	a8, fffc005c <op_i32_TruncSat_f64_r_s+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_s+0x28
			5a: R_XTENSA_ASM_EXPAND	__gedf2
  5d:	0008e0        	callx8	a8
  60:	03cad6        	bgez	a10, a0 <op_i32_TruncSat_f64_r_s+0xa0>
			60: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_r_s+0xa0
  63:	02ad      	mov.n	a10, a2
  65:	20b330        	or	a11, a3, a3
  68:	000081        	l32r	a8, fffc0068 <op_i32_TruncSat_f64_r_s+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_s+0x2c
			68: R_XTENSA_ASM_EXPAND	__fixdfsi
  6b:	0008e0        	callx8	a8
  6e:	0aed      	mov.n	a14, a10
  70:	31ffa0        	srai	a15, a10, 31
  73:	c188      	l32i.n	a8, a1, 48
  75:	d198      	l32i.n	a9, a1, 52
  77:	0189      	s32i.n	a8, a1, 0
  79:	000081        	l32r	a8, fffc007c <op_i32_TruncSat_f64_r_s+0xfffc007c>
			79: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_s
  7c:	1199      	s32i.n	a9, a1, 4
  7e:	2189      	s32i.n	a8, a1, 8
  80:	04cd      	mov.n	a12, a4
  82:	05bd      	mov.n	a11, a5
  84:	06ad      	mov.n	a10, a6
  86:	000081        	l32r	a8, fffc0088 <op_i32_TruncSat_f64_r_s+0xfffc0088>
			86: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_s+0x30
			86: R_XTENSA_ASM_EXPAND	.text.profileOp
  89:	0008e0        	callx8	a8
  8c:	0a2d      	mov.n	a2, a10
  8e:	f01d      	retw.n
  90:	0e0c      	movi.n	a14, 0
  92:	0efd      	mov.n	a15, a14
  94:	fff6c6        	j	73 <op_i32_TruncSat_f64_r_s+0x73>
			94: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_r_s+0x73
  97:	00          	.byte	00
  98:	0000e1        	l32r	a14, fffc0098 <op_i32_TruncSat_f64_r_s+0xfffc0098>
			98: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_s+0x8
  9b:	ff7c      	movi.n	a15, -1
  9d:	fff486        	j	73 <op_i32_TruncSat_f64_r_s+0x73>
			9d: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_r_s+0x73
  a0:	0000e1        	l32r	a14, fffc00a0 <op_i32_TruncSat_f64_r_s+0xfffc00a0>
			a0: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_s+0x4
  a3:	07fd      	mov.n	a15, a7
  a5:	fff286        	j	73 <op_i32_TruncSat_f64_r_s+0x73>
			a5: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_r_s+0x73

Disassembly of section .text.op_i32_TruncSat_f64_r_r:

00000000 <op_i32_TruncSat_f64_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06cd      	mov.n	a12, a6
   9:	07dd      	mov.n	a13, a7
   b:	06ad      	mov.n	a10, a6
   d:	20b770        	or	a11, a7, a7
  10:	000081        	l32r	a8, fffc0010 <op_i32_TruncSat_f64_r_r+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_r+0x18
			10: R_XTENSA_ASM_EXPAND	__unorddf2
  13:	0008e0        	callx8	a8
  16:	0a5d      	mov.n	a5, a10
  18:	050a56        	bnez	a10, 6c <op_i32_TruncSat_f64_r_r+0x6c>
			18: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_r_r+0x6c
  1b:	0000c1        	l32r	a12, fffc001c <op_i32_TruncSat_f64_r_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_r+0x10
  1e:	0000d1        	l32r	a13, fffc0020 <op_i32_TruncSat_f64_r_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_r+0x14
  21:	20a660        	or	a10, a6, a6
  24:	20b770        	or	a11, a7, a7
  27:	000081        	l32r	a8, fffc0028 <op_i32_TruncSat_f64_r_r+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_r+0x1c
			27: R_XTENSA_ASM_EXPAND	__ledf2
  2a:	0008e0        	callx8	a8
  2d:	581aa6        	blti	a10, 1, 89 <op_i32_TruncSat_f64_r_r+0x89>
			2d: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_r_r+0x89
  30:	0000d1        	l32r	a13, fffc0030 <op_i32_TruncSat_f64_r_r+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_r+0xc
  33:	0c0c      	movi.n	a12, 0
  35:	06ad      	mov.n	a10, a6
  37:	20b770        	or	a11, a7, a7
  3a:	000081        	l32r	a8, fffc003c <op_i32_TruncSat_f64_r_r+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_r+0x20
			3a: R_XTENSA_ASM_EXPAND	__gedf2
  3d:	0008e0        	callx8	a8
  40:	04dad6        	bgez	a10, 91 <op_i32_TruncSat_f64_r_r+0x91>
			40: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_r_r+0x91
  43:	06ad      	mov.n	a10, a6
  45:	20b770        	or	a11, a7, a7
  48:	000081        	l32r	a8, fffc0048 <op_i32_TruncSat_f64_r_r+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_r+0x24
			48: R_XTENSA_ASM_EXPAND	__fixdfsi
  4b:	0008e0        	callx8	a8
  4e:	0aed      	mov.n	a14, a10
  50:	31ffa0        	srai	a15, a10, 31
  53:	000081        	l32r	a8, fffc0054 <op_i32_TruncSat_f64_r_r+0xfffc0054>
			53: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_r
  56:	0169      	s32i.n	a6, a1, 0
  58:	1179      	s32i.n	a7, a1, 4
  5a:	2189      	s32i.n	a8, a1, 8
  5c:	04cd      	mov.n	a12, a4
  5e:	03bd      	mov.n	a11, a3
  60:	02ad      	mov.n	a10, a2
  62:	000081        	l32r	a8, fffc0064 <op_i32_TruncSat_f64_r_r+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_r+0x28
			62: R_XTENSA_ASM_EXPAND	.text.profileOp
  65:	0008e0        	callx8	a8
  68:	0a2d      	mov.n	a2, a10
  6a:	f01d      	retw.n
  6c:	000081        	l32r	a8, fffc006c <op_i32_TruncSat_f64_r_r+0xfffc006c>
			6c: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_r
  6f:	0e0c      	movi.n	a14, 0
  71:	0efd      	mov.n	a15, a14
  73:	0169      	s32i.n	a6, a1, 0
  75:	1179      	s32i.n	a7, a1, 4
  77:	2189      	s32i.n	a8, a1, 8
  79:	04cd      	mov.n	a12, a4
  7b:	03bd      	mov.n	a11, a3
  7d:	02ad      	mov.n	a10, a2
  7f:	000081        	l32r	a8, fffc0080 <op_i32_TruncSat_f64_r_r+0xfffc0080>
			7f: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_r+0x2c
			7f: R_XTENSA_ASM_EXPAND	.text.profileOp
  82:	0008e0        	callx8	a8
  85:	0a2d      	mov.n	a2, a10
  87:	f01d      	retw.n
  89:	0000e1        	l32r	a14, fffc008c <op_i32_TruncSat_f64_r_r+0xfffc008c>
			89: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_r+0x8
  8c:	ff7c      	movi.n	a15, -1
  8e:	fff046        	j	53 <op_i32_TruncSat_f64_r_r+0x53>
			8e: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_r_r+0x53
  91:	0000e1        	l32r	a14, fffc0094 <op_i32_TruncSat_f64_r_r+0xfffc0094>
			91: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f64_r_r+0x4
  94:	05fd      	mov.n	a15, a5
  96:	ffee46        	j	53 <op_i32_TruncSat_f64_r_r+0x53>
			96: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f64_r_r+0x53

Disassembly of section .text.op_u32_TruncSat_f32_s_s:

00000000 <op_u32_TruncSat_f32_s_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_TruncSat_f32_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_s_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_TruncSat_f32_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_s_s+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_u32_TruncSat_f32_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_s_s+0x14
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	4c0c      	movi.n	a12, 4
  32:	a0bb30        	addx4	a11, a11, a3
  35:	04ad      	mov.n	a10, a4
  37:	000081        	l32r	a8, fffc0038 <op_u32_TruncSat_f32_s_s+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_s_s+0x18
			37: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3a:	0008e0        	callx8	a8
  3d:	000503        	lsi	f0, a5, 0
  40:	1b0000        	un.s	b0, f0, f0
  43:	3d1076        	bt	b0, 84 <op_u32_TruncSat_f32_s_s+0x84>
			43: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_s_s+0x84
  46:	000081        	l32r	a8, fffc0048 <op_u32_TruncSat_f32_s_s+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_s_s+0x8
  49:	fa1850        	wfr	f1, a8
  4c:	6b0010        	ole.s	b0, f0, f1
  4f:	311076        	bt	b0, 84 <op_u32_TruncSat_f32_s_s+0x84>
			4f: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_s_s+0x84
  52:	000081        	l32r	a8, fffc0054 <op_u32_TruncSat_f32_s_s+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_s_s+0x4
  55:	fa1850        	wfr	f1, a8
  58:	6b0100        	ole.s	b0, f1, f0
  5b:	2a1076        	bt	b0, 89 <op_u32_TruncSat_f32_s_s+0x89>
			5b: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_s_s+0x89
  5e:	ea8000        	utrunc.s	a8, f0, 0
  61:	0a89      	s32i.n	a8, a10, 0
  63:	000081        	l32r	a8, fffc0064 <op_u32_TruncSat_f32_s_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_s_s
  66:	d198      	l32i.n	a9, a1, 52
  68:	2189      	s32i.n	a8, a1, 8
  6a:	c188      	l32i.n	a8, a1, 48
  6c:	1199      	s32i.n	a9, a1, 4
  6e:	0189      	s32i.n	a8, a1, 0
  70:	06ed      	mov.n	a14, a6
  72:	07fd      	mov.n	a15, a7
  74:	04cd      	mov.n	a12, a4
  76:	03bd      	mov.n	a11, a3
  78:	02ad      	mov.n	a10, a2
  7a:	000081        	l32r	a8, fffc007c <op_u32_TruncSat_f32_s_s+0xfffc007c>
			7a: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_s_s+0x1c
			7a: R_XTENSA_ASM_EXPAND	.text.profileOp
  7d:	0008e0        	callx8	a8
  80:	0a2d      	mov.n	a2, a10
  82:	f01d      	retw.n
  84:	080c      	movi.n	a8, 0
  86:	fff5c6        	j	61 <op_u32_TruncSat_f32_s_s+0x61>
			86: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_s_s+0x61
  89:	f87c      	movi.n	a8, -1
  8b:	fff486        	j	61 <op_u32_TruncSat_f32_s_s+0x61>
			8b: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_s_s+0x61

Disassembly of section .text.op_u32_TruncSat_f32_s_r:

00000000 <op_u32_TruncSat_f32_s_r>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_TruncSat_f32_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_s_r+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	04a0c2        	movi	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_u32_TruncSat_f32_s_r+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_s_r+0x10
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	d1b8      	l32i.n	a11, a1, 52
  24:	075d      	mov.n	a5, a7
  26:	0a7d      	mov.n	a7, a10
  28:	0c21a2        	l32i	a10, a1, 48
  2b:	000081        	l32r	a8, fffc002c <op_u32_TruncSat_f32_s_r+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_s_r+0x14
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	fa0a50        	wfr	f0, a10
  34:	1b0000        	un.s	b0, f0, f0
  37:	3d1076        	bt	b0, 78 <op_u32_TruncSat_f32_s_r+0x78>
			37: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_s_r+0x78
  3a:	000081        	l32r	a8, fffc003c <op_u32_TruncSat_f32_s_r+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_s_r+0x8
  3d:	fa1850        	wfr	f1, a8
  40:	6b0010        	ole.s	b0, f0, f1
  43:	311076        	bt	b0, 78 <op_u32_TruncSat_f32_s_r+0x78>
			43: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_s_r+0x78
  46:	000081        	l32r	a8, fffc0048 <op_u32_TruncSat_f32_s_r+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_s_r+0x4
  49:	fa1850        	wfr	f1, a8
  4c:	6b0100        	ole.s	b0, f1, f0
  4f:	2a1076        	bt	b0, 7d <op_u32_TruncSat_f32_s_r+0x7d>
			4f: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_s_r+0x7d
  52:	ea9000        	utrunc.s	a9, f0, 0
  55:	000081        	l32r	a8, fffc0058 <op_u32_TruncSat_f32_s_r+0xfffc0058>
			55: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_s_r
  58:	0799      	s32i.n	a9, a7, 0
  5a:	2189      	s32i.n	a8, a1, 8
  5c:	d198      	l32i.n	a9, a1, 52
  5e:	c188      	l32i.n	a8, a1, 48
  60:	1199      	s32i.n	a9, a1, 4
  62:	0189      	s32i.n	a8, a1, 0
  64:	06ed      	mov.n	a14, a6
  66:	05fd      	mov.n	a15, a5
  68:	04cd      	mov.n	a12, a4
  6a:	03bd      	mov.n	a11, a3
  6c:	02ad      	mov.n	a10, a2
  6e:	000081        	l32r	a8, fffc0070 <op_u32_TruncSat_f32_s_r+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_s_r+0x18
			6e: R_XTENSA_ASM_EXPAND	.text.profileOp
  71:	0008e0        	callx8	a8
  74:	0a2d      	mov.n	a2, a10
  76:	f01d      	retw.n
  78:	090c      	movi.n	a9, 0
  7a:	fff5c6        	j	55 <op_u32_TruncSat_f32_s_r+0x55>
			7a: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_s_r+0x55
  7d:	f97c      	movi.n	a9, -1
  7f:	fff486        	j	55 <op_u32_TruncSat_f32_s_r+0x55>
			7f: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_s_r+0x55

Disassembly of section .text.op_u32_TruncSat_f32_r_s:

00000000 <op_u32_TruncSat_f32_r_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_TruncSat_f32_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_r_s+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u32_TruncSat_f32_r_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_r_s+0x10
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	000a03        	lsi	f0, a10, 0
  24:	1b0000        	un.s	b0, f0, f0
  27:	391076        	bt	b0, 64 <op_u32_TruncSat_f32_r_s+0x64>
			27: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_r_s+0x64
  2a:	000081        	l32r	a8, fffc002c <op_u32_TruncSat_f32_r_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_r_s+0x8
  2d:	fa1850        	wfr	f1, a8
  30:	6b0010        	ole.s	b0, f0, f1
  33:	2d1076        	bt	b0, 64 <op_u32_TruncSat_f32_r_s+0x64>
			33: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_r_s+0x64
  36:	000081        	l32r	a8, fffc0038 <op_u32_TruncSat_f32_r_s+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_r_s+0x4
  39:	fa1850        	wfr	f1, a8
  3c:	6b0100        	ole.s	b0, f1, f0
  3f:	291076        	bt	b0, 6c <op_u32_TruncSat_f32_r_s+0x6c>
			3f: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_r_s+0x6c
  42:	eae000        	utrunc.s	a14, f0, 0
  45:	0f0c      	movi.n	a15, 0
  47:	c188      	l32i.n	a8, a1, 48
  49:	d198      	l32i.n	a9, a1, 52
  4b:	0189      	s32i.n	a8, a1, 0
  4d:	000081        	l32r	a8, fffc0050 <op_u32_TruncSat_f32_r_s+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_r_s
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	04cd      	mov.n	a12, a4
  56:	03bd      	mov.n	a11, a3
  58:	02ad      	mov.n	a10, a2
  5a:	000081        	l32r	a8, fffc005c <op_u32_TruncSat_f32_r_s+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_r_s+0x14
			5a: R_XTENSA_ASM_EXPAND	.text.profileOp
  5d:	0008e0        	callx8	a8
  60:	0a2d      	mov.n	a2, a10
  62:	f01d      	retw.n
  64:	0e0c      	movi.n	a14, 0
  66:	0efd      	mov.n	a15, a14
  68:	fff6c6        	j	47 <op_u32_TruncSat_f32_r_s+0x47>
			68: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_r_s+0x47
  6b:	00          	.byte	00
  6c:	fe7c      	movi.n	a14, -1
  6e:	0f0c      	movi.n	a15, 0
  70:	fff4c6        	j	47 <op_u32_TruncSat_f32_r_s+0x47>
			70: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_r_s+0x47

Disassembly of section .text.op_u32_TruncSat_f32_r_r:

00000000 <op_u32_TruncSat_f32_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06ad      	mov.n	a10, a6
   9:	07bd      	mov.n	a11, a7
   b:	000081        	l32r	a8, fffc000c <op_u32_TruncSat_f32_r_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_r_r+0xc
			b: R_XTENSA_ASM_EXPAND	__truncdfsf2
   e:	0008e0        	callx8	a8
  11:	fa0a50        	wfr	f0, a10
  14:	1b0000        	un.s	b0, f0, f0
  17:	351076        	bt	b0, 50 <op_u32_TruncSat_f32_r_r+0x50>
			17: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_r_r+0x50
  1a:	000081        	l32r	a8, fffc001c <op_u32_TruncSat_f32_r_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_r_r+0x8
  1d:	fa1850        	wfr	f1, a8
  20:	6b0010        	ole.s	b0, f0, f1
  23:	291076        	bt	b0, 50 <op_u32_TruncSat_f32_r_r+0x50>
			23: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_r_r+0x50
  26:	000081        	l32r	a8, fffc0028 <op_u32_TruncSat_f32_r_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_r_r+0x4
  29:	fa1850        	wfr	f1, a8
  2c:	6b0100        	ole.s	b0, f1, f0
  2f:	3a1076        	bt	b0, 6d <op_u32_TruncSat_f32_r_r+0x6d>
			2f: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_r_r+0x6d
  32:	eae000        	utrunc.s	a14, f0, 0
  35:	0f0c      	movi.n	a15, 0
  37:	000081        	l32r	a8, fffc0038 <op_u32_TruncSat_f32_r_r+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_r_r
  3a:	0169      	s32i.n	a6, a1, 0
  3c:	1179      	s32i.n	a7, a1, 4
  3e:	2189      	s32i.n	a8, a1, 8
  40:	04cd      	mov.n	a12, a4
  42:	03bd      	mov.n	a11, a3
  44:	02ad      	mov.n	a10, a2
  46:	000081        	l32r	a8, fffc0048 <op_u32_TruncSat_f32_r_r+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_r_r+0x10
			46: R_XTENSA_ASM_EXPAND	.text.profileOp
  49:	0008e0        	callx8	a8
  4c:	0a2d      	mov.n	a2, a10
  4e:	f01d      	retw.n
  50:	000081        	l32r	a8, fffc0050 <op_u32_TruncSat_f32_r_r+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_r_r
  53:	0e0c      	movi.n	a14, 0
  55:	0efd      	mov.n	a15, a14
  57:	0169      	s32i.n	a6, a1, 0
  59:	1179      	s32i.n	a7, a1, 4
  5b:	2189      	s32i.n	a8, a1, 8
  5d:	04cd      	mov.n	a12, a4
  5f:	03bd      	mov.n	a11, a3
  61:	02ad      	mov.n	a10, a2
  63:	000081        	l32r	a8, fffc0064 <op_u32_TruncSat_f32_r_r+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_u32_TruncSat_f32_r_r+0x14
			63: R_XTENSA_ASM_EXPAND	.text.profileOp
  66:	0008e0        	callx8	a8
  69:	0a2d      	mov.n	a2, a10
  6b:	f01d      	retw.n
  6d:	fe7c      	movi.n	a14, -1
  6f:	0f0c      	movi.n	a15, 0
  71:	fff086        	j	37 <op_u32_TruncSat_f32_r_r+0x37>
			71: R_XTENSA_SLOT0_OP	.text.op_u32_TruncSat_f32_r_r+0x37

Disassembly of section .text.op_i32_TruncSat_f32_s_s:

00000000 <op_i32_TruncSat_f32_s_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_TruncSat_f32_s_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_s+0x14
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_TruncSat_f32_s_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_s+0x18
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a5d      	mov.n	a5, a10
  22:	4c0c      	movi.n	a12, 4
  24:	02bd      	mov.n	a11, a2
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_i32_TruncSat_f32_s_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_s+0x1c
			28: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2b:	0008e0        	callx8	a8
  2e:	0ab8      	l32i.n	a11, a10, 0
  30:	4c0c      	movi.n	a12, 4
  32:	a0bb30        	addx4	a11, a11, a3
  35:	04ad      	mov.n	a10, a4
  37:	000081        	l32r	a8, fffc0038 <op_i32_TruncSat_f32_s_s+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_s+0x20
			37: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3a:	0008e0        	callx8	a8
  3d:	000503        	lsi	f0, a5, 0
  40:	1b0000        	un.s	b0, f0, f0
  43:	3d1076        	bt	b0, 84 <op_i32_TruncSat_f32_s_s+0x84>
			43: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_s_s+0x84
  46:	000081        	l32r	a8, fffc0048 <op_i32_TruncSat_f32_s_s+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_s+0x10
  49:	fa1850        	wfr	f1, a8
  4c:	6b0010        	ole.s	b0, f0, f1
  4f:	361076        	bt	b0, 89 <op_i32_TruncSat_f32_s_s+0x89>
			4f: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_s_s+0x89
  52:	000081        	l32r	a8, fffc0054 <op_i32_TruncSat_f32_s_s+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_s+0xc
  55:	fa1850        	wfr	f1, a8
  58:	6b0100        	ole.s	b0, f1, f0
  5b:	301076        	bt	b0, 8f <op_i32_TruncSat_f32_s_s+0x8f>
			5b: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_s_s+0x8f
  5e:	9a8000        	trunc.s	a8, f0, 0
  61:	0a89      	s32i.n	a8, a10, 0
  63:	000081        	l32r	a8, fffc0064 <op_i32_TruncSat_f32_s_s+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_s
  66:	d198      	l32i.n	a9, a1, 52
  68:	2189      	s32i.n	a8, a1, 8
  6a:	c188      	l32i.n	a8, a1, 48
  6c:	1199      	s32i.n	a9, a1, 4
  6e:	0189      	s32i.n	a8, a1, 0
  70:	06ed      	mov.n	a14, a6
  72:	07fd      	mov.n	a15, a7
  74:	04cd      	mov.n	a12, a4
  76:	03bd      	mov.n	a11, a3
  78:	02ad      	mov.n	a10, a2
  7a:	000081        	l32r	a8, fffc007c <op_i32_TruncSat_f32_s_s+0xfffc007c>
			7a: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_s+0x24
			7a: R_XTENSA_ASM_EXPAND	.text.profileOp
  7d:	0008e0        	callx8	a8
  80:	0a2d      	mov.n	a2, a10
  82:	f01d      	retw.n
  84:	080c      	movi.n	a8, 0
  86:	fff5c6        	j	61 <op_i32_TruncSat_f32_s_s+0x61>
			86: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_s_s+0x61
  89:	000081        	l32r	a8, fffc008c <op_i32_TruncSat_f32_s_s+0xfffc008c>
			89: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_s+0x8
  8c:	fff446        	j	61 <op_i32_TruncSat_f32_s_s+0x61>
			8c: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_s_s+0x61
  8f:	000081        	l32r	a8, fffc0090 <op_i32_TruncSat_f32_s_s+0xfffc0090>
			8f: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_s+0x4
  92:	fff2c6        	j	61 <op_i32_TruncSat_f32_s_s+0x61>
			92: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_s_s+0x61

Disassembly of section .text.op_i32_TruncSat_f32_s_r:

00000000 <op_i32_TruncSat_f32_s_r>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_TruncSat_f32_s_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_r+0x14
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	04a0c2        	movi	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_i32_TruncSat_f32_s_r+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_r+0x18
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	d1b8      	l32i.n	a11, a1, 52
  24:	075d      	mov.n	a5, a7
  26:	0a7d      	mov.n	a7, a10
  28:	0c21a2        	l32i	a10, a1, 48
  2b:	000081        	l32r	a8, fffc002c <op_i32_TruncSat_f32_s_r+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_r+0x1c
			2b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2e:	0008e0        	callx8	a8
  31:	fa0a50        	wfr	f0, a10
  34:	1b0000        	un.s	b0, f0, f0
  37:	3d1076        	bt	b0, 78 <op_i32_TruncSat_f32_s_r+0x78>
			37: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_s_r+0x78
  3a:	000081        	l32r	a8, fffc003c <op_i32_TruncSat_f32_s_r+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_r+0x10
  3d:	fa1850        	wfr	f1, a8
  40:	6b0010        	ole.s	b0, f0, f1
  43:	361076        	bt	b0, 7d <op_i32_TruncSat_f32_s_r+0x7d>
			43: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_s_r+0x7d
  46:	000081        	l32r	a8, fffc0048 <op_i32_TruncSat_f32_s_r+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_r+0xc
  49:	fa1850        	wfr	f1, a8
  4c:	6b0100        	ole.s	b0, f1, f0
  4f:	311076        	bt	b0, 84 <op_i32_TruncSat_f32_s_r+0x84>
			4f: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_s_r+0x84
  52:	9a9000        	trunc.s	a9, f0, 0
  55:	000081        	l32r	a8, fffc0058 <op_i32_TruncSat_f32_s_r+0xfffc0058>
			55: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_r
  58:	0799      	s32i.n	a9, a7, 0
  5a:	2189      	s32i.n	a8, a1, 8
  5c:	d198      	l32i.n	a9, a1, 52
  5e:	c188      	l32i.n	a8, a1, 48
  60:	1199      	s32i.n	a9, a1, 4
  62:	0189      	s32i.n	a8, a1, 0
  64:	06ed      	mov.n	a14, a6
  66:	05fd      	mov.n	a15, a5
  68:	04cd      	mov.n	a12, a4
  6a:	03bd      	mov.n	a11, a3
  6c:	02ad      	mov.n	a10, a2
  6e:	000081        	l32r	a8, fffc0070 <op_i32_TruncSat_f32_s_r+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_r+0x20
			6e: R_XTENSA_ASM_EXPAND	.text.profileOp
  71:	0008e0        	callx8	a8
  74:	0a2d      	mov.n	a2, a10
  76:	f01d      	retw.n
  78:	090c      	movi.n	a9, 0
  7a:	fff5c6        	j	55 <op_i32_TruncSat_f32_s_r+0x55>
			7a: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_s_r+0x55
  7d:	000091        	l32r	a9, fffc0080 <op_i32_TruncSat_f32_s_r+0xfffc0080>
			7d: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_r+0x8
  80:	fff446        	j	55 <op_i32_TruncSat_f32_s_r+0x55>
			80: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_s_r+0x55
  83:	00          	.byte	00
  84:	000091        	l32r	a9, fffc0084 <op_i32_TruncSat_f32_s_r+0xfffc0084>
			84: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_s_r+0x4
  87:	fff286        	j	55 <op_i32_TruncSat_f32_s_r+0x55>
			87: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_s_r+0x55

Disassembly of section .text.op_i32_TruncSat_f32_r_s:

00000000 <op_i32_TruncSat_f32_r_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_TruncSat_f32_r_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_s+0x14
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_TruncSat_f32_r_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_s+0x18
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	000a03        	lsi	f0, a10, 0
  23:	1b0000        	un.s	b0, f0, f0
  26:	3a1076        	bt	b0, 64 <op_i32_TruncSat_f32_r_s+0x64>
			26: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_r_s+0x64
  29:	000081        	l32r	a8, fffc002c <op_i32_TruncSat_f32_r_s+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_s+0x10
  2c:	fa1850        	wfr	f1, a8
  2f:	6b0010        	ole.s	b0, f0, f1
  32:	361076        	bt	b0, 6c <op_i32_TruncSat_f32_r_s+0x6c>
			32: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_r_s+0x6c
  35:	000081        	l32r	a8, fffc0038 <op_i32_TruncSat_f32_r_s+0xfffc0038>
			35: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_s+0xc
  38:	fa1850        	wfr	f1, a8
  3b:	6b0100        	ole.s	b0, f1, f0
  3e:	321076        	bt	b0, 74 <op_i32_TruncSat_f32_r_s+0x74>
			3e: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_r_s+0x74
  41:	9ae000        	trunc.s	a14, f0, 0
  44:	31ffe0        	srai	a15, a14, 31
  47:	c188      	l32i.n	a8, a1, 48
  49:	d198      	l32i.n	a9, a1, 52
  4b:	0189      	s32i.n	a8, a1, 0
  4d:	000081        	l32r	a8, fffc0050 <op_i32_TruncSat_f32_r_s+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_s
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	04cd      	mov.n	a12, a4
  56:	03bd      	mov.n	a11, a3
  58:	02ad      	mov.n	a10, a2
  5a:	000081        	l32r	a8, fffc005c <op_i32_TruncSat_f32_r_s+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_s+0x1c
			5a: R_XTENSA_ASM_EXPAND	.text.profileOp
  5d:	0008e0        	callx8	a8
  60:	0a2d      	mov.n	a2, a10
  62:	f01d      	retw.n
  64:	0e0c      	movi.n	a14, 0
  66:	0efd      	mov.n	a15, a14
  68:	fff6c6        	j	47 <op_i32_TruncSat_f32_r_s+0x47>
			68: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_r_s+0x47
  6b:	00          	.byte	00
  6c:	0000e1        	l32r	a14, fffc006c <op_i32_TruncSat_f32_r_s+0xfffc006c>
			6c: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_s+0x8
  6f:	ff7c      	movi.n	a15, -1
  71:	fff486        	j	47 <op_i32_TruncSat_f32_r_s+0x47>
			71: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_r_s+0x47
  74:	0000e1        	l32r	a14, fffc0074 <op_i32_TruncSat_f32_r_s+0xfffc0074>
			74: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_s+0x4
  77:	0f0c      	movi.n	a15, 0
  79:	fff286        	j	47 <op_i32_TruncSat_f32_r_s+0x47>
			79: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_r_s+0x47

Disassembly of section .text.op_i32_TruncSat_f32_r_r:

00000000 <op_i32_TruncSat_f32_r_r>:
   0:	006136        	entry	a1, 48
   3:	c168      	l32i.n	a6, a1, 48
   5:	d178      	l32i.n	a7, a1, 52
   7:	06ad      	mov.n	a10, a6
   9:	07bd      	mov.n	a11, a7
   b:	000081        	l32r	a8, fffc000c <op_i32_TruncSat_f32_r_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_r+0x14
			b: R_XTENSA_ASM_EXPAND	__truncdfsf2
   e:	0008e0        	callx8	a8
  11:	fa0a50        	wfr	f0, a10
  14:	1b0000        	un.s	b0, f0, f0
  17:	361076        	bt	b0, 51 <op_i32_TruncSat_f32_r_r+0x51>
			17: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_r_r+0x51
  1a:	000081        	l32r	a8, fffc001c <op_i32_TruncSat_f32_r_r+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_r+0x10
  1d:	fa1850        	wfr	f1, a8
  20:	6b0010        	ole.s	b0, f0, f1
  23:	471076        	bt	b0, 6e <op_i32_TruncSat_f32_r_r+0x6e>
			23: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_r_r+0x6e
  26:	000081        	l32r	a8, fffc0028 <op_i32_TruncSat_f32_r_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_r+0xc
  29:	fa1850        	wfr	f1, a8
  2c:	6b0100        	ole.s	b0, f1, f0
  2f:	451076        	bt	b0, 78 <op_i32_TruncSat_f32_r_r+0x78>
			2f: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_r_r+0x78
  32:	9ae000        	trunc.s	a14, f0, 0
  35:	31ffe0        	srai	a15, a14, 31
  38:	000081        	l32r	a8, fffc0038 <op_i32_TruncSat_f32_r_r+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_r
  3b:	0169      	s32i.n	a6, a1, 0
  3d:	1179      	s32i.n	a7, a1, 4
  3f:	2189      	s32i.n	a8, a1, 8
  41:	04cd      	mov.n	a12, a4
  43:	03bd      	mov.n	a11, a3
  45:	02ad      	mov.n	a10, a2
  47:	000081        	l32r	a8, fffc0048 <op_i32_TruncSat_f32_r_r+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_r+0x18
			47: R_XTENSA_ASM_EXPAND	.text.profileOp
  4a:	0008e0        	callx8	a8
  4d:	0a2d      	mov.n	a2, a10
  4f:	f01d      	retw.n
  51:	000081        	l32r	a8, fffc0054 <op_i32_TruncSat_f32_r_r+0xfffc0054>
			51: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_r
  54:	0e0c      	movi.n	a14, 0
  56:	0efd      	mov.n	a15, a14
  58:	0169      	s32i.n	a6, a1, 0
  5a:	1179      	s32i.n	a7, a1, 4
  5c:	2189      	s32i.n	a8, a1, 8
  5e:	04cd      	mov.n	a12, a4
  60:	03bd      	mov.n	a11, a3
  62:	02ad      	mov.n	a10, a2
  64:	000081        	l32r	a8, fffc0064 <op_i32_TruncSat_f32_r_r+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_r+0x1c
			64: R_XTENSA_ASM_EXPAND	.text.profileOp
  67:	0008e0        	callx8	a8
  6a:	0a2d      	mov.n	a2, a10
  6c:	f01d      	retw.n
  6e:	0000e1        	l32r	a14, fffc0070 <op_i32_TruncSat_f32_r_r+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_r+0x8
  71:	ff7c      	movi.n	a15, -1
  73:	fff046        	j	38 <op_i32_TruncSat_f32_r_r+0x38>
			73: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_r_r+0x38
  76:	00          	.byte	00
  77:	00          	.byte	00
  78:	0000e1        	l32r	a14, fffc0078 <op_i32_TruncSat_f32_r_r+0xfffc0078>
			78: R_XTENSA_SLOT0_OP	.literal.op_i32_TruncSat_f32_r_r+0x4
  7b:	0f0c      	movi.n	a15, 0
  7d:	ffedc6        	j	38 <op_i32_TruncSat_f32_r_r+0x38>
			7d: R_XTENSA_SLOT0_OP	.text.op_i32_TruncSat_f32_r_r+0x38

Disassembly of section .text.op_MemCopy:

00000000 <op_MemCopy>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_MemCopy+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x18
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	04a0c2        	movi	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_MemCopy+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x1c
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0a8d      	mov.n	a8, a10
  24:	4c0c      	movi.n	a12, 4
  26:	02bd      	mov.n	a11, a2
  28:	04ad      	mov.n	a10, a4
  2a:	0858      	l32i.n	a5, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_MemCopy+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x20
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	20a440        	or	a10, a4, a4
  3c:	000081        	l32r	a8, fffc003c <op_MemCopy+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x24
			3c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3f:	0008e0        	callx8	a8
  42:	0ab8      	l32i.n	a11, a10, 0
  44:	06dd      	mov.n	a13, a6
  46:	05cd      	mov.n	a12, a5
  48:	20a440        	or	a10, a4, a4
  4b:	000081        	l32r	a8, fffc004c <op_MemCopy+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x28
			4b: R_XTENSA_ASM_EXPAND	m3_memcpy
  4e:	0008e0        	callx8	a8
  51:	077a16        	beqz	a10, cc <op_MemCopy+0xcc>
			51: R_XTENSA_SLOT0_OP	.text.op_MemCopy+0xcc
  54:	0000a1        	l32r	a10, fffc0054 <op_MemCopy+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x14
  57:	000081        	l32r	a8, fffc0058 <op_MemCopy+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x2c
			57: R_XTENSA_ASM_EXPAND	malloc
  5a:	0008e0        	callx8	a8
  5d:	0a5d      	mov.n	a5, a10
  5f:	000081        	l32r	a8, fffc0060 <op_MemCopy+0xfffc0060>
			5f: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x30
			5f: R_XTENSA_ASM_EXPAND	esp_log_system_timestamp
  62:	0008e0        	callx8	a8
  65:	0000c1        	l32r	a12, fffc0068 <op_MemCopy+0xfffc0068>
			65: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x4
  68:	0000e1        	l32r	a14, fffc0068 <op_MemCopy+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_MemCopy
  6b:	0000b1        	l32r	a11, fffc006c <op_MemCopy+0xfffc006c>
			6b: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x14
  6e:	0add      	mov.n	a13, a10
  70:	20a550        	or	a10, a5, a5
  73:	000081        	l32r	a8, fffc0074 <op_MemCopy+0xfffc0074>
			73: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x34
			73: R_XTENSA_ASM_EXPAND	snprintf
  76:	0008e0        	callx8	a8
  79:	0000a1        	l32r	a10, fffc007c <op_MemCopy+0xfffc007c>
			79: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x8
  7c:	05bd      	mov.n	a11, a5
  7e:	000081        	l32r	a8, fffc0080 <op_MemCopy+0xfffc0080>
			7e: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x38
			7e: R_XTENSA_ASM_EXPAND	safe_printf
  81:	0008e0        	callx8	a8
  84:	05ad      	mov.n	a10, a5
  86:	000081        	l32r	a8, fffc0088 <op_MemCopy+0xfffc0088>
			86: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x3c
			86: R_XTENSA_ASM_EXPAND	free
  89:	0008e0        	callx8	a8
  8c:	0000a1        	l32r	a10, fffc008c <op_MemCopy+0xfffc008c>
			8c: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x14
  8f:	000081        	l32r	a8, fffc0090 <op_MemCopy+0xfffc0090>
			8f: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x40
			8f: R_XTENSA_ASM_EXPAND	malloc
  92:	0008e0        	callx8	a8
  95:	0a5d      	mov.n	a5, a10
  97:	000081        	l32r	a8, fffc0098 <op_MemCopy+0xfffc0098>
			97: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x44
			97: R_XTENSA_ASM_EXPAND	esp_log_system_timestamp
  9a:	0008e0        	callx8	a8
  9d:	0000e1        	l32r	a14, fffc00a0 <op_MemCopy+0xfffc00a0>
			9d: R_XTENSA_SLOT0_OP	.literal.op_MemCopy
  a0:	0000c1        	l32r	a12, fffc00a0 <op_MemCopy+0xfffc00a0>
			a0: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0xc
  a3:	0000b1        	l32r	a11, fffc00a4 <op_MemCopy+0xfffc00a4>
			a3: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x14
  a6:	0add      	mov.n	a13, a10
  a8:	20a550        	or	a10, a5, a5
  ab:	000081        	l32r	a8, fffc00ac <op_MemCopy+0xfffc00ac>
			ab: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x48
			ab: R_XTENSA_ASM_EXPAND	snprintf
  ae:	0008e0        	callx8	a8
  b1:	0000a1        	l32r	a10, fffc00b4 <op_MemCopy+0xfffc00b4>
			b1: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x8
  b4:	05bd      	mov.n	a11, a5
  b6:	000081        	l32r	a8, fffc00b8 <op_MemCopy+0xfffc00b8>
			b6: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x4c
			b6: R_XTENSA_ASM_EXPAND	safe_printf
  b9:	0008e0        	callx8	a8
  bc:	05ad      	mov.n	a10, a5
  be:	000081        	l32r	a8, fffc00c0 <op_MemCopy+0xfffc00c0>
			be: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x50
			be: R_XTENSA_ASM_EXPAND	free
  c1:	0008e0        	callx8	a8
  c4:	5a0c      	movi.n	a10, 5
  c6:	000081        	l32r	a8, fffc00c8 <op_MemCopy+0xfffc00c8>
			c6: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x54
			c6: R_XTENSA_ASM_EXPAND	vTaskDelay
  c9:	0008e0        	callx8	a8
  cc:	c188      	l32i.n	a8, a1, 48
  ce:	d198      	l32i.n	a9, a1, 52
  d0:	0189      	s32i.n	a8, a1, 0
  d2:	000081        	l32r	a8, fffc00d4 <op_MemCopy+0xfffc00d4>
			d2: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x10
  d5:	1199      	s32i.n	a9, a1, 4
  d7:	2189      	s32i.n	a8, a1, 8
  d9:	06ed      	mov.n	a14, a6
  db:	07fd      	mov.n	a15, a7
  dd:	04cd      	mov.n	a12, a4
  df:	03bd      	mov.n	a11, a3
  e1:	02ad      	mov.n	a10, a2
  e3:	000081        	l32r	a8, fffc00e4 <op_MemCopy+0xfffc00e4>
			e3: R_XTENSA_SLOT0_OP	.literal.op_MemCopy+0x58
			e3: R_XTENSA_ASM_EXPAND	.text.profileOp
  e6:	0008e0        	callx8	a8
  e9:	0a2d      	mov.n	a2, a10
  eb:	f01d      	retw.n

Disassembly of section .text.op_Const64:

00000000 <op_Const64>:
   0:	00a136        	entry	a1, 80
   3:	8c0c      	movi.n	a12, 8
   5:	20b220        	or	a11, a2, a2
   8:	04ad      	mov.n	a10, a4
   a:	000081        	l32r	a8, fffc000c <op_Const64+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x20
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	080c      	movi.n	a8, 0
  12:	a189      	s32i.n	a8, a1, 40
  14:	b189      	s32i.n	a8, a1, 44
  16:	000081        	l32r	a8, fffc0018 <op_Const64+0xfffc0018>
			16: R_XTENSA_SLOT0_OP	.literal.op_Const64
  19:	0acd      	mov.n	a12, a10
  1b:	029a87        	bne	a10, a8, 21 <op_Const64+0x21>
			1b: R_XTENSA_SLOT0_OP	.text.op_Const64+0x21
  1e:	002bc6        	j	d1 <op_Const64+0xd1>
			1e: R_XTENSA_SLOT0_OP	.text.op_Const64+0xd1
  21:	8d0c      	movi.n	a13, 8
  23:	28c1b2        	addi	a11, a1, 40
  26:	04ad      	mov.n	a10, a4
  28:	000081        	l32r	a8, fffc0028 <op_Const64+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x24
			28: R_XTENSA_ASM_EXPAND	m3_memcpy
  2b:	0008e0        	callx8	a8
  2e:	228b      	addi.n	a2, a2, 8
  30:	4c0c      	movi.n	a12, 4
  32:	02bd      	mov.n	a11, a2
  34:	04ad      	mov.n	a10, a4
  36:	000081        	l32r	a8, fffc0038 <op_Const64+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x28
			36: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  39:	0008e0        	callx8	a8
  3c:	0a88      	l32i.n	a8, a10, 0
  3e:	8c0c      	movi.n	a12, 8
  40:	a05830        	addx4	a5, a8, a3
  43:	05bd      	mov.n	a11, a5
  45:	04ad      	mov.n	a10, a4
  47:	000081        	l32r	a8, fffc0048 <op_Const64+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x2c
			47: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  4a:	0008e0        	callx8	a8
  4d:	000091        	l32r	a9, fffc0050 <op_Const64+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_Const64
  50:	0a8d      	mov.n	a8, a10
  52:	029a97        	bne	a10, a9, 58 <op_Const64+0x58>
			52: R_XTENSA_SLOT0_OP	.text.op_Const64+0x58
  55:	002e06        	j	111 <op_Const64+0x111>
			55: R_XTENSA_SLOT0_OP	.text.op_Const64+0x111
  58:	2490a0        	extui	a9, a10, 0, 3
  5b:	29fc      	bnez.n	a9, 91 <op_Const64+0x91>
			5b: R_XTENSA_SLOT0_OP	.text.op_Const64+0x91
  5d:	8d0c      	movi.n	a13, 8
  5f:	28c1c2        	addi	a12, a1, 40
  62:	08bd      	mov.n	a11, a8
  64:	20a440        	or	a10, a4, a4
  67:	000081        	l32r	a8, fffc0068 <op_Const64+0xfffc0068>
			67: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x30
			67: R_XTENSA_ASM_EXPAND	m3_memcpy
  6a:	0008e0        	callx8	a8
  6d:	142182        	l32i	a8, a1, 80
  70:	152192        	l32i	a9, a1, 84
  73:	0189      	s32i.n	a8, a1, 0
  75:	000081        	l32r	a8, fffc0078 <op_Const64+0xfffc0078>
			75: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x18
  78:	1199      	s32i.n	a9, a1, 4
  7a:	2189      	s32i.n	a8, a1, 8
  7c:	06ed      	mov.n	a14, a6
  7e:	07fd      	mov.n	a15, a7
  80:	04cd      	mov.n	a12, a4
  82:	03bd      	mov.n	a11, a3
  84:	02ad      	mov.n	a10, a2
  86:	000081        	l32r	a8, fffc0088 <op_Const64+0xfffc0088>
			86: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x34
			86: R_XTENSA_ASM_EXPAND	.text.profileOp
  89:	0008e0        	callx8	a8
  8c:	0a2d      	mov.n	a2, a10
  8e:	f01d      	retw.n
  90:	00          	.byte	00
  91:	0000a1        	l32r	a10, fffc0094 <op_Const64+0xfffc0094>
			91: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x1c
  94:	6189      	s32i.n	a8, a1, 24
  96:	000081        	l32r	a8, fffc0098 <op_Const64+0xfffc0098>
			96: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x38
			96: R_XTENSA_ASM_EXPAND	malloc
  99:	0008e0        	callx8	a8
  9c:	71a9      	s32i.n	a10, a1, 28
  9e:	000081        	l32r	a8, fffc00a0 <op_Const64+0xfffc00a0>
			9e: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x3c
			9e: R_XTENSA_ASM_EXPAND	esp_log_system_timestamp
  a1:	0008e0        	callx8	a8
  a4:	0add      	mov.n	a13, a10
  a6:	0000e1        	l32r	a14, fffc00a8 <op_Const64+0xfffc00a8>
			a6: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x4
  a9:	0000c1        	l32r	a12, fffc00ac <op_Const64+0xfffc00ac>
			a9: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x14
  ac:	0000b1        	l32r	a11, fffc00ac <op_Const64+0xfffc00ac>
			ac: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x1c
  af:	71a8      	l32i.n	a10, a1, 28
  b1:	05fd      	mov.n	a15, a5
  b3:	000081        	l32r	a8, fffc00b4 <op_Const64+0xfffc00b4>
			b3: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x40
			b3: R_XTENSA_ASM_EXPAND	snprintf
  b6:	0008e0        	callx8	a8
  b9:	71b8      	l32i.n	a11, a1, 28
  bb:	0000a1        	l32r	a10, fffc00bc <op_Const64+0xfffc00bc>
			bb: R_XTENSA_SLOT0_OP	.literal.op_Const64+0xc
  be:	000081        	l32r	a8, fffc00c0 <op_Const64+0xfffc00c0>
			be: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x44
			be: R_XTENSA_ASM_EXPAND	safe_printf
  c1:	0008e0        	callx8	a8
  c4:	71a8      	l32i.n	a10, a1, 28
  c6:	000081        	l32r	a8, fffc00c8 <op_Const64+0xfffc00c8>
			c6: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x48
			c6: R_XTENSA_ASM_EXPAND	free
  c9:	0008e0        	callx8	a8
  cc:	6188      	l32i.n	a8, a1, 24
  ce:	ffe2c6        	j	5d <op_Const64+0x5d>
			ce: R_XTENSA_SLOT0_OP	.text.op_Const64+0x5d
  d1:	0000a1        	l32r	a10, fffc00d4 <op_Const64+0xfffc00d4>
			d1: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x1c
  d4:	000081        	l32r	a8, fffc00d4 <op_Const64+0xfffc00d4>
			d4: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x4c
			d4: R_XTENSA_ASM_EXPAND	malloc
  d7:	0008e0        	callx8	a8
  da:	0a5d      	mov.n	a5, a10
  dc:	000081        	l32r	a8, fffc00dc <op_Const64+0xfffc00dc>
			dc: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x50
			dc: R_XTENSA_ASM_EXPAND	esp_log_system_timestamp
  df:	0008e0        	callx8	a8
  e2:	0000e1        	l32r	a14, fffc00e4 <op_Const64+0xfffc00e4>
			e2: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x4
  e5:	0000c1        	l32r	a12, fffc00e8 <op_Const64+0xfffc00e8>
			e5: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x8
  e8:	0000b1        	l32r	a11, fffc00e8 <op_Const64+0xfffc00e8>
			e8: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x1c
  eb:	0add      	mov.n	a13, a10
  ed:	20f220        	or	a15, a2, a2
  f0:	20a550        	or	a10, a5, a5
  f3:	000081        	l32r	a8, fffc00f4 <op_Const64+0xfffc00f4>
			f3: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x54
			f3: R_XTENSA_ASM_EXPAND	snprintf
  f6:	0008e0        	callx8	a8
  f9:	0000a1        	l32r	a10, fffc00fc <op_Const64+0xfffc00fc>
			f9: R_XTENSA_SLOT0_OP	.literal.op_Const64+0xc
  fc:	05bd      	mov.n	a11, a5
  fe:	000081        	l32r	a8, fffc0100 <op_Const64+0xfffc0100>
			fe: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x58
			fe: R_XTENSA_ASM_EXPAND	safe_printf
 101:	0008e0        	callx8	a8
 104:	05ad      	mov.n	a10, a5
 106:	000081        	l32r	a8, fffc0108 <op_Const64+0xfffc0108>
			106: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x5c
			106: R_XTENSA_ASM_EXPAND	free
 109:	0008e0        	callx8	a8
 10c:	ffc786        	j	2e <op_Const64+0x2e>
			10c: R_XTENSA_SLOT0_OP	.text.op_Const64+0x2e
 10f:	00          	.byte	00
 110:	00          	.byte	00
 111:	0000a1        	l32r	a10, fffc0114 <op_Const64+0xfffc0114>
			111: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x1c
 114:	000081        	l32r	a8, fffc0114 <op_Const64+0xfffc0114>
			114: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x60
			114: R_XTENSA_ASM_EXPAND	malloc
 117:	0008e0        	callx8	a8
 11a:	0a7d      	mov.n	a7, a10
 11c:	000081        	l32r	a8, fffc011c <op_Const64+0xfffc011c>
			11c: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x64
			11c: R_XTENSA_ASM_EXPAND	esp_log_system_timestamp
 11f:	0008e0        	callx8	a8
 122:	0a6d      	mov.n	a6, a10
 124:	02bd      	mov.n	a11, a2
 126:	04a0c2        	movi	a12, 4
 129:	04ad      	mov.n	a10, a4
 12b:	000081        	l32r	a8, fffc012c <op_Const64+0xfffc012c>
			12b: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x68
			12b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
 12e:	0008e0        	callx8	a8
 131:	0a88      	l32i.n	a8, a10, 0
 133:	0000e1        	l32r	a14, fffc0134 <op_Const64+0xfffc0134>
			133: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x4
 136:	0000c1        	l32r	a12, fffc0138 <op_Const64+0xfffc0138>
			136: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x10
 139:	0000b1        	l32r	a11, fffc013c <op_Const64+0xfffc013c>
			139: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x1c
 13c:	0189      	s32i.n	a8, a1, 0
 13e:	20f330        	or	a15, a3, a3
 141:	20d660        	or	a13, a6, a6
 144:	20a770        	or	a10, a7, a7
 147:	000081        	l32r	a8, fffc0148 <op_Const64+0xfffc0148>
			147: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x6c
			147: R_XTENSA_ASM_EXPAND	snprintf
 14a:	0008e0        	callx8	a8
 14d:	0000a1        	l32r	a10, fffc0150 <op_Const64+0xfffc0150>
			14d: R_XTENSA_SLOT0_OP	.literal.op_Const64+0xc
 150:	07bd      	mov.n	a11, a7
 152:	000081        	l32r	a8, fffc0154 <op_Const64+0xfffc0154>
			152: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x70
			152: R_XTENSA_ASM_EXPAND	safe_printf
 155:	0008e0        	callx8	a8
 158:	07ad      	mov.n	a10, a7
 15a:	000081        	l32r	a8, fffc015c <op_Const64+0xfffc015c>
			15a: R_XTENSA_SLOT0_OP	.literal.op_Const64+0x74
			15a: R_XTENSA_ASM_EXPAND	free
 15d:	0008e0        	callx8	a8
 160:	020c      	movi.n	a2, 0
 162:	f01d      	retw.n

Disassembly of section .text.op_i64_Store_i32_ss:

00000000 <op_i64_Store_i32_ss>:
   0:	00a136        	entry	a1, 80
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Store_i32_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Store_i32_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002852        	l32i	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i64_Store_i32_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_i64_Store_i32_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a8d      	mov.n	a8, a10
  42:	0888      	l32i.n	a8, a8, 0
  44:	02bd      	mov.n	a11, a2
  46:	7189      	s32i.n	a8, a1, 28
  48:	4c0c      	movi.n	a12, 4
  4a:	04ad      	mov.n	a10, a4
  4c:	000081        	l32r	a8, fffc004c <op_i64_Store_i32_ss+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_ss+0x14
			4c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  4f:	0008e0        	callx8	a8
  52:	0ab8      	l32i.n	a11, a10, 0
  54:	7188      	l32i.n	a8, a1, 28
  56:	4d0c      	movi.n	a13, 4
  58:	2cc1c2        	addi	a12, a1, 44
  5b:	b8ba      	add.n	a11, a8, a11
  5d:	04ad      	mov.n	a10, a4
  5f:	0b6152        	s32i	a5, a1, 44
  62:	000081        	l32r	a8, fffc0064 <op_i64_Store_i32_ss+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_ss+0x18
			62: R_XTENSA_ASM_EXPAND	m3_memcpy
  65:	0008e0        	callx8	a8
  68:	142182        	l32i	a8, a1, 80
  6b:	152192        	l32i	a9, a1, 84
  6e:	0189      	s32i.n	a8, a1, 0
  70:	000081        	l32r	a8, fffc0070 <op_i64_Store_i32_ss+0xfffc0070>
			70: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_ss
  73:	1199      	s32i.n	a9, a1, 4
  75:	2189      	s32i.n	a8, a1, 8
  77:	06ed      	mov.n	a14, a6
  79:	07fd      	mov.n	a15, a7
  7b:	04cd      	mov.n	a12, a4
  7d:	03bd      	mov.n	a11, a3
  7f:	20a220        	or	a10, a2, a2
  82:	000081        	l32r	a8, fffc0084 <op_i64_Store_i32_ss+0xfffc0084>
			82: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_ss+0x1c
			82: R_XTENSA_ASM_EXPAND	.text.profileOp
  85:	0008e0        	callx8	a8
  88:	0a2d      	mov.n	a2, a10
  8a:	f01d      	retw.n

Disassembly of section .text.op_i64_Store_i32_sr:

00000000 <op_i64_Store_i32_sr>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Store_i32_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i64_Store_i32_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	0858      	l32i.n	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i64_Store_i32_sr+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_sr+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4d0c      	movi.n	a13, 4
  35:	1cc1c2        	addi	a12, a1, 28
  38:	bb6a      	add.n	a11, a11, a6
  3a:	04ad      	mov.n	a10, a4
  3c:	076152        	s32i	a5, a1, 28
  3f:	000081        	l32r	a8, fffc0040 <op_i64_Store_i32_sr+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_sr+0x10
			3f: R_XTENSA_ASM_EXPAND	m3_memcpy
  42:	0008e0        	callx8	a8
  45:	102182        	l32i	a8, a1, 64
  48:	112192        	l32i	a9, a1, 68
  4b:	0189      	s32i.n	a8, a1, 0
  4d:	000081        	l32r	a8, fffc0050 <op_i64_Store_i32_sr+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_sr
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i64_Store_i32_sr+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_sr+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i64_Store_i32_rs:

00000000 <op_i64_Store_i32_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Store_i32_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i64_Store_i32_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	0858      	l32i.n	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i64_Store_i32_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_rs+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4d0c      	movi.n	a13, 4
  35:	1cc1c2        	addi	a12, a1, 28
  38:	b5ba      	add.n	a11, a5, a11
  3a:	04ad      	mov.n	a10, a4
  3c:	076162        	s32i	a6, a1, 28
  3f:	000081        	l32r	a8, fffc0040 <op_i64_Store_i32_rs+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_rs+0x10
			3f: R_XTENSA_ASM_EXPAND	m3_memcpy
  42:	0008e0        	callx8	a8
  45:	102182        	l32i	a8, a1, 64
  48:	112192        	l32i	a9, a1, 68
  4b:	0189      	s32i.n	a8, a1, 0
  4d:	000081        	l32r	a8, fffc0050 <op_i64_Store_i32_rs+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_rs
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i64_Store_i32_rs+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i32_rs+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i64_Store_i16_ss:

00000000 <op_i64_Store_i16_ss>:
   0:	00a136        	entry	a1, 80
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Store_i16_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Store_i16_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002852        	l32i	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i64_Store_i16_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_i64_Store_i16_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a8d      	mov.n	a8, a10
  42:	0888      	l32i.n	a8, a8, 0
  44:	02bd      	mov.n	a11, a2
  46:	7189      	s32i.n	a8, a1, 28
  48:	4c0c      	movi.n	a12, 4
  4a:	04ad      	mov.n	a10, a4
  4c:	000081        	l32r	a8, fffc004c <op_i64_Store_i16_ss+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_ss+0x14
			4c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  4f:	0008e0        	callx8	a8
  52:	7188      	l32i.n	a8, a1, 28
  54:	0ab8      	l32i.n	a11, a10, 0
  56:	2d0c      	movi.n	a13, 2
  58:	2ec1c2        	addi	a12, a1, 46
  5b:	b8ba      	add.n	a11, a8, a11
  5d:	20a440        	or	a10, a4, a4
  60:	175152        	s16i	a5, a1, 46
  63:	000081        	l32r	a8, fffc0064 <op_i64_Store_i16_ss+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_ss+0x18
			63: R_XTENSA_ASM_EXPAND	m3_memcpy
  66:	0008e0        	callx8	a8
  69:	142182        	l32i	a8, a1, 80
  6c:	152192        	l32i	a9, a1, 84
  6f:	0189      	s32i.n	a8, a1, 0
  71:	000081        	l32r	a8, fffc0074 <op_i64_Store_i16_ss+0xfffc0074>
			71: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_ss
  74:	1199      	s32i.n	a9, a1, 4
  76:	2189      	s32i.n	a8, a1, 8
  78:	06ed      	mov.n	a14, a6
  7a:	07fd      	mov.n	a15, a7
  7c:	04cd      	mov.n	a12, a4
  7e:	03bd      	mov.n	a11, a3
  80:	02ad      	mov.n	a10, a2
  82:	000081        	l32r	a8, fffc0084 <op_i64_Store_i16_ss+0xfffc0084>
			82: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_ss+0x1c
			82: R_XTENSA_ASM_EXPAND	.text.profileOp
  85:	0008e0        	callx8	a8
  88:	0a2d      	mov.n	a2, a10
  8a:	f01d      	retw.n

Disassembly of section .text.op_i64_Store_i16_sr:

00000000 <op_i64_Store_i16_sr>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Store_i16_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i64_Store_i16_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	0858      	l32i.n	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i64_Store_i16_sr+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_sr+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	2d0c      	movi.n	a13, 2
  35:	1ec1c2        	addi	a12, a1, 30
  38:	bb6a      	add.n	a11, a11, a6
  3a:	04ad      	mov.n	a10, a4
  3c:	0f5152        	s16i	a5, a1, 30
  3f:	000081        	l32r	a8, fffc0040 <op_i64_Store_i16_sr+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_sr+0x10
			3f: R_XTENSA_ASM_EXPAND	m3_memcpy
  42:	0008e0        	callx8	a8
  45:	102182        	l32i	a8, a1, 64
  48:	112192        	l32i	a9, a1, 68
  4b:	0189      	s32i.n	a8, a1, 0
  4d:	000081        	l32r	a8, fffc0050 <op_i64_Store_i16_sr+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_sr
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i64_Store_i16_sr+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_sr+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i64_Store_i16_rs:

00000000 <op_i64_Store_i16_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Store_i16_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i64_Store_i16_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	0858      	l32i.n	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i64_Store_i16_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_rs+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	2d0c      	movi.n	a13, 2
  35:	1ec1c2        	addi	a12, a1, 30
  38:	b5ba      	add.n	a11, a5, a11
  3a:	04ad      	mov.n	a10, a4
  3c:	0f5162        	s16i	a6, a1, 30
  3f:	000081        	l32r	a8, fffc0040 <op_i64_Store_i16_rs+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_rs+0x10
			3f: R_XTENSA_ASM_EXPAND	m3_memcpy
  42:	0008e0        	callx8	a8
  45:	102182        	l32i	a8, a1, 64
  48:	112192        	l32i	a9, a1, 68
  4b:	0189      	s32i.n	a8, a1, 0
  4d:	000081        	l32r	a8, fffc0050 <op_i64_Store_i16_rs+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_rs
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i64_Store_i16_rs+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i16_rs+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i64_Store_u8_ss:

00000000 <op_i64_Store_u8_ss>:
   0:	00a136        	entry	a1, 80
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Store_u8_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Store_u8_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002852        	l32i	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i64_Store_u8_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_i64_Store_u8_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a8d      	mov.n	a8, a10
  42:	0888      	l32i.n	a8, a8, 0
  44:	02bd      	mov.n	a11, a2
  46:	7189      	s32i.n	a8, a1, 28
  48:	4c0c      	movi.n	a12, 4
  4a:	04ad      	mov.n	a10, a4
  4c:	000081        	l32r	a8, fffc004c <op_i64_Store_u8_ss+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_ss+0x14
			4c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  4f:	0008e0        	callx8	a8
  52:	7188      	l32i.n	a8, a1, 28
  54:	0ab8      	l32i.n	a11, a10, 0
  56:	1d0c      	movi.n	a13, 1
  58:	2fc1c2        	addi	a12, a1, 47
  5b:	b8ba      	add.n	a11, a8, a11
  5d:	20a440        	or	a10, a4, a4
  60:	2f4152        	s8i	a5, a1, 47
  63:	000081        	l32r	a8, fffc0064 <op_i64_Store_u8_ss+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_ss+0x18
			63: R_XTENSA_ASM_EXPAND	m3_memcpy
  66:	0008e0        	callx8	a8
  69:	142182        	l32i	a8, a1, 80
  6c:	152192        	l32i	a9, a1, 84
  6f:	0189      	s32i.n	a8, a1, 0
  71:	000081        	l32r	a8, fffc0074 <op_i64_Store_u8_ss+0xfffc0074>
			71: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_ss
  74:	1199      	s32i.n	a9, a1, 4
  76:	2189      	s32i.n	a8, a1, 8
  78:	06ed      	mov.n	a14, a6
  7a:	07fd      	mov.n	a15, a7
  7c:	04cd      	mov.n	a12, a4
  7e:	03bd      	mov.n	a11, a3
  80:	02ad      	mov.n	a10, a2
  82:	000081        	l32r	a8, fffc0084 <op_i64_Store_u8_ss+0xfffc0084>
			82: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_ss+0x1c
			82: R_XTENSA_ASM_EXPAND	.text.profileOp
  85:	0008e0        	callx8	a8
  88:	0a2d      	mov.n	a2, a10
  8a:	f01d      	retw.n

Disassembly of section .text.op_i64_Store_u8_sr:

00000000 <op_i64_Store_u8_sr>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Store_u8_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i64_Store_u8_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	0858      	l32i.n	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i64_Store_u8_sr+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_sr+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	1d0c      	movi.n	a13, 1
  35:	1fc1c2        	addi	a12, a1, 31
  38:	bb6a      	add.n	a11, a11, a6
  3a:	04ad      	mov.n	a10, a4
  3c:	1f4152        	s8i	a5, a1, 31
  3f:	000081        	l32r	a8, fffc0040 <op_i64_Store_u8_sr+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_sr+0x10
			3f: R_XTENSA_ASM_EXPAND	m3_memcpy
  42:	0008e0        	callx8	a8
  45:	102182        	l32i	a8, a1, 64
  48:	112192        	l32i	a9, a1, 68
  4b:	0189      	s32i.n	a8, a1, 0
  4d:	000081        	l32r	a8, fffc0050 <op_i64_Store_u8_sr+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_sr
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i64_Store_u8_sr+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_sr+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i64_Store_u8_rs:

00000000 <op_i64_Store_u8_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Store_u8_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i64_Store_u8_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	0858      	l32i.n	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i64_Store_u8_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_rs+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	1d0c      	movi.n	a13, 1
  35:	1fc1c2        	addi	a12, a1, 31
  38:	b5ba      	add.n	a11, a5, a11
  3a:	04ad      	mov.n	a10, a4
  3c:	1f4162        	s8i	a6, a1, 31
  3f:	000081        	l32r	a8, fffc0040 <op_i64_Store_u8_rs+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_rs+0x10
			3f: R_XTENSA_ASM_EXPAND	m3_memcpy
  42:	0008e0        	callx8	a8
  45:	102182        	l32i	a8, a1, 64
  48:	112192        	l32i	a9, a1, 68
  4b:	0189      	s32i.n	a8, a1, 0
  4d:	000081        	l32r	a8, fffc0050 <op_i64_Store_u8_rs+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_rs
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i64_Store_u8_rs+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_u8_rs+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i32_Store_i16_ss:

00000000 <op_i32_Store_i16_ss>:
   0:	00a136        	entry	a1, 80
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Store_i16_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Store_i16_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002852        	l32i	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_Store_i16_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_i32_Store_i16_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a8d      	mov.n	a8, a10
  42:	0888      	l32i.n	a8, a8, 0
  44:	02bd      	mov.n	a11, a2
  46:	7189      	s32i.n	a8, a1, 28
  48:	4c0c      	movi.n	a12, 4
  4a:	04ad      	mov.n	a10, a4
  4c:	000081        	l32r	a8, fffc004c <op_i32_Store_i16_ss+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_ss+0x14
			4c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  4f:	0008e0        	callx8	a8
  52:	7188      	l32i.n	a8, a1, 28
  54:	0ab8      	l32i.n	a11, a10, 0
  56:	2d0c      	movi.n	a13, 2
  58:	2ec1c2        	addi	a12, a1, 46
  5b:	b8ba      	add.n	a11, a8, a11
  5d:	20a440        	or	a10, a4, a4
  60:	175152        	s16i	a5, a1, 46
  63:	000081        	l32r	a8, fffc0064 <op_i32_Store_i16_ss+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_ss+0x18
			63: R_XTENSA_ASM_EXPAND	m3_memcpy
  66:	0008e0        	callx8	a8
  69:	142182        	l32i	a8, a1, 80
  6c:	152192        	l32i	a9, a1, 84
  6f:	0189      	s32i.n	a8, a1, 0
  71:	000081        	l32r	a8, fffc0074 <op_i32_Store_i16_ss+0xfffc0074>
			71: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_ss
  74:	1199      	s32i.n	a9, a1, 4
  76:	2189      	s32i.n	a8, a1, 8
  78:	06ed      	mov.n	a14, a6
  7a:	07fd      	mov.n	a15, a7
  7c:	04cd      	mov.n	a12, a4
  7e:	03bd      	mov.n	a11, a3
  80:	02ad      	mov.n	a10, a2
  82:	000081        	l32r	a8, fffc0084 <op_i32_Store_i16_ss+0xfffc0084>
			82: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_ss+0x1c
			82: R_XTENSA_ASM_EXPAND	.text.profileOp
  85:	0008e0        	callx8	a8
  88:	0a2d      	mov.n	a2, a10
  8a:	f01d      	retw.n

Disassembly of section .text.op_i32_Store_i16_sr:

00000000 <op_i32_Store_i16_sr>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Store_i16_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Store_i16_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	0858      	l32i.n	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_Store_i16_sr+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_sr+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	2d0c      	movi.n	a13, 2
  35:	1ec1c2        	addi	a12, a1, 30
  38:	bb6a      	add.n	a11, a11, a6
  3a:	04ad      	mov.n	a10, a4
  3c:	0f5152        	s16i	a5, a1, 30
  3f:	000081        	l32r	a8, fffc0040 <op_i32_Store_i16_sr+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_sr+0x10
			3f: R_XTENSA_ASM_EXPAND	m3_memcpy
  42:	0008e0        	callx8	a8
  45:	102182        	l32i	a8, a1, 64
  48:	112192        	l32i	a9, a1, 68
  4b:	0189      	s32i.n	a8, a1, 0
  4d:	000081        	l32r	a8, fffc0050 <op_i32_Store_i16_sr+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_sr
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i32_Store_i16_sr+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_sr+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i32_Store_i16_rs:

00000000 <op_i32_Store_i16_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Store_i16_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Store_i16_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	0858      	l32i.n	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_Store_i16_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_rs+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	2d0c      	movi.n	a13, 2
  35:	1ec1c2        	addi	a12, a1, 30
  38:	b5ba      	add.n	a11, a5, a11
  3a:	04ad      	mov.n	a10, a4
  3c:	0f5162        	s16i	a6, a1, 30
  3f:	000081        	l32r	a8, fffc0040 <op_i32_Store_i16_rs+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_rs+0x10
			3f: R_XTENSA_ASM_EXPAND	m3_memcpy
  42:	0008e0        	callx8	a8
  45:	102182        	l32i	a8, a1, 64
  48:	112192        	l32i	a9, a1, 68
  4b:	0189      	s32i.n	a8, a1, 0
  4d:	000081        	l32r	a8, fffc0050 <op_i32_Store_i16_rs+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_rs
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i32_Store_i16_rs+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i16_rs+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i32_Store_u8_ss:

00000000 <op_i32_Store_u8_ss>:
   0:	00a136        	entry	a1, 80
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Store_u8_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Store_u8_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002852        	l32i	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_Store_u8_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_i32_Store_u8_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a8d      	mov.n	a8, a10
  42:	0888      	l32i.n	a8, a8, 0
  44:	02bd      	mov.n	a11, a2
  46:	7189      	s32i.n	a8, a1, 28
  48:	4c0c      	movi.n	a12, 4
  4a:	04ad      	mov.n	a10, a4
  4c:	000081        	l32r	a8, fffc004c <op_i32_Store_u8_ss+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_ss+0x14
			4c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  4f:	0008e0        	callx8	a8
  52:	7188      	l32i.n	a8, a1, 28
  54:	0ab8      	l32i.n	a11, a10, 0
  56:	1d0c      	movi.n	a13, 1
  58:	2fc1c2        	addi	a12, a1, 47
  5b:	b8ba      	add.n	a11, a8, a11
  5d:	20a440        	or	a10, a4, a4
  60:	2f4152        	s8i	a5, a1, 47
  63:	000081        	l32r	a8, fffc0064 <op_i32_Store_u8_ss+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_ss+0x18
			63: R_XTENSA_ASM_EXPAND	m3_memcpy
  66:	0008e0        	callx8	a8
  69:	142182        	l32i	a8, a1, 80
  6c:	152192        	l32i	a9, a1, 84
  6f:	0189      	s32i.n	a8, a1, 0
  71:	000081        	l32r	a8, fffc0074 <op_i32_Store_u8_ss+0xfffc0074>
			71: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_ss
  74:	1199      	s32i.n	a9, a1, 4
  76:	2189      	s32i.n	a8, a1, 8
  78:	06ed      	mov.n	a14, a6
  7a:	07fd      	mov.n	a15, a7
  7c:	04cd      	mov.n	a12, a4
  7e:	03bd      	mov.n	a11, a3
  80:	02ad      	mov.n	a10, a2
  82:	000081        	l32r	a8, fffc0084 <op_i32_Store_u8_ss+0xfffc0084>
			82: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_ss+0x1c
			82: R_XTENSA_ASM_EXPAND	.text.profileOp
  85:	0008e0        	callx8	a8
  88:	0a2d      	mov.n	a2, a10
  8a:	f01d      	retw.n

Disassembly of section .text.op_i32_Store_u8_sr:

00000000 <op_i32_Store_u8_sr>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Store_u8_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Store_u8_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	0858      	l32i.n	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_Store_u8_sr+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_sr+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	1d0c      	movi.n	a13, 1
  35:	1fc1c2        	addi	a12, a1, 31
  38:	bb6a      	add.n	a11, a11, a6
  3a:	04ad      	mov.n	a10, a4
  3c:	1f4152        	s8i	a5, a1, 31
  3f:	000081        	l32r	a8, fffc0040 <op_i32_Store_u8_sr+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_sr+0x10
			3f: R_XTENSA_ASM_EXPAND	m3_memcpy
  42:	0008e0        	callx8	a8
  45:	102182        	l32i	a8, a1, 64
  48:	112192        	l32i	a9, a1, 68
  4b:	0189      	s32i.n	a8, a1, 0
  4d:	000081        	l32r	a8, fffc0050 <op_i32_Store_u8_sr+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_sr
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i32_Store_u8_sr+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_sr+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i32_Store_u8_rs:

00000000 <op_i32_Store_u8_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Store_u8_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Store_u8_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	0858      	l32i.n	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_Store_u8_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_rs+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	1d0c      	movi.n	a13, 1
  35:	1fc1c2        	addi	a12, a1, 31
  38:	b5ba      	add.n	a11, a5, a11
  3a:	04ad      	mov.n	a10, a4
  3c:	1f4162        	s8i	a6, a1, 31
  3f:	000081        	l32r	a8, fffc0040 <op_i32_Store_u8_rs+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_rs+0x10
			3f: R_XTENSA_ASM_EXPAND	m3_memcpy
  42:	0008e0        	callx8	a8
  45:	102182        	l32i	a8, a1, 64
  48:	112192        	l32i	a9, a1, 68
  4b:	0189      	s32i.n	a8, a1, 0
  4d:	000081        	l32r	a8, fffc0050 <op_i32_Store_u8_rs+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_rs
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i32_Store_u8_rs+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_u8_rs+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_f64_Store_f64_rr:

00000000 <op_f64_Store_f64_rr>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_f64_Store_f64_rr+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_rr+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	0ab8      	l32i.n	a11, a10, 0
  12:	102182        	l32i	a8, a1, 64
  15:	112192        	l32i	a9, a1, 68
  18:	8d0c      	movi.n	a13, 8
  1a:	18c1c2        	addi	a12, a1, 24
  1d:	bb6a      	add.n	a11, a11, a6
  1f:	04ad      	mov.n	a10, a4
  21:	6189      	s32i.n	a8, a1, 24
  23:	076192        	s32i	a9, a1, 28
  26:	000081        	l32r	a8, fffc0028 <op_f64_Store_f64_rr+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_rr+0x8
			26: R_XTENSA_ASM_EXPAND	m3_memcpy
  29:	0008e0        	callx8	a8
  2c:	102182        	l32i	a8, a1, 64
  2f:	112192        	l32i	a9, a1, 68
  32:	0189      	s32i.n	a8, a1, 0
  34:	000081        	l32r	a8, fffc0034 <op_f64_Store_f64_rr+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_rr
  37:	1199      	s32i.n	a9, a1, 4
  39:	2189      	s32i.n	a8, a1, 8
  3b:	06ed      	mov.n	a14, a6
  3d:	07fd      	mov.n	a15, a7
  3f:	04cd      	mov.n	a12, a4
  41:	03bd      	mov.n	a11, a3
  43:	20a220        	or	a10, a2, a2
  46:	000081        	l32r	a8, fffc0048 <op_f64_Store_f64_rr+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_rr+0xc
			46: R_XTENSA_ASM_EXPAND	.text.profileOp
  49:	0008e0        	callx8	a8
  4c:	0a2d      	mov.n	a2, a10
  4e:	f01d      	retw.n

Disassembly of section .text.op_f64_Store_f64_ss:

00000000 <op_f64_Store_f64_ss>:
   0:	00a136        	entry	a1, 80
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Store_f64_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Store_f64_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	1898      	l32i.n	a9, a8, 4
  24:	0888      	l32i.n	a8, a8, 0
  26:	02bd      	mov.n	a11, a2
  28:	7189      	s32i.n	a8, a1, 28
  2a:	6199      	s32i.n	a9, a1, 24
  2c:	4c0c      	movi.n	a12, 4
  2e:	04ad      	mov.n	a10, a4
  30:	000081        	l32r	a8, fffc0030 <op_f64_Store_f64_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	20a440        	or	a10, a4, a4
  40:	000081        	l32r	a8, fffc0040 <op_f64_Store_f64_ss+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_ss+0x10
			40: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  43:	0008e0        	callx8	a8
  46:	0add      	mov.n	a13, a10
  48:	02bd      	mov.n	a11, a2
  4a:	4c0c      	movi.n	a12, 4
  4c:	04ad      	mov.n	a10, a4
  4e:	0d58      	l32i.n	a5, a13, 0
  50:	000081        	l32r	a8, fffc0050 <op_f64_Store_f64_ss+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_ss+0x14
			50: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  53:	0008e0        	callx8	a8
  56:	0ab8      	l32i.n	a11, a10, 0
  58:	7188      	l32i.n	a8, a1, 28
  5a:	6198      	l32i.n	a9, a1, 24
  5c:	8d0c      	movi.n	a13, 8
  5e:	28c1c2        	addi	a12, a1, 40
  61:	b5ba      	add.n	a11, a5, a11
  63:	04ad      	mov.n	a10, a4
  65:	a189      	s32i.n	a8, a1, 40
  67:	0b6192        	s32i	a9, a1, 44
  6a:	000081        	l32r	a8, fffc006c <op_f64_Store_f64_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_ss+0x18
			6a: R_XTENSA_ASM_EXPAND	m3_memcpy
  6d:	0008e0        	callx8	a8
  70:	142182        	l32i	a8, a1, 80
  73:	152192        	l32i	a9, a1, 84
  76:	0189      	s32i.n	a8, a1, 0
  78:	000081        	l32r	a8, fffc0078 <op_f64_Store_f64_ss+0xfffc0078>
			78: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_ss
  7b:	1199      	s32i.n	a9, a1, 4
  7d:	2189      	s32i.n	a8, a1, 8
  7f:	06ed      	mov.n	a14, a6
  81:	07fd      	mov.n	a15, a7
  83:	04cd      	mov.n	a12, a4
  85:	03bd      	mov.n	a11, a3
  87:	20a220        	or	a10, a2, a2
  8a:	000081        	l32r	a8, fffc008c <op_f64_Store_f64_ss+0xfffc008c>
			8a: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_ss+0x1c
			8a: R_XTENSA_ASM_EXPAND	.text.profileOp
  8d:	0008e0        	callx8	a8
  90:	0a2d      	mov.n	a2, a10
  92:	f01d      	retw.n

Disassembly of section .text.op_f64_Store_f64_sr:

00000000 <op_f64_Store_f64_sr>:
   0:	00a136        	entry	a1, 80
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Store_f64_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Store_f64_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	1898      	l32i.n	a9, a8, 4
  24:	0888      	l32i.n	a8, a8, 0
  26:	02bd      	mov.n	a11, a2
  28:	7189      	s32i.n	a8, a1, 28
  2a:	6199      	s32i.n	a9, a1, 24
  2c:	4c0c      	movi.n	a12, 4
  2e:	04ad      	mov.n	a10, a4
  30:	000081        	l32r	a8, fffc0030 <op_f64_Store_f64_sr+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_sr+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	7188      	l32i.n	a8, a1, 28
  3a:	6198      	l32i.n	a9, a1, 24
  3c:	8d0c      	movi.n	a13, 8
  3e:	28c1c2        	addi	a12, a1, 40
  41:	bb6a      	add.n	a11, a11, a6
  43:	04ad      	mov.n	a10, a4
  45:	a189      	s32i.n	a8, a1, 40
  47:	0b6192        	s32i	a9, a1, 44
  4a:	000081        	l32r	a8, fffc004c <op_f64_Store_f64_sr+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_sr+0x10
			4a: R_XTENSA_ASM_EXPAND	m3_memcpy
  4d:	0008e0        	callx8	a8
  50:	142182        	l32i	a8, a1, 80
  53:	152192        	l32i	a9, a1, 84
  56:	0189      	s32i.n	a8, a1, 0
  58:	000081        	l32r	a8, fffc0058 <op_f64_Store_f64_sr+0xfffc0058>
			58: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_sr
  5b:	1199      	s32i.n	a9, a1, 4
  5d:	2189      	s32i.n	a8, a1, 8
  5f:	06ed      	mov.n	a14, a6
  61:	07fd      	mov.n	a15, a7
  63:	04cd      	mov.n	a12, a4
  65:	03bd      	mov.n	a11, a3
  67:	20a220        	or	a10, a2, a2
  6a:	000081        	l32r	a8, fffc006c <op_f64_Store_f64_sr+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_sr+0x14
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_f64_Store_f64_rs:

00000000 <op_f64_Store_f64_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Store_f64_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f64_Store_f64_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	0858      	l32i.n	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_f64_Store_f64_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_rs+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	102182        	l32i	a8, a1, 64
  36:	112192        	l32i	a9, a1, 68
  39:	8d0c      	movi.n	a13, 8
  3b:	18c1c2        	addi	a12, a1, 24
  3e:	b5ba      	add.n	a11, a5, a11
  40:	04ad      	mov.n	a10, a4
  42:	6189      	s32i.n	a8, a1, 24
  44:	076192        	s32i	a9, a1, 28
  47:	000081        	l32r	a8, fffc0048 <op_f64_Store_f64_rs+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_rs+0x10
			47: R_XTENSA_ASM_EXPAND	m3_memcpy
  4a:	0008e0        	callx8	a8
  4d:	102182        	l32i	a8, a1, 64
  50:	112192        	l32i	a9, a1, 68
  53:	0189      	s32i.n	a8, a1, 0
  55:	000081        	l32r	a8, fffc0058 <op_f64_Store_f64_rs+0xfffc0058>
			55: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_rs
  58:	1199      	s32i.n	a9, a1, 4
  5a:	2189      	s32i.n	a8, a1, 8
  5c:	06ed      	mov.n	a14, a6
  5e:	07fd      	mov.n	a15, a7
  60:	04cd      	mov.n	a12, a4
  62:	03bd      	mov.n	a11, a3
  64:	02ad      	mov.n	a10, a2
  66:	000081        	l32r	a8, fffc0068 <op_f64_Store_f64_rs+0xfffc0068>
			66: R_XTENSA_SLOT0_OP	.literal.op_f64_Store_f64_rs+0x14
			66: R_XTENSA_ASM_EXPAND	.text.profileOp
  69:	0008e0        	callx8	a8
  6c:	0a2d      	mov.n	a2, a10
  6e:	f01d      	retw.n

Disassembly of section .text.op_f32_Store_f32_rr:

00000000 <op_f32_Store_f32_rr>:
   0:	00a136        	entry	a1, 80
   3:	07fd      	mov.n	a15, a7
   5:	71f9      	s32i.n	a15, a1, 28
   7:	4c0c      	movi.n	a12, 4
   9:	20b220        	or	a11, a2, a2
   c:	04ad      	mov.n	a10, a4
   e:	000081        	l32r	a8, fffc0010 <op_f32_Store_f32_rr+0xfffc0010>
			e: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_rr+0x4
			e: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  11:	0008e0        	callx8	a8
  14:	1521b2        	l32i	a11, a1, 84
  17:	027d      	mov.n	a7, a2
  19:	0a28      	l32i.n	a2, a10, 0
  1b:	1421a2        	l32i	a10, a1, 80
  1e:	226a      	add.n	a2, a2, a6
  20:	000081        	l32r	a8, fffc0020 <op_f32_Store_f32_rr+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_rr+0x8
			20: R_XTENSA_ASM_EXPAND	__truncdfsf2
  23:	0008e0        	callx8	a8
  26:	0a9d      	mov.n	a9, a10
  28:	4d0c      	movi.n	a13, 4
  2a:	2cc1c2        	addi	a12, a1, 44
  2d:	02bd      	mov.n	a11, a2
  2f:	04ad      	mov.n	a10, a4
  31:	b199      	s32i.n	a9, a1, 44
  33:	000081        	l32r	a8, fffc0034 <op_f32_Store_f32_rr+0xfffc0034>
			33: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_rr+0xc
			33: R_XTENSA_ASM_EXPAND	m3_memcpy
  36:	0008e0        	callx8	a8
  39:	152192        	l32i	a9, a1, 84
  3c:	142182        	l32i	a8, a1, 80
  3f:	1199      	s32i.n	a9, a1, 4
  41:	000091        	l32r	a9, fffc0044 <op_f32_Store_f32_rr+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_rr
  44:	71f8      	l32i.n	a15, a1, 28
  46:	0189      	s32i.n	a8, a1, 0
  48:	2199      	s32i.n	a9, a1, 8
  4a:	06ed      	mov.n	a14, a6
  4c:	04cd      	mov.n	a12, a4
  4e:	03bd      	mov.n	a11, a3
  50:	07ad      	mov.n	a10, a7
  52:	000081        	l32r	a8, fffc0054 <op_f32_Store_f32_rr+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_rr+0x10
			52: R_XTENSA_ASM_EXPAND	.text.profileOp
  55:	0008e0        	callx8	a8
  58:	0a2d      	mov.n	a2, a10
  5a:	f01d      	retw.n

Disassembly of section .text.op_f32_Store_f32_ss:

00000000 <op_f32_Store_f32_ss>:
   0:	00a136        	entry	a1, 80
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Store_f32_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Store_f32_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_ss+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	000803        	lsi	f0, a8, 0
  26:	02bd      	mov.n	a11, a2
  28:	074103        	ssi	f0, a1, 28
  2b:	4c0c      	movi.n	a12, 4
  2d:	20a440        	or	a10, a4, a4
  30:	000081        	l32r	a8, fffc0030 <op_f32_Store_f32_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f32_Store_f32_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_ss+0x10
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	0a8d      	mov.n	a8, a10
  47:	02bd      	mov.n	a11, a2
  49:	4c0c      	movi.n	a12, 4
  4b:	04ad      	mov.n	a10, a4
  4d:	0858      	l32i.n	a5, a8, 0
  4f:	000081        	l32r	a8, fffc0050 <op_f32_Store_f32_ss+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_ss+0x14
			4f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  52:	0008e0        	callx8	a8
  55:	0ab8      	l32i.n	a11, a10, 0
  57:	070103        	lsi	f0, a1, 28
  5a:	4d0c      	movi.n	a13, 4
  5c:	2cc1c2        	addi	a12, a1, 44
  5f:	b5ba      	add.n	a11, a5, a11
  61:	20a440        	or	a10, a4, a4
  64:	0b4103        	ssi	f0, a1, 44
  67:	000081        	l32r	a8, fffc0068 <op_f32_Store_f32_ss+0xfffc0068>
			67: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_ss+0x18
			67: R_XTENSA_ASM_EXPAND	m3_memcpy
  6a:	0008e0        	callx8	a8
  6d:	142182        	l32i	a8, a1, 80
  70:	152192        	l32i	a9, a1, 84
  73:	0189      	s32i.n	a8, a1, 0
  75:	000081        	l32r	a8, fffc0078 <op_f32_Store_f32_ss+0xfffc0078>
			75: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_ss
  78:	1199      	s32i.n	a9, a1, 4
  7a:	2189      	s32i.n	a8, a1, 8
  7c:	06ed      	mov.n	a14, a6
  7e:	07fd      	mov.n	a15, a7
  80:	04cd      	mov.n	a12, a4
  82:	03bd      	mov.n	a11, a3
  84:	02ad      	mov.n	a10, a2
  86:	000081        	l32r	a8, fffc0088 <op_f32_Store_f32_ss+0xfffc0088>
			86: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_ss+0x1c
			86: R_XTENSA_ASM_EXPAND	.text.profileOp
  89:	0008e0        	callx8	a8
  8c:	0a2d      	mov.n	a2, a10
  8e:	f01d      	retw.n

Disassembly of section .text.op_f32_Store_f32_sr:

00000000 <op_f32_Store_f32_sr>:
   0:	00a136        	entry	a1, 80
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Store_f32_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Store_f32_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	000803        	lsi	f0, a8, 0
  26:	02bd      	mov.n	a11, a2
  28:	074103        	ssi	f0, a1, 28
  2b:	4c0c      	movi.n	a12, 4
  2d:	04ad      	mov.n	a10, a4
  2f:	000081        	l32r	a8, fffc0030 <op_f32_Store_f32_sr+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_sr+0xc
			2f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  32:	0008e0        	callx8	a8
  35:	0ab8      	l32i.n	a11, a10, 0
  37:	070103        	lsi	f0, a1, 28
  3a:	4d0c      	movi.n	a13, 4
  3c:	2cc1c2        	addi	a12, a1, 44
  3f:	bb6a      	add.n	a11, a11, a6
  41:	20a440        	or	a10, a4, a4
  44:	0b4103        	ssi	f0, a1, 44
  47:	000081        	l32r	a8, fffc0048 <op_f32_Store_f32_sr+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_sr+0x10
			47: R_XTENSA_ASM_EXPAND	m3_memcpy
  4a:	0008e0        	callx8	a8
  4d:	142182        	l32i	a8, a1, 80
  50:	152192        	l32i	a9, a1, 84
  53:	0189      	s32i.n	a8, a1, 0
  55:	000081        	l32r	a8, fffc0058 <op_f32_Store_f32_sr+0xfffc0058>
			55: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_sr
  58:	1199      	s32i.n	a9, a1, 4
  5a:	2189      	s32i.n	a8, a1, 8
  5c:	06ed      	mov.n	a14, a6
  5e:	07fd      	mov.n	a15, a7
  60:	04cd      	mov.n	a12, a4
  62:	03bd      	mov.n	a11, a3
  64:	02ad      	mov.n	a10, a2
  66:	000081        	l32r	a8, fffc0068 <op_f32_Store_f32_sr+0xfffc0068>
			66: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_sr+0x14
			66: R_XTENSA_ASM_EXPAND	.text.profileOp
  69:	0008e0        	callx8	a8
  6c:	0a2d      	mov.n	a2, a10
  6e:	f01d      	retw.n

Disassembly of section .text.op_f32_Store_f32_rs:

00000000 <op_f32_Store_f32_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Store_f32_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Store_f32_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	4c0c      	movi.n	a12, 4
  25:	02bd      	mov.n	a11, a2
  27:	04ad      	mov.n	a10, a4
  29:	0858      	l32i.n	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_f32_Store_f32_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_rs+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0a88      	l32i.n	a8, a10, 0
  33:	1121b2        	l32i	a11, a1, 68
  36:	1021a2        	l32i	a10, a1, 64
  39:	558a      	add.n	a5, a5, a8
  3b:	000081        	l32r	a8, fffc003c <op_f32_Store_f32_rs+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_rs+0x10
			3b: R_XTENSA_ASM_EXPAND	__truncdfsf2
  3e:	0008e0        	callx8	a8
  41:	0a8d      	mov.n	a8, a10
  43:	4d0c      	movi.n	a13, 4
  45:	1cc1c2        	addi	a12, a1, 28
  48:	05bd      	mov.n	a11, a5
  4a:	04ad      	mov.n	a10, a4
  4c:	076182        	s32i	a8, a1, 28
  4f:	000081        	l32r	a8, fffc0050 <op_f32_Store_f32_rs+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_rs+0x14
			4f: R_XTENSA_ASM_EXPAND	m3_memcpy
  52:	0008e0        	callx8	a8
  55:	102182        	l32i	a8, a1, 64
  58:	112192        	l32i	a9, a1, 68
  5b:	0189      	s32i.n	a8, a1, 0
  5d:	000081        	l32r	a8, fffc0060 <op_f32_Store_f32_rs+0xfffc0060>
			5d: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_rs
  60:	1199      	s32i.n	a9, a1, 4
  62:	2189      	s32i.n	a8, a1, 8
  64:	06ed      	mov.n	a14, a6
  66:	07fd      	mov.n	a15, a7
  68:	04cd      	mov.n	a12, a4
  6a:	03bd      	mov.n	a11, a3
  6c:	02ad      	mov.n	a10, a2
  6e:	000081        	l32r	a8, fffc0070 <op_f32_Store_f32_rs+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.op_f32_Store_f32_rs+0x18
			6e: R_XTENSA_ASM_EXPAND	.text.profileOp
  71:	0008e0        	callx8	a8
  74:	0a2d      	mov.n	a2, a10
  76:	f01d      	retw.n

Disassembly of section .text.op_i64_Store_i64_ss:

00000000 <op_i64_Store_i64_ss>:
   0:	00a136        	entry	a1, 80
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Store_i64_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Store_i64_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	1898      	l32i.n	a9, a8, 4
  24:	0888      	l32i.n	a8, a8, 0
  26:	02bd      	mov.n	a11, a2
  28:	7189      	s32i.n	a8, a1, 28
  2a:	6199      	s32i.n	a9, a1, 24
  2c:	4c0c      	movi.n	a12, 4
  2e:	04ad      	mov.n	a10, a4
  30:	000081        	l32r	a8, fffc0030 <op_i64_Store_i64_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_ss+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	20a440        	or	a10, a4, a4
  40:	000081        	l32r	a8, fffc0040 <op_i64_Store_i64_ss+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_ss+0x10
			40: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  43:	0008e0        	callx8	a8
  46:	0add      	mov.n	a13, a10
  48:	02bd      	mov.n	a11, a2
  4a:	4c0c      	movi.n	a12, 4
  4c:	04ad      	mov.n	a10, a4
  4e:	0d58      	l32i.n	a5, a13, 0
  50:	000081        	l32r	a8, fffc0050 <op_i64_Store_i64_ss+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_ss+0x14
			50: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  53:	0008e0        	callx8	a8
  56:	0ab8      	l32i.n	a11, a10, 0
  58:	7188      	l32i.n	a8, a1, 28
  5a:	6198      	l32i.n	a9, a1, 24
  5c:	8d0c      	movi.n	a13, 8
  5e:	28c1c2        	addi	a12, a1, 40
  61:	b5ba      	add.n	a11, a5, a11
  63:	04ad      	mov.n	a10, a4
  65:	a189      	s32i.n	a8, a1, 40
  67:	0b6192        	s32i	a9, a1, 44
  6a:	000081        	l32r	a8, fffc006c <op_i64_Store_i64_ss+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_ss+0x18
			6a: R_XTENSA_ASM_EXPAND	m3_memcpy
  6d:	0008e0        	callx8	a8
  70:	142182        	l32i	a8, a1, 80
  73:	152192        	l32i	a9, a1, 84
  76:	0189      	s32i.n	a8, a1, 0
  78:	000081        	l32r	a8, fffc0078 <op_i64_Store_i64_ss+0xfffc0078>
			78: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_ss
  7b:	1199      	s32i.n	a9, a1, 4
  7d:	2189      	s32i.n	a8, a1, 8
  7f:	06ed      	mov.n	a14, a6
  81:	07fd      	mov.n	a15, a7
  83:	04cd      	mov.n	a12, a4
  85:	03bd      	mov.n	a11, a3
  87:	20a220        	or	a10, a2, a2
  8a:	000081        	l32r	a8, fffc008c <op_i64_Store_i64_ss+0xfffc008c>
			8a: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_ss+0x1c
			8a: R_XTENSA_ASM_EXPAND	.text.profileOp
  8d:	0008e0        	callx8	a8
  90:	0a2d      	mov.n	a2, a10
  92:	f01d      	retw.n

Disassembly of section .text.op_i64_Store_i64_sr:

00000000 <op_i64_Store_i64_sr>:
   0:	00a136        	entry	a1, 80
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Store_i64_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Store_i64_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	1898      	l32i.n	a9, a8, 4
  24:	0888      	l32i.n	a8, a8, 0
  26:	02bd      	mov.n	a11, a2
  28:	7189      	s32i.n	a8, a1, 28
  2a:	6199      	s32i.n	a9, a1, 24
  2c:	4c0c      	movi.n	a12, 4
  2e:	04ad      	mov.n	a10, a4
  30:	000081        	l32r	a8, fffc0030 <op_i64_Store_i64_sr+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_sr+0xc
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	7188      	l32i.n	a8, a1, 28
  3a:	6198      	l32i.n	a9, a1, 24
  3c:	8d0c      	movi.n	a13, 8
  3e:	28c1c2        	addi	a12, a1, 40
  41:	bb6a      	add.n	a11, a11, a6
  43:	04ad      	mov.n	a10, a4
  45:	a189      	s32i.n	a8, a1, 40
  47:	0b6192        	s32i	a9, a1, 44
  4a:	000081        	l32r	a8, fffc004c <op_i64_Store_i64_sr+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_sr+0x10
			4a: R_XTENSA_ASM_EXPAND	m3_memcpy
  4d:	0008e0        	callx8	a8
  50:	142182        	l32i	a8, a1, 80
  53:	152192        	l32i	a9, a1, 84
  56:	0189      	s32i.n	a8, a1, 0
  58:	000081        	l32r	a8, fffc0058 <op_i64_Store_i64_sr+0xfffc0058>
			58: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_sr
  5b:	1199      	s32i.n	a9, a1, 4
  5d:	2189      	s32i.n	a8, a1, 8
  5f:	06ed      	mov.n	a14, a6
  61:	07fd      	mov.n	a15, a7
  63:	04cd      	mov.n	a12, a4
  65:	03bd      	mov.n	a11, a3
  67:	20a220        	or	a10, a2, a2
  6a:	000081        	l32r	a8, fffc006c <op_i64_Store_i64_sr+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_sr+0x14
			6a: R_XTENSA_ASM_EXPAND	.text.profileOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	f01d      	retw.n

Disassembly of section .text.op_i64_Store_i64_rs:

00000000 <op_i64_Store_i64_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Store_i64_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Store_i64_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0858      	l32i.n	a5, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_i64_Store_i64_rs+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_rs+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0ab8      	l32i.n	a11, a10, 0
  32:	8d0c      	movi.n	a13, 8
  34:	18c1c2        	addi	a12, a1, 24
  37:	b5ba      	add.n	a11, a5, a11
  39:	04ad      	mov.n	a10, a4
  3b:	6169      	s32i.n	a6, a1, 24
  3d:	7179      	s32i.n	a7, a1, 28
  3f:	000081        	l32r	a8, fffc0040 <op_i64_Store_i64_rs+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_rs+0x10
			3f: R_XTENSA_ASM_EXPAND	m3_memcpy
  42:	0008e0        	callx8	a8
  45:	102182        	l32i	a8, a1, 64
  48:	112192        	l32i	a9, a1, 68
  4b:	0189      	s32i.n	a8, a1, 0
  4d:	000081        	l32r	a8, fffc0050 <op_i64_Store_i64_rs+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_rs
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i64_Store_i64_rs+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i64_Store_i64_rs+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i32_Store_i32_ss:

00000000 <op_i32_Store_i32_ss>:
   0:	00a136        	entry	a1, 80
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Store_i32_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Store_i32_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002852        	l32i	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_Store_i32_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_i32_Store_i32_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	0a8d      	mov.n	a8, a10
  42:	0888      	l32i.n	a8, a8, 0
  44:	02bd      	mov.n	a11, a2
  46:	7189      	s32i.n	a8, a1, 28
  48:	4c0c      	movi.n	a12, 4
  4a:	04ad      	mov.n	a10, a4
  4c:	000081        	l32r	a8, fffc004c <op_i32_Store_i32_ss+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_ss+0x14
			4c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  4f:	0008e0        	callx8	a8
  52:	0ab8      	l32i.n	a11, a10, 0
  54:	7188      	l32i.n	a8, a1, 28
  56:	4d0c      	movi.n	a13, 4
  58:	2cc1c2        	addi	a12, a1, 44
  5b:	b8ba      	add.n	a11, a8, a11
  5d:	04ad      	mov.n	a10, a4
  5f:	0b6152        	s32i	a5, a1, 44
  62:	000081        	l32r	a8, fffc0064 <op_i32_Store_i32_ss+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_ss+0x18
			62: R_XTENSA_ASM_EXPAND	m3_memcpy
  65:	0008e0        	callx8	a8
  68:	142182        	l32i	a8, a1, 80
  6b:	152192        	l32i	a9, a1, 84
  6e:	0189      	s32i.n	a8, a1, 0
  70:	000081        	l32r	a8, fffc0070 <op_i32_Store_i32_ss+0xfffc0070>
			70: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_ss
  73:	1199      	s32i.n	a9, a1, 4
  75:	2189      	s32i.n	a8, a1, 8
  77:	06ed      	mov.n	a14, a6
  79:	07fd      	mov.n	a15, a7
  7b:	04cd      	mov.n	a12, a4
  7d:	03bd      	mov.n	a11, a3
  7f:	20a220        	or	a10, a2, a2
  82:	000081        	l32r	a8, fffc0084 <op_i32_Store_i32_ss+0xfffc0084>
			82: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_ss+0x1c
			82: R_XTENSA_ASM_EXPAND	.text.profileOp
  85:	0008e0        	callx8	a8
  88:	0a2d      	mov.n	a2, a10
  8a:	f01d      	retw.n

Disassembly of section .text.op_i32_Store_i32_sr:

00000000 <op_i32_Store_i32_sr>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Store_i32_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Store_i32_sr+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_sr+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	0858      	l32i.n	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_Store_i32_sr+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_sr+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4d0c      	movi.n	a13, 4
  35:	1cc1c2        	addi	a12, a1, 28
  38:	bb6a      	add.n	a11, a11, a6
  3a:	04ad      	mov.n	a10, a4
  3c:	076152        	s32i	a5, a1, 28
  3f:	000081        	l32r	a8, fffc0040 <op_i32_Store_i32_sr+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_sr+0x10
			3f: R_XTENSA_ASM_EXPAND	m3_memcpy
  42:	0008e0        	callx8	a8
  45:	102182        	l32i	a8, a1, 64
  48:	112192        	l32i	a9, a1, 68
  4b:	0189      	s32i.n	a8, a1, 0
  4d:	000081        	l32r	a8, fffc0050 <op_i32_Store_i32_sr+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_sr
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i32_Store_i32_sr+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_sr+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i32_Store_i32_rs:

00000000 <op_i32_Store_i32_rs>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Store_i32_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_i32_Store_i32_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_rs+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	02bd      	mov.n	a11, a2
  25:	4c0c      	movi.n	a12, 4
  27:	04ad      	mov.n	a10, a4
  29:	0858      	l32i.n	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_i32_Store_i32_rs+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_rs+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4d0c      	movi.n	a13, 4
  35:	1cc1c2        	addi	a12, a1, 28
  38:	b5ba      	add.n	a11, a5, a11
  3a:	04ad      	mov.n	a10, a4
  3c:	076162        	s32i	a6, a1, 28
  3f:	000081        	l32r	a8, fffc0040 <op_i32_Store_i32_rs+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_rs+0x10
			3f: R_XTENSA_ASM_EXPAND	m3_memcpy
  42:	0008e0        	callx8	a8
  45:	102182        	l32i	a8, a1, 64
  48:	112192        	l32i	a9, a1, 68
  4b:	0189      	s32i.n	a8, a1, 0
  4d:	000081        	l32r	a8, fffc0050 <op_i32_Store_i32_rs+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_rs
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	06ed      	mov.n	a14, a6
  56:	07fd      	mov.n	a15, a7
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i32_Store_i32_rs+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i32_Store_i32_rs+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i64_Load_u32_s:

00000000 <op_i64_Load_u32_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Load_u32_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u32_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Load_u32_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u32_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_i64_Load_u32_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u32_s+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0ac8      	l32i.n	a12, a10, 0
  32:	4d0c      	movi.n	a13, 4
  34:	c7ca      	add.n	a12, a7, a12
  36:	1cc1b2        	addi	a11, a1, 28
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_Load_u32_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u32_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3_memcpy
  3e:	0008e0        	callx8	a8
  41:	000081        	l32r	a8, fffc0044 <op_i64_Load_u32_s+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u32_s
  44:	112192        	l32i	a9, a1, 68
  47:	2189      	s32i.n	a8, a1, 8
  49:	102182        	l32i	a8, a1, 64
  4c:	71e8      	l32i.n	a14, a1, 28
  4e:	0189      	s32i.n	a8, a1, 0
  50:	1199      	s32i.n	a9, a1, 4
  52:	0f0c      	movi.n	a15, 0
  54:	04cd      	mov.n	a12, a4
  56:	03bd      	mov.n	a11, a3
  58:	02ad      	mov.n	a10, a2
  5a:	000081        	l32r	a8, fffc005c <op_i64_Load_u32_s+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u32_s+0x14
			5a: R_XTENSA_ASM_EXPAND	.text.profileOp
  5d:	0008e0        	callx8	a8
  60:	0a2d      	mov.n	a2, a10
  62:	f01d      	retw.n

Disassembly of section .text.op_i64_Load_u32_r:

00000000 <op_i64_Load_u32_r>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	04ad      	mov.n	a10, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Load_u32_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u32_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ac8      	l32i.n	a12, a10, 0
  13:	04a0d2        	movi	a13, 4
  16:	80cc60        	add	a12, a12, a6
  19:	1cc1b2        	addi	a11, a1, 28
  1c:	20a440        	or	a10, a4, a4
  1f:	000081        	l32r	a8, fffc0020 <op_i64_Load_u32_r+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u32_r+0x8
			1f: R_XTENSA_ASM_EXPAND	m3_memcpy
  22:	0008e0        	callx8	a8
  25:	000081        	l32r	a8, fffc0028 <op_i64_Load_u32_r+0xfffc0028>
			25: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u32_r
  28:	112192        	l32i	a9, a1, 68
  2b:	2189      	s32i.n	a8, a1, 8
  2d:	102182        	l32i	a8, a1, 64
  30:	71e8      	l32i.n	a14, a1, 28
  32:	0189      	s32i.n	a8, a1, 0
  34:	1199      	s32i.n	a9, a1, 4
  36:	0f0c      	movi.n	a15, 0
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_i64_Load_u32_r+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u32_r+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_i64_Load_i32_s:

00000000 <op_i64_Load_i32_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Load_i32_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i32_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Load_i32_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i32_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_i64_Load_i32_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i32_s+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0ac8      	l32i.n	a12, a10, 0
  32:	4d0c      	movi.n	a13, 4
  34:	c7ca      	add.n	a12, a7, a12
  36:	1cc1b2        	addi	a11, a1, 28
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_Load_i32_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i32_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3_memcpy
  3e:	0008e0        	callx8	a8
  41:	102182        	l32i	a8, a1, 64
  44:	71f8      	l32i.n	a15, a1, 28
  46:	112192        	l32i	a9, a1, 68
  49:	0189      	s32i.n	a8, a1, 0
  4b:	000081        	l32r	a8, fffc004c <op_i64_Load_i32_s+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i32_s
  4e:	0fed      	mov.n	a14, a15
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	31fff0        	srai	a15, a15, 31
  57:	04cd      	mov.n	a12, a4
  59:	03bd      	mov.n	a11, a3
  5b:	20a220        	or	a10, a2, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i64_Load_i32_s+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i32_s+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i64_Load_i32_r:

00000000 <op_i64_Load_i32_r>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	04ad      	mov.n	a10, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Load_i32_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i32_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ac8      	l32i.n	a12, a10, 0
  13:	4d0c      	movi.n	a13, 4
  15:	80cc60        	add	a12, a12, a6
  18:	1cc1b2        	addi	a11, a1, 28
  1b:	20a440        	or	a10, a4, a4
  1e:	000081        	l32r	a8, fffc0020 <op_i64_Load_i32_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i32_r+0x8
			1e: R_XTENSA_ASM_EXPAND	m3_memcpy
  21:	0008e0        	callx8	a8
  24:	102182        	l32i	a8, a1, 64
  27:	71f8      	l32i.n	a15, a1, 28
  29:	112192        	l32i	a9, a1, 68
  2c:	0189      	s32i.n	a8, a1, 0
  2e:	000081        	l32r	a8, fffc0030 <op_i64_Load_i32_r+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i32_r
  31:	0fed      	mov.n	a14, a15
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	31fff0        	srai	a15, a15, 31
  3a:	04cd      	mov.n	a12, a4
  3c:	03bd      	mov.n	a11, a3
  3e:	02ad      	mov.n	a10, a2
  40:	000081        	l32r	a8, fffc0040 <op_i64_Load_i32_r+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i32_r+0xc
			40: R_XTENSA_ASM_EXPAND	.text.profileOp
  43:	0008e0        	callx8	a8
  46:	0a2d      	mov.n	a2, a10
  48:	f01d      	retw.n

Disassembly of section .text.op_i64_Load_u16_s:

00000000 <op_i64_Load_u16_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Load_u16_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u16_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Load_u16_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u16_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_i64_Load_u16_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u16_s+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0ac8      	l32i.n	a12, a10, 0
  32:	2d0c      	movi.n	a13, 2
  34:	c7ca      	add.n	a12, a7, a12
  36:	1ec1b2        	addi	a11, a1, 30
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_Load_u16_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u16_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3_memcpy
  3e:	0008e0        	callx8	a8
  41:	000081        	l32r	a8, fffc0044 <op_i64_Load_u16_s+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u16_s
  44:	112192        	l32i	a9, a1, 68
  47:	2189      	s32i.n	a8, a1, 8
  49:	102182        	l32i	a8, a1, 64
  4c:	0f11e2        	l16ui	a14, a1, 30
  4f:	0189      	s32i.n	a8, a1, 0
  51:	1199      	s32i.n	a9, a1, 4
  53:	0f0c      	movi.n	a15, 0
  55:	04cd      	mov.n	a12, a4
  57:	03bd      	mov.n	a11, a3
  59:	02ad      	mov.n	a10, a2
  5b:	000081        	l32r	a8, fffc005c <op_i64_Load_u16_s+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u16_s+0x14
			5b: R_XTENSA_ASM_EXPAND	.text.profileOp
  5e:	0008e0        	callx8	a8
  61:	0a2d      	mov.n	a2, a10
  63:	f01d      	retw.n

Disassembly of section .text.op_i64_Load_u16_r:

00000000 <op_i64_Load_u16_r>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	04ad      	mov.n	a10, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Load_u16_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u16_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ac8      	l32i.n	a12, a10, 0
  13:	2d0c      	movi.n	a13, 2
  15:	80cc60        	add	a12, a12, a6
  18:	1ec1b2        	addi	a11, a1, 30
  1b:	20a440        	or	a10, a4, a4
  1e:	000081        	l32r	a8, fffc0020 <op_i64_Load_u16_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u16_r+0x8
			1e: R_XTENSA_ASM_EXPAND	m3_memcpy
  21:	0008e0        	callx8	a8
  24:	000081        	l32r	a8, fffc0024 <op_i64_Load_u16_r+0xfffc0024>
			24: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u16_r
  27:	112192        	l32i	a9, a1, 68
  2a:	2189      	s32i.n	a8, a1, 8
  2c:	102182        	l32i	a8, a1, 64
  2f:	0f11e2        	l16ui	a14, a1, 30
  32:	0189      	s32i.n	a8, a1, 0
  34:	1199      	s32i.n	a9, a1, 4
  36:	0f0c      	movi.n	a15, 0
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_i64_Load_u16_r+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u16_r+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_i64_Load_i16_s:

00000000 <op_i64_Load_i16_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Load_i16_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i16_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Load_i16_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i16_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_i64_Load_i16_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i16_s+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0ac8      	l32i.n	a12, a10, 0
  32:	2d0c      	movi.n	a13, 2
  34:	c7ca      	add.n	a12, a7, a12
  36:	1ec1b2        	addi	a11, a1, 30
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_Load_i16_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i16_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3_memcpy
  3e:	0008e0        	callx8	a8
  41:	102182        	l32i	a8, a1, 64
  44:	0f91f2        	l16si	a15, a1, 30
  47:	112192        	l32i	a9, a1, 68
  4a:	0189      	s32i.n	a8, a1, 0
  4c:	000081        	l32r	a8, fffc004c <op_i64_Load_i16_s+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i16_s
  4f:	0fed      	mov.n	a14, a15
  51:	1199      	s32i.n	a9, a1, 4
  53:	2189      	s32i.n	a8, a1, 8
  55:	31fff0        	srai	a15, a15, 31
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i64_Load_i16_s+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i16_s+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i64_Load_i16_r:

00000000 <op_i64_Load_i16_r>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	04ad      	mov.n	a10, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Load_i16_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i16_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ac8      	l32i.n	a12, a10, 0
  13:	02a0d2        	movi	a13, 2
  16:	80cc60        	add	a12, a12, a6
  19:	1ec1b2        	addi	a11, a1, 30
  1c:	20a440        	or	a10, a4, a4
  1f:	000081        	l32r	a8, fffc0020 <op_i64_Load_i16_r+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i16_r+0x8
			1f: R_XTENSA_ASM_EXPAND	m3_memcpy
  22:	0008e0        	callx8	a8
  25:	102182        	l32i	a8, a1, 64
  28:	0f91f2        	l16si	a15, a1, 30
  2b:	112192        	l32i	a9, a1, 68
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_i64_Load_i16_r+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i16_r
  33:	0fed      	mov.n	a14, a15
  35:	1199      	s32i.n	a9, a1, 4
  37:	2189      	s32i.n	a8, a1, 8
  39:	31fff0        	srai	a15, a15, 31
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i64_Load_i16_r+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i16_r+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_i64_Load_u8_s:

00000000 <op_i64_Load_u8_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Load_u8_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u8_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Load_u8_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u8_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_i64_Load_u8_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u8_s+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0ac8      	l32i.n	a12, a10, 0
  32:	1d0c      	movi.n	a13, 1
  34:	c7ca      	add.n	a12, a7, a12
  36:	1fc1b2        	addi	a11, a1, 31
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_Load_u8_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u8_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3_memcpy
  3e:	0008e0        	callx8	a8
  41:	000081        	l32r	a8, fffc0044 <op_i64_Load_u8_s+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u8_s
  44:	112192        	l32i	a9, a1, 68
  47:	2189      	s32i.n	a8, a1, 8
  49:	102182        	l32i	a8, a1, 64
  4c:	1f01e2        	l8ui	a14, a1, 31
  4f:	0189      	s32i.n	a8, a1, 0
  51:	1199      	s32i.n	a9, a1, 4
  53:	0f0c      	movi.n	a15, 0
  55:	04cd      	mov.n	a12, a4
  57:	03bd      	mov.n	a11, a3
  59:	02ad      	mov.n	a10, a2
  5b:	000081        	l32r	a8, fffc005c <op_i64_Load_u8_s+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u8_s+0x14
			5b: R_XTENSA_ASM_EXPAND	.text.profileOp
  5e:	0008e0        	callx8	a8
  61:	0a2d      	mov.n	a2, a10
  63:	f01d      	retw.n

Disassembly of section .text.op_i64_Load_u8_r:

00000000 <op_i64_Load_u8_r>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	04ad      	mov.n	a10, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Load_u8_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u8_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ac8      	l32i.n	a12, a10, 0
  13:	1d0c      	movi.n	a13, 1
  15:	80cc60        	add	a12, a12, a6
  18:	1fc1b2        	addi	a11, a1, 31
  1b:	20a440        	or	a10, a4, a4
  1e:	000081        	l32r	a8, fffc0020 <op_i64_Load_u8_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u8_r+0x8
			1e: R_XTENSA_ASM_EXPAND	m3_memcpy
  21:	0008e0        	callx8	a8
  24:	000081        	l32r	a8, fffc0024 <op_i64_Load_u8_r+0xfffc0024>
			24: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u8_r
  27:	112192        	l32i	a9, a1, 68
  2a:	2189      	s32i.n	a8, a1, 8
  2c:	102182        	l32i	a8, a1, 64
  2f:	1f01e2        	l8ui	a14, a1, 31
  32:	0189      	s32i.n	a8, a1, 0
  34:	1199      	s32i.n	a9, a1, 4
  36:	0f0c      	movi.n	a15, 0
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_i64_Load_u8_r+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_u8_r+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_i64_Load_i8_s:

00000000 <op_i64_Load_i8_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Load_i8_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i8_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Load_i8_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i8_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_i64_Load_i8_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i8_s+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0ac8      	l32i.n	a12, a10, 0
  32:	1d0c      	movi.n	a13, 1
  34:	c7ca      	add.n	a12, a7, a12
  36:	1fc1b2        	addi	a11, a1, 31
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_Load_i8_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i8_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3_memcpy
  3e:	0008e0        	callx8	a8
  41:	000081        	l32r	a8, fffc0044 <op_i64_Load_i8_s+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i8_s
  44:	1f01f2        	l8ui	a15, a1, 31
  47:	112192        	l32i	a9, a1, 68
  4a:	2189      	s32i.n	a8, a1, 8
  4c:	102182        	l32i	a8, a1, 64
  4f:	23ff00        	sext	a15, a15, 7
  52:	0fed      	mov.n	a14, a15
  54:	0189      	s32i.n	a8, a1, 0
  56:	1199      	s32i.n	a9, a1, 4
  58:	31fff0        	srai	a15, a15, 31
  5b:	04cd      	mov.n	a12, a4
  5d:	03bd      	mov.n	a11, a3
  5f:	20a220        	or	a10, a2, a2
  62:	000081        	l32r	a8, fffc0064 <op_i64_Load_i8_s+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i8_s+0x14
			62: R_XTENSA_ASM_EXPAND	.text.profileOp
  65:	0008e0        	callx8	a8
  68:	0a2d      	mov.n	a2, a10
  6a:	f01d      	retw.n

Disassembly of section .text.op_i64_Load_i8_r:

00000000 <op_i64_Load_i8_r>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	04ad      	mov.n	a10, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Load_i8_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i8_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ac8      	l32i.n	a12, a10, 0
  13:	1d0c      	movi.n	a13, 1
  15:	80cc60        	add	a12, a12, a6
  18:	1fc1b2        	addi	a11, a1, 31
  1b:	20a440        	or	a10, a4, a4
  1e:	000081        	l32r	a8, fffc0020 <op_i64_Load_i8_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i8_r+0x8
			1e: R_XTENSA_ASM_EXPAND	m3_memcpy
  21:	0008e0        	callx8	a8
  24:	000081        	l32r	a8, fffc0024 <op_i64_Load_i8_r+0xfffc0024>
			24: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i8_r
  27:	1f01f2        	l8ui	a15, a1, 31
  2a:	112192        	l32i	a9, a1, 68
  2d:	2189      	s32i.n	a8, a1, 8
  2f:	102182        	l32i	a8, a1, 64
  32:	23ff00        	sext	a15, a15, 7
  35:	0fed      	mov.n	a14, a15
  37:	0189      	s32i.n	a8, a1, 0
  39:	1199      	s32i.n	a9, a1, 4
  3b:	31fff0        	srai	a15, a15, 31
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_i64_Load_i8_r+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i8_r+0xc
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n

Disassembly of section .text.op_i32_Load_u16_s:

00000000 <op_i32_Load_u16_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Load_u16_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u16_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Load_u16_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u16_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_i32_Load_u16_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u16_s+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0ac8      	l32i.n	a12, a10, 0
  32:	2d0c      	movi.n	a13, 2
  34:	c7ca      	add.n	a12, a7, a12
  36:	1ec1b2        	addi	a11, a1, 30
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i32_Load_u16_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u16_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3_memcpy
  3e:	0008e0        	callx8	a8
  41:	000081        	l32r	a8, fffc0044 <op_i32_Load_u16_s+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u16_s
  44:	112192        	l32i	a9, a1, 68
  47:	2189      	s32i.n	a8, a1, 8
  49:	102182        	l32i	a8, a1, 64
  4c:	0f11e2        	l16ui	a14, a1, 30
  4f:	0189      	s32i.n	a8, a1, 0
  51:	1199      	s32i.n	a9, a1, 4
  53:	0f0c      	movi.n	a15, 0
  55:	04cd      	mov.n	a12, a4
  57:	03bd      	mov.n	a11, a3
  59:	02ad      	mov.n	a10, a2
  5b:	000081        	l32r	a8, fffc005c <op_i32_Load_u16_s+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u16_s+0x14
			5b: R_XTENSA_ASM_EXPAND	.text.profileOp
  5e:	0008e0        	callx8	a8
  61:	0a2d      	mov.n	a2, a10
  63:	f01d      	retw.n

Disassembly of section .text.op_i32_Load_u16_r:

00000000 <op_i32_Load_u16_r>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	04ad      	mov.n	a10, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Load_u16_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u16_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ac8      	l32i.n	a12, a10, 0
  13:	2d0c      	movi.n	a13, 2
  15:	80cc60        	add	a12, a12, a6
  18:	1ec1b2        	addi	a11, a1, 30
  1b:	20a440        	or	a10, a4, a4
  1e:	000081        	l32r	a8, fffc0020 <op_i32_Load_u16_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u16_r+0x8
			1e: R_XTENSA_ASM_EXPAND	m3_memcpy
  21:	0008e0        	callx8	a8
  24:	000081        	l32r	a8, fffc0024 <op_i32_Load_u16_r+0xfffc0024>
			24: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u16_r
  27:	112192        	l32i	a9, a1, 68
  2a:	2189      	s32i.n	a8, a1, 8
  2c:	102182        	l32i	a8, a1, 64
  2f:	0f11e2        	l16ui	a14, a1, 30
  32:	0189      	s32i.n	a8, a1, 0
  34:	1199      	s32i.n	a9, a1, 4
  36:	0f0c      	movi.n	a15, 0
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_i32_Load_u16_r+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u16_r+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_i32_Load_i16_s:

00000000 <op_i32_Load_i16_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Load_i16_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i16_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Load_i16_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i16_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_i32_Load_i16_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i16_s+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0ac8      	l32i.n	a12, a10, 0
  32:	2d0c      	movi.n	a13, 2
  34:	c7ca      	add.n	a12, a7, a12
  36:	1ec1b2        	addi	a11, a1, 30
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i32_Load_i16_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i16_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3_memcpy
  3e:	0008e0        	callx8	a8
  41:	102182        	l32i	a8, a1, 64
  44:	0f91f2        	l16si	a15, a1, 30
  47:	112192        	l32i	a9, a1, 68
  4a:	0189      	s32i.n	a8, a1, 0
  4c:	000081        	l32r	a8, fffc004c <op_i32_Load_i16_s+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i16_s
  4f:	0fed      	mov.n	a14, a15
  51:	1199      	s32i.n	a9, a1, 4
  53:	2189      	s32i.n	a8, a1, 8
  55:	31fff0        	srai	a15, a15, 31
  58:	04cd      	mov.n	a12, a4
  5a:	03bd      	mov.n	a11, a3
  5c:	02ad      	mov.n	a10, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i32_Load_i16_s+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i16_s+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i32_Load_i16_r:

00000000 <op_i32_Load_i16_r>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	04ad      	mov.n	a10, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Load_i16_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i16_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ac8      	l32i.n	a12, a10, 0
  13:	02a0d2        	movi	a13, 2
  16:	80cc60        	add	a12, a12, a6
  19:	1ec1b2        	addi	a11, a1, 30
  1c:	20a440        	or	a10, a4, a4
  1f:	000081        	l32r	a8, fffc0020 <op_i32_Load_i16_r+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i16_r+0x8
			1f: R_XTENSA_ASM_EXPAND	m3_memcpy
  22:	0008e0        	callx8	a8
  25:	102182        	l32i	a8, a1, 64
  28:	0f91f2        	l16si	a15, a1, 30
  2b:	112192        	l32i	a9, a1, 68
  2e:	0189      	s32i.n	a8, a1, 0
  30:	000081        	l32r	a8, fffc0030 <op_i32_Load_i16_r+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i16_r
  33:	0fed      	mov.n	a14, a15
  35:	1199      	s32i.n	a9, a1, 4
  37:	2189      	s32i.n	a8, a1, 8
  39:	31fff0        	srai	a15, a15, 31
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_i32_Load_i16_r+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i16_r+0xc
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_i32_Load_u8_s:

00000000 <op_i32_Load_u8_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Load_u8_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u8_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Load_u8_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u8_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_i32_Load_u8_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u8_s+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0ac8      	l32i.n	a12, a10, 0
  32:	1d0c      	movi.n	a13, 1
  34:	c7ca      	add.n	a12, a7, a12
  36:	1fc1b2        	addi	a11, a1, 31
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i32_Load_u8_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u8_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3_memcpy
  3e:	0008e0        	callx8	a8
  41:	000081        	l32r	a8, fffc0044 <op_i32_Load_u8_s+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u8_s
  44:	112192        	l32i	a9, a1, 68
  47:	2189      	s32i.n	a8, a1, 8
  49:	102182        	l32i	a8, a1, 64
  4c:	1f01e2        	l8ui	a14, a1, 31
  4f:	0189      	s32i.n	a8, a1, 0
  51:	1199      	s32i.n	a9, a1, 4
  53:	0f0c      	movi.n	a15, 0
  55:	04cd      	mov.n	a12, a4
  57:	03bd      	mov.n	a11, a3
  59:	02ad      	mov.n	a10, a2
  5b:	000081        	l32r	a8, fffc005c <op_i32_Load_u8_s+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u8_s+0x14
			5b: R_XTENSA_ASM_EXPAND	.text.profileOp
  5e:	0008e0        	callx8	a8
  61:	0a2d      	mov.n	a2, a10
  63:	f01d      	retw.n

Disassembly of section .text.op_i32_Load_u8_r:

00000000 <op_i32_Load_u8_r>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	04ad      	mov.n	a10, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Load_u8_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u8_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ac8      	l32i.n	a12, a10, 0
  13:	1d0c      	movi.n	a13, 1
  15:	80cc60        	add	a12, a12, a6
  18:	1fc1b2        	addi	a11, a1, 31
  1b:	20a440        	or	a10, a4, a4
  1e:	000081        	l32r	a8, fffc0020 <op_i32_Load_u8_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u8_r+0x8
			1e: R_XTENSA_ASM_EXPAND	m3_memcpy
  21:	0008e0        	callx8	a8
  24:	000081        	l32r	a8, fffc0024 <op_i32_Load_u8_r+0xfffc0024>
			24: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u8_r
  27:	112192        	l32i	a9, a1, 68
  2a:	2189      	s32i.n	a8, a1, 8
  2c:	102182        	l32i	a8, a1, 64
  2f:	1f01e2        	l8ui	a14, a1, 31
  32:	0189      	s32i.n	a8, a1, 0
  34:	1199      	s32i.n	a9, a1, 4
  36:	0f0c      	movi.n	a15, 0
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_i32_Load_u8_r+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_u8_r+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_i32_Load_i8_s:

00000000 <op_i32_Load_i8_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Load_i8_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i8_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Load_i8_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i8_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_i32_Load_i8_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i8_s+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0ac8      	l32i.n	a12, a10, 0
  32:	1d0c      	movi.n	a13, 1
  34:	c7ca      	add.n	a12, a7, a12
  36:	1fc1b2        	addi	a11, a1, 31
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i32_Load_i8_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i8_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3_memcpy
  3e:	0008e0        	callx8	a8
  41:	000081        	l32r	a8, fffc0044 <op_i32_Load_i8_s+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i8_s
  44:	1f01f2        	l8ui	a15, a1, 31
  47:	112192        	l32i	a9, a1, 68
  4a:	2189      	s32i.n	a8, a1, 8
  4c:	102182        	l32i	a8, a1, 64
  4f:	23ff00        	sext	a15, a15, 7
  52:	0fed      	mov.n	a14, a15
  54:	0189      	s32i.n	a8, a1, 0
  56:	1199      	s32i.n	a9, a1, 4
  58:	31fff0        	srai	a15, a15, 31
  5b:	04cd      	mov.n	a12, a4
  5d:	03bd      	mov.n	a11, a3
  5f:	20a220        	or	a10, a2, a2
  62:	000081        	l32r	a8, fffc0064 <op_i32_Load_i8_s+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i8_s+0x14
			62: R_XTENSA_ASM_EXPAND	.text.profileOp
  65:	0008e0        	callx8	a8
  68:	0a2d      	mov.n	a2, a10
  6a:	f01d      	retw.n

Disassembly of section .text.op_i32_Load_i8_r:

00000000 <op_i32_Load_i8_r>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	04ad      	mov.n	a10, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Load_i8_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i8_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ac8      	l32i.n	a12, a10, 0
  13:	1d0c      	movi.n	a13, 1
  15:	80cc60        	add	a12, a12, a6
  18:	1fc1b2        	addi	a11, a1, 31
  1b:	20a440        	or	a10, a4, a4
  1e:	000081        	l32r	a8, fffc0020 <op_i32_Load_i8_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i8_r+0x8
			1e: R_XTENSA_ASM_EXPAND	m3_memcpy
  21:	0008e0        	callx8	a8
  24:	000081        	l32r	a8, fffc0024 <op_i32_Load_i8_r+0xfffc0024>
			24: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i8_r
  27:	1f01f2        	l8ui	a15, a1, 31
  2a:	112192        	l32i	a9, a1, 68
  2d:	2189      	s32i.n	a8, a1, 8
  2f:	102182        	l32i	a8, a1, 64
  32:	23ff00        	sext	a15, a15, 7
  35:	0fed      	mov.n	a14, a15
  37:	0189      	s32i.n	a8, a1, 0
  39:	1199      	s32i.n	a9, a1, 4
  3b:	31fff0        	srai	a15, a15, 31
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_i32_Load_i8_r+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i8_r+0xc
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n

Disassembly of section .text.op_f64_Load_f64_s:

00000000 <op_f64_Load_f64_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Load_f64_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Load_f64_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Load_f64_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Load_f64_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0858      	l32i.n	a5, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_f64_Load_f64_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_f64_Load_f64_s+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0ac8      	l32i.n	a12, a10, 0
  32:	8d0c      	movi.n	a13, 8
  34:	c5ca      	add.n	a12, a5, a12
  36:	18c1b2        	addi	a11, a1, 24
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_f64_Load_f64_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_f64_Load_f64_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3_memcpy
  3e:	0008e0        	callx8	a8
  41:	6188      	l32i.n	a8, a1, 24
  43:	7198      	l32i.n	a9, a1, 28
  45:	0000a1        	l32r	a10, fffc0048 <op_f64_Load_f64_s+0xfffc0048>
			45: R_XTENSA_SLOT0_OP	.literal.op_f64_Load_f64_s
  48:	0189      	s32i.n	a8, a1, 0
  4a:	21a9      	s32i.n	a10, a1, 8
  4c:	1199      	s32i.n	a9, a1, 4
  4e:	06ed      	mov.n	a14, a6
  50:	07fd      	mov.n	a15, a7
  52:	04cd      	mov.n	a12, a4
  54:	03bd      	mov.n	a11, a3
  56:	02ad      	mov.n	a10, a2
  58:	000081        	l32r	a8, fffc0058 <op_f64_Load_f64_s+0xfffc0058>
			58: R_XTENSA_SLOT0_OP	.literal.op_f64_Load_f64_s+0x14
			58: R_XTENSA_ASM_EXPAND	.text.profileOp
  5b:	0008e0        	callx8	a8
  5e:	0a2d      	mov.n	a2, a10
  60:	f01d      	retw.n

Disassembly of section .text.op_f64_Load_f64_r:

00000000 <op_f64_Load_f64_r>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_f64_Load_f64_r+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_f64_Load_f64_r+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	0ac8      	l32i.n	a12, a10, 0
  12:	8d0c      	movi.n	a13, 8
  14:	cc6a      	add.n	a12, a12, a6
  16:	18c1b2        	addi	a11, a1, 24
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f64_Load_f64_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f64_Load_f64_r+0x8
			1b: R_XTENSA_ASM_EXPAND	m3_memcpy
  1e:	0008e0        	callx8	a8
  21:	6188      	l32i.n	a8, a1, 24
  23:	7198      	l32i.n	a9, a1, 28
  25:	0000a1        	l32r	a10, fffc0028 <op_f64_Load_f64_r+0xfffc0028>
			25: R_XTENSA_SLOT0_OP	.literal.op_f64_Load_f64_r
  28:	0189      	s32i.n	a8, a1, 0
  2a:	21a9      	s32i.n	a10, a1, 8
  2c:	1199      	s32i.n	a9, a1, 4
  2e:	06ed      	mov.n	a14, a6
  30:	07fd      	mov.n	a15, a7
  32:	04cd      	mov.n	a12, a4
  34:	03bd      	mov.n	a11, a3
  36:	02ad      	mov.n	a10, a2
  38:	000081        	l32r	a8, fffc0038 <op_f64_Load_f64_r+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_f64_Load_f64_r+0xc
			38: R_XTENSA_ASM_EXPAND	.text.profileOp
  3b:	0008e0        	callx8	a8
  3e:	0a2d      	mov.n	a2, a10
  40:	f01d      	retw.n

Disassembly of section .text.op_f32_Load_f32_s:

00000000 <op_f32_Load_f32_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Load_f32_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Load_f32_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f32_Load_f32_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f32_Load_f32_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0858      	l32i.n	a5, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_f32_Load_f32_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_f32_Load_f32_s+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0ac8      	l32i.n	a12, a10, 0
  32:	4d0c      	movi.n	a13, 4
  34:	c5ca      	add.n	a12, a5, a12
  36:	1cc1b2        	addi	a11, a1, 28
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_f32_Load_f32_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_f32_Load_f32_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3_memcpy
  3e:	0008e0        	callx8	a8
  41:	71a8      	l32i.n	a10, a1, 28
  43:	000081        	l32r	a8, fffc0044 <op_f32_Load_f32_s+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_f32_Load_f32_s+0x14
			43: R_XTENSA_ASM_EXPAND	__extendsfdf2
  46:	0008e0        	callx8	a8
  49:	000081        	l32r	a8, fffc004c <op_f32_Load_f32_s+0xfffc004c>
			49: R_XTENSA_SLOT0_OP	.literal.op_f32_Load_f32_s
  4c:	01a9      	s32i.n	a10, a1, 0
  4e:	11b9      	s32i.n	a11, a1, 4
  50:	2189      	s32i.n	a8, a1, 8
  52:	06ed      	mov.n	a14, a6
  54:	07fd      	mov.n	a15, a7
  56:	04cd      	mov.n	a12, a4
  58:	03bd      	mov.n	a11, a3
  5a:	02ad      	mov.n	a10, a2
  5c:	000081        	l32r	a8, fffc005c <op_f32_Load_f32_s+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.op_f32_Load_f32_s+0x18
			5c: R_XTENSA_ASM_EXPAND	.text.profileOp
  5f:	0008e0        	callx8	a8
  62:	0a2d      	mov.n	a2, a10
  64:	f01d      	retw.n

Disassembly of section .text.op_f32_Load_f32_r:

00000000 <op_f32_Load_f32_r>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	4c0c      	movi.n	a12, 4
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_f32_Load_f32_r+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_f32_Load_f32_r+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	0ac8      	l32i.n	a12, a10, 0
  12:	4d0c      	movi.n	a13, 4
  14:	cc6a      	add.n	a12, a12, a6
  16:	1cc1b2        	addi	a11, a1, 28
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Load_f32_r+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Load_f32_r+0x8
			1b: R_XTENSA_ASM_EXPAND	m3_memcpy
  1e:	0008e0        	callx8	a8
  21:	71a8      	l32i.n	a10, a1, 28
  23:	000081        	l32r	a8, fffc0024 <op_f32_Load_f32_r+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.op_f32_Load_f32_r+0xc
			23: R_XTENSA_ASM_EXPAND	__extendsfdf2
  26:	0008e0        	callx8	a8
  29:	000081        	l32r	a8, fffc002c <op_f32_Load_f32_r+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_f32_Load_f32_r
  2c:	01a9      	s32i.n	a10, a1, 0
  2e:	11b9      	s32i.n	a11, a1, 4
  30:	2189      	s32i.n	a8, a1, 8
  32:	06ed      	mov.n	a14, a6
  34:	07fd      	mov.n	a15, a7
  36:	04cd      	mov.n	a12, a4
  38:	03bd      	mov.n	a11, a3
  3a:	02ad      	mov.n	a10, a2
  3c:	000081        	l32r	a8, fffc003c <op_f32_Load_f32_r+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_f32_Load_f32_r+0x10
			3c: R_XTENSA_ASM_EXPAND	.text.profileOp
  3f:	0008e0        	callx8	a8
  42:	0a2d      	mov.n	a2, a10
  44:	f01d      	retw.n

Disassembly of section .text.op_i64_Load_i64_s:

00000000 <op_i64_Load_i64_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Load_i64_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i64_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i64_Load_i64_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i64_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_i64_Load_i64_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i64_s+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0ac8      	l32i.n	a12, a10, 0
  32:	8d0c      	movi.n	a13, 8
  34:	c7ca      	add.n	a12, a7, a12
  36:	18c1b2        	addi	a11, a1, 24
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i64_Load_i64_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i64_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3_memcpy
  3e:	0008e0        	callx8	a8
  41:	000081        	l32r	a8, fffc0044 <op_i64_Load_i64_s+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i64_s
  44:	112192        	l32i	a9, a1, 68
  47:	2189      	s32i.n	a8, a1, 8
  49:	102182        	l32i	a8, a1, 64
  4c:	61e8      	l32i.n	a14, a1, 24
  4e:	71f8      	l32i.n	a15, a1, 28
  50:	0189      	s32i.n	a8, a1, 0
  52:	1199      	s32i.n	a9, a1, 4
  54:	04cd      	mov.n	a12, a4
  56:	03bd      	mov.n	a11, a3
  58:	02ad      	mov.n	a10, a2
  5a:	000081        	l32r	a8, fffc005c <op_i64_Load_i64_s+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i64_s+0x14
			5a: R_XTENSA_ASM_EXPAND	.text.profileOp
  5d:	0008e0        	callx8	a8
  60:	0a2d      	mov.n	a2, a10
  62:	f01d      	retw.n

Disassembly of section .text.op_i64_Load_i64_r:

00000000 <op_i64_Load_i64_r>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	04ad      	mov.n	a10, a4
   b:	000081        	l32r	a8, fffc000c <op_i64_Load_i64_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i64_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ac8      	l32i.n	a12, a10, 0
  13:	08a0d2        	movi	a13, 8
  16:	80cc60        	add	a12, a12, a6
  19:	18c1b2        	addi	a11, a1, 24
  1c:	20a440        	or	a10, a4, a4
  1f:	000081        	l32r	a8, fffc0020 <op_i64_Load_i64_r+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i64_r+0x8
			1f: R_XTENSA_ASM_EXPAND	m3_memcpy
  22:	0008e0        	callx8	a8
  25:	102182        	l32i	a8, a1, 64
  28:	112192        	l32i	a9, a1, 68
  2b:	0189      	s32i.n	a8, a1, 0
  2d:	000081        	l32r	a8, fffc0030 <op_i64_Load_i64_r+0xfffc0030>
			2d: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i64_r
  30:	61e8      	l32i.n	a14, a1, 24
  32:	71f8      	l32i.n	a15, a1, 28
  34:	1199      	s32i.n	a9, a1, 4
  36:	2189      	s32i.n	a8, a1, 8
  38:	04cd      	mov.n	a12, a4
  3a:	03bd      	mov.n	a11, a3
  3c:	02ad      	mov.n	a10, a2
  3e:	000081        	l32r	a8, fffc0040 <op_i64_Load_i64_r+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_i64_Load_i64_r+0xc
			3e: R_XTENSA_ASM_EXPAND	.text.profileOp
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	f01d      	retw.n

Disassembly of section .text.op_i32_Load_i32_s:

00000000 <op_i32_Load_i32_s>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Load_i32_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i32_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_i32_Load_i32_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i32_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	0878      	l32i.n	a7, a8, 0
  2a:	000081        	l32r	a8, fffc002c <op_i32_Load_i32_s+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i32_s+0xc
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	0ac8      	l32i.n	a12, a10, 0
  32:	4d0c      	movi.n	a13, 4
  34:	c7ca      	add.n	a12, a7, a12
  36:	1cc1b2        	addi	a11, a1, 28
  39:	04ad      	mov.n	a10, a4
  3b:	000081        	l32r	a8, fffc003c <op_i32_Load_i32_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i32_s+0x10
			3b: R_XTENSA_ASM_EXPAND	m3_memcpy
  3e:	0008e0        	callx8	a8
  41:	102182        	l32i	a8, a1, 64
  44:	71f8      	l32i.n	a15, a1, 28
  46:	112192        	l32i	a9, a1, 68
  49:	0189      	s32i.n	a8, a1, 0
  4b:	000081        	l32r	a8, fffc004c <op_i32_Load_i32_s+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i32_s
  4e:	0fed      	mov.n	a14, a15
  50:	1199      	s32i.n	a9, a1, 4
  52:	2189      	s32i.n	a8, a1, 8
  54:	31fff0        	srai	a15, a15, 31
  57:	04cd      	mov.n	a12, a4
  59:	03bd      	mov.n	a11, a3
  5b:	20a220        	or	a10, a2, a2
  5e:	000081        	l32r	a8, fffc0060 <op_i32_Load_i32_s+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i32_s+0x14
			5e: R_XTENSA_ASM_EXPAND	.text.profileOp
  61:	0008e0        	callx8	a8
  64:	0a2d      	mov.n	a2, a10
  66:	f01d      	retw.n

Disassembly of section .text.op_i32_Load_i32_r:

00000000 <op_i32_Load_i32_r>:
   0:	008136        	entry	a1, 64
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	04ad      	mov.n	a10, a4
   b:	000081        	l32r	a8, fffc000c <op_i32_Load_i32_r+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i32_r+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ac8      	l32i.n	a12, a10, 0
  13:	4d0c      	movi.n	a13, 4
  15:	80cc60        	add	a12, a12, a6
  18:	1cc1b2        	addi	a11, a1, 28
  1b:	20a440        	or	a10, a4, a4
  1e:	000081        	l32r	a8, fffc0020 <op_i32_Load_i32_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i32_r+0x8
			1e: R_XTENSA_ASM_EXPAND	m3_memcpy
  21:	0008e0        	callx8	a8
  24:	102182        	l32i	a8, a1, 64
  27:	71f8      	l32i.n	a15, a1, 28
  29:	112192        	l32i	a9, a1, 68
  2c:	0189      	s32i.n	a8, a1, 0
  2e:	000081        	l32r	a8, fffc0030 <op_i32_Load_i32_r+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i32_r
  31:	0fed      	mov.n	a14, a15
  33:	1199      	s32i.n	a9, a1, 4
  35:	2189      	s32i.n	a8, a1, 8
  37:	31fff0        	srai	a15, a15, 31
  3a:	04cd      	mov.n	a12, a4
  3c:	03bd      	mov.n	a11, a3
  3e:	02ad      	mov.n	a10, a2
  40:	000081        	l32r	a8, fffc0040 <op_i32_Load_i32_r+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.op_i32_Load_i32_r+0xc
			40: R_XTENSA_ASM_EXPAND	.text.profileOp
  43:	0008e0        	callx8	a8
  46:	0a2d      	mov.n	a2, a10
  48:	f01d      	retw.n

Disassembly of section .text.op_MemFill:

00000000 <op_MemFill>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_MemFill+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x18
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	04a0c2        	movi	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_MemFill+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x1c
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0a8d      	mov.n	a8, a10
  24:	4c0c      	movi.n	a12, 4
  26:	02bd      	mov.n	a11, a2
  28:	04ad      	mov.n	a10, a4
  2a:	0858      	l32i.n	a5, a8, 0
  2c:	000081        	l32r	a8, fffc002c <op_MemFill+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x20
			2c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2f:	0008e0        	callx8	a8
  32:	0ab8      	l32i.n	a11, a10, 0
  34:	4c0c      	movi.n	a12, 4
  36:	a0bb30        	addx4	a11, a11, a3
  39:	20a440        	or	a10, a4, a4
  3c:	000081        	l32r	a8, fffc003c <op_MemFill+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x24
			3c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3f:	0008e0        	callx8	a8
  42:	0ab8      	l32i.n	a11, a10, 0
  44:	06dd      	mov.n	a13, a6
  46:	05cd      	mov.n	a12, a5
  48:	20a440        	or	a10, a4, a4
  4b:	000081        	l32r	a8, fffc004c <op_MemFill+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x28
			4b: R_XTENSA_ASM_EXPAND	m3_memset
  4e:	0008e0        	callx8	a8
  51:	077a16        	beqz	a10, cc <op_MemFill+0xcc>
			51: R_XTENSA_SLOT0_OP	.text.op_MemFill+0xcc
  54:	0000a1        	l32r	a10, fffc0054 <op_MemFill+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x14
  57:	000081        	l32r	a8, fffc0058 <op_MemFill+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x2c
			57: R_XTENSA_ASM_EXPAND	malloc
  5a:	0008e0        	callx8	a8
  5d:	0a5d      	mov.n	a5, a10
  5f:	000081        	l32r	a8, fffc0060 <op_MemFill+0xfffc0060>
			5f: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x30
			5f: R_XTENSA_ASM_EXPAND	esp_log_system_timestamp
  62:	0008e0        	callx8	a8
  65:	0000c1        	l32r	a12, fffc0068 <op_MemFill+0xfffc0068>
			65: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x4
  68:	0000e1        	l32r	a14, fffc0068 <op_MemFill+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_MemFill
  6b:	0000b1        	l32r	a11, fffc006c <op_MemFill+0xfffc006c>
			6b: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x14
  6e:	0add      	mov.n	a13, a10
  70:	20a550        	or	a10, a5, a5
  73:	000081        	l32r	a8, fffc0074 <op_MemFill+0xfffc0074>
			73: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x34
			73: R_XTENSA_ASM_EXPAND	snprintf
  76:	0008e0        	callx8	a8
  79:	0000a1        	l32r	a10, fffc007c <op_MemFill+0xfffc007c>
			79: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x8
  7c:	05bd      	mov.n	a11, a5
  7e:	000081        	l32r	a8, fffc0080 <op_MemFill+0xfffc0080>
			7e: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x38
			7e: R_XTENSA_ASM_EXPAND	safe_printf
  81:	0008e0        	callx8	a8
  84:	05ad      	mov.n	a10, a5
  86:	000081        	l32r	a8, fffc0088 <op_MemFill+0xfffc0088>
			86: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x3c
			86: R_XTENSA_ASM_EXPAND	free
  89:	0008e0        	callx8	a8
  8c:	0000a1        	l32r	a10, fffc008c <op_MemFill+0xfffc008c>
			8c: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x14
  8f:	000081        	l32r	a8, fffc0090 <op_MemFill+0xfffc0090>
			8f: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x40
			8f: R_XTENSA_ASM_EXPAND	malloc
  92:	0008e0        	callx8	a8
  95:	0a5d      	mov.n	a5, a10
  97:	000081        	l32r	a8, fffc0098 <op_MemFill+0xfffc0098>
			97: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x44
			97: R_XTENSA_ASM_EXPAND	esp_log_system_timestamp
  9a:	0008e0        	callx8	a8
  9d:	0000e1        	l32r	a14, fffc00a0 <op_MemFill+0xfffc00a0>
			9d: R_XTENSA_SLOT0_OP	.literal.op_MemFill
  a0:	0000c1        	l32r	a12, fffc00a0 <op_MemFill+0xfffc00a0>
			a0: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0xc
  a3:	0000b1        	l32r	a11, fffc00a4 <op_MemFill+0xfffc00a4>
			a3: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x14
  a6:	0add      	mov.n	a13, a10
  a8:	20a550        	or	a10, a5, a5
  ab:	000081        	l32r	a8, fffc00ac <op_MemFill+0xfffc00ac>
			ab: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x48
			ab: R_XTENSA_ASM_EXPAND	snprintf
  ae:	0008e0        	callx8	a8
  b1:	0000a1        	l32r	a10, fffc00b4 <op_MemFill+0xfffc00b4>
			b1: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x8
  b4:	05bd      	mov.n	a11, a5
  b6:	000081        	l32r	a8, fffc00b8 <op_MemFill+0xfffc00b8>
			b6: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x4c
			b6: R_XTENSA_ASM_EXPAND	safe_printf
  b9:	0008e0        	callx8	a8
  bc:	05ad      	mov.n	a10, a5
  be:	000081        	l32r	a8, fffc00c0 <op_MemFill+0xfffc00c0>
			be: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x50
			be: R_XTENSA_ASM_EXPAND	free
  c1:	0008e0        	callx8	a8
  c4:	5a0c      	movi.n	a10, 5
  c6:	000081        	l32r	a8, fffc00c8 <op_MemFill+0xfffc00c8>
			c6: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x54
			c6: R_XTENSA_ASM_EXPAND	vTaskDelay
  c9:	0008e0        	callx8	a8
  cc:	c188      	l32i.n	a8, a1, 48
  ce:	d198      	l32i.n	a9, a1, 52
  d0:	0189      	s32i.n	a8, a1, 0
  d2:	000081        	l32r	a8, fffc00d4 <op_MemFill+0xfffc00d4>
			d2: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x10
  d5:	1199      	s32i.n	a9, a1, 4
  d7:	2189      	s32i.n	a8, a1, 8
  d9:	06ed      	mov.n	a14, a6
  db:	07fd      	mov.n	a15, a7
  dd:	04cd      	mov.n	a12, a4
  df:	03bd      	mov.n	a11, a3
  e1:	02ad      	mov.n	a10, a2
  e3:	000081        	l32r	a8, fffc00e4 <op_MemFill+0xfffc00e4>
			e3: R_XTENSA_SLOT0_OP	.literal.op_MemFill+0x58
			e3: R_XTENSA_ASM_EXPAND	.text.profileOp
  e6:	0008e0        	callx8	a8
  e9:	0a2d      	mov.n	a2, a10
  eb:	f01d      	retw.n

Disassembly of section .text.op_Entry:

00000000 <op_Entry>:
   0:	006136        	entry	a1, 48
   3:	04a0c2        	movi	a12, 4
   6:	20b220        	or	a11, a2, a2
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_Entry+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_Entry+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0a78      	l32i.n	a7, a10, 0
  14:	0c0c      	movi.n	a12, 0
  16:	c788      	l32i.n	a8, a7, 48
  18:	1e1762        	l16ui	a6, a7, 60
  1b:	881b      	addi.n	a8, a8, 1
  1d:	2017d2        	l16ui	a13, a7, 64
  20:	a06630        	addx4	a6, a6, a3
  23:	c789      	s32i.n	a8, a7, 48
  25:	06bd      	mov.n	a11, a6
  27:	20a440        	or	a10, a4, a4
  2a:	000081        	l32r	a8, fffc002c <op_Entry+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_Entry+0x8
			2a: R_XTENSA_ASM_EXPAND	m3_memset
  2d:	0008e0        	callx8	a8
  30:	1227c2        	l32i	a12, a7, 72
  33:	ec8c      	beqz.n	a12, 45 <op_Entry+0x45>
			33: R_XTENSA_SLOT0_OP	.text.op_Entry+0x45
  35:	2017b2        	l16ui	a11, a7, 64
  38:	2217d2        	l16ui	a13, a7, 68
  3b:	b6ba      	add.n	a11, a6, a11
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_Entry+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_Entry+0xc
			3f: R_XTENSA_ASM_EXPAND	m3_memcpy
  42:	0008e0        	callx8	a8
  45:	02bd      	mov.n	a11, a2
  47:	4c0c      	movi.n	a12, 4
  49:	04ad      	mov.n	a10, a4
  4b:	000081        	l32r	a8, fffc004c <op_Entry+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.op_Entry+0x10
			4b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  4e:	0008e0        	callx8	a8
  51:	000081        	l32r	a8, fffc0054 <op_Entry+0xfffc0054>
			51: R_XTENSA_SLOT0_OP	.literal.op_Entry
  54:	090c      	movi.n	a9, 0
  56:	2189      	s32i.n	a8, a1, 8
  58:	080c      	movi.n	a8, 0
  5a:	1199      	s32i.n	a9, a1, 4
  5c:	0189      	s32i.n	a8, a1, 0
  5e:	0a88      	l32i.n	a8, a10, 0
  60:	0e0c      	movi.n	a14, 0
  62:	0efd      	mov.n	a15, a14
  64:	04cd      	mov.n	a12, a4
  66:	03bd      	mov.n	a11, a3
  68:	a24b      	addi.n	a10, a2, 4
  6a:	0008e0        	callx8	a8
  6d:	000081        	l32r	a8, fffc0070 <op_Entry+0xfffc0070>
			6d: R_XTENSA_SLOT0_OP	.literal.op_Entry+0x14
			6d: R_XTENSA_ASM_EXPAND	backtrace_err
  70:	0008e0        	callx8	a8
  73:	0a2d      	mov.n	a2, a10
  75:	f01d      	retw.n

Disassembly of section .text.EnsureCodePageNumLines:

00000000 <EnsureCodePageNumLines>:
   0:	004136        	entry	a1, 32
   3:	d2a8      	l32i.n	a10, a2, 52
   5:	332b      	addi.n	a3, a3, 2
   7:	000081        	l32r	a8, fffc0008 <EnsureCodePageNumLines+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0x18
			7: R_XTENSA_ASM_EXPAND	NumFreeLines
   a:	0008e0        	callx8	a8
   d:	033a37        	bltu	a10, a3, 14 <EnsureCodePageNumLines+0x14>
			d: R_XTENSA_SLOT0_OP	.text.EnsureCodePageNumLines+0x14
  10:	020c      	movi.n	a2, 0
  12:	f01d      	retw.n
  14:	02a8      	l32i.n	a10, a2, 0
  16:	03bd      	mov.n	a11, a3
  18:	000081        	l32r	a8, fffc0018 <EnsureCodePageNumLines+0xfffc0018>
			18: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0x1c
			18: R_XTENSA_ASM_EXPAND	AcquireCodePageWithCapacity
  1b:	0008e0        	callx8	a8
  1e:	0a3d      	mov.n	a3, a10
  20:	feca16        	beqz	a10, 10 <EnsureCodePageNumLines+0x10>
			20: R_XTENSA_SLOT0_OP	.text.EnsureCodePageNumLines+0x10
  23:	d288      	l32i.n	a8, a2, 52
  25:	20a880        	or	a10, a8, a8
  28:	3868      	l32i.n	a6, a8, 12
  2a:	000081        	l32r	a8, fffc002c <EnsureCodePageNumLines+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0x20
			2a: R_XTENSA_ASM_EXPAND	GetPagePC
  2d:	0008e0        	callx8	a8
  30:	0a7d      	mov.n	a7, a10
  32:	d2a8      	l32i.n	a10, a2, 52
  34:	000081        	l32r	a8, fffc0034 <EnsureCodePageNumLines+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0x24
			34: R_XTENSA_ASM_EXPAND	NumFreeLines
  37:	0008e0        	callx8	a8
  3a:	0aed      	mov.n	a14, a10
  3c:	33f8      	l32i.n	a15, a3, 12
  3e:	0000b1        	l32r	a11, fffc0040 <EnsureCodePageNumLines+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines
  41:	0000a1        	l32r	a10, fffc0044 <EnsureCodePageNumLines+0xfffc0044>
			41: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0x4
  44:	07dd      	mov.n	a13, a7
  46:	06cd      	mov.n	a12, a6
  48:	000081        	l32r	a8, fffc0048 <EnsureCodePageNumLines+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0x28
			48: R_XTENSA_ASM_EXPAND	printf
  4b:	0008e0        	callx8	a8
  4e:	d2a8      	l32i.n	a10, a2, 52
  50:	000081        	l32r	a8, fffc0050 <EnsureCodePageNumLines+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0x2c
			50: R_XTENSA_ASM_EXPAND	NumFreeLines
  53:	0008e0        	callx8	a8
  56:	2e2ab6        	bltui	a10, 2, 88 <EnsureCodePageNumLines+0x88>
			56: R_XTENSA_SLOT0_OP	.text.EnsureCodePageNumLines+0x88
  59:	0000b1        	l32r	a11, fffc005c <EnsureCodePageNumLines+0xfffc005c>
			59: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0x14
  5c:	d2a8      	l32i.n	a10, a2, 52
  5e:	000081        	l32r	a8, fffc0060 <EnsureCodePageNumLines+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0x30
			5e: R_XTENSA_ASM_EXPAND	EmitWord_impl
  61:	0008e0        	callx8	a8
  64:	03ad      	mov.n	a10, a3
  66:	d278      	l32i.n	a7, a2, 52
  68:	000081        	l32r	a8, fffc0068 <EnsureCodePageNumLines+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0x34
			68: R_XTENSA_ASM_EXPAND	GetPagePC
  6b:	0008e0        	callx8	a8
  6e:	0abd      	mov.n	a11, a10
  70:	07ad      	mov.n	a10, a7
  72:	000081        	l32r	a8, fffc0074 <EnsureCodePageNumLines+0xfffc0074>
			72: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0x38
			72: R_XTENSA_ASM_EXPAND	EmitWord_impl
  75:	0008e0        	callx8	a8
  78:	d2b8      	l32i.n	a11, a2, 52
  7a:	02a8      	l32i.n	a10, a2, 0
  7c:	000081        	l32r	a8, fffc007c <EnsureCodePageNumLines+0xfffc007c>
			7c: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0x3c
			7c: R_XTENSA_ASM_EXPAND	ReleaseCodePage
  7f:	0008e0        	callx8	a8
  82:	d239      	s32i.n	a3, a2, 52
  84:	020c      	movi.n	a2, 0
  86:	f01d      	retw.n
  88:	0000d1        	l32r	a13, fffc0088 <EnsureCodePageNumLines+0xfffc0088>
			88: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0x8
  8b:	0000b1        	l32r	a11, fffc008c <EnsureCodePageNumLines+0xfffc008c>
			8b: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0xc
  8e:	0000a1        	l32r	a10, fffc0090 <EnsureCodePageNumLines+0xfffc0090>
			8e: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0x10
  91:	6c2c      	movi.n	a12, 38
  93:	000081        	l32r	a8, fffc0094 <EnsureCodePageNumLines+0xfffc0094>
			93: R_XTENSA_SLOT0_OP	.literal.EnsureCodePageNumLines+0x40
			93: R_XTENSA_ASM_EXPAND	printf
  96:	0008e0        	callx8	a8
  99:	ffef06        	j	59 <EnsureCodePageNumLines+0x59>
			99: R_XTENSA_SLOT0_OP	.text.EnsureCodePageNumLines+0x59

Disassembly of section .text.EmitOp:

00000000 <EmitOp>:
   0:	004136        	entry	a1, 32
   3:	207220        	or	a7, a2, a2
   6:	339c      	beqz.n	a3, 1d <EmitOp+0x1d>
			6: R_XTENSA_SLOT0_OP	.text.EmitOp+0x1d
   8:	d728      	l32i.n	a2, a7, 52
   a:	c28c      	beqz.n	a2, 1a <EmitOp+0x1a>
			a: R_XTENSA_SLOT0_OP	.text.EmitOp+0x1a
   c:	6b0c      	movi.n	a11, 6
   e:	07ad      	mov.n	a10, a7
  10:	000081        	l32r	a8, fffc0010 <EmitOp+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.EmitOp+0xc
			10: R_XTENSA_ASM_EXPAND	.text.EnsureCodePageNumLines
  13:	0008e0        	callx8	a8
  16:	0a2d      	mov.n	a2, a10
  18:	ca9c      	beqz.n	a10, 38 <EmitOp+0x38>
			18: R_XTENSA_SLOT0_OP	.text.EmitOp+0x38
  1a:	f01d      	retw.n
  1c:	00          	.byte	00
  1d:	2e0282        	l8ui	a8, a2, 46
  20:	fe4856        	bnez	a8, 8 <EmitOp+0x8>
			20: R_XTENSA_SLOT0_OP	.text.EmitOp+0x8
  23:	0000d1        	l32r	a13, fffc0024 <EmitOp+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.EmitOp
  26:	0000b1        	l32r	a11, fffc0028 <EmitOp+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.EmitOp+0x4
  29:	0000a1        	l32r	a10, fffc002c <EmitOp+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.EmitOp+0x8
  2c:	8c3c      	movi.n	a12, 56
  2e:	000081        	l32r	a8, fffc0030 <EmitOp+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.EmitOp+0x10
			2e: R_XTENSA_ASM_EXPAND	printf
  31:	0008e0        	callx8	a8
  34:	fff406        	j	8 <EmitOp+0x8>
			34: R_XTENSA_SLOT0_OP	.text.EmitOp+0x8
  37:	00          	.byte	00
  38:	03bd      	mov.n	a11, a3
  3a:	07ad      	mov.n	a10, a7
  3c:	000081        	l32r	a8, fffc003c <EmitOp+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.EmitOp+0x14
			3c: R_XTENSA_ASM_EXPAND	log_emit
  3f:	0008e0        	callx8	a8
  42:	d7a8      	l32i.n	a10, a7, 52
  44:	03bd      	mov.n	a11, a3
  46:	000081        	l32r	a8, fffc0048 <EmitOp+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.EmitOp+0x18
			46: R_XTENSA_ASM_EXPAND	EmitWord_impl
  49:	0008e0        	callx8	a8
  4c:	f01d      	retw.n

Disassembly of section .text.Pop:

00000000 <Pop>:
   0:	004136        	entry	a1, 32
   3:	211282        	l16ui	a8, a2, 66
   6:	131292        	l16ui	a9, a2, 38
   9:	43b987        	bgeu	a9, a8, 50 <Pop+0x50>
			9: R_XTENSA_SLOT0_OP	.text.Pop+0x50
   c:	880b      	addi.n	a8, a8, -1
   e:	f48080        	extui	a8, a8, 0, 16
  11:	909820        	addx2	a9, a8, a2
  14:	a81942        	l16ui	a4, a9, 0x150
  17:	0000a1        	l32r	a10, fffc0018 <Pop+0xfffc0018>
			17: R_XTENSA_SLOT0_OP	.literal.Pop+0x1c
  1a:	b28a      	add.n	a11, a2, a8
  1c:	215282        	s16i	a8, a2, 66
  1f:	a4aa      	add.n	a10, a4, a10
  21:	50a382        	movi	a8, 0x350
  24:	0000c1        	l32r	a12, fffc0024 <Pop+0xfffc0024>
			24: R_XTENSA_SLOT0_OP	.literal.Pop+0x20
  27:	bb8a      	add.n	a11, a11, a8
  29:	f480a0        	extui	a8, a10, 0, 16
  2c:	000b62        	l8ui	a6, a11, 0
  2f:	223c87        	bltu	a12, a8, 55 <Pop+0x55>
			2f: R_XTENSA_SLOT0_OP	.text.Pop+0x55
  32:	000081        	l32r	a8, fffc0034 <Pop+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.Pop+0x18
  35:	170c      	movi.n	a7, 1
  37:	848a      	add.n	a8, a4, a8
  39:	090c      	movi.n	a9, 0
  3b:	937980        	movnez	a7, a9, a8
  3e:	907720        	addx2	a7, a7, a2
  41:	06d772        	addmi	a7, a7, 0x600
  44:	291782        	l16ui	a8, a7, 82
  47:	0a1816        	beqz	a8, ec <Pop+0xec>
			47: R_XTENSA_SLOT0_OP	.text.Pop+0xec
  4a:	00a082        	movi	a8, 0
  4d:	295782        	s16i	a8, a7, 82
  50:	020c      	movi.n	a2, 0
  52:	f01d      	retw.n
  54:	00          	.byte	00
  55:	251282        	l16ui	a8, a2, 74
  58:	f43487        	bltu	a4, a8, 50 <Pop+0x50>
			58: R_XTENSA_SLOT0_OP	.text.Pop+0x50
  5b:	237480        	sext	a7, a4, 15
  5e:	02a787        	bge	a7, a8, 64 <Pop+0x64>
			5e: R_XTENSA_SLOT0_OP	.text.Pop+0x64
  61:	002706        	j	101 <Pop+0x101>
			61: R_XTENSA_SLOT0_OP	.text.Pop+0x101
  64:	06d282        	addmi	a8, a2, 0x600
  67:	281882        	l16ui	a8, a8, 80
  6a:	022787        	blt	a7, a8, 70 <Pop+0x70>
			6a: R_XTENSA_SLOT0_OP	.text.Pop+0x70
  6d:	0029c6        	j	118 <Pop+0x118>
			6d: R_XTENSA_SLOT0_OP	.text.Pop+0x118
  70:	20a660        	or	a10, a6, a6
  73:	000081        	l32r	a8, fffc0074 <Pop+0xfffc0074>
			73: R_XTENSA_SLOT0_OP	.literal.Pop+0x24
			73: R_XTENSA_ASM_EXPAND	Is64BitType
  76:	0008e0        	callx8	a8
  79:	070c      	movi.n	a7, 0
  7b:	847a      	add.n	a8, a4, a7
  7d:	ba1b      	addi.n	a11, a10, 1
  7f:	238880        	sext	a8, a8, 15
  82:	50a452        	movi	a5, 0x450
  85:	828a      	add.n	a8, a2, a8
  87:	f4b0b0        	extui	a11, a11, 0, 16
  8a:	06ad      	mov.n	a10, a6
  8c:	385a      	add.n	a3, a8, a5
  8e:	beb7b7        	bgeu	a7, a11, 50 <Pop+0x50>
			8e: R_XTENSA_SLOT0_OP	.text.Pop+0x50
  91:	0003b2        	l8ui	a11, a3, 0
  94:	cb0b      	addi.n	a12, a11, -1
  96:	7bac      	beqz.n	a11, c1 <Pop+0xc1>
			96: R_XTENSA_SLOT0_OP	.text.Pop+0xc1
  98:	0043c2        	s8i	a12, a3, 0
  9b:	000081        	l32r	a8, fffc009c <Pop+0xfffc009c>
			9b: R_XTENSA_SLOT0_OP	.literal.Pop+0x28
			9b: R_XTENSA_ASM_EXPAND	Is64BitType
  9e:	0008e0        	callx8	a8
  a1:	faba16        	beqz	a10, 50 <Pop+0x50>
			a1: R_XTENSA_SLOT0_OP	.text.Pop+0x50
  a4:	771b      	addi.n	a7, a7, 1
  a6:	f47070        	extui	a7, a7, 0, 16
  a9:	847a      	add.n	a8, a4, a7
  ab:	238880        	sext	a8, a8, 15
  ae:	828a      	add.n	a8, a2, a8
  b0:	2b0c      	movi.n	a11, 2
  b2:	06ad      	mov.n	a10, a6
  b4:	385a      	add.n	a3, a8, a5
  b6:	96b7b7        	bgeu	a7, a11, 50 <Pop+0x50>
			b6: R_XTENSA_SLOT0_OP	.text.Pop+0x50
  b9:	0003b2        	l8ui	a11, a3, 0
  bc:	cb0b      	addi.n	a12, a11, -1
  be:	fd6b56        	bnez	a11, 98 <Pop+0x98>
			be: R_XTENSA_SLOT0_OP	.text.Pop+0x98
  c1:	0000b1        	l32r	a11, fffc00c4 <Pop+0xfffc00c4>
			c1: R_XTENSA_SLOT0_OP	.literal.Pop+0x4
  c4:	0000d1        	l32r	a13, fffc00c4 <Pop+0xfffc00c4>
			c4: R_XTENSA_SLOT0_OP	.literal.Pop+0x14
  c7:	0000a1        	l32r	a10, fffc00c8 <Pop+0xfffc00c8>
			c7: R_XTENSA_SLOT0_OP	.literal.Pop+0x8
  ca:	a4a1c2        	movi	a12, 0x1a4
  cd:	000081        	l32r	a8, fffc00d0 <Pop+0xfffc00d0>
			cd: R_XTENSA_SLOT0_OP	.literal.Pop+0x2c
			cd: R_XTENSA_ASM_EXPAND	printf
  d0:	0008e0        	callx8	a8
  d3:	0003b2        	l8ui	a11, a3, 0
  d6:	06ad      	mov.n	a10, a6
  d8:	ffcbb2        	addi	a11, a11, -1
  db:	0043b2        	s8i	a11, a3, 0
  de:	000081        	l32r	a8, fffc00e0 <Pop+0xfffc00e0>
			de: R_XTENSA_SLOT0_OP	.literal.Pop+0x30
			de: R_XTENSA_ASM_EXPAND	Is64BitType
  e1:	0008e0        	callx8	a8
  e4:	fbca56        	bnez	a10, a4 <Pop+0xa4>
			e4: R_XTENSA_SLOT0_OP	.text.Pop+0xa4
  e7:	020c      	movi.n	a2, 0
  e9:	f01d      	retw.n
  eb:	00          	.byte	00
  ec:	0000d1        	l32r	a13, fffc00ec <Pop+0xfffc00ec>
			ec: R_XTENSA_SLOT0_OP	.literal.Pop
  ef:	0000b1        	l32r	a11, fffc00f0 <Pop+0xfffc00f0>
			ef: R_XTENSA_SLOT0_OP	.literal.Pop+0x4
  f2:	0000a1        	l32r	a10, fffc00f4 <Pop+0xfffc00f4>
			f2: R_XTENSA_SLOT0_OP	.literal.Pop+0x8
  f5:	b8a1c2        	movi	a12, 0x1b8
  f8:	000081        	l32r	a8, fffc00f8 <Pop+0xfffc00f8>
			f8: R_XTENSA_SLOT0_OP	.literal.Pop+0x34
			f8: R_XTENSA_ASM_EXPAND	printf
  fb:	0008e0        	callx8	a8
  fe:	ffd206        	j	4a <Pop+0x4a>
			fe: R_XTENSA_SLOT0_OP	.text.Pop+0x4a
 101:	0000d1        	l32r	a13, fffc0104 <Pop+0xfffc0104>
			101: R_XTENSA_SLOT0_OP	.literal.Pop+0xc
 104:	0000b1        	l32r	a11, fffc0104 <Pop+0xfffc0104>
			104: R_XTENSA_SLOT0_OP	.literal.Pop+0x4
 107:	0000a1        	l32r	a10, fffc0108 <Pop+0xfffc0108>
			107: R_XTENSA_SLOT0_OP	.literal.Pop+0x8
 10a:	a1a1c2        	movi	a12, 0x1a1
 10d:	000081        	l32r	a8, fffc0110 <Pop+0xfffc0110>
			10d: R_XTENSA_SLOT0_OP	.literal.Pop+0x38
			10d: R_XTENSA_ASM_EXPAND	printf
 110:	0008e0        	callx8	a8
 113:	ffd346        	j	64 <Pop+0x64>
			113: R_XTENSA_SLOT0_OP	.text.Pop+0x64
 116:	00          	.byte	00
 117:	00          	.byte	00
 118:	0000d1        	l32r	a13, fffc0118 <Pop+0xfffc0118>
			118: R_XTENSA_SLOT0_OP	.literal.Pop+0x10
 11b:	0000b1        	l32r	a11, fffc011c <Pop+0xfffc011c>
			11b: R_XTENSA_SLOT0_OP	.literal.Pop+0x4
 11e:	0000a1        	l32r	a10, fffc0120 <Pop+0xfffc0120>
			11e: R_XTENSA_SLOT0_OP	.literal.Pop+0x8
 121:	a2a1c2        	movi	a12, 0x1a2
 124:	000081        	l32r	a8, fffc0124 <Pop+0xfffc0124>
			124: R_XTENSA_SLOT0_OP	.literal.Pop+0x3c
			124: R_XTENSA_ASM_EXPAND	printf
 127:	0008e0        	callx8	a8
 12a:	ffd086        	j	70 <Pop+0x70>
			12a: R_XTENSA_SLOT0_OP	.text.Pop+0x70

Disassembly of section .text.op_f64_CopySign_ss:

00000000 <op_f64_CopySign_ss>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	7179      	s32i.n	a7, a1, 28
   7:	4c0c      	movi.n	a12, 4
   9:	04ad      	mov.n	a10, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_CopySign_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_CopySign_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_CopySign_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_CopySign_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0add      	mov.n	a13, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	1d78      	l32i.n	a7, a13, 4
  2a:	065d      	mov.n	a5, a6
  2c:	002d62        	l32i	a6, a13, 0
  2f:	000081        	l32r	a8, fffc0030 <op_f64_CopySign_ss+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_f64_CopySign_ss+0xc
			2f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  32:	0008e0        	callx8	a8
  35:	0ab8      	l32i.n	a11, a10, 0
  37:	8c0c      	movi.n	a12, 8
  39:	a0bb30        	addx4	a11, a11, a3
  3c:	04ad      	mov.n	a10, a4
  3e:	000081        	l32r	a8, fffc0040 <op_f64_CopySign_ss+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_f64_CopySign_ss+0x10
			3e: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  41:	0008e0        	callx8	a8
  44:	1ab8      	l32i.n	a11, a10, 4
  46:	0a88      	l32i.n	a8, a10, 0
  48:	bbba      	add.n	a11, a11, a11
  4a:	05af70        	extui	a10, a7, 31, 1
  4d:	404100        	ssai	1
  50:	819ab0        	src	a9, a10, a11
  53:	0000a1        	l32r	a10, fffc0054 <op_f64_CopySign_ss+0xfffc0054>
			53: R_XTENSA_SLOT0_OP	.literal.op_f64_CopySign_ss
  56:	71f8      	l32i.n	a15, a1, 28
  58:	21a9      	s32i.n	a10, a1, 8
  5a:	0189      	s32i.n	a8, a1, 0
  5c:	1199      	s32i.n	a9, a1, 4
  5e:	05ed      	mov.n	a14, a5
  60:	04cd      	mov.n	a12, a4
  62:	03bd      	mov.n	a11, a3
  64:	02ad      	mov.n	a10, a2
  66:	000081        	l32r	a8, fffc0068 <op_f64_CopySign_ss+0xfffc0068>
			66: R_XTENSA_SLOT0_OP	.literal.op_f64_CopySign_ss+0x14
			66: R_XTENSA_ASM_EXPAND	.text.profileOp
  69:	0008e0        	callx8	a8
  6c:	0a2d      	mov.n	a2, a10
  6e:	f01d      	retw.n

Disassembly of section .text.op_f64_CopySign_sr:

00000000 <op_f64_CopySign_sr>:
   0:	008136        	entry	a1, 64
   3:	07fd      	mov.n	a15, a7
   5:	71f9      	s32i.n	a15, a1, 28
   7:	02bd      	mov.n	a11, a2
   9:	4c0c      	movi.n	a12, 4
   b:	20a440        	or	a10, a4, a4
   e:	112172        	l32i	a7, a1, 68
  11:	205660        	or	a5, a6, a6
  14:	102162        	l32i	a6, a1, 64
  17:	000081        	l32r	a8, fffc0018 <op_f64_CopySign_sr+0xfffc0018>
			17: R_XTENSA_SLOT0_OP	.literal.op_f64_CopySign_sr+0x4
			17: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1a:	0008e0        	callx8	a8
  1d:	0ab8      	l32i.n	a11, a10, 0
  1f:	8c0c      	movi.n	a12, 8
  21:	a0bb30        	addx4	a11, a11, a3
  24:	04ad      	mov.n	a10, a4
  26:	000081        	l32r	a8, fffc0028 <op_f64_CopySign_sr+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_f64_CopySign_sr+0x8
			26: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  29:	0008e0        	callx8	a8
  2c:	1aa8      	l32i.n	a10, a10, 4
  2e:	b77a      	add.n	a11, a7, a7
  30:	05afa0        	extui	a10, a10, 31, 1
  33:	404100        	ssai	1
  36:	819ab0        	src	a9, a10, a11
  39:	0000a1        	l32r	a10, fffc003c <op_f64_CopySign_sr+0xfffc003c>
			39: R_XTENSA_SLOT0_OP	.literal.op_f64_CopySign_sr
  3c:	71f8      	l32i.n	a15, a1, 28
  3e:	21a9      	s32i.n	a10, a1, 8
  40:	0169      	s32i.n	a6, a1, 0
  42:	1199      	s32i.n	a9, a1, 4
  44:	05ed      	mov.n	a14, a5
  46:	04cd      	mov.n	a12, a4
  48:	03bd      	mov.n	a11, a3
  4a:	02ad      	mov.n	a10, a2
  4c:	000081        	l32r	a8, fffc004c <op_f64_CopySign_sr+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.op_f64_CopySign_sr+0xc
			4c: R_XTENSA_ASM_EXPAND	.text.profileOp
  4f:	0008e0        	callx8	a8
  52:	0a2d      	mov.n	a2, a10
  54:	f01d      	retw.n

Disassembly of section .text.op_f64_CopySign_rs:

00000000 <op_f64_CopySign_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_CopySign_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_CopySign_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_CopySign_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_CopySign_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1a88      	l32i.n	a8, a10, 4
  22:	d198      	l32i.n	a9, a1, 52
  24:	0ac8      	l32i.n	a12, a10, 0
  26:	a88a      	add.n	a10, a8, a8
  28:	058f90        	extui	a8, a9, 31, 1
  2b:	404100        	ssai	1
  2e:	81d8a0        	src	a13, a8, a10
  31:	000081        	l32r	a8, fffc0034 <op_f64_CopySign_rs+0xfffc0034>
			31: R_XTENSA_SLOT0_OP	.literal.op_f64_CopySign_rs
  34:	01c9      	s32i.n	a12, a1, 0
  36:	2189      	s32i.n	a8, a1, 8
  38:	11d9      	s32i.n	a13, a1, 4
  3a:	06ed      	mov.n	a14, a6
  3c:	07fd      	mov.n	a15, a7
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_f64_CopySign_rs+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_f64_CopySign_rs+0xc
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n

Disassembly of section .text.op_f64_Max_ss:

00000000 <op_f64_Max_ss>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	04ad      	mov.n	a10, a4
   9:	7179      	s32i.n	a7, a1, 28
   b:	000081        	l32r	a8, fffc000c <op_f64_Max_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_ss+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	08a0c2        	movi	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_f64_Max_ss+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_ss+0x10
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	0a8d      	mov.n	a8, a10
  24:	4c0c      	movi.n	a12, 4
  26:	02bd      	mov.n	a11, a2
  28:	04ad      	mov.n	a10, a4
  2a:	1878      	l32i.n	a7, a8, 4
  2c:	065d      	mov.n	a5, a6
  2e:	0868      	l32i.n	a6, a8, 0
  30:	000081        	l32r	a8, fffc0030 <op_f64_Max_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_ss+0x14
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	8c0c      	movi.n	a12, 8
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	20a440        	or	a10, a4, a4
  40:	000081        	l32r	a8, fffc0040 <op_f64_Max_ss+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_ss+0x18
			40: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  43:	0008e0        	callx8	a8
  46:	0a88      	l32i.n	a8, a10, 0
  48:	1a98      	l32i.n	a9, a10, 4
  4a:	4189      	s32i.n	a8, a1, 16
  4c:	5199      	s32i.n	a9, a1, 20
  4e:	08cd      	mov.n	a12, a8
  50:	09dd      	mov.n	a13, a9
  52:	06ad      	mov.n	a10, a6
  54:	07bd      	mov.n	a11, a7
  56:	000081        	l32r	a8, fffc0058 <op_f64_Max_ss+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_ss+0x1c
			56: R_XTENSA_ASM_EXPAND	__unorddf2
  59:	0008e0        	callx8	a8
  5c:	064a56        	bnez	a10, c4 <op_f64_Max_ss+0xc4>
			5c: R_XTENSA_SLOT0_OP	.text.op_f64_Max_ss+0xc4
  5f:	41a8      	l32i.n	a10, a1, 16
  61:	51b8      	l32i.n	a11, a1, 20
  63:	0c0c      	movi.n	a12, 0
  65:	0d0c      	movi.n	a13, 0
  67:	000081        	l32r	a8, fffc0068 <op_f64_Max_ss+0xfffc0068>
			67: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_ss+0x20
			67: R_XTENSA_ASM_EXPAND	__eqdf2
  6a:	0008e0        	callx8	a8
  6d:	9afc      	bnez.n	a10, aa <op_f64_Max_ss+0xaa>
			6d: R_XTENSA_SLOT0_OP	.text.op_f64_Max_ss+0xaa
  6f:	41c8      	l32i.n	a12, a1, 16
  71:	51d8      	l32i.n	a13, a1, 20
  73:	06ad      	mov.n	a10, a6
  75:	07bd      	mov.n	a11, a7
  77:	000081        	l32r	a8, fffc0078 <op_f64_Max_ss+0xfffc0078>
			77: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_ss+0x24
			77: R_XTENSA_ASM_EXPAND	__eqdf2
  7a:	0008e0        	callx8	a8
  7d:	9aec      	bnez.n	a10, aa <op_f64_Max_ss+0xaa>
			7d: R_XTENSA_SLOT0_OP	.text.op_f64_Max_ss+0xaa
  7f:	5198      	l32i.n	a9, a1, 20
  81:	060c      	movi.n	a6, 0
  83:	070c      	movi.n	a7, 0
  85:	0049d6        	bgez	a9, 8d <op_f64_Max_ss+0x8d>
			85: R_XTENSA_SLOT0_OP	.text.op_f64_Max_ss+0x8d
  88:	000071        	l32r	a7, fffc0088 <op_f64_Max_ss+0xfffc0088>
			88: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_ss+0x8
  8b:	060c      	movi.n	a6, 0
  8d:	000081        	l32r	a8, fffc0090 <op_f64_Max_ss+0xfffc0090>
			8d: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_ss
  90:	71f8      	l32i.n	a15, a1, 28
  92:	0169      	s32i.n	a6, a1, 0
  94:	1179      	s32i.n	a7, a1, 4
  96:	2189      	s32i.n	a8, a1, 8
  98:	05ed      	mov.n	a14, a5
  9a:	04cd      	mov.n	a12, a4
  9c:	03bd      	mov.n	a11, a3
  9e:	02ad      	mov.n	a10, a2
  a0:	000081        	l32r	a8, fffc00a0 <op_f64_Max_ss+0xfffc00a0>
			a0: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_ss+0x28
			a0: R_XTENSA_ASM_EXPAND	.text.profileOp
  a3:	0008e0        	callx8	a8
  a6:	0a2d      	mov.n	a2, a10
  a8:	f01d      	retw.n
  aa:	41c8      	l32i.n	a12, a1, 16
  ac:	51d8      	l32i.n	a13, a1, 20
  ae:	06ad      	mov.n	a10, a6
  b0:	07bd      	mov.n	a11, a7
  b2:	000081        	l32r	a8, fffc00b4 <op_f64_Max_ss+0xfffc00b4>
			b2: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_ss+0x2c
			b2: R_XTENSA_ASM_EXPAND	__ltdf2
  b5:	0008e0        	callx8	a8
  b8:	fd1ad6        	bgez	a10, 8d <op_f64_Max_ss+0x8d>
			b8: R_XTENSA_SLOT0_OP	.text.op_f64_Max_ss+0x8d
  bb:	4168      	l32i.n	a6, a1, 16
  bd:	5178      	l32i.n	a7, a1, 20
  bf:	fff286        	j	8d <op_f64_Max_ss+0x8d>
			bf: R_XTENSA_SLOT0_OP	.text.op_f64_Max_ss+0x8d
  c2:	00          	.byte	00
  c3:	00          	.byte	00
  c4:	000071        	l32r	a7, fffc00c4 <op_f64_Max_ss+0xfffc00c4>
			c4: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_ss+0x4
  c7:	060c      	movi.n	a6, 0
  c9:	fff006        	j	8d <op_f64_Max_ss+0x8d>
			c9: R_XTENSA_SLOT0_OP	.text.op_f64_Max_ss+0x8d

Disassembly of section .text.op_f64_Sqrt_s:

00000000 <op_f64_Sqrt_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Sqrt_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Sqrt_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	08a0c2        	movi	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_f64_Sqrt_s+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_f64_Sqrt_s+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	1ab8      	l32i.n	a11, a10, 4
  24:	0aa8      	l32i.n	a10, a10, 0
  26:	000081        	l32r	a8, fffc0028 <op_f64_Sqrt_s+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_f64_Sqrt_s+0xc
			26: R_XTENSA_ASM_EXPAND	sqrt
  29:	0008e0        	callx8	a8
  2c:	000081        	l32r	a8, fffc002c <op_f64_Sqrt_s+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f64_Sqrt_s
  2f:	01a9      	s32i.n	a10, a1, 0
  31:	11b9      	s32i.n	a11, a1, 4
  33:	2189      	s32i.n	a8, a1, 8
  35:	06ed      	mov.n	a14, a6
  37:	07fd      	mov.n	a15, a7
  39:	04cd      	mov.n	a12, a4
  3b:	03bd      	mov.n	a11, a3
  3d:	02ad      	mov.n	a10, a2
  3f:	000081        	l32r	a8, fffc0040 <op_f64_Sqrt_s+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f64_Sqrt_s+0x10
			3f: R_XTENSA_ASM_EXPAND	.text.profileOp
  42:	0008e0        	callx8	a8
  45:	0a2d      	mov.n	a2, a10
  47:	f01d      	retw.n

Disassembly of section .text.op_f64_Sqrt_r:

00000000 <op_f64_Sqrt_r>:
   0:	006136        	entry	a1, 48
   3:	c1a8      	l32i.n	a10, a1, 48
   5:	d1b8      	l32i.n	a11, a1, 52
   7:	000081        	l32r	a8, fffc0008 <op_f64_Sqrt_r+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.op_f64_Sqrt_r+0x4
			7: R_XTENSA_ASM_EXPAND	sqrt
   a:	0008e0        	callx8	a8
   d:	000081        	l32r	a8, fffc0010 <op_f64_Sqrt_r+0xfffc0010>
			d: R_XTENSA_SLOT0_OP	.literal.op_f64_Sqrt_r
  10:	01a9      	s32i.n	a10, a1, 0
  12:	11b9      	s32i.n	a11, a1, 4
  14:	2189      	s32i.n	a8, a1, 8
  16:	06ed      	mov.n	a14, a6
  18:	07fd      	mov.n	a15, a7
  1a:	04cd      	mov.n	a12, a4
  1c:	03bd      	mov.n	a11, a3
  1e:	02ad      	mov.n	a10, a2
  20:	000081        	l32r	a8, fffc0020 <op_f64_Sqrt_r+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Sqrt_r+0x8
			20: R_XTENSA_ASM_EXPAND	.text.profileOp
  23:	0008e0        	callx8	a8
  26:	0a2d      	mov.n	a2, a10
  28:	f01d      	retw.n

Disassembly of section .text.op_f64_Nearest_s:

00000000 <op_f64_Nearest_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Nearest_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Nearest_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	08a0c2        	movi	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_f64_Nearest_s+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_f64_Nearest_s+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	1ab8      	l32i.n	a11, a10, 4
  24:	0aa8      	l32i.n	a10, a10, 0
  26:	000081        	l32r	a8, fffc0028 <op_f64_Nearest_s+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_f64_Nearest_s+0xc
			26: R_XTENSA_ASM_EXPAND	rint
  29:	0008e0        	callx8	a8
  2c:	000081        	l32r	a8, fffc002c <op_f64_Nearest_s+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f64_Nearest_s
  2f:	01a9      	s32i.n	a10, a1, 0
  31:	11b9      	s32i.n	a11, a1, 4
  33:	2189      	s32i.n	a8, a1, 8
  35:	06ed      	mov.n	a14, a6
  37:	07fd      	mov.n	a15, a7
  39:	04cd      	mov.n	a12, a4
  3b:	03bd      	mov.n	a11, a3
  3d:	02ad      	mov.n	a10, a2
  3f:	000081        	l32r	a8, fffc0040 <op_f64_Nearest_s+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f64_Nearest_s+0x10
			3f: R_XTENSA_ASM_EXPAND	.text.profileOp
  42:	0008e0        	callx8	a8
  45:	0a2d      	mov.n	a2, a10
  47:	f01d      	retw.n

Disassembly of section .text.op_f64_Nearest_r:

00000000 <op_f64_Nearest_r>:
   0:	006136        	entry	a1, 48
   3:	c1a8      	l32i.n	a10, a1, 48
   5:	d1b8      	l32i.n	a11, a1, 52
   7:	000081        	l32r	a8, fffc0008 <op_f64_Nearest_r+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.op_f64_Nearest_r+0x4
			7: R_XTENSA_ASM_EXPAND	rint
   a:	0008e0        	callx8	a8
   d:	000081        	l32r	a8, fffc0010 <op_f64_Nearest_r+0xfffc0010>
			d: R_XTENSA_SLOT0_OP	.literal.op_f64_Nearest_r
  10:	01a9      	s32i.n	a10, a1, 0
  12:	11b9      	s32i.n	a11, a1, 4
  14:	2189      	s32i.n	a8, a1, 8
  16:	06ed      	mov.n	a14, a6
  18:	07fd      	mov.n	a15, a7
  1a:	04cd      	mov.n	a12, a4
  1c:	03bd      	mov.n	a11, a3
  1e:	02ad      	mov.n	a10, a2
  20:	000081        	l32r	a8, fffc0020 <op_f64_Nearest_r+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Nearest_r+0x8
			20: R_XTENSA_ASM_EXPAND	.text.profileOp
  23:	0008e0        	callx8	a8
  26:	0a2d      	mov.n	a2, a10
  28:	f01d      	retw.n

Disassembly of section .text.op_f64_Trunc_s:

00000000 <op_f64_Trunc_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Trunc_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Trunc_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	08a0c2        	movi	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_f64_Trunc_s+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_f64_Trunc_s+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	1ab8      	l32i.n	a11, a10, 4
  24:	0aa8      	l32i.n	a10, a10, 0
  26:	000081        	l32r	a8, fffc0028 <op_f64_Trunc_s+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_f64_Trunc_s+0xc
			26: R_XTENSA_ASM_EXPAND	trunc
  29:	0008e0        	callx8	a8
  2c:	000081        	l32r	a8, fffc002c <op_f64_Trunc_s+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f64_Trunc_s
  2f:	01a9      	s32i.n	a10, a1, 0
  31:	11b9      	s32i.n	a11, a1, 4
  33:	2189      	s32i.n	a8, a1, 8
  35:	06ed      	mov.n	a14, a6
  37:	07fd      	mov.n	a15, a7
  39:	04cd      	mov.n	a12, a4
  3b:	03bd      	mov.n	a11, a3
  3d:	02ad      	mov.n	a10, a2
  3f:	000081        	l32r	a8, fffc0040 <op_f64_Trunc_s+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f64_Trunc_s+0x10
			3f: R_XTENSA_ASM_EXPAND	.text.profileOp
  42:	0008e0        	callx8	a8
  45:	0a2d      	mov.n	a2, a10
  47:	f01d      	retw.n

Disassembly of section .text.op_f64_Trunc_r:

00000000 <op_f64_Trunc_r>:
   0:	006136        	entry	a1, 48
   3:	c1a8      	l32i.n	a10, a1, 48
   5:	d1b8      	l32i.n	a11, a1, 52
   7:	000081        	l32r	a8, fffc0008 <op_f64_Trunc_r+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.op_f64_Trunc_r+0x4
			7: R_XTENSA_ASM_EXPAND	trunc
   a:	0008e0        	callx8	a8
   d:	000081        	l32r	a8, fffc0010 <op_f64_Trunc_r+0xfffc0010>
			d: R_XTENSA_SLOT0_OP	.literal.op_f64_Trunc_r
  10:	01a9      	s32i.n	a10, a1, 0
  12:	11b9      	s32i.n	a11, a1, 4
  14:	2189      	s32i.n	a8, a1, 8
  16:	06ed      	mov.n	a14, a6
  18:	07fd      	mov.n	a15, a7
  1a:	04cd      	mov.n	a12, a4
  1c:	03bd      	mov.n	a11, a3
  1e:	02ad      	mov.n	a10, a2
  20:	000081        	l32r	a8, fffc0020 <op_f64_Trunc_r+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Trunc_r+0x8
			20: R_XTENSA_ASM_EXPAND	.text.profileOp
  23:	0008e0        	callx8	a8
  26:	0a2d      	mov.n	a2, a10
  28:	f01d      	retw.n

Disassembly of section .text.op_f64_Floor_s:

00000000 <op_f64_Floor_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Floor_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Floor_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	08a0c2        	movi	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_f64_Floor_s+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_f64_Floor_s+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	1ab8      	l32i.n	a11, a10, 4
  24:	0aa8      	l32i.n	a10, a10, 0
  26:	000081        	l32r	a8, fffc0028 <op_f64_Floor_s+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_f64_Floor_s+0xc
			26: R_XTENSA_ASM_EXPAND	floor
  29:	0008e0        	callx8	a8
  2c:	000081        	l32r	a8, fffc002c <op_f64_Floor_s+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f64_Floor_s
  2f:	01a9      	s32i.n	a10, a1, 0
  31:	11b9      	s32i.n	a11, a1, 4
  33:	2189      	s32i.n	a8, a1, 8
  35:	06ed      	mov.n	a14, a6
  37:	07fd      	mov.n	a15, a7
  39:	04cd      	mov.n	a12, a4
  3b:	03bd      	mov.n	a11, a3
  3d:	02ad      	mov.n	a10, a2
  3f:	000081        	l32r	a8, fffc0040 <op_f64_Floor_s+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f64_Floor_s+0x10
			3f: R_XTENSA_ASM_EXPAND	.text.profileOp
  42:	0008e0        	callx8	a8
  45:	0a2d      	mov.n	a2, a10
  47:	f01d      	retw.n

Disassembly of section .text.op_f64_Floor_r:

00000000 <op_f64_Floor_r>:
   0:	006136        	entry	a1, 48
   3:	c1a8      	l32i.n	a10, a1, 48
   5:	d1b8      	l32i.n	a11, a1, 52
   7:	000081        	l32r	a8, fffc0008 <op_f64_Floor_r+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.op_f64_Floor_r+0x4
			7: R_XTENSA_ASM_EXPAND	floor
   a:	0008e0        	callx8	a8
   d:	000081        	l32r	a8, fffc0010 <op_f64_Floor_r+0xfffc0010>
			d: R_XTENSA_SLOT0_OP	.literal.op_f64_Floor_r
  10:	01a9      	s32i.n	a10, a1, 0
  12:	11b9      	s32i.n	a11, a1, 4
  14:	2189      	s32i.n	a8, a1, 8
  16:	06ed      	mov.n	a14, a6
  18:	07fd      	mov.n	a15, a7
  1a:	04cd      	mov.n	a12, a4
  1c:	03bd      	mov.n	a11, a3
  1e:	02ad      	mov.n	a10, a2
  20:	000081        	l32r	a8, fffc0020 <op_f64_Floor_r+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Floor_r+0x8
			20: R_XTENSA_ASM_EXPAND	.text.profileOp
  23:	0008e0        	callx8	a8
  26:	0a2d      	mov.n	a2, a10
  28:	f01d      	retw.n

Disassembly of section .text.op_f64_Ceil_s:

00000000 <op_f64_Ceil_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f64_Ceil_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Ceil_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	08a0c2        	movi	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_f64_Ceil_s+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_f64_Ceil_s+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	1ab8      	l32i.n	a11, a10, 4
  24:	0aa8      	l32i.n	a10, a10, 0
  26:	000081        	l32r	a8, fffc0028 <op_f64_Ceil_s+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_f64_Ceil_s+0xc
			26: R_XTENSA_ASM_EXPAND	ceil
  29:	0008e0        	callx8	a8
  2c:	000081        	l32r	a8, fffc002c <op_f64_Ceil_s+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f64_Ceil_s
  2f:	01a9      	s32i.n	a10, a1, 0
  31:	11b9      	s32i.n	a11, a1, 4
  33:	2189      	s32i.n	a8, a1, 8
  35:	06ed      	mov.n	a14, a6
  37:	07fd      	mov.n	a15, a7
  39:	04cd      	mov.n	a12, a4
  3b:	03bd      	mov.n	a11, a3
  3d:	02ad      	mov.n	a10, a2
  3f:	000081        	l32r	a8, fffc0040 <op_f64_Ceil_s+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f64_Ceil_s+0x10
			3f: R_XTENSA_ASM_EXPAND	.text.profileOp
  42:	0008e0        	callx8	a8
  45:	0a2d      	mov.n	a2, a10
  47:	f01d      	retw.n

Disassembly of section .text.op_f64_Ceil_r:

00000000 <op_f64_Ceil_r>:
   0:	006136        	entry	a1, 48
   3:	c1a8      	l32i.n	a10, a1, 48
   5:	d1b8      	l32i.n	a11, a1, 52
   7:	000081        	l32r	a8, fffc0008 <op_f64_Ceil_r+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.op_f64_Ceil_r+0x4
			7: R_XTENSA_ASM_EXPAND	ceil
   a:	0008e0        	callx8	a8
   d:	000081        	l32r	a8, fffc0010 <op_f64_Ceil_r+0xfffc0010>
			d: R_XTENSA_SLOT0_OP	.literal.op_f64_Ceil_r
  10:	01a9      	s32i.n	a10, a1, 0
  12:	11b9      	s32i.n	a11, a1, 4
  14:	2189      	s32i.n	a8, a1, 8
  16:	06ed      	mov.n	a14, a6
  18:	07fd      	mov.n	a15, a7
  1a:	04cd      	mov.n	a12, a4
  1c:	03bd      	mov.n	a11, a3
  1e:	02ad      	mov.n	a10, a2
  20:	000081        	l32r	a8, fffc0020 <op_f64_Ceil_r+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_f64_Ceil_r+0x8
			20: R_XTENSA_ASM_EXPAND	.text.profileOp
  23:	0008e0        	callx8	a8
  26:	0a2d      	mov.n	a2, a10
  28:	f01d      	retw.n

Disassembly of section .text.op_f32_CopySign_ss:

00000000 <op_f32_CopySign_ss>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_CopySign_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_ss+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f32_CopySign_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_ss+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	02bd      	mov.n	a11, a2
  24:	4c0c      	movi.n	a12, 4
  26:	04ad      	mov.n	a10, a4
  28:	002852        	l32i	a5, a8, 0
  2b:	000081        	l32r	a8, fffc002c <op_f32_CopySign_ss+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_ss+0xc
			2b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2e:	0008e0        	callx8	a8
  31:	0ab8      	l32i.n	a11, a10, 0
  33:	4c0c      	movi.n	a12, 4
  35:	a0bb30        	addx4	a11, a11, a3
  38:	04ad      	mov.n	a10, a4
  3a:	000081        	l32r	a8, fffc003c <op_f32_CopySign_ss+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_ss+0x10
			3a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  3d:	0008e0        	callx8	a8
  40:	000a03        	lsi	f0, a10, 0
  43:	000081        	l32r	a8, fffc0044 <op_f32_CopySign_ss+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_ss
  46:	fa0010        	abs.s	f0, f0
  49:	fa1060        	neg.s	f1, f0
  4c:	ab0150        	movltz.s	f0, f1, a5
  4f:	faa040        	rfr	a10, f0
  52:	2189      	s32i.n	a8, a1, 8
  54:	000081        	l32r	a8, fffc0054 <op_f32_CopySign_ss+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_ss+0x14
			54: R_XTENSA_ASM_EXPAND	__extendsfdf2
  57:	0008e0        	callx8	a8
  5a:	01a9      	s32i.n	a10, a1, 0
  5c:	11b9      	s32i.n	a11, a1, 4
  5e:	06ed      	mov.n	a14, a6
  60:	07fd      	mov.n	a15, a7
  62:	04cd      	mov.n	a12, a4
  64:	03bd      	mov.n	a11, a3
  66:	02ad      	mov.n	a10, a2
  68:	000081        	l32r	a8, fffc0068 <op_f32_CopySign_ss+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_ss+0x18
			68: R_XTENSA_ASM_EXPAND	.text.profileOp
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	f01d      	retw.n

Disassembly of section .text.op_f32_CopySign_sr:

00000000 <op_f32_CopySign_sr>:
   0:	008136        	entry	a1, 64
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_CopySign_sr+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_sr+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f32_CopySign_sr+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_sr+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	1121b2        	l32i	a11, a1, 68
  23:	0a5d      	mov.n	a5, a10
  25:	1021a2        	l32i	a10, a1, 64
  28:	000081        	l32r	a8, fffc0028 <op_f32_CopySign_sr+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_sr+0xc
			28: R_XTENSA_ASM_EXPAND	__truncdfsf2
  2b:	0008e0        	callx8	a8
  2e:	fa1a50        	wfr	f1, a10
  31:	0588      	l32i.n	a8, a5, 0
  33:	fa0110        	abs.s	f0, f1
  36:	fa1060        	neg.s	f1, f0
  39:	ab0180        	movltz.s	f0, f1, a8
  3c:	000081        	l32r	a8, fffc003c <op_f32_CopySign_sr+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_sr
  3f:	71a9      	s32i.n	a10, a1, 28
  41:	2189      	s32i.n	a8, a1, 8
  43:	faa040        	rfr	a10, f0
  46:	000081        	l32r	a8, fffc0048 <op_f32_CopySign_sr+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_sr+0x10
			46: R_XTENSA_ASM_EXPAND	__extendsfdf2
  49:	0008e0        	callx8	a8
  4c:	01a9      	s32i.n	a10, a1, 0
  4e:	11b9      	s32i.n	a11, a1, 4
  50:	06ed      	mov.n	a14, a6
  52:	07fd      	mov.n	a15, a7
  54:	04cd      	mov.n	a12, a4
  56:	03bd      	mov.n	a11, a3
  58:	02ad      	mov.n	a10, a2
  5a:	000081        	l32r	a8, fffc005c <op_f32_CopySign_sr+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_sr+0x14
			5a: R_XTENSA_ASM_EXPAND	.text.profileOp
  5d:	0008e0        	callx8	a8
  60:	0a2d      	mov.n	a2, a10
  62:	f01d      	retw.n

Disassembly of section .text.op_f32_CopySign_rs:

00000000 <op_f32_CopySign_rs>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_CopySign_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_rs+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f32_CopySign_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_rs+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	d1b8      	l32i.n	a11, a1, 52
  22:	0a5d      	mov.n	a5, a10
  24:	c1a8      	l32i.n	a10, a1, 48
  26:	000081        	l32r	a8, fffc0028 <op_f32_CopySign_rs+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_rs+0xc
			26: R_XTENSA_ASM_EXPAND	__truncdfsf2
  29:	0008e0        	callx8	a8
  2c:	000503        	lsi	f0, a5, 0
  2f:	000081        	l32r	a8, fffc0030 <op_f32_CopySign_rs+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_rs
  32:	fa0010        	abs.s	f0, f0
  35:	fa1060        	neg.s	f1, f0
  38:	ab01a0        	movltz.s	f0, f1, a10
  3b:	faa040        	rfr	a10, f0
  3e:	2189      	s32i.n	a8, a1, 8
  40:	000081        	l32r	a8, fffc0040 <op_f32_CopySign_rs+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_rs+0x10
			40: R_XTENSA_ASM_EXPAND	__extendsfdf2
  43:	0008e0        	callx8	a8
  46:	01a9      	s32i.n	a10, a1, 0
  48:	11b9      	s32i.n	a11, a1, 4
  4a:	06ed      	mov.n	a14, a6
  4c:	07fd      	mov.n	a15, a7
  4e:	04cd      	mov.n	a12, a4
  50:	03bd      	mov.n	a11, a3
  52:	02ad      	mov.n	a10, a2
  54:	000081        	l32r	a8, fffc0054 <op_f32_CopySign_rs+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_f32_CopySign_rs+0x14
			54: R_XTENSA_ASM_EXPAND	.text.profileOp
  57:	0008e0        	callx8	a8
  5a:	0a2d      	mov.n	a2, a10
  5c:	f01d      	retw.n

Disassembly of section .text.op_f32_Sqrt_s:

00000000 <op_f32_Sqrt_s>:
   0:	006136        	entry	a1, 48
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f32_Sqrt_s+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f32_Sqrt_s+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	4c0c      	movi.n	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Sqrt_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Sqrt_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0aa8      	l32i.n	a10, a10, 0
  23:	000081        	l32r	a8, fffc0024 <op_f32_Sqrt_s+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.op_f32_Sqrt_s+0xc
			23: R_XTENSA_ASM_EXPAND	sqrtf
  26:	0008e0        	callx8	a8
  29:	000081        	l32r	a8, fffc002c <op_f32_Sqrt_s+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_f32_Sqrt_s
  2c:	2189      	s32i.n	a8, a1, 8
  2e:	000081        	l32r	a8, fffc0030 <op_f32_Sqrt_s+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f32_Sqrt_s+0x10
			2e: R_XTENSA_ASM_EXPAND	__extendsfdf2
  31:	0008e0        	callx8	a8
  34:	01a9      	s32i.n	a10, a1, 0
  36:	11b9      	s32i.n	a11, a1, 4
  38:	06ed      	mov.n	a14, a6
  3a:	07fd      	mov.n	a15, a7
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_f32_Sqrt_s+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_f32_Sqrt_s+0x14
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_f32_Sqrt_r:

00000000 <op_f32_Sqrt_r>:
   0:	006136        	entry	a1, 48
   3:	d1b8      	l32i.n	a11, a1, 52
   5:	c1a8      	l32i.n	a10, a1, 48
   7:	000081        	l32r	a8, fffc0008 <op_f32_Sqrt_r+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.op_f32_Sqrt_r+0x4
			7: R_XTENSA_ASM_EXPAND	__truncdfsf2
   a:	0008e0        	callx8	a8
   d:	000081        	l32r	a8, fffc0010 <op_f32_Sqrt_r+0xfffc0010>
			d: R_XTENSA_SLOT0_OP	.literal.op_f32_Sqrt_r+0x8
			d: R_XTENSA_ASM_EXPAND	sqrtf
  10:	0008e0        	callx8	a8
  13:	000081        	l32r	a8, fffc0014 <op_f32_Sqrt_r+0xfffc0014>
			13: R_XTENSA_SLOT0_OP	.literal.op_f32_Sqrt_r
  16:	2189      	s32i.n	a8, a1, 8
  18:	000081        	l32r	a8, fffc0018 <op_f32_Sqrt_r+0xfffc0018>
			18: R_XTENSA_SLOT0_OP	.literal.op_f32_Sqrt_r+0xc
			18: R_XTENSA_ASM_EXPAND	__extendsfdf2
  1b:	0008e0        	callx8	a8
  1e:	01a9      	s32i.n	a10, a1, 0
  20:	11b9      	s32i.n	a11, a1, 4
  22:	06ed      	mov.n	a14, a6
  24:	07fd      	mov.n	a15, a7
  26:	04cd      	mov.n	a12, a4
  28:	03bd      	mov.n	a11, a3
  2a:	02ad      	mov.n	a10, a2
  2c:	000081        	l32r	a8, fffc002c <op_f32_Sqrt_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f32_Sqrt_r+0x10
			2c: R_XTENSA_ASM_EXPAND	.text.profileOp
  2f:	0008e0        	callx8	a8
  32:	0a2d      	mov.n	a2, a10
  34:	f01d      	retw.n

Disassembly of section .text.op_f32_Nearest_s:

00000000 <op_f32_Nearest_s>:
   0:	006136        	entry	a1, 48
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f32_Nearest_s+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f32_Nearest_s+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	4c0c      	movi.n	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Nearest_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Nearest_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0aa8      	l32i.n	a10, a10, 0
  23:	000081        	l32r	a8, fffc0024 <op_f32_Nearest_s+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.op_f32_Nearest_s+0xc
			23: R_XTENSA_ASM_EXPAND	rintf
  26:	0008e0        	callx8	a8
  29:	000081        	l32r	a8, fffc002c <op_f32_Nearest_s+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_f32_Nearest_s
  2c:	2189      	s32i.n	a8, a1, 8
  2e:	000081        	l32r	a8, fffc0030 <op_f32_Nearest_s+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f32_Nearest_s+0x10
			2e: R_XTENSA_ASM_EXPAND	__extendsfdf2
  31:	0008e0        	callx8	a8
  34:	01a9      	s32i.n	a10, a1, 0
  36:	11b9      	s32i.n	a11, a1, 4
  38:	06ed      	mov.n	a14, a6
  3a:	07fd      	mov.n	a15, a7
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_f32_Nearest_s+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_f32_Nearest_s+0x14
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_f32_Nearest_r:

00000000 <op_f32_Nearest_r>:
   0:	006136        	entry	a1, 48
   3:	d1b8      	l32i.n	a11, a1, 52
   5:	c1a8      	l32i.n	a10, a1, 48
   7:	000081        	l32r	a8, fffc0008 <op_f32_Nearest_r+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.op_f32_Nearest_r+0x4
			7: R_XTENSA_ASM_EXPAND	__truncdfsf2
   a:	0008e0        	callx8	a8
   d:	000081        	l32r	a8, fffc0010 <op_f32_Nearest_r+0xfffc0010>
			d: R_XTENSA_SLOT0_OP	.literal.op_f32_Nearest_r+0x8
			d: R_XTENSA_ASM_EXPAND	rintf
  10:	0008e0        	callx8	a8
  13:	000081        	l32r	a8, fffc0014 <op_f32_Nearest_r+0xfffc0014>
			13: R_XTENSA_SLOT0_OP	.literal.op_f32_Nearest_r
  16:	2189      	s32i.n	a8, a1, 8
  18:	000081        	l32r	a8, fffc0018 <op_f32_Nearest_r+0xfffc0018>
			18: R_XTENSA_SLOT0_OP	.literal.op_f32_Nearest_r+0xc
			18: R_XTENSA_ASM_EXPAND	__extendsfdf2
  1b:	0008e0        	callx8	a8
  1e:	01a9      	s32i.n	a10, a1, 0
  20:	11b9      	s32i.n	a11, a1, 4
  22:	06ed      	mov.n	a14, a6
  24:	07fd      	mov.n	a15, a7
  26:	04cd      	mov.n	a12, a4
  28:	03bd      	mov.n	a11, a3
  2a:	02ad      	mov.n	a10, a2
  2c:	000081        	l32r	a8, fffc002c <op_f32_Nearest_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f32_Nearest_r+0x10
			2c: R_XTENSA_ASM_EXPAND	.text.profileOp
  2f:	0008e0        	callx8	a8
  32:	0a2d      	mov.n	a2, a10
  34:	f01d      	retw.n

Disassembly of section .text.op_f32_Trunc_s:

00000000 <op_f32_Trunc_s>:
   0:	006136        	entry	a1, 48
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f32_Trunc_s+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f32_Trunc_s+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	4c0c      	movi.n	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Trunc_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Trunc_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0aa8      	l32i.n	a10, a10, 0
  23:	000081        	l32r	a8, fffc0024 <op_f32_Trunc_s+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.op_f32_Trunc_s+0xc
			23: R_XTENSA_ASM_EXPAND	truncf
  26:	0008e0        	callx8	a8
  29:	000081        	l32r	a8, fffc002c <op_f32_Trunc_s+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_f32_Trunc_s
  2c:	2189      	s32i.n	a8, a1, 8
  2e:	000081        	l32r	a8, fffc0030 <op_f32_Trunc_s+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f32_Trunc_s+0x10
			2e: R_XTENSA_ASM_EXPAND	__extendsfdf2
  31:	0008e0        	callx8	a8
  34:	01a9      	s32i.n	a10, a1, 0
  36:	11b9      	s32i.n	a11, a1, 4
  38:	06ed      	mov.n	a14, a6
  3a:	07fd      	mov.n	a15, a7
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_f32_Trunc_s+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_f32_Trunc_s+0x14
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_f32_Trunc_r:

00000000 <op_f32_Trunc_r>:
   0:	006136        	entry	a1, 48
   3:	d1b8      	l32i.n	a11, a1, 52
   5:	c1a8      	l32i.n	a10, a1, 48
   7:	000081        	l32r	a8, fffc0008 <op_f32_Trunc_r+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.op_f32_Trunc_r+0x4
			7: R_XTENSA_ASM_EXPAND	__truncdfsf2
   a:	0008e0        	callx8	a8
   d:	000081        	l32r	a8, fffc0010 <op_f32_Trunc_r+0xfffc0010>
			d: R_XTENSA_SLOT0_OP	.literal.op_f32_Trunc_r+0x8
			d: R_XTENSA_ASM_EXPAND	truncf
  10:	0008e0        	callx8	a8
  13:	000081        	l32r	a8, fffc0014 <op_f32_Trunc_r+0xfffc0014>
			13: R_XTENSA_SLOT0_OP	.literal.op_f32_Trunc_r
  16:	2189      	s32i.n	a8, a1, 8
  18:	000081        	l32r	a8, fffc0018 <op_f32_Trunc_r+0xfffc0018>
			18: R_XTENSA_SLOT0_OP	.literal.op_f32_Trunc_r+0xc
			18: R_XTENSA_ASM_EXPAND	__extendsfdf2
  1b:	0008e0        	callx8	a8
  1e:	01a9      	s32i.n	a10, a1, 0
  20:	11b9      	s32i.n	a11, a1, 4
  22:	06ed      	mov.n	a14, a6
  24:	07fd      	mov.n	a15, a7
  26:	04cd      	mov.n	a12, a4
  28:	03bd      	mov.n	a11, a3
  2a:	02ad      	mov.n	a10, a2
  2c:	000081        	l32r	a8, fffc002c <op_f32_Trunc_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f32_Trunc_r+0x10
			2c: R_XTENSA_ASM_EXPAND	.text.profileOp
  2f:	0008e0        	callx8	a8
  32:	0a2d      	mov.n	a2, a10
  34:	f01d      	retw.n

Disassembly of section .text.op_f32_Floor_s:

00000000 <op_f32_Floor_s>:
   0:	006136        	entry	a1, 48
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f32_Floor_s+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f32_Floor_s+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	4c0c      	movi.n	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Floor_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Floor_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0aa8      	l32i.n	a10, a10, 0
  23:	000081        	l32r	a8, fffc0024 <op_f32_Floor_s+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.op_f32_Floor_s+0xc
			23: R_XTENSA_ASM_EXPAND	floorf
  26:	0008e0        	callx8	a8
  29:	000081        	l32r	a8, fffc002c <op_f32_Floor_s+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_f32_Floor_s
  2c:	2189      	s32i.n	a8, a1, 8
  2e:	000081        	l32r	a8, fffc0030 <op_f32_Floor_s+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f32_Floor_s+0x10
			2e: R_XTENSA_ASM_EXPAND	__extendsfdf2
  31:	0008e0        	callx8	a8
  34:	01a9      	s32i.n	a10, a1, 0
  36:	11b9      	s32i.n	a11, a1, 4
  38:	06ed      	mov.n	a14, a6
  3a:	07fd      	mov.n	a15, a7
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_f32_Floor_s+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_f32_Floor_s+0x14
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_f32_Floor_r:

00000000 <op_f32_Floor_r>:
   0:	006136        	entry	a1, 48
   3:	d1b8      	l32i.n	a11, a1, 52
   5:	c1a8      	l32i.n	a10, a1, 48
   7:	000081        	l32r	a8, fffc0008 <op_f32_Floor_r+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.op_f32_Floor_r+0x4
			7: R_XTENSA_ASM_EXPAND	__truncdfsf2
   a:	0008e0        	callx8	a8
   d:	000081        	l32r	a8, fffc0010 <op_f32_Floor_r+0xfffc0010>
			d: R_XTENSA_SLOT0_OP	.literal.op_f32_Floor_r+0x8
			d: R_XTENSA_ASM_EXPAND	floorf
  10:	0008e0        	callx8	a8
  13:	000081        	l32r	a8, fffc0014 <op_f32_Floor_r+0xfffc0014>
			13: R_XTENSA_SLOT0_OP	.literal.op_f32_Floor_r
  16:	2189      	s32i.n	a8, a1, 8
  18:	000081        	l32r	a8, fffc0018 <op_f32_Floor_r+0xfffc0018>
			18: R_XTENSA_SLOT0_OP	.literal.op_f32_Floor_r+0xc
			18: R_XTENSA_ASM_EXPAND	__extendsfdf2
  1b:	0008e0        	callx8	a8
  1e:	01a9      	s32i.n	a10, a1, 0
  20:	11b9      	s32i.n	a11, a1, 4
  22:	06ed      	mov.n	a14, a6
  24:	07fd      	mov.n	a15, a7
  26:	04cd      	mov.n	a12, a4
  28:	03bd      	mov.n	a11, a3
  2a:	02ad      	mov.n	a10, a2
  2c:	000081        	l32r	a8, fffc002c <op_f32_Floor_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f32_Floor_r+0x10
			2c: R_XTENSA_ASM_EXPAND	.text.profileOp
  2f:	0008e0        	callx8	a8
  32:	0a2d      	mov.n	a2, a10
  34:	f01d      	retw.n

Disassembly of section .text.op_f32_Ceil_s:

00000000 <op_f32_Ceil_s>:
   0:	006136        	entry	a1, 48
   3:	20b220        	or	a11, a2, a2
   6:	04a0c2        	movi	a12, 4
   9:	20a440        	or	a10, a4, a4
   c:	000081        	l32r	a8, fffc000c <op_f32_Ceil_s+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f32_Ceil_s+0x4
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	4c0c      	movi.n	a12, 4
  16:	a0bb30        	addx4	a11, a11, a3
  19:	04ad      	mov.n	a10, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Ceil_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Ceil_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0aa8      	l32i.n	a10, a10, 0
  23:	000081        	l32r	a8, fffc0024 <op_f32_Ceil_s+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.op_f32_Ceil_s+0xc
			23: R_XTENSA_ASM_EXPAND	ceilf
  26:	0008e0        	callx8	a8
  29:	000081        	l32r	a8, fffc002c <op_f32_Ceil_s+0xfffc002c>
			29: R_XTENSA_SLOT0_OP	.literal.op_f32_Ceil_s
  2c:	2189      	s32i.n	a8, a1, 8
  2e:	000081        	l32r	a8, fffc0030 <op_f32_Ceil_s+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f32_Ceil_s+0x10
			2e: R_XTENSA_ASM_EXPAND	__extendsfdf2
  31:	0008e0        	callx8	a8
  34:	01a9      	s32i.n	a10, a1, 0
  36:	11b9      	s32i.n	a11, a1, 4
  38:	06ed      	mov.n	a14, a6
  3a:	07fd      	mov.n	a15, a7
  3c:	04cd      	mov.n	a12, a4
  3e:	03bd      	mov.n	a11, a3
  40:	02ad      	mov.n	a10, a2
  42:	000081        	l32r	a8, fffc0044 <op_f32_Ceil_s+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.op_f32_Ceil_s+0x14
			42: R_XTENSA_ASM_EXPAND	.text.profileOp
  45:	0008e0        	callx8	a8
  48:	0a2d      	mov.n	a2, a10
  4a:	f01d      	retw.n

Disassembly of section .text.op_f32_Ceil_r:

00000000 <op_f32_Ceil_r>:
   0:	006136        	entry	a1, 48
   3:	d1b8      	l32i.n	a11, a1, 52
   5:	c1a8      	l32i.n	a10, a1, 48
   7:	000081        	l32r	a8, fffc0008 <op_f32_Ceil_r+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.op_f32_Ceil_r+0x4
			7: R_XTENSA_ASM_EXPAND	__truncdfsf2
   a:	0008e0        	callx8	a8
   d:	000081        	l32r	a8, fffc0010 <op_f32_Ceil_r+0xfffc0010>
			d: R_XTENSA_SLOT0_OP	.literal.op_f32_Ceil_r+0x8
			d: R_XTENSA_ASM_EXPAND	ceilf
  10:	0008e0        	callx8	a8
  13:	000081        	l32r	a8, fffc0014 <op_f32_Ceil_r+0xfffc0014>
			13: R_XTENSA_SLOT0_OP	.literal.op_f32_Ceil_r
  16:	2189      	s32i.n	a8, a1, 8
  18:	000081        	l32r	a8, fffc0018 <op_f32_Ceil_r+0xfffc0018>
			18: R_XTENSA_SLOT0_OP	.literal.op_f32_Ceil_r+0xc
			18: R_XTENSA_ASM_EXPAND	__extendsfdf2
  1b:	0008e0        	callx8	a8
  1e:	01a9      	s32i.n	a10, a1, 0
  20:	11b9      	s32i.n	a11, a1, 4
  22:	06ed      	mov.n	a14, a6
  24:	07fd      	mov.n	a15, a7
  26:	04cd      	mov.n	a12, a4
  28:	03bd      	mov.n	a11, a3
  2a:	02ad      	mov.n	a10, a2
  2c:	000081        	l32r	a8, fffc002c <op_f32_Ceil_r+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_f32_Ceil_r+0x10
			2c: R_XTENSA_ASM_EXPAND	.text.profileOp
  2f:	0008e0        	callx8	a8
  32:	0a2d      	mov.n	a2, a10
  34:	f01d      	retw.n

Disassembly of section .text.op_u64_Popcnt_s:

00000000 <op_u64_Popcnt_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Popcnt_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Popcnt_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	08a0c2        	movi	a12, 8
  16:	a0bb30        	addx4	a11, a11, a3
  19:	20a440        	or	a10, a4, a4
  1c:	000081        	l32r	a8, fffc001c <op_u64_Popcnt_s+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.op_u64_Popcnt_s+0x8
			1c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1f:	0008e0        	callx8	a8
  22:	1ab8      	l32i.n	a11, a10, 4
  24:	0aa8      	l32i.n	a10, a10, 0
  26:	000081        	l32r	a8, fffc0028 <op_u64_Popcnt_s+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_u64_Popcnt_s+0xc
			26: R_XTENSA_ASM_EXPAND	__popcountdi2
  29:	0008e0        	callx8	a8
  2c:	000081        	l32r	a8, fffc002c <op_u64_Popcnt_s+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_Popcnt_s
  2f:	d198      	l32i.n	a9, a1, 52
  31:	2189      	s32i.n	a8, a1, 8
  33:	c188      	l32i.n	a8, a1, 48
  35:	0aed      	mov.n	a14, a10
  37:	31ffa0        	srai	a15, a10, 31
  3a:	0189      	s32i.n	a8, a1, 0
  3c:	1199      	s32i.n	a9, a1, 4
  3e:	04cd      	mov.n	a12, a4
  40:	03bd      	mov.n	a11, a3
  42:	02ad      	mov.n	a10, a2
  44:	000081        	l32r	a8, fffc0044 <op_u64_Popcnt_s+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.op_u64_Popcnt_s+0x10
			44: R_XTENSA_ASM_EXPAND	.text.profileOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n

Disassembly of section .text.op_u64_Popcnt_r:

00000000 <op_u64_Popcnt_r>:
   0:	006136        	entry	a1, 48
   3:	07bd      	mov.n	a11, a7
   5:	06ad      	mov.n	a10, a6
   7:	000081        	l32r	a8, fffc0008 <op_u64_Popcnt_r+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.op_u64_Popcnt_r+0x4
			7: R_XTENSA_ASM_EXPAND	__popcountdi2
   a:	0008e0        	callx8	a8
   d:	000081        	l32r	a8, fffc0010 <op_u64_Popcnt_r+0xfffc0010>
			d: R_XTENSA_SLOT0_OP	.literal.op_u64_Popcnt_r
  10:	d198      	l32i.n	a9, a1, 52
  12:	2189      	s32i.n	a8, a1, 8
  14:	c188      	l32i.n	a8, a1, 48
  16:	0aed      	mov.n	a14, a10
  18:	31ffa0        	srai	a15, a10, 31
  1b:	0189      	s32i.n	a8, a1, 0
  1d:	1199      	s32i.n	a9, a1, 4
  1f:	04cd      	mov.n	a12, a4
  21:	03bd      	mov.n	a11, a3
  23:	20a220        	or	a10, a2, a2
  26:	000081        	l32r	a8, fffc0028 <op_u64_Popcnt_r+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_u64_Popcnt_r+0x8
			26: R_XTENSA_ASM_EXPAND	.text.profileOp
  29:	0008e0        	callx8	a8
  2c:	0a2d      	mov.n	a2, a10
  2e:	f01d      	retw.n

Disassembly of section .text.op_u64_Ctz_s:

00000000 <op_u64_Ctz_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Ctz_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Ctz_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_u64_Ctz_s+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_u64_Ctz_s+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	18b8      	l32i.n	a11, a8, 4
  25:	0aa8      	l32i.n	a10, a10, 0
  27:	20fab0        	or	a15, a10, a11
  2a:	6fac      	beqz.n	a15, 54 <op_u64_Ctz_s+0x54>
			2a: R_XTENSA_SLOT0_OP	.text.op_u64_Ctz_s+0x54
  2c:	000081        	l32r	a8, fffc002c <op_u64_Ctz_s+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.op_u64_Ctz_s+0xc
			2c: R_XTENSA_ASM_EXPAND	__ctzdi2
  2f:	0008e0        	callx8	a8
  32:	0aed      	mov.n	a14, a10
  34:	31ffa0        	srai	a15, a10, 31
  37:	c188      	l32i.n	a8, a1, 48
  39:	d198      	l32i.n	a9, a1, 52
  3b:	0189      	s32i.n	a8, a1, 0
  3d:	000081        	l32r	a8, fffc0040 <op_u64_Ctz_s+0xfffc0040>
			3d: R_XTENSA_SLOT0_OP	.literal.op_u64_Ctz_s
  40:	1199      	s32i.n	a9, a1, 4
  42:	2189      	s32i.n	a8, a1, 8
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_u64_Ctz_s+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_u64_Ctz_s+0x10
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n
  54:	0e4c      	movi.n	a14, 64
  56:	fff746        	j	37 <op_u64_Ctz_s+0x37>
			56: R_XTENSA_SLOT0_OP	.text.op_u64_Ctz_s+0x37

Disassembly of section .text.op_u64_Ctz_r:

00000000 <op_u64_Ctz_r>:
   0:	006136        	entry	a1, 48
   3:	20f670        	or	a15, a6, a7
   6:	07bd      	mov.n	a11, a7
   8:	06ad      	mov.n	a10, a6
   a:	6fac      	beqz.n	a15, 34 <op_u64_Ctz_r+0x34>
			a: R_XTENSA_SLOT0_OP	.text.op_u64_Ctz_r+0x34
   c:	000081        	l32r	a8, fffc000c <op_u64_Ctz_r+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_u64_Ctz_r+0x4
			c: R_XTENSA_ASM_EXPAND	__ctzdi2
   f:	0008e0        	callx8	a8
  12:	0aed      	mov.n	a14, a10
  14:	31ffa0        	srai	a15, a10, 31
  17:	c188      	l32i.n	a8, a1, 48
  19:	d198      	l32i.n	a9, a1, 52
  1b:	0189      	s32i.n	a8, a1, 0
  1d:	000081        	l32r	a8, fffc0020 <op_u64_Ctz_r+0xfffc0020>
			1d: R_XTENSA_SLOT0_OP	.literal.op_u64_Ctz_r
  20:	1199      	s32i.n	a9, a1, 4
  22:	2189      	s32i.n	a8, a1, 8
  24:	04cd      	mov.n	a12, a4
  26:	03bd      	mov.n	a11, a3
  28:	02ad      	mov.n	a10, a2
  2a:	000081        	l32r	a8, fffc002c <op_u64_Ctz_r+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_u64_Ctz_r+0x8
			2a: R_XTENSA_ASM_EXPAND	.text.profileOp
  2d:	0008e0        	callx8	a8
  30:	0a2d      	mov.n	a2, a10
  32:	f01d      	retw.n
  34:	0e4c      	movi.n	a14, 64
  36:	fff746        	j	17 <op_u64_Ctz_r+0x17>
			36: R_XTENSA_SLOT0_OP	.text.op_u64_Ctz_r+0x17

Disassembly of section .text.op_u64_Clz_s:

00000000 <op_u64_Clz_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u64_Clz_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u64_Clz_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u64_Clz_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u64_Clz_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0ae8      	l32i.n	a14, a10, 0
  22:	1a88      	l32i.n	a8, a10, 4
  24:	20fe80        	or	a15, a14, a8
  27:	9fac      	beqz.n	a15, 54 <op_u64_Clz_s+0x54>
			27: R_XTENSA_SLOT0_OP	.text.op_u64_Clz_s+0x54
  29:	40fee0        	nsau	a14, a14
  2c:	40f890        	nsau	a9, a8
  2f:	20cee2        	addi	a14, a14, 32
  32:	93e980        	movnez	a14, a9, a8
  35:	0f0c      	movi.n	a15, 0
  37:	c188      	l32i.n	a8, a1, 48
  39:	d198      	l32i.n	a9, a1, 52
  3b:	0189      	s32i.n	a8, a1, 0
  3d:	000081        	l32r	a8, fffc0040 <op_u64_Clz_s+0xfffc0040>
			3d: R_XTENSA_SLOT0_OP	.literal.op_u64_Clz_s
  40:	1199      	s32i.n	a9, a1, 4
  42:	2189      	s32i.n	a8, a1, 8
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_u64_Clz_s+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_u64_Clz_s+0xc
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n
  54:	0e4c      	movi.n	a14, 64
  56:	fff746        	j	37 <op_u64_Clz_s+0x37>
			56: R_XTENSA_SLOT0_OP	.text.op_u64_Clz_s+0x37

Disassembly of section .text.op_u64_Clz_r:

00000000 <op_u64_Clz_r>:
   0:	006136        	entry	a1, 48
   3:	20f670        	or	a15, a6, a7
   6:	02ad      	mov.n	a10, a2
   8:	03bd      	mov.n	a11, a3
   a:	04cd      	mov.n	a12, a4
   c:	4fac      	beqz.n	a15, 34 <op_u64_Clz_r+0x34>
			c: R_XTENSA_SLOT0_OP	.text.op_u64_Clz_r+0x34
   e:	40f6e0        	nsau	a14, a6
  11:	40f780        	nsau	a8, a7
  14:	20cee2        	addi	a14, a14, 32
  17:	93e870        	movnez	a14, a8, a7
  1a:	c188      	l32i.n	a8, a1, 48
  1c:	d198      	l32i.n	a9, a1, 52
  1e:	0189      	s32i.n	a8, a1, 0
  20:	000081        	l32r	a8, fffc0020 <op_u64_Clz_r+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.op_u64_Clz_r
  23:	0f0c      	movi.n	a15, 0
  25:	1199      	s32i.n	a9, a1, 4
  27:	026182        	s32i	a8, a1, 8
  2a:	000081        	l32r	a8, fffc002c <op_u64_Clz_r+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_u64_Clz_r+0x4
			2a: R_XTENSA_ASM_EXPAND	.text.profileOp
  2d:	0008e0        	callx8	a8
  30:	0a2d      	mov.n	a2, a10
  32:	f01d      	retw.n
  34:	c188      	l32i.n	a8, a1, 48
  36:	d198      	l32i.n	a9, a1, 52
  38:	0189      	s32i.n	a8, a1, 0
  3a:	000081        	l32r	a8, fffc003c <op_u64_Clz_r+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u64_Clz_r
  3d:	0e4c      	movi.n	a14, 64
  3f:	1199      	s32i.n	a9, a1, 4
  41:	2189      	s32i.n	a8, a1, 8
  43:	000081        	l32r	a8, fffc0044 <op_u64_Clz_r+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.op_u64_Clz_r+0x8
			43: R_XTENSA_ASM_EXPAND	.text.profileOp
  46:	0008e0        	callx8	a8
  49:	0a2d      	mov.n	a2, a10
  4b:	f01d      	retw.n

Disassembly of section .text.op_u32_Popcnt_s:

00000000 <op_u32_Popcnt_s>:
   0:	006136        	entry	a1, 48
   3:	02bd      	mov.n	a11, a2
   5:	04a0c2        	movi	a12, 4
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Popcnt_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Popcnt_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Popcnt_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Popcnt_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0aa8      	l32i.n	a10, a10, 0
  22:	000081        	l32r	a8, fffc0024 <op_u32_Popcnt_s+0xfffc0024>
			22: R_XTENSA_SLOT0_OP	.literal.op_u32_Popcnt_s+0xc
			22: R_XTENSA_ASM_EXPAND	__popcountsi2
  25:	0008e0        	callx8	a8
  28:	000081        	l32r	a8, fffc0028 <op_u32_Popcnt_s+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.op_u32_Popcnt_s
  2b:	d198      	l32i.n	a9, a1, 52
  2d:	2189      	s32i.n	a8, a1, 8
  2f:	c188      	l32i.n	a8, a1, 48
  31:	0aed      	mov.n	a14, a10
  33:	31ffa0        	srai	a15, a10, 31
  36:	0189      	s32i.n	a8, a1, 0
  38:	1199      	s32i.n	a9, a1, 4
  3a:	04cd      	mov.n	a12, a4
  3c:	03bd      	mov.n	a11, a3
  3e:	02ad      	mov.n	a10, a2
  40:	000081        	l32r	a8, fffc0040 <op_u32_Popcnt_s+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.op_u32_Popcnt_s+0x10
			40: R_XTENSA_ASM_EXPAND	.text.profileOp
  43:	0008e0        	callx8	a8
  46:	0a2d      	mov.n	a2, a10
  48:	f01d      	retw.n

Disassembly of section .text.op_u32_Popcnt_r:

00000000 <op_u32_Popcnt_r>:
   0:	006136        	entry	a1, 48
   3:	20a660        	or	a10, a6, a6
   6:	000081        	l32r	a8, fffc0008 <op_u32_Popcnt_r+0xfffc0008>
			6: R_XTENSA_SLOT0_OP	.literal.op_u32_Popcnt_r+0x4
			6: R_XTENSA_ASM_EXPAND	__popcountsi2
   9:	0008e0        	callx8	a8
   c:	000081        	l32r	a8, fffc000c <op_u32_Popcnt_r+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_u32_Popcnt_r
   f:	d198      	l32i.n	a9, a1, 52
  11:	2189      	s32i.n	a8, a1, 8
  13:	c188      	l32i.n	a8, a1, 48
  15:	0aed      	mov.n	a14, a10
  17:	31ffa0        	srai	a15, a10, 31
  1a:	0189      	s32i.n	a8, a1, 0
  1c:	1199      	s32i.n	a9, a1, 4
  1e:	04cd      	mov.n	a12, a4
  20:	03bd      	mov.n	a11, a3
  22:	02ad      	mov.n	a10, a2
  24:	000081        	l32r	a8, fffc0024 <op_u32_Popcnt_r+0xfffc0024>
			24: R_XTENSA_SLOT0_OP	.literal.op_u32_Popcnt_r+0x8
			24: R_XTENSA_ASM_EXPAND	.text.profileOp
  27:	0008e0        	callx8	a8
  2a:	0a2d      	mov.n	a2, a10
  2c:	f01d      	retw.n

Disassembly of section .text.op_u32_Ctz_s:

00000000 <op_u32_Ctz_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Ctz_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Ctz_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Ctz_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Ctz_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0af8      	l32i.n	a15, a10, 0
  22:	cfac      	beqz.n	a15, 52 <op_u32_Ctz_s+0x52>
			22: R_XTENSA_SLOT0_OP	.text.op_u32_Ctz_s+0x52
  24:	6080f0        	neg	a8, a15
  27:	1088f0        	and	a8, a8, a15
  2a:	40f880        	nsau	a8, a8
  2d:	fe1c      	movi.n	a14, 31
  2f:	c0ee80        	sub	a14, a14, a8
  32:	31ffe0        	srai	a15, a14, 31
  35:	c188      	l32i.n	a8, a1, 48
  37:	d198      	l32i.n	a9, a1, 52
  39:	0189      	s32i.n	a8, a1, 0
  3b:	000081        	l32r	a8, fffc003c <op_u32_Ctz_s+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.op_u32_Ctz_s
  3e:	1199      	s32i.n	a9, a1, 4
  40:	2189      	s32i.n	a8, a1, 8
  42:	04cd      	mov.n	a12, a4
  44:	03bd      	mov.n	a11, a3
  46:	02ad      	mov.n	a10, a2
  48:	000081        	l32r	a8, fffc0048 <op_u32_Ctz_s+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.op_u32_Ctz_s+0xc
			48: R_XTENSA_ASM_EXPAND	.text.profileOp
  4b:	0008e0        	callx8	a8
  4e:	0a2d      	mov.n	a2, a10
  50:	f01d      	retw.n
  52:	0e2c      	movi.n	a14, 32
  54:	fff746        	j	35 <op_u32_Ctz_s+0x35>
			54: R_XTENSA_SLOT0_OP	.text.op_u32_Ctz_s+0x35

Disassembly of section .text.op_u32_Ctz_r:

00000000 <op_u32_Ctz_r>:
   0:	006136        	entry	a1, 48
   3:	02ad      	mov.n	a10, a2
   5:	03bd      	mov.n	a11, a3
   7:	04cd      	mov.n	a12, a4
   9:	76ac      	beqz.n	a6, 34 <op_u32_Ctz_r+0x34>
			9: R_XTENSA_SLOT0_OP	.text.op_u32_Ctz_r+0x34
   b:	608060        	neg	a8, a6
   e:	108860        	and	a8, a8, a6
  11:	40f880        	nsau	a8, a8
  14:	fe1c      	movi.n	a14, 31
  16:	c0ee80        	sub	a14, a14, a8
  19:	c188      	l32i.n	a8, a1, 48
  1b:	d198      	l32i.n	a9, a1, 52
  1d:	0189      	s32i.n	a8, a1, 0
  1f:	000081        	l32r	a8, fffc0020 <op_u32_Ctz_r+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.op_u32_Ctz_r
  22:	31ffe0        	srai	a15, a14, 31
  25:	1199      	s32i.n	a9, a1, 4
  27:	026182        	s32i	a8, a1, 8
  2a:	000081        	l32r	a8, fffc002c <op_u32_Ctz_r+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_u32_Ctz_r+0x4
			2a: R_XTENSA_ASM_EXPAND	.text.profileOp
  2d:	0008e0        	callx8	a8
  30:	0a2d      	mov.n	a2, a10
  32:	f01d      	retw.n
  34:	c188      	l32i.n	a8, a1, 48
  36:	d198      	l32i.n	a9, a1, 52
  38:	0189      	s32i.n	a8, a1, 0
  3a:	000081        	l32r	a8, fffc003c <op_u32_Ctz_r+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_Ctz_r
  3d:	0e2c      	movi.n	a14, 32
  3f:	06fd      	mov.n	a15, a6
  41:	1199      	s32i.n	a9, a1, 4
  43:	026182        	s32i	a8, a1, 8
  46:	000081        	l32r	a8, fffc0048 <op_u32_Ctz_r+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.op_u32_Ctz_r+0x8
			46: R_XTENSA_ASM_EXPAND	.text.profileOp
  49:	0008e0        	callx8	a8
  4c:	0a2d      	mov.n	a2, a10
  4e:	f01d      	retw.n

Disassembly of section .text.op_u32_Clz_s:

00000000 <op_u32_Clz_s>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_u32_Clz_s+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_u32_Clz_s+0x4
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_u32_Clz_s+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_u32_Clz_s+0x8
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0af8      	l32i.n	a15, a10, 0
  22:	0fac      	beqz.n	a15, 46 <op_u32_Clz_s+0x46>
			22: R_XTENSA_SLOT0_OP	.text.op_u32_Clz_s+0x46
  24:	40ffe0        	nsau	a14, a15
  27:	0f0c      	movi.n	a15, 0
  29:	c188      	l32i.n	a8, a1, 48
  2b:	d198      	l32i.n	a9, a1, 52
  2d:	0189      	s32i.n	a8, a1, 0
  2f:	000081        	l32r	a8, fffc0030 <op_u32_Clz_s+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_u32_Clz_s
  32:	1199      	s32i.n	a9, a1, 4
  34:	2189      	s32i.n	a8, a1, 8
  36:	04cd      	mov.n	a12, a4
  38:	03bd      	mov.n	a11, a3
  3a:	02ad      	mov.n	a10, a2
  3c:	000081        	l32r	a8, fffc003c <op_u32_Clz_s+0xfffc003c>
			3c: R_XTENSA_SLOT0_OP	.literal.op_u32_Clz_s+0xc
			3c: R_XTENSA_ASM_EXPAND	.text.profileOp
  3f:	0008e0        	callx8	a8
  42:	0a2d      	mov.n	a2, a10
  44:	f01d      	retw.n
  46:	0e2c      	movi.n	a14, 32
  48:	fff746        	j	29 <op_u32_Clz_s+0x29>
			48: R_XTENSA_SLOT0_OP	.text.op_u32_Clz_s+0x29

Disassembly of section .text.op_u32_Clz_r:

00000000 <op_u32_Clz_r>:
   0:	006136        	entry	a1, 48
   3:	02ad      	mov.n	a10, a2
   5:	03bd      	mov.n	a11, a3
   7:	04cd      	mov.n	a12, a4
   9:	c69c      	beqz.n	a6, 29 <op_u32_Clz_r+0x29>
			9: R_XTENSA_SLOT0_OP	.text.op_u32_Clz_r+0x29
   b:	c188      	l32i.n	a8, a1, 48
   d:	d198      	l32i.n	a9, a1, 52
   f:	0189      	s32i.n	a8, a1, 0
  11:	000081        	l32r	a8, fffc0014 <op_u32_Clz_r+0xfffc0014>
			11: R_XTENSA_SLOT0_OP	.literal.op_u32_Clz_r
  14:	40f6e0        	nsau	a14, a6
  17:	0f0c      	movi.n	a15, 0
  19:	1199      	s32i.n	a9, a1, 4
  1b:	026182        	s32i	a8, a1, 8
  1e:	000081        	l32r	a8, fffc0020 <op_u32_Clz_r+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_u32_Clz_r+0x4
			1e: R_XTENSA_ASM_EXPAND	.text.profileOp
  21:	0008e0        	callx8	a8
  24:	0a2d      	mov.n	a2, a10
  26:	f01d      	retw.n
  28:	00          	.byte	00
  29:	c188      	l32i.n	a8, a1, 48
  2b:	d198      	l32i.n	a9, a1, 52
  2d:	0189      	s32i.n	a8, a1, 0
  2f:	000081        	l32r	a8, fffc0030 <op_u32_Clz_r+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_u32_Clz_r
  32:	0e2c      	movi.n	a14, 32
  34:	06fd      	mov.n	a15, a6
  36:	1199      	s32i.n	a9, a1, 4
  38:	2189      	s32i.n	a8, a1, 8
  3a:	000081        	l32r	a8, fffc003c <op_u32_Clz_r+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.op_u32_Clz_r+0x8
			3a: R_XTENSA_ASM_EXPAND	.text.profileOp
  3d:	0008e0        	callx8	a8
  40:	0a2d      	mov.n	a2, a10
  42:	f01d      	retw.n

Disassembly of section .text.op_MemGrow:

00000000 <op_MemGrow>:
   0:	006136        	entry	a1, 48
   3:	14a8      	l32i.n	a10, a4, 4
   5:	013696        	bltz	a6, 1c <op_MemGrow+0x1c>
			5: R_XTENSA_SLOT0_OP	.text.op_MemGrow+0x1c
   8:	06da82        	addmi	a8, a10, 0x600
   b:	242872        	l32i	a7, a8, 144
   e:	050c      	movi.n	a5, 0
  10:	c68c      	beqz.n	a6, 20 <op_MemGrow+0x20>
			10: R_XTENSA_SLOT0_OP	.text.op_MemGrow+0x20
  12:	b76a      	add.n	a11, a7, a6
  14:	000081        	l32r	a8, fffc0014 <op_MemGrow+0xfffc0014>
			14: R_XTENSA_SLOT0_OP	.literal.op_MemGrow+0x4
			14: R_XTENSA_ASM_EXPAND	ResizeMemory
  17:	0008e0        	callx8	a8
  1a:	2a8c      	beqz.n	a10, 20 <op_MemGrow+0x20>
			1a: R_XTENSA_SLOT0_OP	.text.op_MemGrow+0x20
  1c:	f77c      	movi.n	a7, -1
  1e:	075d      	mov.n	a5, a7
  20:	c188      	l32i.n	a8, a1, 48
  22:	d198      	l32i.n	a9, a1, 52
  24:	0189      	s32i.n	a8, a1, 0
  26:	000081        	l32r	a8, fffc0028 <op_MemGrow+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.op_MemGrow
  29:	1199      	s32i.n	a9, a1, 4
  2b:	2189      	s32i.n	a8, a1, 8
  2d:	07ed      	mov.n	a14, a7
  2f:	05fd      	mov.n	a15, a5
  31:	04cd      	mov.n	a12, a4
  33:	03bd      	mov.n	a11, a3
  35:	02ad      	mov.n	a10, a2
  37:	000081        	l32r	a8, fffc0038 <op_MemGrow+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.op_MemGrow+0x8
			37: R_XTENSA_ASM_EXPAND	.text.profileOp
  3a:	0008e0        	callx8	a8
  3d:	0a2d      	mov.n	a2, a10
  3f:	f01d      	retw.n

Disassembly of section .text.ReadBlockType:

00000000 <ReadBlockType>:
   0:	006136        	entry	a1, 48
   3:	02a8      	l32i.n	a10, a2, 0
   5:	32e8      	l32i.n	a14, a2, 12
   7:	88a682        	movi	a8, 0x688
   a:	d28b      	addi.n	a13, a2, 8
   c:	1c2c      	movi.n	a12, 33
   e:	b18b      	addi.n	a11, a1, 8
  10:	aa8a      	add.n	a10, a10, a8
  12:	000081        	l32r	a8, fffc0014 <ReadBlockType+0xfffc0014>
			12: R_XTENSA_SLOT0_OP	.literal.ReadBlockType+0x10
			12: R_XTENSA_ASM_EXPAND	ReadLebSigned
  15:	0008e0        	callx8	a8
  18:	027d      	mov.n	a7, a2
  1a:	0a2d      	mov.n	a2, a10
  1c:	aafc      	bnez.n	a10, 5a <ReadBlockType+0x5a>
			1c: R_XTENSA_SLOT0_OP	.text.ReadBlockType+0x5a
  1e:	3188      	l32i.n	a8, a1, 12
  20:	21b8      	l32i.n	a11, a1, 8
  22:	037896        	bltz	a8, 5d <ReadBlockType+0x5d>
			22: R_XTENSA_SLOT0_OP	.text.ReadBlockType+0x5d
  25:	1798      	l32i.n	a9, a7, 4
  27:	59a8      	l32i.n	a10, a9, 20
  29:	6f9287        	bne	a2, a8, 9c <ReadBlockType+0x9c>
			29: R_XTENSA_SLOT0_OP	.text.ReadBlockType+0x9c
  2c:	6cbba7        	bgeu	a11, a10, 9c <ReadBlockType+0x9c>
			2c: R_XTENSA_SLOT0_OP	.text.ReadBlockType+0x9c
  2f:	6988      	l32i.n	a8, a9, 24
  31:	07ad      	mov.n	a10, a7
  33:	a0bb80        	addx4	a11, a11, a8
  36:	0b88      	l32i.n	a8, a11, 0
  38:	0389      	s32i.n	a8, a3, 0
  3a:	000081        	l32r	a8, fffc003c <ReadBlockType+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.ReadBlockType+0x14
			3a: R_XTENSA_ASM_EXPAND	get_indention_string
  3d:	0008e0        	callx8	a8
  40:	0a7d      	mov.n	a7, a10
  42:	03a8      	l32i.n	a10, a3, 0
  44:	000081        	l32r	a8, fffc0044 <ReadBlockType+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.ReadBlockType+0x18
			44: R_XTENSA_ASM_EXPAND	SPrintFuncTypeSignature
  47:	0008e0        	callx8	a8
  4a:	0add      	mov.n	a13, a10
  4c:	0000b1        	l32r	a11, fffc004c <ReadBlockType+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.ReadBlockType+0x8
  4f:	0000a1        	l32r	a10, fffc0050 <ReadBlockType+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.ReadBlockType+0xc
  52:	07cd      	mov.n	a12, a7
  54:	000081        	l32r	a8, fffc0054 <ReadBlockType+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.ReadBlockType+0x1c
			54: R_XTENSA_ASM_EXPAND	printf
  57:	0008e0        	callx8	a8
  5a:	f01d      	retw.n
  5c:	00          	.byte	00
  5d:	23bb00        	sext	a11, a11, 7
  60:	a17b      	addi.n	a10, a1, 7
  62:	000081        	l32r	a8, fffc0064 <ReadBlockType+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.ReadBlockType+0x20
			62: R_XTENSA_ASM_EXPAND	NormalizeType
  65:	0008e0        	callx8	a8
  68:	5afc      	bnez.n	a10, a1 <ReadBlockType+0xa1>
			68: R_XTENSA_SLOT0_OP	.text.ReadBlockType+0xa1
  6a:	07ad      	mov.n	a10, a7
  6c:	000081        	l32r	a8, fffc006c <ReadBlockType+0xfffc006c>
			6c: R_XTENSA_SLOT0_OP	.literal.ReadBlockType+0x24
			6c: R_XTENSA_ASM_EXPAND	get_indention_string
  6f:	0008e0        	callx8	a8
  72:	070182        	l8ui	a8, a1, 7
  75:	000091        	l32r	a9, fffc0078 <ReadBlockType+0xfffc0078>
			75: R_XTENSA_SLOT0_OP	.literal.ReadBlockType+0x4
  78:	0acd      	mov.n	a12, a10
  7a:	a08890        	addx4	a8, a8, a9
  7d:	0028d2        	l32i	a13, a8, 0
  80:	0000b1        	l32r	a11, fffc0080 <ReadBlockType+0xfffc0080>
			80: R_XTENSA_SLOT0_OP	.literal.ReadBlockType+0x8
  83:	0000a1        	l32r	a10, fffc0084 <ReadBlockType+0xfffc0084>
			83: R_XTENSA_SLOT0_OP	.literal.ReadBlockType+0xc
  86:	000081        	l32r	a8, fffc0088 <ReadBlockType+0xfffc0088>
			86: R_XTENSA_SLOT0_OP	.literal.ReadBlockType+0x28
			86: R_XTENSA_ASM_EXPAND	printf
  89:	0008e0        	callx8	a8
  8c:	1798      	l32i.n	a9, a7, 4
  8e:	070182        	l8ui	a8, a1, 7
  91:	1998      	l32i.n	a9, a9, 4
  93:	a08890        	addx4	a8, a8, a9
  96:	1888      	l32i.n	a8, a8, 4
  98:	0389      	s32i.n	a8, a3, 0
  9a:	f01d      	retw.n
  9c:	000021        	l32r	a2, fffc009c <ReadBlockType+0xfffc009c>
			9c: R_XTENSA_SLOT0_OP	.literal.ReadBlockType
  9f:	f01d      	retw.n
  a1:	0a2d      	mov.n	a2, a10
  a3:	f01d      	retw.n

Disassembly of section .text.op_f64_Min_ss:

00000000 <op_f64_Min_ss>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	04ad      	mov.n	a10, a4
   9:	7179      	s32i.n	a7, a1, 28
   b:	000081        	l32r	a8, fffc000c <op_f64_Min_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_ss+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	8c0c      	movi.n	a12, 8
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f64_Min_ss+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_ss+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	08e8      	l32i.n	a14, a8, 0
  24:	18f8      	l32i.n	a15, a8, 4
  26:	4c0c      	movi.n	a12, 4
  28:	02bd      	mov.n	a11, a2
  2a:	04ad      	mov.n	a10, a4
  2c:	41e9      	s32i.n	a14, a1, 16
  2e:	51f9      	s32i.n	a15, a1, 20
  30:	000081        	l32r	a8, fffc0030 <op_f64_Min_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_ss+0x14
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	8c0c      	movi.n	a12, 8
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f64_Min_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_ss+0x18
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	1a78      	l32i.n	a7, a10, 4
  47:	065d      	mov.n	a5, a6
  49:	0a68      	l32i.n	a6, a10, 0
  4b:	51b8      	l32i.n	a11, a1, 20
  4d:	41a8      	l32i.n	a10, a1, 16
  4f:	06cd      	mov.n	a12, a6
  51:	07dd      	mov.n	a13, a7
  53:	000081        	l32r	a8, fffc0054 <op_f64_Min_ss+0xfffc0054>
			53: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_ss+0x1c
			53: R_XTENSA_ASM_EXPAND	__unorddf2
  56:	0008e0        	callx8	a8
  59:	067a56        	bnez	a10, c4 <op_f64_Min_ss+0xc4>
			59: R_XTENSA_SLOT0_OP	.text.op_f64_Min_ss+0xc4
  5c:	0c0c      	movi.n	a12, 0
  5e:	0d0c      	movi.n	a13, 0
  60:	06ad      	mov.n	a10, a6
  62:	07bd      	mov.n	a11, a7
  64:	000081        	l32r	a8, fffc0064 <op_f64_Min_ss+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_ss+0x20
			64: R_XTENSA_ASM_EXPAND	__eqdf2
  67:	0008e0        	callx8	a8
  6a:	cafc      	bnez.n	a10, aa <op_f64_Min_ss+0xaa>
			6a: R_XTENSA_SLOT0_OP	.text.op_f64_Min_ss+0xaa
  6c:	41a8      	l32i.n	a10, a1, 16
  6e:	51b8      	l32i.n	a11, a1, 20
  70:	06cd      	mov.n	a12, a6
  72:	07dd      	mov.n	a13, a7
  74:	000081        	l32r	a8, fffc0074 <op_f64_Min_ss+0xfffc0074>
			74: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_ss+0x24
			74: R_XTENSA_ASM_EXPAND	__eqdf2
  77:	0008e0        	callx8	a8
  7a:	caec      	bnez.n	a10, aa <op_f64_Min_ss+0xaa>
			7a: R_XTENSA_SLOT0_OP	.text.op_f64_Min_ss+0xaa
  7c:	058f70        	extui	a8, a7, 31, 1
  7f:	018810        	slli	a8, a8, 31
  82:	060c      	movi.n	a6, 0
  84:	070c      	movi.n	a7, 0
  86:	388c      	beqz.n	a8, 8d <op_f64_Min_ss+0x8d>
			86: R_XTENSA_SLOT0_OP	.text.op_f64_Min_ss+0x8d
  88:	000071        	l32r	a7, fffc0088 <op_f64_Min_ss+0xfffc0088>
			88: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_ss+0x8
  8b:	060c      	movi.n	a6, 0
  8d:	000081        	l32r	a8, fffc0090 <op_f64_Min_ss+0xfffc0090>
			8d: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_ss
  90:	71f8      	l32i.n	a15, a1, 28
  92:	0169      	s32i.n	a6, a1, 0
  94:	1179      	s32i.n	a7, a1, 4
  96:	2189      	s32i.n	a8, a1, 8
  98:	05ed      	mov.n	a14, a5
  9a:	04cd      	mov.n	a12, a4
  9c:	03bd      	mov.n	a11, a3
  9e:	02ad      	mov.n	a10, a2
  a0:	000081        	l32r	a8, fffc00a0 <op_f64_Min_ss+0xfffc00a0>
			a0: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_ss+0x28
			a0: R_XTENSA_ASM_EXPAND	.text.profileOp
  a3:	0008e0        	callx8	a8
  a6:	0a2d      	mov.n	a2, a10
  a8:	f01d      	retw.n
  aa:	41a8      	l32i.n	a10, a1, 16
  ac:	51b8      	l32i.n	a11, a1, 20
  ae:	06cd      	mov.n	a12, a6
  b0:	07dd      	mov.n	a13, a7
  b2:	000081        	l32r	a8, fffc00b4 <op_f64_Min_ss+0xfffc00b4>
			b2: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_ss+0x2c
			b2: R_XTENSA_ASM_EXPAND	__ltdf2
  b5:	0008e0        	callx8	a8
  b8:	fd1ad6        	bgez	a10, 8d <op_f64_Min_ss+0x8d>
			b8: R_XTENSA_SLOT0_OP	.text.op_f64_Min_ss+0x8d
  bb:	4168      	l32i.n	a6, a1, 16
  bd:	5178      	l32i.n	a7, a1, 20
  bf:	fff286        	j	8d <op_f64_Min_ss+0x8d>
			bf: R_XTENSA_SLOT0_OP	.text.op_f64_Min_ss+0x8d
  c2:	00          	.byte	00
  c3:	00          	.byte	00
  c4:	000071        	l32r	a7, fffc00c4 <op_f64_Min_ss+0xfffc00c4>
			c4: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_ss+0x4
  c7:	060c      	movi.n	a6, 0
  c9:	fff006        	j	8d <op_f64_Min_ss+0x8d>
			c9: R_XTENSA_SLOT0_OP	.text.op_f64_Min_ss+0x8d

Disassembly of section .text.op_f32_Max_ss:

00000000 <op_f32_Max_ss>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Max_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_ss+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Max_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_ss+0x10
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	000803        	lsi	f0, a8, 0
  26:	4c0c      	movi.n	a12, 4
  28:	064103        	ssi	f0, a1, 24
  2b:	02bd      	mov.n	a11, a2
  2d:	20a440        	or	a10, a4, a4
  30:	000081        	l32r	a8, fffc0030 <op_f32_Max_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_ss+0x14
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f32_Max_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_ss+0x18
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	000a13        	lsi	f1, a10, 0
  48:	060103        	lsi	f0, a1, 24
  4b:	074113        	ssi	f1, a1, 28
  4e:	1b0010        	un.s	b0, f0, f1
  51:	5c1076        	bt	b0, b1 <op_f32_Max_ss+0xb1>
			51: R_XTENSA_SLOT0_OP	.text.op_f32_Max_ss+0xb1
  54:	080c      	movi.n	a8, 0
  56:	fa2850        	wfr	f2, a8
  59:	2b0120        	oeq.s	b0, f1, f2
  5c:	050076        	bf	b0, 65 <op_f32_Max_ss+0x65>
			5c: R_XTENSA_SLOT0_OP	.text.op_f32_Max_ss+0x65
  5f:	2b0010        	oeq.s	b0, f0, f1
  62:	3a1076        	bt	b0, a0 <op_f32_Max_ss+0xa0>
			62: R_XTENSA_SLOT0_OP	.text.op_f32_Max_ss+0xa0
  65:	070113        	lsi	f1, a1, 28
  68:	4b0010        	olt.s	b0, f0, f1
  6b:	251076        	bt	b0, 94 <op_f32_Max_ss+0x94>
			6b: R_XTENSA_SLOT0_OP	.text.op_f32_Max_ss+0x94
  6e:	faa040        	rfr	a10, f0
  71:	000081        	l32r	a8, fffc0074 <op_f32_Max_ss+0xfffc0074>
			71: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_ss+0x1c
			71: R_XTENSA_ASM_EXPAND	__extendsfdf2
  74:	0008e0        	callx8	a8
  77:	000081        	l32r	a8, fffc0078 <op_f32_Max_ss+0xfffc0078>
			77: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_ss
  7a:	01a9      	s32i.n	a10, a1, 0
  7c:	11b9      	s32i.n	a11, a1, 4
  7e:	2189      	s32i.n	a8, a1, 8
  80:	06ed      	mov.n	a14, a6
  82:	07fd      	mov.n	a15, a7
  84:	04cd      	mov.n	a12, a4
  86:	03bd      	mov.n	a11, a3
  88:	02ad      	mov.n	a10, a2
  8a:	000081        	l32r	a8, fffc008c <op_f32_Max_ss+0xfffc008c>
			8a: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_ss+0x20
			8a: R_XTENSA_ASM_EXPAND	.text.profileOp
  8d:	0008e0        	callx8	a8
  90:	0a2d      	mov.n	a2, a10
  92:	f01d      	retw.n
  94:	faa140        	rfr	a10, f1
  97:	000081        	l32r	a8, fffc0098 <op_f32_Max_ss+0xfffc0098>
			97: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_ss+0x24
			97: R_XTENSA_ASM_EXPAND	__extendsfdf2
  9a:	0008e0        	callx8	a8
  9d:	fff586        	j	77 <op_f32_Max_ss+0x77>
			9d: R_XTENSA_SLOT0_OP	.text.op_f32_Max_ss+0x77
  a0:	7188      	l32i.n	a8, a1, 28
  a2:	0a0c      	movi.n	a10, 0
  a4:	0b0c      	movi.n	a11, 0
  a6:	fcd8d6        	bgez	a8, 77 <op_f32_Max_ss+0x77>
			a6: R_XTENSA_SLOT0_OP	.text.op_f32_Max_ss+0x77
  a9:	0000b1        	l32r	a11, fffc00ac <op_f32_Max_ss+0xfffc00ac>
			a9: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_ss+0x8
  ac:	0a0c      	movi.n	a10, 0
  ae:	fff146        	j	77 <op_f32_Max_ss+0x77>
			ae: R_XTENSA_SLOT0_OP	.text.op_f32_Max_ss+0x77
  b1:	0000b1        	l32r	a11, fffc00b4 <op_f32_Max_ss+0xfffc00b4>
			b1: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_ss+0x4
  b4:	0a0c      	movi.n	a10, 0
  b6:	ffef46        	j	77 <op_f32_Max_ss+0x77>
			b6: R_XTENSA_SLOT0_OP	.text.op_f32_Max_ss+0x77

Disassembly of section .text.op_f32_Min_ss:

00000000 <op_f32_Min_ss>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Min_ss+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_ss+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	20a440        	or	a10, a4, a4
  1b:	000081        	l32r	a8, fffc001c <op_f32_Min_ss+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_ss+0x10
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0a8d      	mov.n	a8, a10
  23:	000803        	lsi	f0, a8, 0
  26:	4c0c      	movi.n	a12, 4
  28:	064103        	ssi	f0, a1, 24
  2b:	02bd      	mov.n	a11, a2
  2d:	20a440        	or	a10, a4, a4
  30:	000081        	l32r	a8, fffc0030 <op_f32_Min_ss+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_ss+0x14
			30: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  33:	0008e0        	callx8	a8
  36:	0ab8      	l32i.n	a11, a10, 0
  38:	4c0c      	movi.n	a12, 4
  3a:	a0bb30        	addx4	a11, a11, a3
  3d:	04ad      	mov.n	a10, a4
  3f:	000081        	l32r	a8, fffc0040 <op_f32_Min_ss+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_ss+0x18
			3f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  42:	0008e0        	callx8	a8
  45:	000a13        	lsi	f1, a10, 0
  48:	060103        	lsi	f0, a1, 24
  4b:	074113        	ssi	f1, a1, 28
  4e:	1b0010        	un.s	b0, f0, f1
  51:	5c1076        	bt	b0, b1 <op_f32_Min_ss+0xb1>
			51: R_XTENSA_SLOT0_OP	.text.op_f32_Min_ss+0xb1
  54:	080c      	movi.n	a8, 0
  56:	fa2850        	wfr	f2, a8
  59:	2b0120        	oeq.s	b0, f1, f2
  5c:	050076        	bf	b0, 65 <op_f32_Min_ss+0x65>
			5c: R_XTENSA_SLOT0_OP	.text.op_f32_Min_ss+0x65
  5f:	2b0010        	oeq.s	b0, f0, f1
  62:	3a1076        	bt	b0, a0 <op_f32_Min_ss+0xa0>
			62: R_XTENSA_SLOT0_OP	.text.op_f32_Min_ss+0xa0
  65:	070113        	lsi	f1, a1, 28
  68:	4b0010        	olt.s	b0, f0, f1
  6b:	251076        	bt	b0, 94 <op_f32_Min_ss+0x94>
			6b: R_XTENSA_SLOT0_OP	.text.op_f32_Min_ss+0x94
  6e:	faa140        	rfr	a10, f1
  71:	000081        	l32r	a8, fffc0074 <op_f32_Min_ss+0xfffc0074>
			71: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_ss+0x1c
			71: R_XTENSA_ASM_EXPAND	__extendsfdf2
  74:	0008e0        	callx8	a8
  77:	000081        	l32r	a8, fffc0078 <op_f32_Min_ss+0xfffc0078>
			77: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_ss
  7a:	01a9      	s32i.n	a10, a1, 0
  7c:	11b9      	s32i.n	a11, a1, 4
  7e:	2189      	s32i.n	a8, a1, 8
  80:	06ed      	mov.n	a14, a6
  82:	07fd      	mov.n	a15, a7
  84:	04cd      	mov.n	a12, a4
  86:	03bd      	mov.n	a11, a3
  88:	02ad      	mov.n	a10, a2
  8a:	000081        	l32r	a8, fffc008c <op_f32_Min_ss+0xfffc008c>
			8a: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_ss+0x20
			8a: R_XTENSA_ASM_EXPAND	.text.profileOp
  8d:	0008e0        	callx8	a8
  90:	0a2d      	mov.n	a2, a10
  92:	f01d      	retw.n
  94:	faa040        	rfr	a10, f0
  97:	000081        	l32r	a8, fffc0098 <op_f32_Min_ss+0xfffc0098>
			97: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_ss+0x24
			97: R_XTENSA_ASM_EXPAND	__extendsfdf2
  9a:	0008e0        	callx8	a8
  9d:	fff586        	j	77 <op_f32_Min_ss+0x77>
			9d: R_XTENSA_SLOT0_OP	.text.op_f32_Min_ss+0x77
  a0:	7188      	l32i.n	a8, a1, 28
  a2:	0a0c      	movi.n	a10, 0
  a4:	0b0c      	movi.n	a11, 0
  a6:	fcd8d6        	bgez	a8, 77 <op_f32_Min_ss+0x77>
			a6: R_XTENSA_SLOT0_OP	.text.op_f32_Min_ss+0x77
  a9:	0000b1        	l32r	a11, fffc00ac <op_f32_Min_ss+0xfffc00ac>
			a9: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_ss+0x8
  ac:	0a0c      	movi.n	a10, 0
  ae:	fff146        	j	77 <op_f32_Min_ss+0x77>
			ae: R_XTENSA_SLOT0_OP	.text.op_f32_Min_ss+0x77
  b1:	0000b1        	l32r	a11, fffc00b4 <op_f32_Min_ss+0xfffc00b4>
			b1: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_ss+0x4
  b4:	0a0c      	movi.n	a10, 0
  b6:	ffef46        	j	77 <op_f32_Min_ss+0x77>
			b6: R_XTENSA_SLOT0_OP	.text.op_f32_Min_ss+0x77

Disassembly of section .text.Call$constprop$0:

00000000 <Call$constprop$0>:
   0:	006136        	entry	a1, 48
   3:	000081        	l32r	a8, fffc0004 <Call$constprop$0+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.Call$constprop$0+0x4
			3: R_XTENSA_ASM_EXPAND	m3_Yield
   6:	0008e0        	callx8	a8
   9:	027d      	mov.n	a7, a2
   b:	0a2d      	mov.n	a2, a10
   d:	9aec      	bnez.n	a10, 3a <Call$constprop$0+0x3a>
			d: R_XTENSA_SLOT0_OP	.text.Call$constprop$0+0x3a
   f:	4c0c      	movi.n	a12, 4
  11:	20b770        	or	a11, a7, a7
  14:	04ad      	mov.n	a10, a4
  16:	000081        	l32r	a8, fffc0018 <Call$constprop$0+0xfffc0018>
			16: R_XTENSA_SLOT0_OP	.literal.Call$constprop$0+0x8
			16: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  19:	0008e0        	callx8	a8
  1c:	000081        	l32r	a8, fffc001c <Call$constprop$0+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.Call$constprop$0
  1f:	090c      	movi.n	a9, 0
  21:	2189      	s32i.n	a8, a1, 8
  23:	080c      	movi.n	a8, 0
  25:	0189      	s32i.n	a8, a1, 0
  27:	1199      	s32i.n	a9, a1, 4
  29:	0a88      	l32i.n	a8, a10, 0
  2b:	02ed      	mov.n	a14, a2
  2d:	02fd      	mov.n	a15, a2
  2f:	04cd      	mov.n	a12, a4
  31:	03bd      	mov.n	a11, a3
  33:	a74b      	addi.n	a10, a7, 4
  35:	0008e0        	callx8	a8
  38:	0a2d      	mov.n	a2, a10
  3a:	f01d      	retw.n

Disassembly of section .text.op_Call:

00000000 <op_Call>:
   0:	006136        	entry	a1, 48
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <op_Call+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.op_Call+0x4
			a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   d:	0008e0        	callx8	a8
  10:	0a8d      	mov.n	a8, a10
  12:	4c0c      	movi.n	a12, 4
  14:	02bd      	mov.n	a11, a2
  16:	04ad      	mov.n	a10, a4
  18:	002852        	l32i	a5, a8, 0
  1b:	000081        	l32r	a8, fffc001c <op_Call+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_Call+0x8
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	0ab8      	l32i.n	a11, a10, 0
  23:	04cd      	mov.n	a12, a4
  25:	a0bb30        	addx4	a11, a11, a3
  28:	20a550        	or	a10, a5, a5
  2b:	000081        	l32r	a8, fffc002c <op_Call+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.op_Call+0xc
			2b: R_XTENSA_ASM_EXPAND	.text.Call$constprop$0
  2e:	0008e0        	callx8	a8
  31:	fadc      	bnez.n	a10, 54 <op_Call+0x54>
			31: R_XTENSA_SLOT0_OP	.text.op_Call+0x54
  33:	c188      	l32i.n	a8, a1, 48
  35:	d198      	l32i.n	a9, a1, 52
  37:	0189      	s32i.n	a8, a1, 0
  39:	000081        	l32r	a8, fffc003c <op_Call+0xfffc003c>
			39: R_XTENSA_SLOT0_OP	.literal.op_Call
  3c:	1199      	s32i.n	a9, a1, 4
  3e:	2189      	s32i.n	a8, a1, 8
  40:	06ed      	mov.n	a14, a6
  42:	07fd      	mov.n	a15, a7
  44:	04cd      	mov.n	a12, a4
  46:	03bd      	mov.n	a11, a3
  48:	02ad      	mov.n	a10, a2
  4a:	000081        	l32r	a8, fffc004c <op_Call+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.op_Call+0x10
			4a: R_XTENSA_ASM_EXPAND	.text.profileOp
  4d:	0008e0        	callx8	a8
  50:	0a2d      	mov.n	a2, a10
  52:	f01d      	retw.n
  54:	000081        	l32r	a8, fffc0054 <op_Call+0xfffc0054>
			54: R_XTENSA_SLOT0_OP	.literal.op_Call+0x14
			54: R_XTENSA_ASM_EXPAND	backtrace_err
  57:	0008e0        	callx8	a8
  5a:	0a2d      	mov.n	a2, a10
  5c:	f01d      	retw.n

Disassembly of section .text.EmitSlotOffset$isra$0:

00000000 <EmitSlotOffset$isra$0>:
   0:	004136        	entry	a1, 32
   3:	02ad      	mov.n	a10, a2
   5:	03bd      	mov.n	a11, a3
   7:	005216        	beqz	a2, 10 <EmitSlotOffset$isra$0+0x10>
			7: R_XTENSA_SLOT0_OP	.text.EmitSlotOffset$isra$0+0x10
   a:	000081        	l32r	a8, fffc000c <EmitSlotOffset$isra$0+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.EmitSlotOffset$isra$0
			a: R_XTENSA_ASM_EXPAND	EmitWord32
   d:	0008e0        	callx8	a8
  10:	f01d      	retw.n

Disassembly of section .text.EmitConstant32$isra$0:

00000000 <EmitConstant32$isra$0>:
   0:	004136        	entry	a1, 32
   3:	02ad      	mov.n	a10, a2
   5:	03bd      	mov.n	a11, a3
   7:	005216        	beqz	a2, 10 <EmitConstant32$isra$0+0x10>
			7: R_XTENSA_SLOT0_OP	.text.EmitConstant32$isra$0+0x10
   a:	000081        	l32r	a8, fffc000c <EmitConstant32$isra$0+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.EmitConstant32$isra$0
			a: R_XTENSA_ASM_EXPAND	EmitWord32
   d:	0008e0        	callx8	a8
  10:	f01d      	retw.n

Disassembly of section .text.op_f64_Min_rs:

00000000 <op_f64_Min_rs>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	04ad      	mov.n	a10, a4
   9:	076142        	s32i	a4, a1, 28
   c:	000081        	l32r	a8, fffc000c <op_f64_Min_rs+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_rs+0xc
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	71a8      	l32i.n	a10, a1, 28
  16:	8c0c      	movi.n	a12, 8
  18:	a0bb30        	addx4	a11, a11, a3
  1b:	000081        	l32r	a8, fffc001c <op_f64_Min_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_rs+0x10
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	1a58      	l32i.n	a5, a10, 4
  23:	0a48      	l32i.n	a4, a10, 0
  25:	1021c2        	l32i	a12, a1, 64
  28:	1121d2        	l32i	a13, a1, 68
  2b:	04ad      	mov.n	a10, a4
  2d:	05bd      	mov.n	a11, a5
  2f:	000081        	l32r	a8, fffc0030 <op_f64_Min_rs+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_rs+0x14
			2f: R_XTENSA_ASM_EXPAND	__unorddf2
  32:	0008e0        	callx8	a8
  35:	06ca56        	bnez	a10, a5 <op_f64_Min_rs+0xa5>
			35: R_XTENSA_SLOT0_OP	.text.op_f64_Min_rs+0xa5
  38:	0c0c      	movi.n	a12, 0
  3a:	0d0c      	movi.n	a13, 0
  3c:	04ad      	mov.n	a10, a4
  3e:	05bd      	mov.n	a11, a5
  40:	000081        	l32r	a8, fffc0040 <op_f64_Min_rs+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_rs+0x18
			40: R_XTENSA_ASM_EXPAND	__eqdf2
  43:	0008e0        	callx8	a8
  46:	fafc      	bnez.n	a10, 89 <op_f64_Min_rs+0x89>
			46: R_XTENSA_SLOT0_OP	.text.op_f64_Min_rs+0x89
  48:	1021c2        	l32i	a12, a1, 64
  4b:	1121d2        	l32i	a13, a1, 68
  4e:	04ad      	mov.n	a10, a4
  50:	20b550        	or	a11, a5, a5
  53:	000081        	l32r	a8, fffc0054 <op_f64_Min_rs+0xfffc0054>
			53: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_rs+0x1c
			53: R_XTENSA_ASM_EXPAND	__eqdf2
  56:	0008e0        	callx8	a8
  59:	caec      	bnez.n	a10, 89 <op_f64_Min_rs+0x89>
			59: R_XTENSA_SLOT0_OP	.text.op_f64_Min_rs+0x89
  5b:	058f50        	extui	a8, a5, 31, 1
  5e:	018810        	slli	a8, a8, 31
  61:	040c      	movi.n	a4, 0
  63:	050c      	movi.n	a5, 0
  65:	388c      	beqz.n	a8, 6c <op_f64_Min_rs+0x6c>
			65: R_XTENSA_SLOT0_OP	.text.op_f64_Min_rs+0x6c
  67:	000051        	l32r	a5, fffc0068 <op_f64_Min_rs+0xfffc0068>
			67: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_rs+0x8
  6a:	040c      	movi.n	a4, 0
  6c:	000081        	l32r	a8, fffc006c <op_f64_Min_rs+0xfffc006c>
			6c: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_rs
  6f:	71c8      	l32i.n	a12, a1, 28
  71:	0149      	s32i.n	a4, a1, 0
  73:	1159      	s32i.n	a5, a1, 4
  75:	2189      	s32i.n	a8, a1, 8
  77:	06ed      	mov.n	a14, a6
  79:	07fd      	mov.n	a15, a7
  7b:	03bd      	mov.n	a11, a3
  7d:	02ad      	mov.n	a10, a2
  7f:	000081        	l32r	a8, fffc0080 <op_f64_Min_rs+0xfffc0080>
			7f: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_rs+0x20
			7f: R_XTENSA_ASM_EXPAND	.text.profileOp
  82:	0008e0        	callx8	a8
  85:	0a2d      	mov.n	a2, a10
  87:	f01d      	retw.n
  89:	1021c2        	l32i	a12, a1, 64
  8c:	1121d2        	l32i	a13, a1, 68
  8f:	04ad      	mov.n	a10, a4
  91:	05bd      	mov.n	a11, a5
  93:	000081        	l32r	a8, fffc0094 <op_f64_Min_rs+0xfffc0094>
			93: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_rs+0x24
			93: R_XTENSA_ASM_EXPAND	__gtdf2
  96:	0008e0        	callx8	a8
  99:	cf1aa6        	blti	a10, 1, 6c <op_f64_Min_rs+0x6c>
			99: R_XTENSA_SLOT0_OP	.text.op_f64_Min_rs+0x6c
  9c:	102142        	l32i	a4, a1, 64
  9f:	112152        	l32i	a5, a1, 68
  a2:	fff186        	j	6c <op_f64_Min_rs+0x6c>
			a2: R_XTENSA_SLOT0_OP	.text.op_f64_Min_rs+0x6c
  a5:	000051        	l32r	a5, fffc00a8 <op_f64_Min_rs+0xfffc00a8>
			a5: R_XTENSA_SLOT0_OP	.literal.op_f64_Min_rs+0x4
  a8:	040c      	movi.n	a4, 0
  aa:	ffef86        	j	6c <op_f64_Min_rs+0x6c>
			aa: R_XTENSA_SLOT0_OP	.text.op_f64_Min_rs+0x6c

Disassembly of section .text.op_f64_Max_rs:

00000000 <op_f64_Max_rs>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	04ad      	mov.n	a10, a4
   9:	076142        	s32i	a4, a1, 28
   c:	000081        	l32r	a8, fffc000c <op_f64_Max_rs+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_rs+0xc
			c: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   f:	0008e0        	callx8	a8
  12:	0ab8      	l32i.n	a11, a10, 0
  14:	71a8      	l32i.n	a10, a1, 28
  16:	8c0c      	movi.n	a12, 8
  18:	a0bb30        	addx4	a11, a11, a3
  1b:	000081        	l32r	a8, fffc001c <op_f64_Max_rs+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_rs+0x10
			1b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1e:	0008e0        	callx8	a8
  21:	1a58      	l32i.n	a5, a10, 4
  23:	0a48      	l32i.n	a4, a10, 0
  25:	1021c2        	l32i	a12, a1, 64
  28:	1121d2        	l32i	a13, a1, 68
  2b:	04ad      	mov.n	a10, a4
  2d:	05bd      	mov.n	a11, a5
  2f:	000081        	l32r	a8, fffc0030 <op_f64_Max_rs+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_rs+0x14
			2f: R_XTENSA_ASM_EXPAND	__unorddf2
  32:	0008e0        	callx8	a8
  35:	06ca56        	bnez	a10, a5 <op_f64_Max_rs+0xa5>
			35: R_XTENSA_SLOT0_OP	.text.op_f64_Max_rs+0xa5
  38:	0c0c      	movi.n	a12, 0
  3a:	0d0c      	movi.n	a13, 0
  3c:	04ad      	mov.n	a10, a4
  3e:	05bd      	mov.n	a11, a5
  40:	000081        	l32r	a8, fffc0040 <op_f64_Max_rs+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_rs+0x18
			40: R_XTENSA_ASM_EXPAND	__eqdf2
  43:	0008e0        	callx8	a8
  46:	fafc      	bnez.n	a10, 89 <op_f64_Max_rs+0x89>
			46: R_XTENSA_SLOT0_OP	.text.op_f64_Max_rs+0x89
  48:	1021c2        	l32i	a12, a1, 64
  4b:	1121d2        	l32i	a13, a1, 68
  4e:	04ad      	mov.n	a10, a4
  50:	20b550        	or	a11, a5, a5
  53:	000081        	l32r	a8, fffc0054 <op_f64_Max_rs+0xfffc0054>
			53: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_rs+0x1c
			53: R_XTENSA_ASM_EXPAND	__eqdf2
  56:	0008e0        	callx8	a8
  59:	caec      	bnez.n	a10, 89 <op_f64_Max_rs+0x89>
			59: R_XTENSA_SLOT0_OP	.text.op_f64_Max_rs+0x89
  5b:	058f50        	extui	a8, a5, 31, 1
  5e:	018810        	slli	a8, a8, 31
  61:	040c      	movi.n	a4, 0
  63:	050c      	movi.n	a5, 0
  65:	388c      	beqz.n	a8, 6c <op_f64_Max_rs+0x6c>
			65: R_XTENSA_SLOT0_OP	.text.op_f64_Max_rs+0x6c
  67:	000051        	l32r	a5, fffc0068 <op_f64_Max_rs+0xfffc0068>
			67: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_rs+0x8
  6a:	040c      	movi.n	a4, 0
  6c:	000081        	l32r	a8, fffc006c <op_f64_Max_rs+0xfffc006c>
			6c: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_rs
  6f:	71c8      	l32i.n	a12, a1, 28
  71:	0149      	s32i.n	a4, a1, 0
  73:	1159      	s32i.n	a5, a1, 4
  75:	2189      	s32i.n	a8, a1, 8
  77:	06ed      	mov.n	a14, a6
  79:	07fd      	mov.n	a15, a7
  7b:	03bd      	mov.n	a11, a3
  7d:	02ad      	mov.n	a10, a2
  7f:	000081        	l32r	a8, fffc0080 <op_f64_Max_rs+0xfffc0080>
			7f: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_rs+0x20
			7f: R_XTENSA_ASM_EXPAND	.text.profileOp
  82:	0008e0        	callx8	a8
  85:	0a2d      	mov.n	a2, a10
  87:	f01d      	retw.n
  89:	1021c2        	l32i	a12, a1, 64
  8c:	1121d2        	l32i	a13, a1, 68
  8f:	04ad      	mov.n	a10, a4
  91:	05bd      	mov.n	a11, a5
  93:	000081        	l32r	a8, fffc0094 <op_f64_Max_rs+0xfffc0094>
			93: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_rs+0x24
			93: R_XTENSA_ASM_EXPAND	__gtdf2
  96:	0008e0        	callx8	a8
  99:	cf1ae6        	bgei	a10, 1, 6c <op_f64_Max_rs+0x6c>
			99: R_XTENSA_SLOT0_OP	.text.op_f64_Max_rs+0x6c
  9c:	102142        	l32i	a4, a1, 64
  9f:	112152        	l32i	a5, a1, 68
  a2:	fff186        	j	6c <op_f64_Max_rs+0x6c>
			a2: R_XTENSA_SLOT0_OP	.text.op_f64_Max_rs+0x6c
  a5:	000051        	l32r	a5, fffc00a8 <op_f64_Max_rs+0xfffc00a8>
			a5: R_XTENSA_SLOT0_OP	.literal.op_f64_Max_rs+0x4
  a8:	040c      	movi.n	a4, 0
  aa:	ffef86        	j	6c <op_f64_Max_rs+0x6c>
			aa: R_XTENSA_SLOT0_OP	.text.op_f64_Max_rs+0x6c

Disassembly of section .text.op_f32_Min_rs:

00000000 <op_f32_Min_rs>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Min_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_rs+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f32_Min_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_rs+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	000803        	lsi	f0, a8, 0
  25:	1021a2        	l32i	a10, a1, 64
  28:	1121b2        	l32i	a11, a1, 68
  2b:	074103        	ssi	f0, a1, 28
  2e:	000081        	l32r	a8, fffc0030 <op_f32_Min_rs+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_rs+0x14
			2e: R_XTENSA_ASM_EXPAND	__truncdfsf2
  31:	0008e0        	callx8	a8
  34:	070113        	lsi	f1, a1, 28
  37:	fa0a50        	wfr	f0, a10
  3a:	1b0010        	un.s	b0, f0, f1
  3d:	5c1076        	bt	b0, 9d <op_f32_Min_rs+0x9d>
			3d: R_XTENSA_SLOT0_OP	.text.op_f32_Min_rs+0x9d
  40:	080c      	movi.n	a8, 0
  42:	fa2850        	wfr	f2, a8
  45:	2b0120        	oeq.s	b0, f1, f2
  48:	050076        	bf	b0, 51 <op_f32_Min_rs+0x51>
			48: R_XTENSA_SLOT0_OP	.text.op_f32_Min_rs+0x51
  4b:	2b0010        	oeq.s	b0, f0, f1
  4e:	3a1076        	bt	b0, 8c <op_f32_Min_rs+0x8c>
			4e: R_XTENSA_SLOT0_OP	.text.op_f32_Min_rs+0x8c
  51:	070113        	lsi	f1, a1, 28
  54:	4b0010        	olt.s	b0, f0, f1
  57:	251076        	bt	b0, 80 <op_f32_Min_rs+0x80>
			57: R_XTENSA_SLOT0_OP	.text.op_f32_Min_rs+0x80
  5a:	faa140        	rfr	a10, f1
  5d:	000081        	l32r	a8, fffc0060 <op_f32_Min_rs+0xfffc0060>
			5d: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_rs+0x18
			5d: R_XTENSA_ASM_EXPAND	__extendsfdf2
  60:	0008e0        	callx8	a8
  63:	000081        	l32r	a8, fffc0064 <op_f32_Min_rs+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_rs
  66:	01a9      	s32i.n	a10, a1, 0
  68:	11b9      	s32i.n	a11, a1, 4
  6a:	2189      	s32i.n	a8, a1, 8
  6c:	06ed      	mov.n	a14, a6
  6e:	07fd      	mov.n	a15, a7
  70:	04cd      	mov.n	a12, a4
  72:	03bd      	mov.n	a11, a3
  74:	02ad      	mov.n	a10, a2
  76:	000081        	l32r	a8, fffc0078 <op_f32_Min_rs+0xfffc0078>
			76: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_rs+0x1c
			76: R_XTENSA_ASM_EXPAND	.text.profileOp
  79:	0008e0        	callx8	a8
  7c:	0a2d      	mov.n	a2, a10
  7e:	f01d      	retw.n
  80:	faa040        	rfr	a10, f0
  83:	000081        	l32r	a8, fffc0084 <op_f32_Min_rs+0xfffc0084>
			83: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_rs+0x20
			83: R_XTENSA_ASM_EXPAND	__extendsfdf2
  86:	0008e0        	callx8	a8
  89:	fff586        	j	63 <op_f32_Min_rs+0x63>
			89: R_XTENSA_SLOT0_OP	.text.op_f32_Min_rs+0x63
  8c:	7188      	l32i.n	a8, a1, 28
  8e:	0a0c      	movi.n	a10, 0
  90:	0b0c      	movi.n	a11, 0
  92:	fcd8d6        	bgez	a8, 63 <op_f32_Min_rs+0x63>
			92: R_XTENSA_SLOT0_OP	.text.op_f32_Min_rs+0x63
  95:	0000b1        	l32r	a11, fffc0098 <op_f32_Min_rs+0xfffc0098>
			95: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_rs+0x8
  98:	0a0c      	movi.n	a10, 0
  9a:	fff146        	j	63 <op_f32_Min_rs+0x63>
			9a: R_XTENSA_SLOT0_OP	.text.op_f32_Min_rs+0x63
  9d:	0000b1        	l32r	a11, fffc00a0 <op_f32_Min_rs+0xfffc00a0>
			9d: R_XTENSA_SLOT0_OP	.literal.op_f32_Min_rs+0x4
  a0:	0a0c      	movi.n	a10, 0
  a2:	ffef46        	j	63 <op_f32_Min_rs+0x63>
			a2: R_XTENSA_SLOT0_OP	.text.op_f32_Min_rs+0x63

Disassembly of section .text.op_f32_Max_rs:

00000000 <op_f32_Max_rs>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	20b220        	or	a11, a2, a2
   8:	20a440        	or	a10, a4, a4
   b:	000081        	l32r	a8, fffc000c <op_f32_Max_rs+0xfffc000c>
			b: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_rs+0xc
			b: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
   e:	0008e0        	callx8	a8
  11:	0ab8      	l32i.n	a11, a10, 0
  13:	4c0c      	movi.n	a12, 4
  15:	a0bb30        	addx4	a11, a11, a3
  18:	04ad      	mov.n	a10, a4
  1a:	000081        	l32r	a8, fffc001c <op_f32_Max_rs+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_rs+0x10
			1a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  1d:	0008e0        	callx8	a8
  20:	0a8d      	mov.n	a8, a10
  22:	000803        	lsi	f0, a8, 0
  25:	1021a2        	l32i	a10, a1, 64
  28:	1121b2        	l32i	a11, a1, 68
  2b:	074103        	ssi	f0, a1, 28
  2e:	000081        	l32r	a8, fffc0030 <op_f32_Max_rs+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_rs+0x14
			2e: R_XTENSA_ASM_EXPAND	__truncdfsf2
  31:	0008e0        	callx8	a8
  34:	070113        	lsi	f1, a1, 28
  37:	fa0a50        	wfr	f0, a10
  3a:	1b0010        	un.s	b0, f0, f1
  3d:	5c1076        	bt	b0, 9d <op_f32_Max_rs+0x9d>
			3d: R_XTENSA_SLOT0_OP	.text.op_f32_Max_rs+0x9d
  40:	080c      	movi.n	a8, 0
  42:	fa2850        	wfr	f2, a8
  45:	2b0120        	oeq.s	b0, f1, f2
  48:	050076        	bf	b0, 51 <op_f32_Max_rs+0x51>
			48: R_XTENSA_SLOT0_OP	.text.op_f32_Max_rs+0x51
  4b:	2b0010        	oeq.s	b0, f0, f1
  4e:	3a1076        	bt	b0, 8c <op_f32_Max_rs+0x8c>
			4e: R_XTENSA_SLOT0_OP	.text.op_f32_Max_rs+0x8c
  51:	070113        	lsi	f1, a1, 28
  54:	4b0010        	olt.s	b0, f0, f1
  57:	251076        	bt	b0, 80 <op_f32_Max_rs+0x80>
			57: R_XTENSA_SLOT0_OP	.text.op_f32_Max_rs+0x80
  5a:	faa040        	rfr	a10, f0
  5d:	000081        	l32r	a8, fffc0060 <op_f32_Max_rs+0xfffc0060>
			5d: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_rs+0x18
			5d: R_XTENSA_ASM_EXPAND	__extendsfdf2
  60:	0008e0        	callx8	a8
  63:	000081        	l32r	a8, fffc0064 <op_f32_Max_rs+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_rs
  66:	01a9      	s32i.n	a10, a1, 0
  68:	11b9      	s32i.n	a11, a1, 4
  6a:	2189      	s32i.n	a8, a1, 8
  6c:	06ed      	mov.n	a14, a6
  6e:	07fd      	mov.n	a15, a7
  70:	04cd      	mov.n	a12, a4
  72:	03bd      	mov.n	a11, a3
  74:	02ad      	mov.n	a10, a2
  76:	000081        	l32r	a8, fffc0078 <op_f32_Max_rs+0xfffc0078>
			76: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_rs+0x1c
			76: R_XTENSA_ASM_EXPAND	.text.profileOp
  79:	0008e0        	callx8	a8
  7c:	0a2d      	mov.n	a2, a10
  7e:	f01d      	retw.n
  80:	faa140        	rfr	a10, f1
  83:	000081        	l32r	a8, fffc0084 <op_f32_Max_rs+0xfffc0084>
			83: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_rs+0x20
			83: R_XTENSA_ASM_EXPAND	__extendsfdf2
  86:	0008e0        	callx8	a8
  89:	fff586        	j	63 <op_f32_Max_rs+0x63>
			89: R_XTENSA_SLOT0_OP	.text.op_f32_Max_rs+0x63
  8c:	7188      	l32i.n	a8, a1, 28
  8e:	0a0c      	movi.n	a10, 0
  90:	0b0c      	movi.n	a11, 0
  92:	fcd8d6        	bgez	a8, 63 <op_f32_Max_rs+0x63>
			92: R_XTENSA_SLOT0_OP	.text.op_f32_Max_rs+0x63
  95:	0000b1        	l32r	a11, fffc0098 <op_f32_Max_rs+0xfffc0098>
			95: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_rs+0x8
  98:	0a0c      	movi.n	a10, 0
  9a:	fff146        	j	63 <op_f32_Max_rs+0x63>
			9a: R_XTENSA_SLOT0_OP	.text.op_f32_Max_rs+0x63
  9d:	0000b1        	l32r	a11, fffc00a0 <op_f32_Max_rs+0xfffc00a0>
			9d: R_XTENSA_SLOT0_OP	.literal.op_f32_Max_rs+0x4
  a0:	0a0c      	movi.n	a10, 0
  a2:	ffef46        	j	63 <op_f32_Max_rs+0x63>
			a2: R_XTENSA_SLOT0_OP	.text.op_f32_Max_rs+0x63

Disassembly of section .text.AllocateSlotsWithinRange:

00000000 <AllocateSlotsWithinRange>:
   0:	006136        	entry	a1, 48
   3:	048d      	mov.n	a8, a4
   5:	3189      	s32i.n	a8, a1, 12
   7:	20a440        	or	a10, a4, a4
   a:	000081        	l32r	a8, fffc000c <AllocateSlotsWithinRange+0xfffc000c>
			a: R_XTENSA_SLOT0_OP	.literal.AllocateSlotsWithinRange+0xc
			a: R_XTENSA_ASM_EXPAND	Is64BitType
   d:	0008e0        	callx8	a8
  10:	057d      	mov.n	a7, a5
  12:	064d      	mov.n	a4, a6
  14:	5a1b      	addi.n	a5, a10, 1
  16:	206aa0        	or	a6, a10, a10
  19:	0321a2        	l32i	a10, a1, 12
  1c:	f45050        	extui	a5, a5, 0, 16
  1f:	000081        	l32r	a8, fffc0020 <AllocateSlotsWithinRange+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.AllocateSlotsWithinRange+0x10
			1f: R_XTENSA_ASM_EXPAND	Is64BitType
  22:	0008e0        	callx8	a8
  25:	87aa      	add.n	a8, a7, a10
  27:	107a80        	and	a7, a10, a8
  2a:	307780        	xor	a7, a7, a8
  2d:	f47070        	extui	a7, a7, 0, 16
  30:	876a      	add.n	a8, a7, a6
  32:	1ea847        	bge	a8, a4, 54 <AllocateSlotsWithinRange+0x54>
			32: R_XTENSA_SLOT0_OP	.text.AllocateSlotsWithinRange+0x54
  35:	50a4b2        	movi	a11, 0x450
  38:	927a      	add.n	a9, a2, a7
  3a:	c9ba      	add.n	a12, a9, a11
  3c:	000cc2        	l8ui	a12, a12, 0
  3f:	828a      	add.n	a8, a2, a8
  41:	a57a      	add.n	a10, a5, a7
  43:	88ba      	add.n	a8, a8, a11
  45:	3ccc      	bnez.n	a12, 4c <AllocateSlotsWithinRange+0x4c>
			45: R_XTENSA_SLOT0_OP	.text.AllocateSlotsWithinRange+0x4c
  47:	000882        	l8ui	a8, a8, 0
  4a:	a88c      	beqz.n	a8, 58 <AllocateSlotsWithinRange+0x58>
			4a: R_XTENSA_SLOT0_OP	.text.AllocateSlotsWithinRange+0x58
  4c:	f470a0        	extui	a7, a10, 0, 16
  4f:	876a      	add.n	a8, a7, a6
  51:	e32847        	blt	a8, a4, 38 <AllocateSlotsWithinRange+0x38>
			51: R_XTENSA_SLOT0_OP	.text.AllocateSlotsWithinRange+0x38
  54:	020c      	movi.n	a2, 0
  56:	f01d      	retw.n
  58:	50a4a2        	movi	a10, 0x450
  5b:	99aa      	add.n	a9, a9, a10
  5d:	180c      	movi.n	a8, 1
  5f:	004982        	s8i	a8, a9, 0
  62:	06d252        	addmi	a5, a2, 0x600
  65:	2815b2        	l16ui	a11, a5, 80
  68:	261292        	l16ui	a9, a2, 76
  6b:	871b      	addi.n	a8, a7, 1
  6d:	53bb80        	max	a11, a11, a8
  70:	2855b2        	s16i	a11, a5, 80
  73:	539980        	max	a9, a9, a8
  76:	265292        	s16i	a9, a2, 76
  79:	76ac      	beqz.n	a6, a4 <AllocateSlotsWithinRange+0xa4>
			79: R_XTENSA_SLOT0_OP	.text.AllocateSlotsWithinRange+0xa4
  7b:	628a      	add.n	a6, a2, a8
  7d:	a6aa      	add.n	a10, a6, a10
  7f:	000a82        	l8ui	a8, a10, 0
  82:	68ec      	bnez.n	a8, ac <AllocateSlotsWithinRange+0xac>
			82: R_XTENSA_SLOT0_OP	.text.AllocateSlotsWithinRange+0xac
  84:	50a482        	movi	a8, 0x450
  87:	868a      	add.n	a8, a6, a8
  89:	01a092        	movi	a9, 1
  8c:	004892        	s8i	a9, a8, 0
  8f:	281592        	l16ui	a9, a5, 80
  92:	261282        	l16ui	a8, a2, 76
  95:	02c7a2        	addi	a10, a7, 2
  98:	5399a0        	max	a9, a9, a10
  9b:	285592        	s16i	a9, a5, 80
  9e:	5388a0        	max	a8, a8, a10
  a1:	265282        	s16i	a8, a2, 76
  a4:	005372        	s16i	a7, a3, 0
  a7:	020c      	movi.n	a2, 0
  a9:	f01d      	retw.n
  ab:	00          	.byte	00
  ac:	0000d1        	l32r	a13, fffc00ac <AllocateSlotsWithinRange+0xfffc00ac>
			ac: R_XTENSA_SLOT0_OP	.literal.AllocateSlotsWithinRange
  af:	0000b1        	l32r	a11, fffc00b0 <AllocateSlotsWithinRange+0xfffc00b0>
			af: R_XTENSA_SLOT0_OP	.literal.AllocateSlotsWithinRange+0x4
  b2:	0000a1        	l32r	a10, fffc00b4 <AllocateSlotsWithinRange+0xfffc00b4>
			b2: R_XTENSA_SLOT0_OP	.literal.AllocateSlotsWithinRange+0x8
  b5:	4aa1c2        	movi	a12, 0x14a
  b8:	000081        	l32r	a8, fffc00b8 <AllocateSlotsWithinRange+0xfffc00b8>
			b8: R_XTENSA_SLOT0_OP	.literal.AllocateSlotsWithinRange+0x14
			b8: R_XTENSA_ASM_EXPAND	printf
  bb:	0008e0        	callx8	a8
  be:	fff086        	j	84 <AllocateSlotsWithinRange+0x84>
			be: R_XTENSA_SLOT0_OP	.text.AllocateSlotsWithinRange+0x84

Disassembly of section .text.PreserveRegisterIfOccupied:

00000000 <PreserveRegisterIfOccupied>:
   0:	006136        	entry	a1, 48
   3:	20a330        	or	a10, a3, a3
   6:	000081        	l32r	a8, fffc0008 <PreserveRegisterIfOccupied+0xfffc0008>
			6: R_XTENSA_SLOT0_OP	.literal.PreserveRegisterIfOccupied+0x4
			6: R_XTENSA_ASM_EXPAND	IsFpType
   9:	0008e0        	callx8	a8
   c:	90aa20        	addx2	a10, a10, a2
   f:	06daa2        	addmi	a10, a10, 0x600
  12:	291a82        	l16ui	a8, a10, 82
  15:	027d      	mov.n	a7, a2
  17:	055816        	beqz	a8, 70 <PreserveRegisterIfOccupied+0x70>
			17: R_XTENSA_SLOT0_OP	.text.PreserveRegisterIfOccupied+0x70
  1a:	090c      	movi.n	a9, 0
  1c:	295a92        	s16i	a9, a10, 82
  1f:	880b      	addi.n	a8, a8, -1
  21:	211292        	l16ui	a9, a2, 66
  24:	f46080        	extui	a6, a8, 0, 16
  27:	050c      	movi.n	a5, 0
  29:	473697        	bltu	a6, a9, 74 <PreserveRegisterIfOccupied+0x74>
			29: R_XTENSA_SLOT0_OP	.text.PreserveRegisterIfOccupied+0x74
  2c:	2517d2        	l16ui	a13, a7, 74
  2f:	f87c      	movi.n	a8, -1
  31:	00a2e2        	movi	a14, 0x200
  34:	05cd      	mov.n	a12, a5
  36:	b1eb      	addi.n	a11, a1, 14
  38:	20a770        	or	a10, a7, a7
  3b:	075182        	s16i	a8, a1, 14
  3e:	000081        	l32r	a8, fffc0040 <PreserveRegisterIfOccupied+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.PreserveRegisterIfOccupied+0x8
			3e: R_XTENSA_ASM_EXPAND	.text.AllocateSlotsWithinRange
  41:	0008e0        	callx8	a8
  44:	0a2d      	mov.n	a2, a10
  46:	8aec      	bnez.n	a10, 72 <PreserveRegisterIfOccupied+0x72>
			46: R_XTENSA_SLOT0_OP	.text.PreserveRegisterIfOccupied+0x72
  48:	000081        	l32r	a8, fffc0048 <PreserveRegisterIfOccupied+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.PreserveRegisterIfOccupied
  4b:	071142        	l16ui	a4, a1, 14
  4e:	a05580        	addx4	a5, a5, a8
  51:	05b8      	l32i.n	a11, a5, 0
  53:	906670        	addx2	a6, a6, a7
  56:	a85642        	s16i	a4, a6, 0x150
  59:	20a770        	or	a10, a7, a7
  5c:	000081        	l32r	a8, fffc005c <PreserveRegisterIfOccupied+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.PreserveRegisterIfOccupied+0xc
			5c: R_XTENSA_ASM_EXPAND	.text.EmitOp
  5f:	0008e0        	callx8	a8
  62:	0a2d      	mov.n	a2, a10
  64:	aacc      	bnez.n	a10, 72 <PreserveRegisterIfOccupied+0x72>
			64: R_XTENSA_SLOT0_OP	.text.PreserveRegisterIfOccupied+0x72
  66:	d7a8      	l32i.n	a10, a7, 52
  68:	04bd      	mov.n	a11, a4
  6a:	000081        	l32r	a8, fffc006c <PreserveRegisterIfOccupied+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.PreserveRegisterIfOccupied+0x10
			6a: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
  6d:	0008e0        	callx8	a8
  70:	020c      	movi.n	a2, 0
  72:	f01d      	retw.n
  74:	826a      	add.n	a8, a2, a6
  76:	50a392        	movi	a9, 0x350
  79:	889a      	add.n	a8, a8, a9
  7b:	000852        	l8ui	a5, a8, 0
  7e:	ffea86        	j	2c <PreserveRegisterIfOccupied+0x2c>
			7e: R_XTENSA_SLOT0_OP	.text.PreserveRegisterIfOccupied+0x2c

Disassembly of section .text.FindReferencedLocalWithinCurrentBlock:

00000000 <FindReferencedLocalWithinCurrentBlock>:
   0:	006136        	entry	a1, 48
   3:	1612a2        	l16ui	a10, a2, 44
   6:	025d      	mov.n	a5, a2
   8:	131272        	l16ui	a7, a2, 38
   b:	14c582        	addi	a8, a5, 20
   e:	042d      	mov.n	a2, a4
  10:	0d2a26        	beqi	a10, 2, 21 <FindReferencedLocalWithinCurrentBlock+0x21>
			10: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0x21
  13:	0003c6        	j	26 <FindReferencedLocalWithinCurrentBlock+0x26>
			13: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0x26
  16:	00          	.byte	00
  17:	00          	.byte	00
  18:	0c18a2        	l16ui	a10, a8, 24
  1b:	091872        	l16ui	a7, a8, 18
  1e:	042a66        	bnei	a10, 2, 26 <FindReferencedLocalWithinCurrentBlock+0x26>
			1e: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0x26
  21:	0888      	l32i.n	a8, a8, 0
  23:	ff1856        	bnez	a8, 18 <FindReferencedLocalWithinCurrentBlock+0x18>
			23: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0x18
  26:	005322        	s16i	a2, a3, 0
  29:	2115a2        	l16ui	a10, a5, 66
  2c:	906750        	addx2	a6, a7, a5
  2f:	63b7a7        	bgeu	a7, a10, 96 <FindReferencedLocalWithinCurrentBlock+0x96>
			2f: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0x96
  32:	50a442        	movi	a4, 0x450
  35:	0001c6        	j	40 <FindReferencedLocalWithinCurrentBlock+0x40>
			35: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0x40
  38:	00          	.byte	00
  39:	771b      	addi.n	a7, a7, 1
  3b:	662b      	addi.n	a6, a6, 2
  3d:	55b7a7        	bgeu	a7, a10, 96 <FindReferencedLocalWithinCurrentBlock+0x96>
			3d: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0x96
  40:	a81682        	l16ui	a8, a6, 0x150
  43:	f29827        	bne	a8, a2, 39 <FindReferencedLocalWithinCurrentBlock+0x39>
			43: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0x39
  46:	001382        	l16ui	a8, a3, 0
  49:	4f9827        	bne	a8, a2, 9c <FindReferencedLocalWithinCurrentBlock+0x9c>
			49: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0x9c
  4c:	f48070        	extui	a8, a7, 0, 16
  4f:	0db8a7        	bgeu	a8, a10, 60 <FindReferencedLocalWithinCurrentBlock+0x60>
			4f: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0x60
  52:	50a382        	movi	a8, 0x350
  55:	878a      	add.n	a8, a7, a8
  57:	808580        	add	a8, a5, a8
  5a:	0008c2        	l8ui	a12, a8, 0
  5d:	013c56        	bnez	a12, 74 <FindReferencedLocalWithinCurrentBlock+0x74>
			5d: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0x74
  60:	0000b1        	l32r	a11, fffc0060 <FindReferencedLocalWithinCurrentBlock+0xfffc0060>
			60: R_XTENSA_SLOT0_OP	.literal.FindReferencedLocalWithinCurrentBlock+0x8
  63:	0000a1        	l32r	a10, fffc0064 <FindReferencedLocalWithinCurrentBlock+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.FindReferencedLocalWithinCurrentBlock+0xc
  66:	0000d1        	l32r	a13, fffc0068 <FindReferencedLocalWithinCurrentBlock+0xfffc0068>
			66: R_XTENSA_SLOT0_OP	.literal.FindReferencedLocalWithinCurrentBlock+0x4
  69:	bba3c2        	movi	a12, 0x3bb
  6c:	000081        	l32r	a8, fffc006c <FindReferencedLocalWithinCurrentBlock+0xfffc006c>
			6c: R_XTENSA_SLOT0_OP	.literal.FindReferencedLocalWithinCurrentBlock+0x18
			6c: R_XTENSA_ASM_EXPAND	printf
  6f:	0008e0        	callx8	a8
  72:	0c0c      	movi.n	a12, 0
  74:	2515d2        	l16ui	a13, a5, 74
  77:	00a2e2        	movi	a14, 0x200
  7a:	03bd      	mov.n	a11, a3
  7c:	05ad      	mov.n	a10, a5
  7e:	000081        	l32r	a8, fffc0080 <FindReferencedLocalWithinCurrentBlock+0xfffc0080>
			7e: R_XTENSA_SLOT0_OP	.literal.FindReferencedLocalWithinCurrentBlock+0x1c
			7e: R_XTENSA_ASM_EXPAND	.text.AllocateSlotsWithinRange
  81:	0008e0        	callx8	a8
  84:	caec      	bnez.n	a10, b4 <FindReferencedLocalWithinCurrentBlock+0xb4>
			84: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0xb4
  86:	001382        	l16ui	a8, a3, 0
  89:	771b      	addi.n	a7, a7, 1
  8b:	a85682        	s16i	a8, a6, 0x150
  8e:	2115a2        	l16ui	a10, a5, 66
  91:	662b      	addi.n	a6, a6, 2
  93:	a937a7        	bltu	a7, a10, 40 <FindReferencedLocalWithinCurrentBlock+0x40>
			93: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0x40
  96:	0a0c      	movi.n	a10, 0
  98:	0a2d      	mov.n	a2, a10
  9a:	f01d      	retw.n
  9c:	ffa192        	movi	a9, 0x1ff
  9f:	413987        	bltu	a9, a8, e4 <FindReferencedLocalWithinCurrentBlock+0xe4>
			9f: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0xe4
  a2:	858a      	add.n	a8, a5, a8
  a4:	e84a      	add.n	a14, a8, a4
  a6:	000ea2        	l8ui	a10, a14, 0
  a9:	7a9c      	beqz.n	a10, c4 <FindReferencedLocalWithinCurrentBlock+0xc4>
			a9: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0xc4
  ab:	ffa092        	movi	a9, 255
  ae:	069a97        	bne	a10, a9, b8 <FindReferencedLocalWithinCurrentBlock+0xb8>
			ae: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0xb8
  b1:	0000a1        	l32r	a10, fffc00b4 <FindReferencedLocalWithinCurrentBlock+0xfffc00b4>
			b1: R_XTENSA_SLOT0_OP	.literal.FindReferencedLocalWithinCurrentBlock
  b4:	0a2d      	mov.n	a2, a10
  b6:	f01d      	retw.n
  b8:	884a      	add.n	a8, a8, a4
  ba:	aa1b      	addi.n	a10, a10, 1
  bc:	0048a2        	s8i	a10, a8, 0
  bf:	fff0c6        	j	86 <FindReferencedLocalWithinCurrentBlock+0x86>
			bf: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0x86
  c2:	00          	.byte	00
  c3:	00          	.byte	00
  c4:	0000d1        	l32r	a13, fffc00c4 <FindReferencedLocalWithinCurrentBlock+0xfffc00c4>
			c4: R_XTENSA_SLOT0_OP	.literal.FindReferencedLocalWithinCurrentBlock+0x14
  c7:	0000b1        	l32r	a11, fffc00c8 <FindReferencedLocalWithinCurrentBlock+0xfffc00c8>
			c7: R_XTENSA_SLOT0_OP	.literal.FindReferencedLocalWithinCurrentBlock+0x8
  ca:	0000a1        	l32r	a10, fffc00cc <FindReferencedLocalWithinCurrentBlock+0xfffc00cc>
			ca: R_XTENSA_SLOT0_OP	.literal.FindReferencedLocalWithinCurrentBlock+0xc
  cd:	2189      	s32i.n	a8, a1, 8
  cf:	31e9      	s32i.n	a14, a1, 12
  d1:	92a1c2        	movi	a12, 0x192
  d4:	000081        	l32r	a8, fffc00d4 <FindReferencedLocalWithinCurrentBlock+0xfffc00d4>
			d4: R_XTENSA_SLOT0_OP	.literal.FindReferencedLocalWithinCurrentBlock+0x20
			d4: R_XTENSA_ASM_EXPAND	printf
  d7:	0008e0        	callx8	a8
  da:	31e8      	l32i.n	a14, a1, 12
  dc:	2188      	l32i.n	a8, a1, 8
  de:	000ea2        	l8ui	a10, a14, 0
  e1:	fff186        	j	ab <FindReferencedLocalWithinCurrentBlock+0xab>
			e1: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0xab
  e4:	0000d1        	l32r	a13, fffc00e4 <FindReferencedLocalWithinCurrentBlock+0xfffc00e4>
			e4: R_XTENSA_SLOT0_OP	.literal.FindReferencedLocalWithinCurrentBlock+0x10
  e7:	0000b1        	l32r	a11, fffc00e8 <FindReferencedLocalWithinCurrentBlock+0xfffc00e8>
			e7: R_XTENSA_SLOT0_OP	.literal.FindReferencedLocalWithinCurrentBlock+0x8
  ea:	0000a1        	l32r	a10, fffc00ec <FindReferencedLocalWithinCurrentBlock+0xfffc00ec>
			ea: R_XTENSA_SLOT0_OP	.literal.FindReferencedLocalWithinCurrentBlock+0xc
  ed:	2189      	s32i.n	a8, a1, 8
  ef:	91a1c2        	movi	a12, 0x191
  f2:	000081        	l32r	a8, fffc00f4 <FindReferencedLocalWithinCurrentBlock+0xfffc00f4>
			f2: R_XTENSA_SLOT0_OP	.literal.FindReferencedLocalWithinCurrentBlock+0x24
			f2: R_XTENSA_ASM_EXPAND	printf
  f5:	0008e0        	callx8	a8
  f8:	2188      	l32i.n	a8, a1, 8
  fa:	ffe906        	j	a2 <FindReferencedLocalWithinCurrentBlock+0xa2>
			fa: R_XTENSA_SLOT0_OP	.text.FindReferencedLocalWithinCurrentBlock+0xa2

Disassembly of section .text.PreserveArgsAndLocals:

00000000 <PreserveArgsAndLocals>:
   0:	008136        	entry	a1, 64
   3:	211282        	l16ui	a8, a2, 66
   6:	201292        	l16ui	a9, a2, 64
   9:	027d      	mov.n	a7, a2
   b:	023987        	bltu	a9, a8, 11 <PreserveArgsAndLocals+0x11>
			b: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0x11
   e:	002e86        	j	cc <PreserveArgsAndLocals+0xcc>
			e: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0xcc
  11:	c2a8      	l32i.n	a10, a2, 48
  13:	000081        	l32r	a8, fffc0014 <PreserveArgsAndLocals+0xfffc0014>
			13: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0x1c
			13: R_XTENSA_ASM_EXPAND	GetFunctionNumArgsAndLocals
  16:	0008e0        	callx8	a8
  19:	31a9      	s32i.n	a10, a1, 12
  1b:	0ada16        	beqz	a10, cc <PreserveArgsAndLocals+0xcc>
			1b: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0xcc
  1e:	060c      	movi.n	a6, 0
  20:	001fc6        	j	a3 <PreserveArgsAndLocals+0xa3>
			20: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0xa3
  23:	00          	.byte	00
  24:	00          	.byte	00
  25:	2e0792        	l8ui	a9, a7, 46
  28:	0a6916        	beqz	a9, d2 <PreserveArgsAndLocals+0xd2>
			28: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0xd2
  2b:	000051        	l32r	a5, fffc002c <PreserveArgsAndLocals+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0x18
  2e:	1ec1b2        	addi	a11, a1, 30
  31:	20c550        	or	a12, a5, a5
  34:	20a770        	or	a10, a7, a7
  37:	000081        	l32r	a8, fffc0038 <PreserveArgsAndLocals+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0x20
			37: R_XTENSA_ASM_EXPAND	.text.FindReferencedLocalWithinCurrentBlock
  3a:	0008e0        	callx8	a8
  3d:	087a56        	bnez	a10, c8 <PreserveArgsAndLocals+0xc8>
			3d: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0xc8
  40:	0f1122        	l16ui	a2, a1, 30
  43:	551257        	beq	a2, a5, 9c <PreserveArgsAndLocals+0x9c>
			43: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0x9c
  46:	211792        	l16ui	a9, a7, 66
  49:	0cb397        	bgeu	a3, a9, 59 <PreserveArgsAndLocals+0x59>
			49: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0x59
  4c:	474a      	add.n	a4, a7, a4
  4e:	50a382        	movi	a8, 0x350
  51:	448a      	add.n	a4, a4, a8
  53:	0004a2        	l8ui	a10, a4, 0
  56:	013a56        	bnez	a10, 6d <PreserveArgsAndLocals+0x6d>
			56: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0x6d
  59:	0000d1        	l32r	a13, fffc005c <PreserveArgsAndLocals+0xfffc005c>
			59: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0x14
  5c:	0000b1        	l32r	a11, fffc005c <PreserveArgsAndLocals+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0xc
  5f:	0000a1        	l32r	a10, fffc0060 <PreserveArgsAndLocals+0xfffc0060>
			5f: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0x10
  62:	30a7c2        	movi	a12, 0x730
  65:	000081        	l32r	a8, fffc0068 <PreserveArgsAndLocals+0xfffc0068>
			65: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0x24
			65: R_XTENSA_ASM_EXPAND	printf
  68:	0008e0        	callx8	a8
  6b:	0a0c      	movi.n	a10, 0
  6d:	000081        	l32r	a8, fffc0070 <PreserveArgsAndLocals+0xfffc0070>
			6d: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0x28
			6d: R_XTENSA_ASM_EXPAND	Is64BitType
  70:	0008e0        	callx8	a8
  73:	000091        	l32r	a9, fffc0074 <PreserveArgsAndLocals+0xfffc0074>
			73: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals
  76:	000081        	l32r	a8, fffc0078 <PreserveArgsAndLocals+0xfffc0078>
			76: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0x4
  79:	0abd      	mov.n	a11, a10
  7b:	9389b0        	movnez	a8, a9, a11
  7e:	08bd      	mov.n	a11, a8
  80:	07ad      	mov.n	a10, a7
  82:	000081        	l32r	a8, fffc0084 <PreserveArgsAndLocals+0xfffc0084>
			82: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0x2c
			82: R_XTENSA_ASM_EXPAND	.text.EmitOp
  85:	0008e0        	callx8	a8
  88:	d7a8      	l32i.n	a10, a7, 52
  8a:	02bd      	mov.n	a11, a2
  8c:	000081        	l32r	a8, fffc008c <PreserveArgsAndLocals+0xfffc008c>
			8c: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0x30
			8c: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
  8f:	0008e0        	callx8	a8
  92:	d7a8      	l32i.n	a10, a7, 52
  94:	05bd      	mov.n	a11, a5
  96:	000081        	l32r	a8, fffc0098 <PreserveArgsAndLocals+0xfffc0098>
			96: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0x34
			96: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
  99:	0008e0        	callx8	a8
  9c:	3188      	l32i.n	a8, a1, 12
  9e:	661b      	addi.n	a6, a6, 1
  a0:	281867        	beq	a8, a6, cc <PreserveArgsAndLocals+0xcc>
			a0: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0xcc
  a3:	211792        	l16ui	a9, a7, 66
  a6:	f43060        	extui	a3, a6, 0, 16
  a9:	f44060        	extui	a4, a6, 0, 16
  ac:	023397        	bltu	a3, a9, b2 <PreserveArgsAndLocals+0xb2>
			ac: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0xb2
  af:	ffdc86        	j	25 <PreserveArgsAndLocals+0x25>
			af: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0x25
  b2:	909470        	addx2	a9, a4, a7
  b5:	a81952        	l16ui	a5, a9, 0x150
  b8:	05cd      	mov.n	a12, a5
  ba:	1ec1b2        	addi	a11, a1, 30
  bd:	07ad      	mov.n	a10, a7
  bf:	000081        	l32r	a8, fffc00c0 <PreserveArgsAndLocals+0xfffc00c0>
			bf: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0x38
			bf: R_XTENSA_ASM_EXPAND	.text.FindReferencedLocalWithinCurrentBlock
  c2:	0008e0        	callx8	a8
  c5:	f77a16        	beqz	a10, 40 <PreserveArgsAndLocals+0x40>
			c5: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0x40
  c8:	0a2d      	mov.n	a2, a10
  ca:	f01d      	retw.n
  cc:	0a0c      	movi.n	a10, 0
  ce:	0a2d      	mov.n	a2, a10
  d0:	f01d      	retw.n
  d2:	0000d1        	l32r	a13, fffc00d4 <PreserveArgsAndLocals+0xfffc00d4>
			d2: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0x8
  d5:	0000b1        	l32r	a11, fffc00d8 <PreserveArgsAndLocals+0xfffc00d8>
			d5: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0xc
  d8:	0000a1        	l32r	a10, fffc00d8 <PreserveArgsAndLocals+0xfffc00d8>
			d8: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0x10
  db:	29a1c2        	movi	a12, 0x129
  de:	000081        	l32r	a8, fffc00e0 <PreserveArgsAndLocals+0xfffc00e0>
			de: R_XTENSA_SLOT0_OP	.literal.PreserveArgsAndLocals+0x3c
			de: R_XTENSA_ASM_EXPAND	printf
  e1:	0008e0        	callx8	a8
  e4:	211792        	l16ui	a9, a7, 66
  e7:	023397        	bltu	a3, a9, ed <PreserveArgsAndLocals+0xed>
			e7: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0xed
  ea:	ffcf46        	j	2b <PreserveArgsAndLocals+0x2b>
			ea: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0x2b
  ed:	909470        	addx2	a9, a4, a7
  f0:	a81952        	l16ui	a5, a9, 0x150
  f3:	05cd      	mov.n	a12, a5
  f5:	fff046        	j	ba <PreserveArgsAndLocals+0xba>
			f5: R_XTENSA_SLOT0_OP	.text.PreserveArgsAndLocals+0xba

Disassembly of section .text.CopyStackIndexToSlot:

00000000 <CopyStackIndexToSlot>:
   0:	004136        	entry	a1, 32
   3:	211282        	l16ui	a8, a2, 66
   6:	027d      	mov.n	a7, a2
   8:	39b487        	bgeu	a4, a8, 45 <CopyStackIndexToSlot+0x45>
			8: R_XTENSA_SLOT0_OP	.text.CopyStackIndexToSlot+0x45
   b:	824a      	add.n	a8, a2, a4
   d:	50a392        	movi	a9, 0x350
  10:	889a      	add.n	a8, a8, a9
  12:	000882        	l8ui	a8, a8, 0
  15:	909470        	addx2	a9, a4, a7
  18:	a81992        	l16ui	a9, a9, 0x150
  1b:	0000a1        	l32r	a10, fffc001c <CopyStackIndexToSlot+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x1c
  1e:	2bba97        	bgeu	a10, a9, 4d <CopyStackIndexToSlot+0x4d>
			1e: R_XTENSA_SLOT0_OP	.text.CopyStackIndexToSlot+0x4d
  21:	000091        	l32r	a9, fffc0024 <CopyStackIndexToSlot+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x14
  24:	07ad      	mov.n	a10, a7
  26:	a08890        	addx4	a8, a8, a9
  29:	0028b2        	l32i	a11, a8, 0
  2c:	000081        	l32r	a8, fffc002c <CopyStackIndexToSlot+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x20
			2c: R_XTENSA_ASM_EXPAND	.text.EmitOp
  2f:	0008e0        	callx8	a8
  32:	0a2d      	mov.n	a2, a10
  34:	8acc      	bnez.n	a10, 40 <CopyStackIndexToSlot+0x40>
			34: R_XTENSA_SLOT0_OP	.text.CopyStackIndexToSlot+0x40
  36:	d7a8      	l32i.n	a10, a7, 52
  38:	03bd      	mov.n	a11, a3
  3a:	000081        	l32r	a8, fffc003c <CopyStackIndexToSlot+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x24
			3a: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
  3d:	0008e0        	callx8	a8
  40:	f01d      	retw.n
  42:	00          	.byte	00
  43:	00          	.byte	00
  44:	00          	.byte	00
  45:	2e0222        	l8ui	a2, a2, 46
  48:	044216        	beqz	a2, 90 <CopyStackIndexToSlot+0x90>
			48: R_XTENSA_SLOT0_OP	.text.CopyStackIndexToSlot+0x90
  4b:	080c      	movi.n	a8, 0
  4d:	08ad      	mov.n	a10, a8
  4f:	000081        	l32r	a8, fffc0050 <CopyStackIndexToSlot+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x28
			4f: R_XTENSA_ASM_EXPAND	Is64BitType
  52:	0008e0        	callx8	a8
  55:	000091        	l32r	a9, fffc0058 <CopyStackIndexToSlot+0xfffc0058>
			55: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x4
  58:	000081        	l32r	a8, fffc0058 <CopyStackIndexToSlot+0xfffc0058>
			58: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot
  5b:	0abd      	mov.n	a11, a10
  5d:	8389b0        	moveqz	a8, a9, a11
  60:	07ad      	mov.n	a10, a7
  62:	08bd      	mov.n	a11, a8
  64:	000081        	l32r	a8, fffc0064 <CopyStackIndexToSlot+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x2c
			64: R_XTENSA_ASM_EXPAND	.text.EmitOp
  67:	0008e0        	callx8	a8
  6a:	0a2d      	mov.n	a2, a10
  6c:	fd0a56        	bnez	a10, 40 <CopyStackIndexToSlot+0x40>
			6c: R_XTENSA_SLOT0_OP	.text.CopyStackIndexToSlot+0x40
  6f:	d7a8      	l32i.n	a10, a7, 52
  71:	03bd      	mov.n	a11, a3
  73:	000081        	l32r	a8, fffc0074 <CopyStackIndexToSlot+0xfffc0074>
			73: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x30
			73: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
  76:	0008e0        	callx8	a8
  79:	211782        	l16ui	a8, a7, 66
  7c:	2db487        	bgeu	a4, a8, ad <CopyStackIndexToSlot+0xad>
			7c: R_XTENSA_SLOT0_OP	.text.CopyStackIndexToSlot+0xad
  7f:	904470        	addx2	a4, a4, a7
  82:	a814b2        	l16ui	a11, a4, 0x150
  85:	d7a8      	l32i.n	a10, a7, 52
  87:	000081        	l32r	a8, fffc0088 <CopyStackIndexToSlot+0xfffc0088>
			87: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x34
			87: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
  8a:	0008e0        	callx8	a8
  8d:	f01d      	retw.n
  8f:	00          	.byte	00
  90:	0000d1        	l32r	a13, fffc0090 <CopyStackIndexToSlot+0xfffc0090>
			90: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x8
  93:	0000b1        	l32r	a11, fffc0094 <CopyStackIndexToSlot+0xfffc0094>
			93: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0xc
  96:	0000a1        	l32r	a10, fffc0098 <CopyStackIndexToSlot+0xfffc0098>
			96: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x10
  99:	07a1c2        	movi	a12, 0x107
  9c:	000081        	l32r	a8, fffc009c <CopyStackIndexToSlot+0xfffc009c>
			9c: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x38
			9c: R_XTENSA_ASM_EXPAND	printf
  9f:	0008e0        	callx8	a8
  a2:	211782        	l16ui	a8, a7, 66
  a5:	a2b487        	bgeu	a4, a8, 4b <CopyStackIndexToSlot+0x4b>
			a5: R_XTENSA_SLOT0_OP	.text.CopyStackIndexToSlot+0x4b
  a8:	028d      	mov.n	a8, a2
  aa:	ffd9c6        	j	15 <CopyStackIndexToSlot+0x15>
			aa: R_XTENSA_SLOT0_OP	.text.CopyStackIndexToSlot+0x15
  ad:	2e0782        	l8ui	a8, a7, 46
  b0:	488c      	beqz.n	a8, b8 <CopyStackIndexToSlot+0xb8>
			b0: R_XTENSA_SLOT0_OP	.text.CopyStackIndexToSlot+0xb8
  b2:	0000b1        	l32r	a11, fffc00b4 <CopyStackIndexToSlot+0xfffc00b4>
			b2: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x18
  b5:	fff306        	j	85 <CopyStackIndexToSlot+0x85>
			b5: R_XTENSA_SLOT0_OP	.text.CopyStackIndexToSlot+0x85
  b8:	0000d1        	l32r	a13, fffc00b8 <CopyStackIndexToSlot+0xfffc00b8>
			b8: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x8
  bb:	0000b1        	l32r	a11, fffc00bc <CopyStackIndexToSlot+0xfffc00bc>
			bb: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0xc
  be:	0000a1        	l32r	a10, fffc00c0 <CopyStackIndexToSlot+0xfffc00c0>
			be: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x10
  c1:	29a1c2        	movi	a12, 0x129
  c4:	000081        	l32r	a8, fffc00c4 <CopyStackIndexToSlot+0xfffc00c4>
			c4: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x3c
			c4: R_XTENSA_ASM_EXPAND	printf
  c7:	0008e0        	callx8	a8
  ca:	211782        	l16ui	a8, a7, 66
  cd:	ae3487        	bltu	a4, a8, 7f <CopyStackIndexToSlot+0x7f>
			cd: R_XTENSA_SLOT0_OP	.text.CopyStackIndexToSlot+0x7f
  d0:	0000b1        	l32r	a11, fffc00d0 <CopyStackIndexToSlot+0xfffc00d0>
			d0: R_XTENSA_SLOT0_OP	.literal.CopyStackIndexToSlot+0x18
  d3:	ffeb86        	j	85 <CopyStackIndexToSlot+0x85>
			d3: R_XTENSA_SLOT0_OP	.text.CopyStackIndexToSlot+0x85

Disassembly of section .text.CopyStackSlotsR:

00000000 <CopyStackSlotsR>:
   0:	008136        	entry	a1, 64
   3:	2159      	s32i.n	a5, a1, 8
   5:	5139      	s32i.n	a3, a1, 20
   7:	3169      	s32i.n	a6, a1, 12
   9:	023457        	bltu	a4, a5, f <CopyStackSlotsR+0xf>
			9: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0xf
   c:	004306        	j	11c <CopyStackSlotsR+0x11c>
			c: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x11c
   f:	211282        	l16ui	a8, a2, 66
  12:	3fb487        	bgeu	a4, a8, 55 <CopyStackSlotsR+0x55>
			12: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x55
  15:	50a3a2        	movi	a10, 0x350
  18:	824a      	add.n	a8, a2, a4
  1a:	88aa      	add.n	a8, a8, a10
  1c:	909420        	addx2	a9, a4, a2
  1f:	a81992        	l16ui	a9, a9, 0x150
  22:	0008a2        	l8ui	a10, a8, 0
  25:	6199      	s32i.n	a9, a1, 24
  27:	000081        	l32r	a8, fffc0028 <CopyStackSlotsR+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x18
			27: R_XTENSA_ASM_EXPAND	Is64BitType
  2a:	0008e0        	callx8	a8
  2d:	2112b2        	l16ui	a11, a2, 66
  30:	5198      	l32i.n	a9, a1, 20
  32:	0061a2        	s32i	a10, a1, 0
  35:	3939b7        	bltu	a9, a11, 72 <CopyStackSlotsR+0x72>
			35: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x72
  38:	2e0282        	l8ui	a8, a2, 46
  3b:	1e1816        	beqz	a8, 220 <CopyStackSlotsR+0x220>
			3b: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x220
  3e:	000031        	l32r	a3, fffc0040 <CopyStackSlotsR+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x14
  41:	941b      	addi.n	a9, a4, 1
  43:	f49090        	extui	a9, a9, 0, 16
  46:	4199      	s32i.n	a9, a1, 16
  48:	6198      	l32i.n	a9, a1, 24
  4a:	389397        	bne	a3, a9, 86 <CopyStackSlotsR+0x86>
			4a: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x86
  4d:	096d      	mov.n	a6, a9
  4f:	047d      	mov.n	a7, a4
  51:	005f46        	j	1d2 <CopyStackSlotsR+0x1d2>
			51: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x1d2
  54:	00          	.byte	00
  55:	2e0282        	l8ui	a8, a2, 46
  58:	1a4816        	beqz	a8, 200 <CopyStackSlotsR+0x200>
			58: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x200
  5b:	000081        	l32r	a8, fffc005c <CopyStackSlotsR+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x14
  5e:	0a0c      	movi.n	a10, 0
  60:	6189      	s32i.n	a8, a1, 24
  62:	000081        	l32r	a8, fffc0064 <CopyStackSlotsR+0xfffc0064>
			62: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x1c
			62: R_XTENSA_ASM_EXPAND	Is64BitType
  65:	0008e0        	callx8	a8
  68:	2112b2        	l16ui	a11, a2, 66
  6b:	5198      	l32i.n	a9, a1, 20
  6d:	01a9      	s32i.n	a10, a1, 0
  6f:	c5b9b7        	bgeu	a9, a11, 38 <CopyStackSlotsR+0x38>
			6f: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x38
  72:	5198      	l32i.n	a9, a1, 20
  74:	908920        	addx2	a8, a9, a2
  77:	941b      	addi.n	a9, a4, 1
  79:	f49090        	extui	a9, a9, 0, 16
  7c:	4199      	s32i.n	a9, a1, 16
  7e:	a81832        	l16ui	a3, a8, 0x150
  81:	6198      	l32i.n	a9, a1, 24
  83:	c61397        	beq	a3, a9, 4d <CopyStackSlotsR+0x4d>
			83: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x4d
  86:	4188      	l32i.n	a8, a1, 16
  88:	2198      	l32i.n	a9, a1, 8
  8a:	023897        	bltu	a8, a9, 90 <CopyStackSlotsR+0x90>
			8a: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x90
  8d:	007006        	j	251 <CopyStackSlotsR+0x251>
			8d: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x251
  90:	fec962        	addi	a6, a9, -2
  93:	c06640        	sub	a6, a6, a4
  96:	a8a0e2        	movi	a14, 168
  99:	e8ea      	add.n	a14, a8, a14
  9b:	f46060        	extui	a6, a6, 0, 16
  9e:	981b      	addi.n	a9, a8, 1
  a0:	905e20        	addx2	a5, a14, a2
  a3:	969a      	add.n	a9, a6, a9
  a5:	7149      	s32i.n	a4, a1, 28
  a7:	087d      	mov.n	a7, a8
  a9:	024d      	mov.n	a4, a2
  ab:	1199      	s32i.n	a9, a1, 4
  ad:	032d      	mov.n	a2, a3
  af:	053d      	mov.n	a3, a5
  b1:	000f86        	j	f3 <CopyStackSlotsR+0xf3>
			b1: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0xf3
  b4:	00          	.byte	00
  b5:	2e04a2        	l8ui	a10, a4, 46
  b8:	068a16        	beqz	a10, 124 <CopyStackSlotsR+0x124>
			b8: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x124
  bb:	000061        	l32r	a6, fffc00bc <CopyStackSlotsR+0xfffc00bc>
			bb: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x14
  be:	065d      	mov.n	a5, a6
  c0:	c0d520        	sub	a13, a5, a2
  c3:	1b0c      	movi.n	a11, 1
  c5:	0a0c      	movi.n	a10, 0
  c7:	83abd0        	moveqz	a10, a11, a13
  ca:	74d0a0        	extui	a13, a10, 0, 8
  cd:	096a56        	bnez	a10, 167 <CopyStackSlotsR+0x167>
			cd: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x167
  d0:	c06260        	sub	a6, a2, a6
  d3:	93bd60        	movnez	a11, a13, a6
  d6:	08db56        	bnez	a11, 167 <CopyStackSlotsR+0x167>
			d6: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x167
  d9:	0188      	l32i.n	a8, a1, 0
  db:	a82a      	add.n	a10, a8, a2
  dd:	029a57        	bne	a10, a5, e3 <CopyStackSlotsR+0xe3>
			dd: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0xe3
  e0:	0020c6        	j	167 <CopyStackSlotsR+0x167>
			e0: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x167
  e3:	1188      	l32i.n	a8, a1, 4
  e5:	771b      	addi.n	a7, a7, 1
  e7:	02c332        	addi	a3, a3, 2
  ea:	029787        	bne	a7, a8, f0 <CopyStackSlotsR+0xf0>
			ea: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0xf0
  ed:	0054c6        	j	244 <CopyStackSlotsR+0x244>
			ed: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x244
  f0:	2114b2        	l16ui	a11, a4, 66
  f3:	f46070        	extui	a6, a7, 0, 16
  f6:	bbb6b7        	bgeu	a6, a11, b5 <CopyStackSlotsR+0xb5>
			f6: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0xb5
  f9:	001362        	l16ui	a6, a3, 0
  fc:	065d      	mov.n	a5, a6
  fe:	000081        	l32r	a8, fffc0100 <CopyStackSlotsR+0xfffc0100>
			fe: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x14
 101:	bb1687        	beq	a6, a8, c0 <CopyStackSlotsR+0xc0>
			101: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0xc0
 104:	50a392        	movi	a9, 0x350
 107:	a79a      	add.n	a10, a7, a9
 109:	a4aa      	add.n	a10, a4, a10
 10b:	000aa2        	l8ui	a10, a10, 0
 10e:	000081        	l32r	a8, fffc0110 <CopyStackSlotsR+0xfffc0110>
			10e: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x20
			10e: R_XTENSA_ASM_EXPAND	Is64BitType
 111:	0008e0        	callx8	a8
 114:	aa6a      	add.n	a10, a10, a6
 116:	f460a0        	extui	a6, a10, 0, 16
 119:	ffe8c6        	j	c0 <CopyStackSlotsR+0xc0>
			119: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0xc0
 11c:	0a0c      	movi.n	a10, 0
 11e:	0a2d      	mov.n	a2, a10
 120:	f01d      	retw.n
 122:	00          	.byte	00
 123:	00          	.byte	00
 124:	000051        	l32r	a5, fffc0124 <CopyStackSlotsR+0xfffc0124>
			124: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x8
 127:	0000b1        	l32r	a11, fffc0128 <CopyStackSlotsR+0xfffc0128>
			127: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x4
 12a:	0000d1        	l32r	a13, fffc012c <CopyStackSlotsR+0xfffc012c>
			12a: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR
 12d:	29a1c2        	movi	a12, 0x129
 130:	05ad      	mov.n	a10, a5
 132:	000081        	l32r	a8, fffc0134 <CopyStackSlotsR+0xfffc0134>
			132: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x24
			132: R_XTENSA_ASM_EXPAND	printf
 135:	0008e0        	callx8	a8
 138:	2114b2        	l16ui	a11, a4, 66
 13b:	ba36b7        	bltu	a6, a11, f9 <CopyStackSlotsR+0xf9>
			13b: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0xf9
 13e:	2e04a2        	l8ui	a10, a4, 46
 141:	f76a56        	bnez	a10, bb <CopyStackSlotsR+0xbb>
			141: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0xbb
 144:	0000b1        	l32r	a11, fffc0144 <CopyStackSlotsR+0xfffc0144>
			144: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x4
 147:	0000d1        	l32r	a13, fffc0148 <CopyStackSlotsR+0xfffc0148>
			147: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR
 14a:	29a1c2        	movi	a12, 0x129
 14d:	05ad      	mov.n	a10, a5
 14f:	000081        	l32r	a8, fffc0150 <CopyStackSlotsR+0xfffc0150>
			14f: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x28
			14f: R_XTENSA_ASM_EXPAND	printf
 152:	0008e0        	callx8	a8
 155:	2114b2        	l16ui	a11, a4, 66
 158:	0236b7        	bltu	a6, a11, 15e <CopyStackSlotsR+0x15e>
			158: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x15e
 15b:	ffd706        	j	bb <CopyStackSlotsR+0xbb>
			15b: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0xbb
 15e:	001362        	l16ui	a6, a3, 0
 161:	000051        	l32r	a5, fffc0164 <CopyStackSlotsR+0xfffc0164>
			161: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x14
 164:	ffe586        	j	fe <CopyStackSlotsR+0xfe>
			164: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0xfe
 167:	3198      	l32i.n	a9, a1, 12
 169:	ffa1a2        	movi	a10, 0x1ff
 16c:	023d      	mov.n	a3, a2
 16e:	056d      	mov.n	a6, a5
 170:	042d      	mov.n	a2, a4
 172:	7148      	l32i.n	a4, a1, 28
 174:	a43a97        	bltu	a10, a9, 11c <CopyStackSlotsR+0x11c>
			174: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x11c
 177:	07cd      	mov.n	a12, a7
 179:	20b990        	or	a11, a9, a9
 17c:	20a220        	or	a10, a2, a2
 17f:	000081        	l32r	a8, fffc0180 <CopyStackSlotsR+0xfffc0180>
			17f: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x2c
			17f: R_XTENSA_ASM_EXPAND	.text.CopyStackIndexToSlot
 182:	0008e0        	callx8	a8
 185:	f95a56        	bnez	a10, 11e <CopyStackSlotsR+0x11e>
			185: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x11e
 188:	3188      	l32i.n	a8, a1, 12
 18a:	90a720        	addx2	a10, a7, a2
 18d:	a85a82        	s16i	a8, a10, 0x150
 190:	2a0c      	movi.n	a10, 2
 192:	000081        	l32r	a8, fffc0194 <CopyStackSlotsR+0xfffc0194>
			192: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x30
			192: R_XTENSA_ASM_EXPAND	Is64BitType
 195:	0008e0        	callx8	a8
 198:	3198      	l32i.n	a9, a1, 12
 19a:	2612b2        	l16ui	a11, a2, 76
 19d:	c91b      	addi.n	a12, a9, 1
 19f:	ccaa      	add.n	a12, a12, a10
 1a1:	f4c0c0        	extui	a12, a12, 0, 16
 1a4:	53bbc0        	max	a11, a11, a12
 1a7:	31c9      	s32i.n	a12, a1, 12
 1a9:	2652b2        	s16i	a11, a2, 76
 1ac:	04cd      	mov.n	a12, a4
 1ae:	03bd      	mov.n	a11, a3
 1b0:	20a220        	or	a10, a2, a2
 1b3:	000081        	l32r	a8, fffc01b4 <CopyStackSlotsR+0xfffc01b4>
			1b3: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x34
			1b3: R_XTENSA_ASM_EXPAND	.text.CopyStackIndexToSlot
 1b6:	0008e0        	callx8	a8
 1b9:	f61a56        	bnez	a10, 11e <CopyStackSlotsR+0x11e>
			1b9: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x11e
 1bc:	0000b1        	l32r	a11, fffc01bc <CopyStackSlotsR+0xfffc01bc>
			1bc: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0xc
 1bf:	0000a1        	l32r	a10, fffc01c0 <CopyStackSlotsR+0xfffc01c0>
			1bf: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x10
 1c2:	61c8      	l32i.n	a12, a1, 24
 1c4:	03dd      	mov.n	a13, a3
 1c6:	000081        	l32r	a8, fffc01c8 <CopyStackSlotsR+0xfffc01c8>
			1c6: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x38
			1c6: R_XTENSA_ASM_EXPAND	printf
 1c9:	0008e0        	callx8	a8
 1cc:	90a420        	addx2	a10, a4, a2
 1cf:	a85a32        	s16i	a3, a10, 0x150
 1d2:	5198      	l32i.n	a9, a1, 20
 1d4:	31e8      	l32i.n	a14, a1, 12
 1d6:	b91b      	addi.n	a11, a9, 1
 1d8:	21d8      	l32i.n	a13, a1, 8
 1da:	41c8      	l32i.n	a12, a1, 16
 1dc:	f4b0b0        	extui	a11, a11, 0, 16
 1df:	02ad      	mov.n	a10, a2
 1e1:	ffe1e5        	call8	0 <CopyStackSlotsR>
			1e1: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR
 1e4:	f36a56        	bnez	a10, 11e <CopyStackSlotsR+0x11e>
			1e4: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x11e
 1e7:	a8a082        	movi	a8, 168
 1ea:	448a      	add.n	a4, a4, a8
 1ec:	778a      	add.n	a7, a7, a8
 1ee:	6188      	l32i.n	a8, a1, 24
 1f0:	904420        	addx2	a4, a4, a2
 1f3:	907720        	addx2	a7, a7, a2
 1f6:	005482        	s16i	a8, a4, 0
 1f9:	005762        	s16i	a6, a7, 0
 1fc:	0a2d      	mov.n	a2, a10
 1fe:	f01d      	retw.n
 200:	0000d1        	l32r	a13, fffc0200 <CopyStackSlotsR+0xfffc0200>
			200: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR
 203:	0000b1        	l32r	a11, fffc0204 <CopyStackSlotsR+0xfffc0204>
			203: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x4
 206:	0000a1        	l32r	a10, fffc0208 <CopyStackSlotsR+0xfffc0208>
			206: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x8
 209:	29a1c2        	movi	a12, 0x129
 20c:	000081        	l32r	a8, fffc020c <CopyStackSlotsR+0xfffc020c>
			20c: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x3c
			20c: R_XTENSA_ASM_EXPAND	printf
 20f:	0008e0        	callx8	a8
 212:	211282        	l16ui	a8, a2, 66
 215:	02b487        	bgeu	a4, a8, 21b <CopyStackSlotsR+0x21b>
			215: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x21b
 218:	ff7e46        	j	15 <CopyStackSlotsR+0x15>
			218: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x15
 21b:	ff8f06        	j	5b <CopyStackSlotsR+0x5b>
			21b: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x5b
 21e:	00          	.byte	00
 21f:	00          	.byte	00
 220:	0000b1        	l32r	a11, fffc0220 <CopyStackSlotsR+0xfffc0220>
			220: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x4
 223:	0000d1        	l32r	a13, fffc0224 <CopyStackSlotsR+0xfffc0224>
			223: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR
 226:	0000a1        	l32r	a10, fffc0228 <CopyStackSlotsR+0xfffc0228>
			226: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x8
 229:	29a1c2        	movi	a12, 0x129
 22c:	000081        	l32r	a8, fffc022c <CopyStackSlotsR+0xfffc022c>
			22c: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x40
			22c: R_XTENSA_ASM_EXPAND	printf
 22f:	0008e0        	callx8	a8
 232:	2112b2        	l16ui	a11, a2, 66
 235:	5188      	l32i.n	a8, a1, 20
 237:	02b8b7        	bgeu	a8, a11, 23d <CopyStackSlotsR+0x23d>
			237: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x23d
 23a:	ff8d06        	j	72 <CopyStackSlotsR+0x72>
			23a: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x72
 23d:	000031        	l32r	a3, fffc0240 <CopyStackSlotsR+0xfffc0240>
			23d: R_XTENSA_SLOT0_OP	.literal.CopyStackSlotsR+0x14
 240:	ff7f46        	j	41 <CopyStackSlotsR+0x41>
			240: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x41
 243:	00          	.byte	00
 244:	023d      	mov.n	a3, a2
 246:	042d      	mov.n	a2, a4
 248:	7148      	l32i.n	a4, a1, 28
 24a:	6168      	l32i.n	a6, a1, 24
 24c:	047d      	mov.n	a7, a4
 24e:	ffd686        	j	1ac <CopyStackSlotsR+0x1ac>
			24e: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x1ac
 251:	6168      	l32i.n	a6, a1, 24
 253:	047d      	mov.n	a7, a4
 255:	ffd4c6        	j	1ac <CopyStackSlotsR+0x1ac>
			255: R_XTENSA_SLOT0_OP	.text.CopyStackSlotsR+0x1ac

Disassembly of section .text.ReturnValues:

00000000 <ReturnValues>:
   0:	006136        	entry	a1, 48
   3:	53a8      	l32i.n	a10, a3, 20
   5:	3149      	s32i.n	a4, a1, 12
   7:	000081        	l32r	a8, fffc0008 <ReturnValues+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.ReturnValues+0xc
			7: R_XTENSA_ASM_EXPAND	GetFuncTypeNumResults
   a:	0008e0        	callx8	a8
   d:	2e02b2        	l8ui	a11, a2, 46
  10:	211262        	l16ui	a6, a2, 66
  13:	131282        	l16ui	a8, a2, 38
  16:	0a5d      	mov.n	a5, a10
  18:	098b16        	beqz	a11, b4 <ReturnValues+0xb4>
			18: R_XTENSA_SLOT0_OP	.text.ReturnValues+0xb4
  1b:	08fa16        	beqz	a10, ae <ReturnValues+0xae>
			1b: R_XTENSA_SLOT0_OP	.text.ReturnValues+0xae
  1e:	7aaa      	add.n	a7, a10, a10
  20:	660b      	addi.n	a6, a6, -1
  22:	f47070        	extui	a7, a7, 0, 16
  25:	f46060        	extui	a6, a6, 0, 16
  28:	140c      	movi.n	a4, 1
  2a:	0523a2        	l32i	a10, a3, 20
  2d:	c0b540        	sub	a11, a5, a4
  30:	f4b0b0        	extui	a11, a11, 0, 16
  33:	000081        	l32r	a8, fffc0034 <ReturnValues+0xfffc0034>
			33: R_XTENSA_SLOT0_OP	.literal.ReturnValues+0x10
			33: R_XTENSA_ASM_EXPAND	GetFuncTypeResultType
  36:	0008e0        	callx8	a8
  39:	211282        	l16ui	a8, a2, 66
  3c:	26b847        	bgeu	a8, a4, 66 <ReturnValues+0x66>
			3c: R_XTENSA_SLOT0_OP	.text.ReturnValues+0x66
  3f:	2e0282        	l8ui	a8, a2, 46
  42:	48bc      	beqz.n	a8, 7a <ReturnValues+0x7a>
			42: R_XTENSA_SLOT0_OP	.text.ReturnValues+0x7a
  44:	841b      	addi.n	a8, a4, 1
  46:	f48080        	extui	a8, a8, 0, 16
  49:	023457        	bltu	a4, a5, 4f <ReturnValues+0x4f>
			49: R_XTENSA_SLOT0_OP	.text.ReturnValues+0x4f
  4c:	002f46        	j	10d <ReturnValues+0x10d>
			4c: R_XTENSA_SLOT0_OP	.text.ReturnValues+0x10d
  4f:	204880        	or	a4, a8, a8
  52:	53a8      	l32i.n	a10, a3, 20
  54:	c0b540        	sub	a11, a5, a4
  57:	f4b0b0        	extui	a11, a11, 0, 16
  5a:	000081        	l32r	a8, fffc005c <ReturnValues+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.ReturnValues+0x14
			5a: R_XTENSA_ASM_EXPAND	GetFuncTypeResultType
  5d:	0008e0        	callx8	a8
  60:	211282        	l16ui	a8, a2, 66
  63:	d83847        	bltu	a8, a4, 3f <ReturnValues+0x3f>
			63: R_XTENSA_SLOT0_OP	.text.ReturnValues+0x3f
  66:	c08840        	sub	a8, a8, a4
  69:	2012c2        	l16ui	a12, a2, 64
  6c:	f48080        	extui	a8, a8, 0, 16
  6f:	2e02b2        	l8ui	a11, a2, 46
  72:	24b8c7        	bgeu	a8, a12, 9a <ReturnValues+0x9a>
			72: R_XTENSA_SLOT0_OP	.text.ReturnValues+0x9a
  75:	0b8d      	mov.n	a8, a11
  77:	fc9b56        	bnez	a11, 44 <ReturnValues+0x44>
			77: R_XTENSA_SLOT0_OP	.text.ReturnValues+0x44
  7a:	309a87        	bne	a10, a8, ae <ReturnValues+0xae>
			7a: R_XTENSA_SLOT0_OP	.text.ReturnValues+0xae
  7d:	fec772        	addi	a7, a7, -2
  80:	f47070        	extui	a7, a7, 0, 16
  83:	860b      	addi.n	a8, a6, -1
  85:	06cd      	mov.n	a12, a6
  87:	07bd      	mov.n	a11, a7
  89:	02ad      	mov.n	a10, a2
  8b:	f46080        	extui	a6, a8, 0, 16
  8e:	000081        	l32r	a8, fffc0090 <ReturnValues+0xfffc0090>
			8e: R_XTENSA_SLOT0_OP	.literal.ReturnValues+0x18
			8e: R_XTENSA_ASM_EXPAND	.text.CopyStackIndexToSlot
  91:	0008e0        	callx8	a8
  94:	faca16        	beqz	a10, 44 <ReturnValues+0x44>
			94: R_XTENSA_SLOT0_OP	.text.ReturnValues+0x44
  97:	000546        	j	b0 <ReturnValues+0xb0>
			97: R_XTENSA_SLOT0_OP	.text.ReturnValues+0xb0
  9a:	828a      	add.n	a8, a2, a8
  9c:	50a392        	movi	a9, 0x350
  9f:	808890        	add	a8, a8, a9
  a2:	000882        	l8ui	a8, a8, 0
  a5:	fd1b16        	beqz	a11, 7a <ReturnValues+0x7a>
			a5: R_XTENSA_SLOT0_OP	.text.ReturnValues+0x7a
  a8:	981a87        	beq	a10, a8, 44 <ReturnValues+0x44>
			a8: R_XTENSA_SLOT0_OP	.text.ReturnValues+0x44
  ab:	f95816        	beqz	a8, 44 <ReturnValues+0x44>
			ab: R_XTENSA_SLOT0_OP	.text.ReturnValues+0x44
  ae:	0a0c      	movi.n	a10, 0
  b0:	0a2d      	mov.n	a2, a10
  b2:	f01d      	retw.n
  b4:	3198      	l32i.n	a9, a1, 12
  b6:	c08680        	sub	a8, a6, a8
  b9:	f48080        	extui	a8, a8, 0, 16
  bc:	c9bc      	beqz.n	a9, fc <ReturnValues+0xfc>
			bc: R_XTENSA_SLOT0_OP	.text.ReturnValues+0xfc
  be:	1a0c      	movi.n	a10, 1
  c0:	44b857        	bgeu	a8, a5, 108 <ReturnValues+0x108>
			c0: R_XTENSA_SLOT0_OP	.text.ReturnValues+0x108
  c3:	e7ea07        	bbsi	a10, 0, ae <ReturnValues+0xae>
			c3: R_XTENSA_SLOT0_OP	.text.ReturnValues+0xae
  c6:	180c      	movi.n	a8, 1
  c8:	0a0c      	movi.n	a10, 0
  ca:	838a50        	moveqz	a8, a10, a5
  cd:	748080        	extui	a8, a8, 0, 8
  d0:	fda816        	beqz	a8, ae <ReturnValues+0xae>
			d0: R_XTENSA_SLOT0_OP	.text.ReturnValues+0xae
  d3:	201282        	l16ui	a8, a2, 64
  d6:	807550        	add	a7, a5, a5
  d9:	f47070        	extui	a7, a7, 0, 16
  dc:	143867        	bltu	a8, a6, f4 <ReturnValues+0xf4>
			dc: R_XTENSA_SLOT0_OP	.text.ReturnValues+0xf4
  df:	0000d1        	l32r	a13, fffc00e0 <ReturnValues+0xfffc00e0>
			df: R_XTENSA_SLOT0_OP	.literal.ReturnValues
  e2:	0000b1        	l32r	a11, fffc00e4 <ReturnValues+0xfffc00e4>
			e2: R_XTENSA_SLOT0_OP	.literal.ReturnValues+0x4
  e5:	0000a1        	l32r	a10, fffc00e8 <ReturnValues+0xfffc00e8>
			e5: R_XTENSA_SLOT0_OP	.literal.ReturnValues+0x8
  e8:	d7a0c2        	movi	a12, 215
  eb:	000081        	l32r	a8, fffc00ec <ReturnValues+0xfffc00ec>
			eb: R_XTENSA_SLOT0_OP	.literal.ReturnValues+0x1c
			eb: R_XTENSA_ASM_EXPAND	printf
  ee:	0008e0        	callx8	a8
  f1:	211262        	l16ui	a6, a2, 66
  f4:	660b      	addi.n	a6, a6, -1
  f6:	f46060        	extui	a6, a6, 0, 16
  f9:	ffcac6        	j	28 <ReturnValues+0x28>
			f9: R_XTENSA_SLOT0_OP	.text.ReturnValues+0x28
  fc:	c08a80        	sub	a8, a10, a8
  ff:	1a0c      	movi.n	a10, 1
 101:	83a980        	moveqz	a10, a9, a8
 104:	ffeec6        	j	c3 <ReturnValues+0xc3>
			104: R_XTENSA_SLOT0_OP	.text.ReturnValues+0xc3
 107:	00          	.byte	00
 108:	0bad      	mov.n	a10, a11
 10a:	ffed46        	j	c3 <ReturnValues+0xc3>
			10a: R_XTENSA_SLOT0_OP	.text.ReturnValues+0xc3
 10d:	3188      	l32i.n	a8, a1, 12
 10f:	f9b856        	bnez	a8, ae <ReturnValues+0xae>
			10f: R_XTENSA_SLOT0_OP	.text.ReturnValues+0xae
 112:	000346        	j	123 <ReturnValues+0x123>
			112: R_XTENSA_SLOT0_OP	.text.ReturnValues+0x123
 115:	000081        	l32r	a8, fffc0118 <ReturnValues+0xfffc0118>
			115: R_XTENSA_SLOT0_OP	.literal.ReturnValues+0x20
			115: R_XTENSA_ASM_EXPAND	.text.Pop
 118:	0008e0        	callx8	a8
 11b:	950b      	addi.n	a9, a5, -1
 11d:	f45090        	extui	a5, a9, 0, 16
 120:	f8ca56        	bnez	a10, b0 <ReturnValues+0xb0>
			120: R_XTENSA_SLOT0_OP	.text.ReturnValues+0xb0
 123:	02ad      	mov.n	a10, a2
 125:	fec556        	bnez	a5, 115 <ReturnValues+0x115>
			125: R_XTENSA_SLOT0_OP	.text.ReturnValues+0x115
 128:	ffe086        	j	ae <ReturnValues+0xae>
			128: R_XTENSA_SLOT0_OP	.text.ReturnValues+0xae

Disassembly of section .text.Compile_End:

00000000 <Compile_End>:
   0:	004136        	entry	a1, 32
   3:	8288      	l32i.n	a8, a2, 32
   5:	027d      	mov.n	a7, a2
   7:	020c      	movi.n	a2, 0
   9:	18ec      	bnez.n	a8, 2e <Compile_End+0x2e>
			9: R_XTENSA_SLOT0_OP	.text.Compile_End+0x2e
   b:	c788      	l32i.n	a8, a7, 48
   d:	089c      	beqz.n	a8, 21 <Compile_End+0x21>
			d: R_XTENSA_SLOT0_OP	.text.Compile_End+0x21
   f:	02cd      	mov.n	a12, a2
  11:	14c7b2        	addi	a11, a7, 20
  14:	20a770        	or	a10, a7, a7
  17:	000081        	l32r	a8, fffc0018 <Compile_End+0xfffc0018>
			17: R_XTENSA_SLOT0_OP	.literal.Compile_End+0x4
			17: R_XTENSA_ASM_EXPAND	.text.ReturnValues
  1a:	0008e0        	callx8	a8
  1d:	0a2d      	mov.n	a2, a10
  1f:	bacc      	bnez.n	a10, 2e <Compile_End+0x2e>
			1f: R_XTENSA_SLOT0_OP	.text.Compile_End+0x2e
  21:	0000b1        	l32r	a11, fffc0024 <Compile_End+0xfffc0024>
			21: R_XTENSA_SLOT0_OP	.literal.Compile_End
  24:	07ad      	mov.n	a10, a7
  26:	000081        	l32r	a8, fffc0028 <Compile_End+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.Compile_End+0x8
			26: R_XTENSA_ASM_EXPAND	.text.EmitOp
  29:	0008e0        	callx8	a8
  2c:	0a2d      	mov.n	a2, a10
  2e:	f01d      	retw.n

Disassembly of section .text.Compile_Memory_Size:

00000000 <Compile_Memory_Size>:
   0:	006136        	entry	a1, 48
   3:	02a8      	l32i.n	a10, a2, 0
   5:	32d8      	l32i.n	a13, a2, 12
   7:	88a682        	movi	a8, 0x688
   a:	c28b      	addi.n	a12, a2, 8
   c:	b1fb      	addi.n	a11, a1, 15
   e:	aa8a      	add.n	a10, a10, a8
  10:	000081        	l32r	a8, fffc0010 <Compile_Memory_Size+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Size+0x18
			10: R_XTENSA_ASM_EXPAND	ReadLEB_i7
  13:	0008e0        	callx8	a8
  16:	027d      	mov.n	a7, a2
  18:	0a2d      	mov.n	a2, a10
  1a:	066a56        	bnez	a10, 84 <Compile_Memory_Size+0x84>
			1a: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Size+0x84
  1d:	1b0c      	movi.n	a11, 1
  1f:	20a770        	or	a10, a7, a7
  22:	000081        	l32r	a8, fffc0024 <Compile_Memory_Size+0xfffc0024>
			22: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Size+0x1c
			22: R_XTENSA_ASM_EXPAND	.text.PreserveRegisterIfOccupied
  25:	0008e0        	callx8	a8
  28:	0a2d      	mov.n	a2, a10
  2a:	056a56        	bnez	a10, 84 <Compile_Memory_Size+0x84>
			2a: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Size+0x84
  2d:	0000b1        	l32r	a11, fffc0030 <Compile_Memory_Size+0xfffc0030>
			2d: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Size
  30:	07ad      	mov.n	a10, a7
  32:	000081        	l32r	a8, fffc0034 <Compile_Memory_Size+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Size+0x20
			32: R_XTENSA_ASM_EXPAND	.text.EmitOp
  35:	0008e0        	callx8	a8
  38:	0a2d      	mov.n	a2, a10
  3a:	046a56        	bnez	a10, 84 <Compile_Memory_Size+0x84>
			3a: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Size+0x84
  3d:	1a0c      	movi.n	a10, 1
  3f:	000081        	l32r	a8, fffc0040 <Compile_Memory_Size+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Size+0x24
			3f: R_XTENSA_ASM_EXPAND	IsFpType
  42:	0008e0        	callx8	a8
  45:	211782        	l16ui	a8, a7, 66
  48:	0000b1        	l32r	a11, fffc0048 <Compile_Memory_Size+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Size+0x10
  4b:	681b      	addi.n	a6, a8, 1
  4d:	0000e1        	l32r	a14, fffc0050 <Compile_Memory_Size+0xfffc0050>
			4d: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Size+0x14
  50:	f46060        	extui	a6, a6, 0, 16
  53:	1c0c      	movi.n	a12, 1
  55:	0c9d      	mov.n	a9, a12
  57:	215762        	s16i	a6, a7, 66
  5a:	ffa0d2        	movi	a13, 255
  5d:	8392a0        	moveqz	a9, a2, a10
  60:	93bea0        	movnez	a11, a14, a10
  63:	1d3d87        	bltu	a13, a8, 84 <Compile_Memory_Size+0x84>
			63: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Size+0x84
  66:	90a870        	addx2	a10, a8, a7
  69:	a85ab2        	s16i	a11, a10, 0x150
  6c:	878a      	add.n	a8, a7, a8
  6e:	50a3a2        	movi	a10, 0x350
  71:	88aa      	add.n	a8, a8, a10
  73:	909970        	addx2	a9, a9, a7
  76:	0048c2        	s8i	a12, a8, 0
  79:	06d972        	addmi	a7, a9, 0x600
  7c:	291782        	l16ui	a8, a7, 82
  7f:	58cc      	bnez.n	a8, 88 <Compile_Memory_Size+0x88>
			7f: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Size+0x88
  81:	295762        	s16i	a6, a7, 82
  84:	f01d      	retw.n
  86:	00          	.byte	00
  87:	00          	.byte	00
  88:	0000d1        	l32r	a13, fffc0088 <Compile_Memory_Size+0xfffc0088>
			88: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Size+0x4
  8b:	0000b1        	l32r	a11, fffc008c <Compile_Memory_Size+0xfffc008c>
			8b: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Size+0x8
  8e:	0000a1        	l32r	a10, fffc0090 <Compile_Memory_Size+0xfffc0090>
			8e: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Size+0xc
  91:	b2a1c2        	movi	a12, 0x1b2
  94:	000081        	l32r	a8, fffc0094 <Compile_Memory_Size+0xfffc0094>
			94: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Size+0x28
			94: R_XTENSA_ASM_EXPAND	printf
  97:	0008e0        	callx8	a8
  9a:	295762        	s16i	a6, a7, 82
  9d:	fff8c6        	j	84 <Compile_Memory_Size+0x84>
			9d: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Size+0x84

Disassembly of section .text.Compile_GetLocal:

00000000 <Compile_GetLocal>:
   0:	006136        	entry	a1, 48
   3:	02a8      	l32i.n	a10, a2, 0
   5:	32d8      	l32i.n	a13, a2, 12
   7:	88a682        	movi	a8, 0x688
   a:	c28b      	addi.n	a12, a2, 8
   c:	b1cb      	addi.n	a11, a1, 12
   e:	aa8a      	add.n	a10, a10, a8
  10:	000081        	l32r	a8, fffc0010 <Compile_GetLocal+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.Compile_GetLocal+0x24
			10: R_XTENSA_ASM_EXPAND	ReadLEB_ptr
  13:	0008e0        	callx8	a8
  16:	027d      	mov.n	a7, a2
  18:	0a2d      	mov.n	a2, a10
  1a:	072a56        	bnez	a10, 90 <Compile_GetLocal+0x90>
			1a: R_XTENSA_SLOT0_OP	.text.Compile_GetLocal+0x90
  1d:	0c27a2        	l32i	a10, a7, 48
  20:	000081        	l32r	a8, fffc0020 <Compile_GetLocal+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.Compile_GetLocal+0x28
			20: R_XTENSA_ASM_EXPAND	GetFunctionNumArgsAndLocals
  23:	0008e0        	callx8	a8
  26:	3198      	l32i.n	a9, a1, 12
  28:	0239a7        	bltu	a9, a10, 2e <Compile_GetLocal+0x2e>
			28: R_XTENSA_SLOT0_OP	.text.Compile_GetLocal+0x2e
  2b:	002346        	j	bc <Compile_GetLocal+0xbc>
			2b: R_XTENSA_SLOT0_OP	.text.Compile_GetLocal+0xbc
  2e:	211782        	l16ui	a8, a7, 66
  31:	f43090        	extui	a3, a9, 0, 16
  34:	f46090        	extui	a6, a9, 0, 16
  37:	59b387        	bgeu	a3, a8, 94 <Compile_GetLocal+0x94>
			37: R_XTENSA_SLOT0_OP	.text.Compile_GetLocal+0x94
  3a:	976a      	add.n	a9, a7, a6
  3c:	50a3a2        	movi	a10, 0x350
  3f:	99aa      	add.n	a9, a9, a10
  41:	000942        	l8ui	a4, a9, 0
  44:	909670        	addx2	a9, a6, a7
  47:	a81952        	l16ui	a5, a9, 0x150
  4a:	681b      	addi.n	a6, a8, 1
  4c:	f46060        	extui	a6, a6, 0, 16
  4f:	215762        	s16i	a6, a7, 66
  52:	ffa092        	movi	a9, 255
  55:	373987        	bltu	a9, a8, 90 <Compile_GetLocal+0x90>
			55: R_XTENSA_SLOT0_OP	.text.Compile_GetLocal+0x90
  58:	909870        	addx2	a9, a8, a7
  5b:	a85952        	s16i	a5, a9, 0x150
  5e:	878a      	add.n	a8, a7, a8
  60:	50a392        	movi	a9, 0x350
  63:	889a      	add.n	a8, a8, a9
  65:	000091        	l32r	a9, fffc0068 <Compile_GetLocal+0xfffc0068>
			65: R_XTENSA_SLOT0_OP	.literal.Compile_GetLocal+0x18
  68:	0000a1        	l32r	a10, fffc0068 <Compile_GetLocal+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.Compile_GetLocal+0x1c
  6b:	959a      	add.n	a9, a5, a9
  6d:	004842        	s8i	a4, a8, 0
  70:	f48090        	extui	a8, a9, 0, 16
  73:	193a87        	bltu	a10, a8, 90 <Compile_GetLocal+0x90>
			73: R_XTENSA_SLOT0_OP	.text.Compile_GetLocal+0x90
  76:	000081        	l32r	a8, fffc0078 <Compile_GetLocal+0xfffc0078>
			76: R_XTENSA_SLOT0_OP	.literal.Compile_GetLocal+0x14
  79:	090c      	movi.n	a9, 0
  7b:	558a      	add.n	a5, a5, a8
  7d:	180c      	movi.n	a8, 1
  7f:	938950        	movnez	a8, a9, a5
  82:	907870        	addx2	a7, a8, a7
  85:	06d772        	addmi	a7, a7, 0x600
  88:	291782        	l16ui	a8, a7, 82
  8b:	28fc      	bnez.n	a8, c1 <Compile_GetLocal+0xc1>
			8b: R_XTENSA_SLOT0_OP	.text.Compile_GetLocal+0xc1
  8d:	295762        	s16i	a6, a7, 82
  90:	f01d      	retw.n
  92:	00          	.byte	00
  93:	00          	.byte	00
  94:	2e0792        	l8ui	a9, a7, 46
  97:	000051        	l32r	a5, fffc0098 <Compile_GetLocal+0xfffc0098>
			97: R_XTENSA_SLOT0_OP	.literal.Compile_GetLocal+0x20
  9a:	024d      	mov.n	a4, a2
  9c:	faa956        	bnez	a9, 4a <Compile_GetLocal+0x4a>
			9c: R_XTENSA_SLOT0_OP	.text.Compile_GetLocal+0x4a
  9f:	0000d1        	l32r	a13, fffc00a0 <Compile_GetLocal+0xfffc00a0>
			9f: R_XTENSA_SLOT0_OP	.literal.Compile_GetLocal+0x4
  a2:	0000b1        	l32r	a11, fffc00a4 <Compile_GetLocal+0xfffc00a4>
			a2: R_XTENSA_SLOT0_OP	.literal.Compile_GetLocal+0x8
  a5:	0000a1        	l32r	a10, fffc00a8 <Compile_GetLocal+0xfffc00a8>
			a5: R_XTENSA_SLOT0_OP	.literal.Compile_GetLocal+0xc
  a8:	29a1c2        	movi	a12, 0x129
  ab:	000081        	l32r	a8, fffc00ac <Compile_GetLocal+0xfffc00ac>
			ab: R_XTENSA_SLOT0_OP	.literal.Compile_GetLocal+0x2c
			ab: R_XTENSA_ASM_EXPAND	printf
  ae:	0008e0        	callx8	a8
  b1:	211782        	l16ui	a8, a7, 66
  b4:	8c3387        	bltu	a3, a8, 44 <Compile_GetLocal+0x44>
			b4: R_XTENSA_SLOT0_OP	.text.Compile_GetLocal+0x44
  b7:	ffe3c6        	j	4a <Compile_GetLocal+0x4a>
			b7: R_XTENSA_SLOT0_OP	.text.Compile_GetLocal+0x4a
  ba:	00          	.byte	00
  bb:	00          	.byte	00
  bc:	000021        	l32r	a2, fffc00bc <Compile_GetLocal+0xfffc00bc>
			bc: R_XTENSA_SLOT0_OP	.literal.Compile_GetLocal
  bf:	f01d      	retw.n
  c1:	0000d1        	l32r	a13, fffc00c4 <Compile_GetLocal+0xfffc00c4>
			c1: R_XTENSA_SLOT0_OP	.literal.Compile_GetLocal+0x10
  c4:	0000b1        	l32r	a11, fffc00c4 <Compile_GetLocal+0xfffc00c4>
			c4: R_XTENSA_SLOT0_OP	.literal.Compile_GetLocal+0x8
  c7:	0000a1        	l32r	a10, fffc00c8 <Compile_GetLocal+0xfffc00c8>
			c7: R_XTENSA_SLOT0_OP	.literal.Compile_GetLocal+0xc
  ca:	b2a1c2        	movi	a12, 0x1b2
  cd:	000081        	l32r	a8, fffc00d0 <Compile_GetLocal+0xfffc00d0>
			cd: R_XTENSA_SLOT0_OP	.literal.Compile_GetLocal+0x30
			cd: R_XTENSA_ASM_EXPAND	printf
  d0:	0008e0        	callx8	a8
  d3:	295762        	s16i	a6, a7, 82
  d6:	ffed86        	j	90 <Compile_GetLocal+0x90>
			d6: R_XTENSA_SLOT0_OP	.text.Compile_GetLocal+0x90

Disassembly of section .text.PushBlockResults:

00000000 <PushBlockResults>:
   0:	008136        	entry	a1, 64
   3:	a2a8      	l32i.n	a10, a2, 40
   5:	060c      	movi.n	a6, 0
   7:	000081        	l32r	a8, fffc0008 <PushBlockResults+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x24
			7: R_XTENSA_ASM_EXPAND	GetFuncTypeNumResults
   a:	0008e0        	callx8	a8
   d:	0a5d      	mov.n	a5, a10
   f:	4a0b      	addi.n	a4, a10, -1
  11:	07ca16        	beqz	a10, 91 <PushBlockResults+0x91>
			11: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0x91
  14:	f37c      	movi.n	a3, -1
  16:	a2a8      	l32i.n	a10, a2, 40
  18:	06bd      	mov.n	a11, a6
  1a:	000081        	l32r	a8, fffc001c <PushBlockResults+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x28
			1a: R_XTENSA_ASM_EXPAND	GetFuncTypeResultType
  1d:	0008e0        	callx8	a8
  20:	0a7d      	mov.n	a7, a10
  22:	721647        	beq	a6, a4, 98 <PushBlockResults+0x98>
			22: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0x98
  25:	2512d2        	l16ui	a13, a2, 74
  28:	00a2e2        	movi	a14, 0x200
  2b:	07cd      	mov.n	a12, a7
  2d:	1ec1b2        	addi	a11, a1, 30
  30:	20a220        	or	a10, a2, a2
  33:	0f5132        	s16i	a3, a1, 30
  36:	000081        	l32r	a8, fffc0038 <PushBlockResults+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x2c
			36: R_XTENSA_ASM_EXPAND	.text.AllocateSlotsWithinRange
  39:	0008e0        	callx8	a8
  3c:	054a56        	bnez	a10, 94 <PushBlockResults+0x94>
			3c: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0x94
  3f:	211292        	l16ui	a9, a2, 66
  42:	ffa0c2        	movi	a12, 255
  45:	e91b      	addi.n	a14, a9, 1
  47:	f4e0e0        	extui	a14, a14, 0, 16
  4a:	2152e2        	s16i	a14, a2, 66
  4d:	0f11b2        	l16ui	a11, a1, 30
  50:	383c97        	bltu	a12, a9, 8c <PushBlockResults+0x8c>
			50: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0x8c
  53:	90c920        	addx2	a12, a9, a2
  56:	000081        	l32r	a8, fffc0058 <PushBlockResults+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x1c
  59:	a85cb2        	s16i	a11, a12, 0x150
  5c:	929a      	add.n	a9, a2, a9
  5e:	50a3c2        	movi	a12, 0x350
  61:	99ca      	add.n	a9, a9, a12
  63:	db8a      	add.n	a13, a11, a8
  65:	0000c1        	l32r	a12, fffc0068 <PushBlockResults+0xfffc0068>
			65: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x10
  68:	004972        	s8i	a7, a9, 0
  6b:	f490d0        	extui	a9, a13, 0, 16
  6e:	1a3c97        	bltu	a12, a9, 8c <PushBlockResults+0x8c>
			6e: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0x8c
  71:	000081        	l32r	a8, fffc0074 <PushBlockResults+0xfffc0074>
			71: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x20
  74:	01a072        	movi	a7, 1
  77:	80bb80        	add	a11, a11, a8
  7a:	937ab0        	movnez	a7, a10, a11
  7d:	907720        	addx2	a7, a7, a2
  80:	06d772        	addmi	a7, a7, 0x600
  83:	291792        	l16ui	a9, a7, 82
  86:	05f956        	bnez	a9, e9 <PushBlockResults+0xe9>
			86: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0xe9
  89:	2957e2        	s16i	a14, a7, 82
  8c:	661b      	addi.n	a6, a6, 1
  8e:	849567        	bne	a5, a6, 16 <PushBlockResults+0x16>
			8e: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0x16
  91:	00a0a2        	movi	a10, 0
  94:	0a2d      	mov.n	a2, a10
  96:	f01d      	retw.n
  98:	000081        	l32r	a8, fffc0098 <PushBlockResults+0xfffc0098>
			98: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x30
			98: R_XTENSA_ASM_EXPAND	IsFpType
  9b:	0008e0        	callx8	a8
  9e:	f83a16        	beqz	a10, 25 <PushBlockResults+0x25>
			9e: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0x25
  a1:	07ad      	mov.n	a10, a7
  a3:	000081        	l32r	a8, fffc00a4 <PushBlockResults+0xfffc00a4>
			a3: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x34
			a3: R_XTENSA_ASM_EXPAND	IsFpType
  a6:	0008e0        	callx8	a8
  a9:	1b0c      	movi.n	a11, 1
  ab:	090c      	movi.n	a9, 0
  ad:	0000f1        	l32r	a15, fffc00b0 <PushBlockResults+0xfffc00b0>
			ad: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x14
  b0:	939ba0        	movnez	a9, a11, a10
  b3:	0000b1        	l32r	a11, fffc00b4 <PushBlockResults+0xfffc00b4>
			b3: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x18
  b6:	93fba0        	movnez	a15, a11, a10
  b9:	047716        	beqz	a7, 104 <PushBlockResults+0x104>
			b9: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0x104
  bc:	2112a2        	l16ui	a10, a2, 66
  bf:	ffa0b2        	movi	a11, 255
  c2:	ea1b      	addi.n	a14, a10, 1
  c4:	f4e0e0        	extui	a14, a14, 0, 16
  c7:	2152e2        	s16i	a14, a2, 66
  ca:	be3ba7        	bltu	a11, a10, 8c <PushBlockResults+0x8c>
			ca: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0x8c
  cd:	90ba20        	addx2	a11, a10, a2
  d0:	a85bf2        	s16i	a15, a11, 0x150
  d3:	a2aa      	add.n	a10, a2, a10
  d5:	50a3b2        	movi	a11, 0x350
  d8:	909920        	addx2	a9, a9, a2
  db:	aaba      	add.n	a10, a10, a11
  dd:	004a72        	s8i	a7, a10, 0
  e0:	06d972        	addmi	a7, a9, 0x600
  e3:	291792        	l16ui	a9, a7, 82
  e6:	f9f916        	beqz	a9, 89 <PushBlockResults+0x89>
			e6: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0x89
  e9:	0000d1        	l32r	a13, fffc00ec <PushBlockResults+0xfffc00ec>
			e9: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0xc
  ec:	0000b1        	l32r	a11, fffc00ec <PushBlockResults+0xfffc00ec>
			ec: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x4
  ef:	0000a1        	l32r	a10, fffc00f0 <PushBlockResults+0xfffc00f0>
			ef: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x8
  f2:	31e9      	s32i.n	a14, a1, 12
  f4:	b2a1c2        	movi	a12, 0x1b2
  f7:	000081        	l32r	a8, fffc00f8 <PushBlockResults+0xfffc00f8>
			f7: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x38
			f7: R_XTENSA_ASM_EXPAND	printf
  fa:	0008e0        	callx8	a8
  fd:	31e8      	l32i.n	a14, a1, 12
  ff:	ffe186        	j	89 <PushBlockResults+0x89>
			ff: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0x89
 102:	00          	.byte	00
 103:	00          	.byte	00
 104:	2e02a2        	l8ui	a10, a2, 46
 107:	fb1a56        	bnez	a10, bc <PushBlockResults+0xbc>
			107: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0xbc
 10a:	0000b1        	l32r	a11, fffc010c <PushBlockResults+0xfffc010c>
			10a: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x4
 10d:	0000d1        	l32r	a13, fffc0110 <PushBlockResults+0xfffc0110>
			10d: R_XTENSA_SLOT0_OP	.literal.PushBlockResults
 110:	0000a1        	l32r	a10, fffc0110 <PushBlockResults+0xfffc0110>
			110: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x8
 113:	2199      	s32i.n	a9, a1, 8
 115:	31f9      	s32i.n	a15, a1, 12
 117:	3fa2c2        	movi	a12, 0x23f
 11a:	000081        	l32r	a8, fffc011c <PushBlockResults+0xfffc011c>
			11a: R_XTENSA_SLOT0_OP	.literal.PushBlockResults+0x3c
			11a: R_XTENSA_ASM_EXPAND	printf
 11d:	0008e0        	callx8	a8
 120:	2112a2        	l16ui	a10, a2, 66
 123:	31f8      	l32i.n	a15, a1, 12
 125:	ea1b      	addi.n	a14, a10, 1
 127:	f4e0e0        	extui	a14, a14, 0, 16
 12a:	2198      	l32i.n	a9, a1, 8
 12c:	ffa0b2        	movi	a11, 255
 12f:	2152e2        	s16i	a14, a2, 66
 132:	02bba7        	bgeu	a11, a10, 138 <PushBlockResults+0x138>
			132: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0x138
 135:	ffd4c6        	j	8c <PushBlockResults+0x8c>
			135: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0x8c
 138:	ffe446        	j	cd <PushBlockResults+0xcd>
			138: R_XTENSA_SLOT0_OP	.text.PushBlockResults+0xcd

Disassembly of section .text.CompileCallArgsAndReturn:

00000000 <CompileCallArgsAndReturn>:
   0:	008136        	entry	a1, 64
   3:	06d262        	addmi	a6, a2, 0x600
   6:	281682        	l16ui	a8, a6, 80
   9:	2512b2        	l16ui	a11, a2, 74
   c:	5149      	s32i.n	a4, a1, 20
   e:	027d      	mov.n	a7, a2
  10:	023b87        	bltu	a11, a8, 16 <CompileCallArgsAndReturn+0x16>
			10: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x16
  13:	009246        	j	260 <CompileCallArgsAndReturn+0x260>
			13: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x260
  16:	a80b      	addi.n	a10, a8, -1
  18:	f490a0        	extui	a9, a10, 0, 16
  1b:	50a4c2        	movi	a12, 0x450
  1e:	99ca      	add.n	a9, a9, a12
  20:	929a      	add.n	a9, a2, a9
  22:	000306        	j	32 <CompileCallArgsAndReturn+0x32>
			22: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x32
  25:	285682        	s16i	a8, a6, 80
  28:	990b      	addi.n	a9, a9, -1
  2a:	029b87        	bne	a11, a8, 30 <CompileCallArgsAndReturn+0x30>
			2a: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x30
  2d:	003dc6        	j	128 <CompileCallArgsAndReturn+0x128>
			2d: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x128
  30:	a80b      	addi.n	a10, a8, -1
  32:	0009c2        	l8ui	a12, a9, 0
  35:	08dd      	mov.n	a13, a8
  37:	f480a0        	extui	a8, a10, 0, 16
  3a:	fe7c16        	beqz	a12, 25 <CompileCallArgsAndReturn+0x25>
			3a: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x25
  3d:	ffa182        	movi	a8, 0x1ff
  40:	3f38d7        	bltu	a8, a13, 83 <CompileCallArgsAndReturn+0x83>
			40: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x83
  43:	51a492        	movi	a9, 0x451
  46:	ffa1a2        	movi	a10, 0x1ff
  49:	979a      	add.n	a9, a7, a9
  4b:	c0aad0        	sub	a10, a10, a13
  4e:	50a482        	movi	a8, 0x450
  51:	8d8a      	add.n	a8, a13, a8
  53:	99da      	add.n	a9, a9, a13
  55:	f4a0a0        	extui	a10, a10, 0, 16
  58:	478a      	add.n	a4, a7, a8
  5a:	29aa      	add.n	a2, a9, a10
  5c:	000146        	j	65 <CompileCallArgsAndReturn+0x65>
			5c: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x65
  5f:	00          	.byte	00
  60:	441b      	addi.n	a4, a4, 1
  62:	1d1427        	beq	a4, a2, 83 <CompileCallArgsAndReturn+0x83>
			62: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x83
  65:	000482        	l8ui	a8, a4, 0
  68:	ff4816        	beqz	a8, 60 <CompileCallArgsAndReturn+0x60>
			68: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x60
  6b:	0000d1        	l32r	a13, fffc006c <CompileCallArgsAndReturn+0xfffc006c>
			6b: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn
  6e:	0000b1        	l32r	a11, fffc0070 <CompileCallArgsAndReturn+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x4
  71:	0000a1        	l32r	a10, fffc0074 <CompileCallArgsAndReturn+0xfffc0074>
			71: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x8
  74:	d0a1c2        	movi	a12, 0x1d0
  77:	01c442        	addi	a4, a4, 1
  7a:	000081        	l32r	a8, fffc007c <CompileCallArgsAndReturn+0xfffc007c>
			7a: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x24
			7a: R_XTENSA_ASM_EXPAND	printf
  7d:	0008e0        	callx8	a8
  80:	e19427        	bne	a4, a2, 65 <CompileCallArgsAndReturn+0x65>
			80: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x65
  83:	281682        	l16ui	a8, a6, 80
  86:	01a092        	movi	a9, 1
  89:	02a0a2        	movi	a10, 2
  8c:	734890        	maxu	a4, a8, a9
  8f:	000081        	l32r	a8, fffc0090 <CompileCallArgsAndReturn+0xfffc0090>
			8f: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x28
			8f: R_XTENSA_ASM_EXPAND	Is64BitType
  92:	0008e0        	callx8	a8
  95:	84aa      	add.n	a8, a4, a10
  97:	104a80        	and	a4, a10, a8
  9a:	304480        	xor	a4, a4, a8
  9d:	f44040        	extui	a4, a4, 0, 16
  a0:	005342        	s16i	a4, a3, 0
  a3:	b58c      	beqz.n	a5, b2 <CompileCallArgsAndReturn+0xb2>
			a3: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0xb2
  a5:	07ad      	mov.n	a10, a7
  a7:	000081        	l32r	a8, fffc00a8 <CompileCallArgsAndReturn+0xfffc00a8>
			a7: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x2c
			a7: R_XTENSA_ASM_EXPAND	.text.Pop
  aa:	0008e0        	callx8	a8
  ad:	0a2d      	mov.n	a2, a10
  af:	05ba56        	bnez	a10, 10e <CompileCallArgsAndReturn+0x10e>
			af: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x10e
  b2:	51a8      	l32i.n	a10, a1, 20
  b4:	000081        	l32r	a8, fffc00b4 <CompileCallArgsAndReturn+0xfffc00b4>
			b4: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x30
			b4: R_XTENSA_ASM_EXPAND	GetFuncTypeNumParams
  b7:	0008e0        	callx8	a8
  ba:	205aa0        	or	a5, a10, a10
  bd:	0521a2        	l32i	a10, a1, 20
  c0:	000081        	l32r	a8, fffc00c0 <CompileCallArgsAndReturn+0xfffc00c0>
			c0: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x34
			c0: R_XTENSA_ASM_EXPAND	GetFuncTypeNumResults
  c3:	0008e0        	callx8	a8
  c6:	35aa      	add.n	a3, a5, a10
  c8:	903340        	addx2	a3, a3, a4
  cb:	0661a2        	s32i	a10, a1, 24
  ce:	f43030        	extui	a3, a3, 0, 16
  d1:	fec332        	addi	a3, a3, -2
  d4:	055516        	beqz	a5, 12d <CompileCallArgsAndReturn+0x12d>
			d4: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x12d
  d7:	2117c2        	l16ui	a12, a7, 66
  da:	201782        	l16ui	a8, a7, 64
  dd:	f43030        	extui	a3, a3, 0, 16
  e0:	0438c7        	bltu	a8, a12, e8 <CompileCallArgsAndReturn+0xe8>
			e0: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0xe8
  e3:	2e0782        	l8ui	a8, a7, 46
  e6:	68ac      	beqz.n	a8, 110 <CompileCallArgsAndReturn+0x110>
			e6: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x110
  e8:	cc0b      	addi.n	a12, a12, -1
  ea:	20b330        	or	a11, a3, a3
  ed:	f4c0c0        	extui	a12, a12, 0, 16
  f0:	07ad      	mov.n	a10, a7
  f2:	000081        	l32r	a8, fffc00f4 <CompileCallArgsAndReturn+0xfffc00f4>
			f2: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x38
			f2: R_XTENSA_ASM_EXPAND	.text.CopyStackIndexToSlot
  f5:	0008e0        	callx8	a8
  f8:	0a2d      	mov.n	a2, a10
  fa:	07ad      	mov.n	a10, a7
  fc:	e2cc      	bnez.n	a2, 10e <CompileCallArgsAndReturn+0x10e>
			fc: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x10e
  fe:	000081        	l32r	a8, fffc0100 <CompileCallArgsAndReturn+0xfffc0100>
			fe: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x3c
			fe: R_XTENSA_ASM_EXPAND	.text.Pop
 101:	0008e0        	callx8	a8
 104:	550b      	addi.n	a5, a5, -1
 106:	0a2d      	mov.n	a2, a10
 108:	f45050        	extui	a5, a5, 0, 16
 10b:	fc2a16        	beqz	a10, d1 <CompileCallArgsAndReturn+0xd1>
			10b: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0xd1
 10e:	f01d      	retw.n
 110:	0000d1        	l32r	a13, fffc0110 <CompileCallArgsAndReturn+0xfffc0110>
			110: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0xc
 113:	0000b1        	l32r	a11, fffc0114 <CompileCallArgsAndReturn+0xfffc0114>
			113: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x4
 116:	0000a1        	l32r	a10, fffc0118 <CompileCallArgsAndReturn+0xfffc0118>
			116: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x8
 119:	d7a0c2        	movi	a12, 215
 11c:	000081        	l32r	a8, fffc011c <CompileCallArgsAndReturn+0xfffc011c>
			11c: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x40
			11c: R_XTENSA_ASM_EXPAND	printf
 11f:	0008e0        	callx8	a8
 122:	2117c2        	l16ui	a12, a7, 66
 125:	ffefc6        	j	e8 <CompileCallArgsAndReturn+0xe8>
			125: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0xe8
 128:	0bdd      	mov.n	a13, a11
 12a:	ffc3c6        	j	3d <CompileCallArgsAndReturn+0x3d>
			12a: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x3d
 12d:	6198      	l32i.n	a9, a1, 24
 12f:	890b      	addi.n	a8, a9, -1
 131:	f48080        	extui	a8, a8, 0, 16
 134:	7189      	s32i.n	a8, a1, 28
 136:	122916        	beqz	a9, 25c <CompileCallArgsAndReturn+0x25c>
			136: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x25c
 139:	ffa022        	movi	a2, 255
 13c:	50a432        	movi	a3, 0x450
 13f:	51a8      	l32i.n	a10, a1, 20
 141:	05bd      	mov.n	a11, a5
 143:	000081        	l32r	a8, fffc0144 <CompileCallArgsAndReturn+0xfffc0144>
			143: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x44
			143: R_XTENSA_ASM_EXPAND	GetFuncTypeResultType
 146:	0008e0        	callx8	a8
 149:	211792        	l16ui	a9, a7, 66
 14c:	0aed      	mov.n	a14, a10
 14e:	f91b      	addi.n	a15, a9, 1
 150:	f4f0f0        	extui	a15, a15, 0, 16
 153:	2157f2        	s16i	a15, a7, 66
 156:	383297        	bltu	a2, a9, 192 <CompileCallArgsAndReturn+0x192>
			156: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x192
 159:	90a970        	addx2	a10, a9, a7
 15c:	000081        	l32r	a8, fffc015c <CompileCallArgsAndReturn+0xfffc015c>
			15c: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x1c
 15f:	a85a42        	s16i	a4, a10, 0x150
 162:	979a      	add.n	a9, a7, a9
 164:	50a3a2        	movi	a10, 0x350
 167:	99aa      	add.n	a9, a9, a10
 169:	0000b1        	l32r	a11, fffc016c <CompileCallArgsAndReturn+0xfffc016c>
			169: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x18
 16c:	a48a      	add.n	a10, a4, a8
 16e:	0049e2        	s8i	a14, a9, 0
 171:	f490a0        	extui	a9, a10, 0, 16
 174:	1a3b97        	bltu	a11, a9, 192 <CompileCallArgsAndReturn+0x192>
			174: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x192
 177:	000091        	l32r	a9, fffc0178 <CompileCallArgsAndReturn+0xfffc0178>
			177: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x20
 17a:	0a0c      	movi.n	a10, 0
 17c:	b49a      	add.n	a11, a4, a9
 17e:	190c      	movi.n	a9, 1
 180:	939ab0        	movnez	a9, a10, a11
 183:	909970        	addx2	a9, a9, a7
 186:	06d992        	addmi	a9, a9, 0x600
 189:	2919a2        	l16ui	a10, a9, 82
 18c:	06da56        	bnez	a10, 1fd <CompileCallArgsAndReturn+0x1fd>
			18c: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x1fd
 18f:	2959f2        	s16i	a15, a9, 82
 192:	0ead      	mov.n	a10, a14
 194:	000081        	l32r	a8, fffc0194 <CompileCallArgsAndReturn+0xfffc0194>
			194: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x48
			194: R_XTENSA_ASM_EXPAND	Is64BitType
 197:	0008e0        	callx8	a8
 19a:	974a      	add.n	a9, a7, a4
 19c:	b93a      	add.n	a11, a9, a3
 19e:	000bb2        	l8ui	a11, a11, 0
 1a1:	0aed      	mov.n	a14, a10
 1a3:	079b56        	bnez	a11, 220 <CompileCallArgsAndReturn+0x220>
			1a3: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x220
 1a6:	993a      	add.n	a9, a9, a3
 1a8:	1a0c      	movi.n	a10, 1
 1aa:	0049a2        	s8i	a10, a9, 0
 1ad:	2816b2        	l16ui	a11, a6, 80
 1b0:	2617a2        	l16ui	a10, a7, 76
 1b3:	941b      	addi.n	a9, a4, 1
 1b5:	53bb90        	max	a11, a11, a9
 1b8:	2856b2        	s16i	a11, a6, 80
 1bb:	53aa90        	max	a10, a10, a9
 1be:	2657a2        	s16i	a10, a7, 76
 1c1:	7eac      	beqz.n	a14, 1ec <CompileCallArgsAndReturn+0x1ec>
			1c1: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x1ec
 1c3:	f49090        	extui	a9, a9, 0, 16
 1c6:	e79a      	add.n	a14, a7, a9
 1c8:	ae3a      	add.n	a10, a14, a3
 1ca:	000aa2        	l8ui	a10, a10, 0
 1cd:	06ca56        	bnez	a10, 23d <CompileCallArgsAndReturn+0x23d>
			1cd: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x23d
 1d0:	1a0c      	movi.n	a10, 1
 1d2:	ee3a      	add.n	a14, a14, a3
 1d4:	004ea2        	s8i	a10, a14, 0
 1d7:	2816b2        	l16ui	a11, a6, 80
 1da:	2617a2        	l16ui	a10, a7, 76
 1dd:	01c992        	addi	a9, a9, 1
 1e0:	53bb90        	max	a11, a11, a9
 1e3:	2856b2        	s16i	a11, a6, 80
 1e6:	539a90        	max	a9, a10, a9
 1e9:	265792        	s16i	a9, a7, 76
 1ec:	7188      	l32i.n	a8, a1, 28
 1ee:	442b      	addi.n	a4, a4, 2
 1f0:	f44040        	extui	a4, a4, 0, 16
 1f3:	951b      	addi.n	a9, a5, 1
 1f5:	631857        	beq	a8, a5, 25c <CompileCallArgsAndReturn+0x25c>
			1f5: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x25c
 1f8:	095d      	mov.n	a5, a9
 1fa:	ffd046        	j	13f <CompileCallArgsAndReturn+0x13f>
			1fa: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x13f
 1fd:	0000d1        	l32r	a13, fffc0200 <CompileCallArgsAndReturn+0xfffc0200>
			1fd: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x10
 200:	0000b1        	l32r	a11, fffc0200 <CompileCallArgsAndReturn+0xfffc0200>
			200: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x4
 203:	0000a1        	l32r	a10, fffc0204 <CompileCallArgsAndReturn+0xfffc0204>
			203: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x8
 206:	2199      	s32i.n	a9, a1, 8
 208:	31e9      	s32i.n	a14, a1, 12
 20a:	41f9      	s32i.n	a15, a1, 16
 20c:	b2a1c2        	movi	a12, 0x1b2
 20f:	000081        	l32r	a8, fffc0210 <CompileCallArgsAndReturn+0xfffc0210>
			20f: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x4c
			20f: R_XTENSA_ASM_EXPAND	printf
 212:	0008e0        	callx8	a8
 215:	41f8      	l32i.n	a15, a1, 16
 217:	31e8      	l32i.n	a14, a1, 12
 219:	2198      	l32i.n	a9, a1, 8
 21b:	ffdc06        	j	18f <CompileCallArgsAndReturn+0x18f>
			21b: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x18f
 21e:	00          	.byte	00
 21f:	00          	.byte	00
 220:	0000d1        	l32r	a13, fffc0220 <CompileCallArgsAndReturn+0xfffc0220>
			220: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x14
 223:	0000b1        	l32r	a11, fffc0224 <CompileCallArgsAndReturn+0xfffc0224>
			223: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x4
 226:	0000a1        	l32r	a10, fffc0228 <CompileCallArgsAndReturn+0xfffc0228>
			226: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x8
 229:	2199      	s32i.n	a9, a1, 8
 22b:	31e9      	s32i.n	a14, a1, 12
 22d:	4aa1c2        	movi	a12, 0x14a
 230:	000081        	l32r	a8, fffc0230 <CompileCallArgsAndReturn+0xfffc0230>
			230: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x50
			230: R_XTENSA_ASM_EXPAND	printf
 233:	0008e0        	callx8	a8
 236:	31e8      	l32i.n	a14, a1, 12
 238:	2198      	l32i.n	a9, a1, 8
 23a:	ffda06        	j	1a6 <CompileCallArgsAndReturn+0x1a6>
			23a: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x1a6
 23d:	0000d1        	l32r	a13, fffc0240 <CompileCallArgsAndReturn+0xfffc0240>
			23d: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x14
 240:	0000b1        	l32r	a11, fffc0240 <CompileCallArgsAndReturn+0xfffc0240>
			240: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x4
 243:	0000a1        	l32r	a10, fffc0244 <CompileCallArgsAndReturn+0xfffc0244>
			243: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x8
 246:	2199      	s32i.n	a9, a1, 8
 248:	0361e2        	s32i	a14, a1, 12
 24b:	4aa1c2        	movi	a12, 0x14a
 24e:	000081        	l32r	a8, fffc0250 <CompileCallArgsAndReturn+0xfffc0250>
			24e: R_XTENSA_SLOT0_OP	.literal.CompileCallArgsAndReturn+0x54
			24e: R_XTENSA_ASM_EXPAND	printf
 251:	0008e0        	callx8	a8
 254:	31e8      	l32i.n	a14, a1, 12
 256:	2198      	l32i.n	a9, a1, 8
 258:	ffdd06        	j	1d0 <CompileCallArgsAndReturn+0x1d0>
			258: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x1d0
 25b:	00          	.byte	00
 25c:	020c      	movi.n	a2, 0
 25e:	f01d      	retw.n
 260:	08dd      	mov.n	a13, a8
 262:	ff75c6        	j	3d <CompileCallArgsAndReturn+0x3d>
			262: R_XTENSA_SLOT0_OP	.text.CompileCallArgsAndReturn+0x3d

Disassembly of section .text.Compile_CallIndirect:

00000000 <Compile_CallIndirect>:
   0:	006136        	entry	a1, 48
   3:	0268      	l32i.n	a6, a2, 0
   5:	88a682        	movi	a8, 0x688
   8:	32d8      	l32i.n	a13, a2, 12
   a:	668a      	add.n	a6, a6, a8
   c:	528b      	addi.n	a5, a2, 8
   e:	05cd      	mov.n	a12, a5
  10:	b18b      	addi.n	a11, a1, 8
  12:	06ad      	mov.n	a10, a6
  14:	000081        	l32r	a8, fffc0014 <Compile_CallIndirect+0xfffc0014>
			14: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x20
			14: R_XTENSA_ASM_EXPAND	ReadLEB_u32
  17:	0008e0        	callx8	a8
  1a:	027d      	mov.n	a7, a2
  1c:	0a2d      	mov.n	a2, a10
  1e:	0aaa56        	bnez	a10, cc <Compile_CallIndirect+0xcc>
			1e: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0xcc
  21:	37d8      	l32i.n	a13, a7, 12
  23:	05cd      	mov.n	a12, a5
  25:	b1cb      	addi.n	a11, a1, 12
  27:	20a660        	or	a10, a6, a6
  2a:	000081        	l32r	a8, fffc002c <Compile_CallIndirect+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x24
			2a: R_XTENSA_ASM_EXPAND	ReadLEB_u32
  2d:	0008e0        	callx8	a8
  30:	0a2d      	mov.n	a2, a10
  32:	096a56        	bnez	a10, cc <Compile_CallIndirect+0xcc>
			32: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0xcc
  35:	1788      	l32i.n	a8, a7, 4
  37:	022192        	l32i	a9, a1, 8
  3a:	052882        	l32i	a8, a8, 20
  3d:	023987        	bltu	a9, a8, 43 <Compile_CallIndirect+0x43>
			3d: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x43
  40:	004e06        	j	17c <Compile_CallIndirect+0x17c>
			40: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x17c
  43:	211782        	l16ui	a8, a7, 66
  46:	201792        	l16ui	a9, a7, 64
  49:	053987        	bltu	a9, a8, 52 <Compile_CallIndirect+0x52>
			49: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x52
  4c:	2e07a2        	l8ui	a10, a7, 46
  4f:	105a16        	beqz	a10, 158 <Compile_CallIndirect+0x158>
			4f: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x158
  52:	ffc892        	addi	a9, a8, -1
  55:	236980        	sext	a6, a9, 15
  58:	752687        	blt	a6, a8, d1 <Compile_CallIndirect+0xd1>
			58: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0xd1
  5b:	2e07a2        	l8ui	a10, a7, 46
  5e:	0a6a16        	beqz	a10, 108 <Compile_CallIndirect+0x108>
			5e: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x108
  61:	2017b2        	l16ui	a11, a7, 64
  64:	f49090        	extui	a9, a9, 0, 16
  67:	023b87        	bltu	a11, a8, 6d <Compile_CallIndirect+0x6d>
			67: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x6d
  6a:	003646        	j	147 <Compile_CallIndirect+0x147>
			6a: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x147
  6d:	909970        	addx2	a9, a9, a7
  70:	a81962        	l16ui	a6, a9, 0x150
  73:	1798      	l32i.n	a9, a7, 4
  75:	2188      	l32i.n	a8, a1, 8
  77:	6998      	l32i.n	a9, a9, 24
  79:	1d0c      	movi.n	a13, 1
  7b:	a08890        	addx4	a8, a8, a9
  7e:	0858      	l32i.n	a5, a8, 0
  80:	b16b      	addi.n	a11, a1, 6
  82:	20c550        	or	a12, a5, a5
  85:	07ad      	mov.n	a10, a7
  87:	000081        	l32r	a8, fffc0088 <Compile_CallIndirect+0xfffc0088>
			87: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x28
			87: R_XTENSA_ASM_EXPAND	.text.CompileCallArgsAndReturn
  8a:	0008e0        	callx8	a8
  8d:	202aa0        	or	a2, a10, a10
  90:	8afc      	bnez.n	a10, cc <Compile_CallIndirect+0xcc>
			90: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0xcc
  92:	0000b1        	l32r	a11, fffc0094 <Compile_CallIndirect+0xfffc0094>
			92: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x14
  95:	20a770        	or	a10, a7, a7
  98:	000081        	l32r	a8, fffc0098 <Compile_CallIndirect+0xfffc0098>
			98: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x2c
			98: R_XTENSA_ASM_EXPAND	.text.EmitOp
  9b:	0008e0        	callx8	a8
  9e:	0a2d      	mov.n	a2, a10
  a0:	8aec      	bnez.n	a10, cc <Compile_CallIndirect+0xcc>
			a0: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0xcc
  a2:	d7a8      	l32i.n	a10, a7, 52
  a4:	06bd      	mov.n	a11, a6
  a6:	000081        	l32r	a8, fffc00a8 <Compile_CallIndirect+0xfffc00a8>
			a6: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x30
			a6: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
  a9:	0008e0        	callx8	a8
  ac:	17b8      	l32i.n	a11, a7, 4
  ae:	07ad      	mov.n	a10, a7
  b0:	000081        	l32r	a8, fffc00b0 <Compile_CallIndirect+0xfffc00b0>
			b0: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x34
			b0: R_XTENSA_ASM_EXPAND	.text.EmitPointer
  b3:	0008e0        	callx8	a8
  b6:	05bd      	mov.n	a11, a5
  b8:	20a770        	or	a10, a7, a7
  bb:	000081        	l32r	a8, fffc00bc <Compile_CallIndirect+0xfffc00bc>
			bb: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x38
			bb: R_XTENSA_ASM_EXPAND	.text.EmitPointer
  be:	0008e0        	callx8	a8
  c1:	0311b2        	l16ui	a11, a1, 6
  c4:	d7a8      	l32i.n	a10, a7, 52
  c6:	000081        	l32r	a8, fffc00c8 <Compile_CallIndirect+0xfffc00c8>
			c6: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x3c
			c6: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
  c9:	0008e0        	callx8	a8
  cc:	f01d      	retw.n
  ce:	00          	.byte	00
  cf:	00          	.byte	00
  d0:	00          	.byte	00
  d1:	04b6d6        	bgez	a6, 120 <Compile_CallIndirect+0x120>
			d1: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x120
  d4:	201792        	l16ui	a9, a7, 64
  d7:	253987        	bltu	a9, a8, 100 <Compile_CallIndirect+0x100>
			d7: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x100
  da:	2e0782        	l8ui	a8, a7, 46
  dd:	01f856        	bnez	a8, 100 <Compile_CallIndirect+0x100>
			dd: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x100
  e0:	0000d1        	l32r	a13, fffc00e0 <Compile_CallIndirect+0xfffc00e0>
			e0: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x4
  e3:	0000b1        	l32r	a11, fffc00e4 <Compile_CallIndirect+0xfffc00e4>
			e3: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x8
  e6:	0000a1        	l32r	a10, fffc00e8 <Compile_CallIndirect+0xfffc00e8>
			e6: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0xc
  e9:	d7a0c2        	movi	a12, 215
  ec:	000081        	l32r	a8, fffc00ec <Compile_CallIndirect+0xfffc00ec>
			ec: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x40
			ec: R_XTENSA_ASM_EXPAND	printf
  ef:	0008e0        	callx8	a8
  f2:	211782        	l16ui	a8, a7, 66
  f5:	880b      	addi.n	a8, a8, -1
  f7:	f49080        	extui	a9, a8, 0, 16
  fa:	02e8f7        	bbsi	a8, 15, 100 <Compile_CallIndirect+0x100>
			fa: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x100
  fd:	ffdb06        	j	6d <Compile_CallIndirect+0x6d>
			fd: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x6d
 100:	000061        	l32r	a6, fffc0100 <Compile_CallIndirect+0xfffc0100>
			100: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x18
 103:	ffdb06        	j	73 <Compile_CallIndirect+0x73>
			103: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x73
 106:	00          	.byte	00
 107:	00          	.byte	00
 108:	0000d1        	l32r	a13, fffc0108 <Compile_CallIndirect+0xfffc0108>
			108: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x10
 10b:	0000b1        	l32r	a11, fffc010c <Compile_CallIndirect+0xfffc010c>
			10b: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x8
 10e:	0000a1        	l32r	a10, fffc0110 <Compile_CallIndirect+0xfffc0110>
			10e: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0xc
 111:	07a1c2        	movi	a12, 0x107
 114:	000081        	l32r	a8, fffc0114 <Compile_CallIndirect+0xfffc0114>
			114: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x44
			114: R_XTENSA_ASM_EXPAND	printf
 117:	0008e0        	callx8	a8
 11a:	211782        	l16ui	a8, a7, 66
 11d:	60a687        	bge	a6, a8, 181 <Compile_CallIndirect+0x181>
			11d: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x181
 120:	906670        	addx2	a6, a6, a7
 123:	a81692        	l16ui	a9, a6, 0x150
 126:	0000a1        	l32r	a10, fffc0128 <Compile_CallIndirect+0xfffc0128>
			126: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x1c
 129:	11ba97        	bgeu	a10, a9, 13e <Compile_CallIndirect+0x13e>
			129: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x13e
 12c:	1b0c      	movi.n	a11, 1
 12e:	07ad      	mov.n	a10, a7
 130:	000081        	l32r	a8, fffc0130 <Compile_CallIndirect+0xfffc0130>
			130: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x48
			130: R_XTENSA_ASM_EXPAND	.text.PreserveRegisterIfOccupied
 133:	0008e0        	callx8	a8
 136:	0a2d      	mov.n	a2, a10
 138:	f90a56        	bnez	a10, cc <Compile_CallIndirect+0xcc>
			138: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0xcc
 13b:	211782        	l16ui	a8, a7, 66
 13e:	201792        	l16ui	a9, a7, 64
 141:	b03987        	bltu	a9, a8, f5 <Compile_CallIndirect+0xf5>
			141: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0xf5
 144:	2e07a2        	l8ui	a10, a7, 46
 147:	f95a16        	beqz	a10, e0 <Compile_CallIndirect+0xe0>
			147: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0xe0
 14a:	880b      	addi.n	a8, a8, -1
 14c:	f49080        	extui	a9, a8, 0, 16
 14f:	02e8f7        	bbsi	a8, 15, 155 <Compile_CallIndirect+0x155>
			14f: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x155
 152:	ffc5c6        	j	6d <Compile_CallIndirect+0x6d>
			152: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x6d
 155:	ffe9c6        	j	100 <Compile_CallIndirect+0x100>
			155: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x100
 158:	0000d1        	l32r	a13, fffc0158 <Compile_CallIndirect+0xfffc0158>
			158: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x4
 15b:	0000b1        	l32r	a11, fffc015c <Compile_CallIndirect+0xfffc015c>
			15b: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x8
 15e:	0000a1        	l32r	a10, fffc0160 <Compile_CallIndirect+0xfffc0160>
			15e: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0xc
 161:	d7a0c2        	movi	a12, 215
 164:	000081        	l32r	a8, fffc0164 <Compile_CallIndirect+0xfffc0164>
			164: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect+0x4c
			164: R_XTENSA_ASM_EXPAND	printf
 167:	0008e0        	callx8	a8
 16a:	211782        	l16ui	a8, a7, 66
 16d:	980b      	addi.n	a9, a8, -1
 16f:	236980        	sext	a6, a9, 15
 172:	02a687        	bge	a6, a8, 178 <Compile_CallIndirect+0x178>
			172: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x178
 175:	ffd606        	j	d1 <Compile_CallIndirect+0xd1>
			175: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0xd1
 178:	ffb7c6        	j	5b <Compile_CallIndirect+0x5b>
			178: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x5b
 17b:	00          	.byte	00
 17c:	000021        	l32r	a2, fffc017c <Compile_CallIndirect+0xfffc017c>
			17c: R_XTENSA_SLOT0_OP	.literal.Compile_CallIndirect
 17f:	f01d      	retw.n
 181:	201792        	l16ui	a9, a7, 64
 184:	bcb987        	bgeu	a9, a8, 144 <Compile_CallIndirect+0x144>
			184: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x144
 187:	880b      	addi.n	a8, a8, -1
 189:	f49080        	extui	a9, a8, 0, 16
 18c:	ffb746        	j	6d <Compile_CallIndirect+0x6d>
			18c: R_XTENSA_SLOT0_OP	.text.Compile_CallIndirect+0x6d

Disassembly of section .text.Compile_Call:

00000000 <Compile_Call>:
   0:	006136        	entry	a1, 48
   3:	02a8      	l32i.n	a10, a2, 0
   5:	32d8      	l32i.n	a13, a2, 12
   7:	88a682        	movi	a8, 0x688
   a:	c28b      	addi.n	a12, a2, 8
   c:	b1cb      	addi.n	a11, a1, 12
   e:	aa8a      	add.n	a10, a10, a8
  10:	000081        	l32r	a8, fffc0010 <Compile_Call+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.Compile_Call+0x10
			10: R_XTENSA_ASM_EXPAND	ReadLEB_u32
  13:	0008e0        	callx8	a8
  16:	027d      	mov.n	a7, a2
  18:	0a2d      	mov.n	a2, a10
  1a:	07aa56        	bnez	a10, 98 <Compile_Call+0x98>
			1a: R_XTENSA_SLOT0_OP	.text.Compile_Call+0x98
  1d:	31b8      	l32i.n	a11, a1, 12
  1f:	0127a2        	l32i	a10, a7, 4
  22:	000081        	l32r	a8, fffc0024 <Compile_Call+0xfffc0024>
			22: R_XTENSA_SLOT0_OP	.literal.Compile_Call+0x14
			22: R_XTENSA_ASM_EXPAND	Module_GetFunction
  25:	0008e0        	callx8	a8
  28:	0a6d      	mov.n	a6, a10
  2a:	06aa16        	beqz	a10, 98 <Compile_Call+0x98>
			2a: R_XTENSA_SLOT0_OP	.text.Compile_Call+0x98
  2d:	07ad      	mov.n	a10, a7
  2f:	000081        	l32r	a8, fffc0030 <Compile_Call+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.Compile_Call+0x18
			2f: R_XTENSA_ASM_EXPAND	get_indention_string
  32:	0008e0        	callx8	a8
  35:	0a5d      	mov.n	a5, a10
  37:	06ad      	mov.n	a10, a6
  39:	3148      	l32i.n	a4, a1, 12
  3b:	000081        	l32r	a8, fffc003c <Compile_Call+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.Compile_Call+0x1c
			3b: R_XTENSA_ASM_EXPAND	m3_GetFunctionName
  3e:	0008e0        	callx8	a8
  41:	a688      	l32i.n	a8, a6, 40
  43:	0aed      	mov.n	a14, a10
  45:	0318f2        	l16ui	a15, a8, 6
  48:	0000b1        	l32r	a11, fffc0048 <Compile_Call+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.Compile_Call+0x8
  4b:	0000a1        	l32r	a10, fffc004c <Compile_Call+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.Compile_Call+0xc
  4e:	04dd      	mov.n	a13, a4
  50:	05cd      	mov.n	a12, a5
  52:	000081        	l32r	a8, fffc0054 <Compile_Call+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.Compile_Call+0x20
			52: R_XTENSA_ASM_EXPAND	printf
  55:	0008e0        	callx8	a8
  58:	0688      	l32i.n	a8, a6, 0
  5a:	a8bc      	beqz.n	a8, 98 <Compile_Call+0x98>
			5a: R_XTENSA_SLOT0_OP	.text.Compile_Call+0x98
  5c:	a6c8      	l32i.n	a12, a6, 40
  5e:	02dd      	mov.n	a13, a2
  60:	b1ab      	addi.n	a11, a1, 10
  62:	07ad      	mov.n	a10, a7
  64:	000081        	l32r	a8, fffc0064 <Compile_Call+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.Compile_Call+0x24
			64: R_XTENSA_ASM_EXPAND	.text.CompileCallArgsAndReturn
  67:	0008e0        	callx8	a8
  6a:	0a2d      	mov.n	a2, a10
  6c:	8aec      	bnez.n	a10, 98 <Compile_Call+0x98>
			6c: R_XTENSA_SLOT0_OP	.text.Compile_Call+0x98
  6e:	b658      	l32i.n	a5, a6, 44
  70:	0000b1        	l32r	a11, fffc0070 <Compile_Call+0xfffc0070>
			70: R_XTENSA_SLOT0_OP	.literal.Compile_Call
  73:	55ac      	beqz.n	a5, 9c <Compile_Call+0x9c>
			73: R_XTENSA_SLOT0_OP	.text.Compile_Call+0x9c
  75:	20a770        	or	a10, a7, a7
  78:	000081        	l32r	a8, fffc0078 <Compile_Call+0xfffc0078>
			78: R_XTENSA_SLOT0_OP	.literal.Compile_Call+0x28
			78: R_XTENSA_ASM_EXPAND	.text.EmitOp
  7b:	0008e0        	callx8	a8
  7e:	0a2d      	mov.n	a2, a10
  80:	4adc      	bnez.n	a10, 98 <Compile_Call+0x98>
			80: R_XTENSA_SLOT0_OP	.text.Compile_Call+0x98
  82:	05bd      	mov.n	a11, a5
  84:	20a770        	or	a10, a7, a7
  87:	000081        	l32r	a8, fffc0088 <Compile_Call+0xfffc0088>
			87: R_XTENSA_SLOT0_OP	.literal.Compile_Call+0x2c
			87: R_XTENSA_ASM_EXPAND	.text.EmitPointer
  8a:	0008e0        	callx8	a8
  8d:	0511b2        	l16ui	a11, a1, 10
  90:	d7a8      	l32i.n	a10, a7, 52
  92:	000081        	l32r	a8, fffc0094 <Compile_Call+0xfffc0094>
			92: R_XTENSA_SLOT0_OP	.literal.Compile_Call+0x30
			92: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
  95:	0008e0        	callx8	a8
  98:	f01d      	retw.n
  9a:	00          	.byte	00
  9b:	00          	.byte	00
  9c:	0000b1        	l32r	a11, fffc009c <Compile_Call+0xfffc009c>
			9c: R_XTENSA_SLOT0_OP	.literal.Compile_Call+0x4
  9f:	065d      	mov.n	a5, a6
  a1:	fff406        	j	75 <Compile_Call+0x75>
			a1: R_XTENSA_SLOT0_OP	.text.Compile_Call+0x75

Disassembly of section .text.Compile_Unreachable:

00000000 <Compile_Unreachable>:
   0:	006136        	entry	a1, 48
   3:	0000b1        	l32r	a11, fffc0004 <Compile_Unreachable+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable
   6:	02ad      	mov.n	a10, a2
   8:	000081        	l32r	a8, fffc0008 <Compile_Unreachable+0xfffc0008>
			8: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x34
			8: R_XTENSA_ASM_EXPAND	.text.EmitOp
   b:	0008e0        	callx8	a8
   e:	025d      	mov.n	a5, a2
  10:	202aa0        	or	a2, a10, a10
  13:	0d6a56        	bnez	a10, ed <Compile_Unreachable+0xed>
			13: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0xed
  16:	01a082        	movi	a8, 1
  19:	0000b1        	l32r	a11, fffc001c <Compile_Unreachable+0xfffc001c>
			19: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x4
  1c:	0000a1        	l32r	a10, fffc001c <Compile_Unreachable+0xfffc001c>
			1c: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x8
  1f:	2e4582        	s8i	a8, a5, 46
  22:	000081        	l32r	a8, fffc0024 <Compile_Unreachable+0xfffc0024>
			22: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x38
			22: R_XTENSA_ASM_EXPAND	printf
  25:	0008e0        	callx8	a8
  28:	211582        	l16ui	a8, a5, 66
  2b:	1315b2        	l16ui	a11, a5, 38
  2e:	023b87        	bltu	a11, a8, 34 <Compile_Unreachable+0x34>
			2e: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0x34
  31:	002e06        	j	ed <Compile_Unreachable+0xed>
			31: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0xed
  34:	3129      	s32i.n	a2, a1, 12
  36:	000906        	j	5e <Compile_Unreachable+0x5e>
			36: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0x5e
  39:	000091        	l32r	a9, fffc003c <Compile_Unreachable+0xfffc003c>
			39: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x30
  3c:	0a0c      	movi.n	a10, 0
  3e:	449a      	add.n	a4, a4, a9
  40:	170c      	movi.n	a7, 1
  42:	937a40        	movnez	a7, a10, a4
  45:	907750        	addx2	a7, a7, a5
  48:	06d772        	addmi	a7, a7, 0x600
  4b:	2917a2        	l16ui	a10, a7, 82
  4e:	0cfa16        	beqz	a10, 121 <Compile_Unreachable+0x121>
			4e: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0x121
  51:	0a0c      	movi.n	a10, 0
  53:	2957a2        	s16i	a10, a7, 82
  56:	221b      	addi.n	a2, a2, 1
  58:	023b87        	bltu	a11, a8, 5e <Compile_Unreachable+0x5e>
			58: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0x5e
  5b:	0021c6        	j	e6 <Compile_Unreachable+0xe6>
			5b: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0xe6
  5e:	880b      	addi.n	a8, a8, -1
  60:	f48080        	extui	a8, a8, 0, 16
  63:	a8a092        	movi	a9, 168
  66:	a89a      	add.n	a10, a8, a9
  68:	90aa50        	addx2	a10, a10, a5
  6b:	001a42        	l16ui	a4, a10, 0
  6e:	000091        	l32r	a9, fffc0070 <Compile_Unreachable+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x2c
  71:	c58a      	add.n	a12, a5, a8
  73:	a49a      	add.n	a10, a4, a9
  75:	0000d1        	l32r	a13, fffc0078 <Compile_Unreachable+0xfffc0078>
			75: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x28
  78:	50a392        	movi	a9, 0x350
  7b:	215582        	s16i	a8, a5, 66
  7e:	cc9a      	add.n	a12, a12, a9
  80:	f4a0a0        	extui	a10, a10, 0, 16
  83:	000c62        	l8ui	a6, a12, 0
  86:	afbda7        	bgeu	a13, a10, 39 <Compile_Unreachable+0x39>
			86: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0x39
  89:	2515a2        	l16ui	a10, a5, 74
  8c:	c634a7        	bltu	a4, a10, 56 <Compile_Unreachable+0x56>
			8c: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0x56
  8f:	237480        	sext	a7, a4, 15
  92:	02a7a7        	bge	a7, a10, 98 <Compile_Unreachable+0x98>
			92: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0x98
  95:	003206        	j	161 <Compile_Unreachable+0x161>
			95: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0x161
  98:	06d582        	addmi	a8, a5, 0x600
  9b:	281882        	l16ui	a8, a8, 80
  9e:	022787        	blt	a7, a8, a4 <Compile_Unreachable+0xa4>
			9e: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0xa4
  a1:	0029c6        	j	14c <Compile_Unreachable+0x14c>
			a1: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0x14c
  a4:	06ad      	mov.n	a10, a6
  a6:	000081        	l32r	a8, fffc00a8 <Compile_Unreachable+0xfffc00a8>
			a6: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x3c
			a6: R_XTENSA_ASM_EXPAND	Is64BitType
  a9:	0008e0        	callx8	a8
  ac:	ba1b      	addi.n	a11, a10, 1
  ae:	f4b0b0        	extui	a11, a11, 0, 16
  b1:	070c      	movi.n	a7, 0
  b3:	347a      	add.n	a3, a4, a7
  b5:	233380        	sext	a3, a3, 15
  b8:	353a      	add.n	a3, a5, a3
  ba:	50a482        	movi	a8, 0x450
  bd:	06ad      	mov.n	a10, a6
  bf:	803380        	add	a3, a3, a8
  c2:	12b7b7        	bgeu	a7, a11, d8 <Compile_Unreachable+0xd8>
			c2: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0xd8
  c5:	000382        	l8ui	a8, a3, 0
  c8:	ffc892        	addi	a9, a8, -1
  cb:	28ac      	beqz.n	a8, f1 <Compile_Unreachable+0xf1>
			cb: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0xf1
  cd:	004392        	s8i	a9, a3, 0
  d0:	000081        	l32r	a8, fffc00d0 <Compile_Unreachable+0xfffc00d0>
			d0: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x40
			d0: R_XTENSA_ASM_EXPAND	Is64BitType
  d3:	0008e0        	callx8	a8
  d6:	dafc      	bnez.n	a10, 117 <Compile_Unreachable+0x117>
			d6: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0x117
  d8:	211582        	l16ui	a8, a5, 66
  db:	1315b2        	l16ui	a11, a5, 38
  de:	221b      	addi.n	a2, a2, 1
  e0:	02bb87        	bgeu	a11, a8, e6 <Compile_Unreachable+0xe6>
			e0: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0xe6
  e3:	ffddc6        	j	5e <Compile_Unreachable+0x5e>
			e3: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0x5e
  e6:	024d      	mov.n	a4, a2
  e8:	3128      	l32i.n	a2, a1, 12
  ea:	04e456        	bnez	a4, 13c <Compile_Unreachable+0x13c>
			ea: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0x13c
  ed:	f01d      	retw.n
  ef:	00          	.byte	00
  f0:	00          	.byte	00
  f1:	0000d1        	l32r	a13, fffc00f4 <Compile_Unreachable+0xfffc00f4>
			f1: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x20
  f4:	0000b1        	l32r	a11, fffc00f4 <Compile_Unreachable+0xfffc00f4>
			f4: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x10
  f7:	0000a1        	l32r	a10, fffc00f8 <Compile_Unreachable+0xfffc00f8>
			f7: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x14
  fa:	a4a1c2        	movi	a12, 0x1a4
  fd:	000081        	l32r	a8, fffc0100 <Compile_Unreachable+0xfffc0100>
			fd: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x44
			fd: R_XTENSA_ASM_EXPAND	printf
 100:	0008e0        	callx8	a8
 103:	000382        	l8ui	a8, a3, 0
 106:	06ad      	mov.n	a10, a6
 108:	ffc882        	addi	a8, a8, -1
 10b:	004382        	s8i	a8, a3, 0
 10e:	000081        	l32r	a8, fffc0110 <Compile_Unreachable+0xfffc0110>
			10e: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x48
			10e: R_XTENSA_ASM_EXPAND	Is64BitType
 111:	0008e0        	callx8	a8
 114:	fc0a16        	beqz	a10, d8 <Compile_Unreachable+0xd8>
			114: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0xd8
 117:	771b      	addi.n	a7, a7, 1
 119:	f47070        	extui	a7, a7, 0, 16
 11c:	2b0c      	movi.n	a11, 2
 11e:	ffe446        	j	b3 <Compile_Unreachable+0xb3>
			11e: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0xb3
 121:	0000b1        	l32r	a11, fffc0124 <Compile_Unreachable+0xfffc0124>
			121: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x10
 124:	0000d1        	l32r	a13, fffc0124 <Compile_Unreachable+0xfffc0124>
			124: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0xc
 127:	0000a1        	l32r	a10, fffc0128 <Compile_Unreachable+0xfffc0128>
			127: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x14
 12a:	b8a1c2        	movi	a12, 0x1b8
 12d:	000081        	l32r	a8, fffc0130 <Compile_Unreachable+0xfffc0130>
			12d: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x4c
			12d: R_XTENSA_ASM_EXPAND	printf
 130:	0008e0        	callx8	a8
 133:	211582        	l16ui	a8, a5, 66
 136:	1315b2        	l16ui	a11, a5, 38
 139:	ffc506        	j	51 <Compile_Unreachable+0x51>
			139: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0x51
 13c:	0000b1        	l32r	a11, fffc013c <Compile_Unreachable+0xfffc013c>
			13c: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x4
 13f:	0000a1        	l32r	a10, fffc0140 <Compile_Unreachable+0xfffc0140>
			13f: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x24
 142:	04cd      	mov.n	a12, a4
 144:	000081        	l32r	a8, fffc0144 <Compile_Unreachable+0xfffc0144>
			144: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x50
			144: R_XTENSA_ASM_EXPAND	printf
 147:	0008e0        	callx8	a8
 14a:	f01d      	retw.n
 14c:	0000d1        	l32r	a13, fffc014c <Compile_Unreachable+0xfffc014c>
			14c: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x1c
 14f:	0000b1        	l32r	a11, fffc0150 <Compile_Unreachable+0xfffc0150>
			14f: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x10
 152:	0000a1        	l32r	a10, fffc0154 <Compile_Unreachable+0xfffc0154>
			152: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x14
 155:	a2a1c2        	movi	a12, 0x1a2
 158:	000081        	l32r	a8, fffc0158 <Compile_Unreachable+0xfffc0158>
			158: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x54
			158: R_XTENSA_ASM_EXPAND	printf
 15b:	0008e0        	callx8	a8
 15e:	ffd086        	j	a4 <Compile_Unreachable+0xa4>
			15e: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0xa4
 161:	0000d1        	l32r	a13, fffc0164 <Compile_Unreachable+0xfffc0164>
			161: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x18
 164:	0000b1        	l32r	a11, fffc0164 <Compile_Unreachable+0xfffc0164>
			164: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x10
 167:	0000a1        	l32r	a10, fffc0168 <Compile_Unreachable+0xfffc0168>
			167: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x14
 16a:	a1a1c2        	movi	a12, 0x1a1
 16d:	000081        	l32r	a8, fffc0170 <Compile_Unreachable+0xfffc0170>
			16d: R_XTENSA_SLOT0_OP	.literal.Compile_Unreachable+0x58
			16d: R_XTENSA_ASM_EXPAND	printf
 170:	0008e0        	callx8	a8
 173:	ffc846        	j	98 <Compile_Unreachable+0x98>
			173: R_XTENSA_SLOT0_OP	.text.Compile_Unreachable+0x98

Disassembly of section .text.CopyStackTopToRegister$constprop$0:

00000000 <CopyStackTopToRegister$constprop$0>:
   0:	004136        	entry	a1, 32
   3:	211282        	l16ui	a8, a2, 66
   6:	2012a2        	l16ui	a10, a2, 64
   9:	027d      	mov.n	a7, a2
   b:	023a87        	bltu	a10, a8, 11 <CopyStackTopToRegister$constprop$0+0x11>
			b: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x11
   e:	002086        	j	94 <CopyStackTopToRegister$constprop$0+0x94>
			e: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x94
  11:	ffc892        	addi	a9, a8, -1
  14:	232980        	sext	a2, a9, 15
  17:	622287        	blt	a2, a8, 7d <CopyStackTopToRegister$constprop$0+0x7d>
			17: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x7d
  1a:	2e0782        	l8ui	a8, a7, 46
  1d:	0b3816        	beqz	a8, d4 <CopyStackTopToRegister$constprop$0+0xd4>
			1d: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0xd4
  20:	f49090        	extui	a9, a9, 0, 16
  23:	0239a7        	bltu	a9, a10, 29 <CopyStackTopToRegister$constprop$0+0x29>
			23: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x29
  26:	002106        	j	ae <CopyStackTopToRegister$constprop$0+0xae>
			26: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0xae
  29:	060c      	movi.n	a6, 0
  2b:	06bd      	mov.n	a11, a6
  2d:	20a770        	or	a10, a7, a7
  30:	000081        	l32r	a8, fffc0030 <CopyStackTopToRegister$constprop$0+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x1c
			30: R_XTENSA_ASM_EXPAND	.text.PreserveRegisterIfOccupied
  33:	0008e0        	callx8	a8
  36:	0a2d      	mov.n	a2, a10
  38:	cafc      	bnez.n	a10, 78 <CopyStackTopToRegister$constprop$0+0x78>
			38: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x78
  3a:	000081        	l32r	a8, fffc003c <CopyStackTopToRegister$constprop$0+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x10
  3d:	07ad      	mov.n	a10, a7
  3f:	a06680        	addx4	a6, a6, a8
  42:	06b8      	l32i.n	a11, a6, 0
  44:	000081        	l32r	a8, fffc0044 <CopyStackTopToRegister$constprop$0+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x20
			44: R_XTENSA_ASM_EXPAND	.text.EmitOp
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	8aec      	bnez.n	a10, 78 <CopyStackTopToRegister$constprop$0+0x78>
			4c: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x78
  4e:	211782        	l16ui	a8, a7, 66
  51:	201792        	l16ui	a9, a7, 64
  54:	053987        	bltu	a9, a8, 5d <CopyStackTopToRegister$constprop$0+0x5d>
			54: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x5d
  57:	2e0792        	l8ui	a9, a7, 46
  5a:	05e916        	beqz	a9, bc <CopyStackTopToRegister$constprop$0+0xbc>
			5a: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0xbc
  5d:	880b      	addi.n	a8, a8, -1
  5f:	0000b1        	l32r	a11, fffc0060 <CopyStackTopToRegister$constprop$0+0xfffc0060>
			5f: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x14
  62:	f49080        	extui	a9, a8, 0, 16
  65:	05e8f7        	bbsi	a8, 15, 6e <CopyStackTopToRegister$constprop$0+0x6e>
			65: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x6e
  68:	909970        	addx2	a9, a9, a7
  6b:	a819b2        	l16ui	a11, a9, 0x150
  6e:	d7a8      	l32i.n	a10, a7, 52
  70:	000081        	l32r	a8, fffc0070 <CopyStackTopToRegister$constprop$0+0xfffc0070>
			70: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x24
			70: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
  73:	0008e0        	callx8	a8
  76:	020c      	movi.n	a2, 0
  78:	f01d      	retw.n
  7a:	00          	.byte	00
  7b:	00          	.byte	00
  7c:	00          	.byte	00
  7d:	f9f296        	bltz	a2, 20 <CopyStackTopToRegister$constprop$0+0x20>
			7d: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x20
  80:	902270        	addx2	a2, a2, a7
  83:	a81292        	l16ui	a9, a2, 0x150
  86:	0000a1        	l32r	a10, fffc0088 <CopyStackTopToRegister$constprop$0+0xfffc0088>
			86: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x18
  89:	e93a97        	bltu	a10, a9, 76 <CopyStackTopToRegister$constprop$0+0x76>
			89: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x76
  8c:	2017a2        	l16ui	a10, a7, 64
  8f:	980b      	addi.n	a9, a8, -1
  91:	ffe2c6        	j	20 <CopyStackTopToRegister$constprop$0+0x20>
			91: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x20
  94:	2e0292        	l8ui	a9, a2, 46
  97:	069916        	beqz	a9, 104 <CopyStackTopToRegister$constprop$0+0x104>
			97: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x104
  9a:	980b      	addi.n	a9, a8, -1
  9c:	232980        	sext	a2, a9, 15
  9f:	022287        	blt	a2, a8, a5 <CopyStackTopToRegister$constprop$0+0xa5>
			9f: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0xa5
  a2:	ffde86        	j	20 <CopyStackTopToRegister$constprop$0+0x20>
			a2: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x20
  a5:	fd72d6        	bgez	a2, 80 <CopyStackTopToRegister$constprop$0+0x80>
			a5: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x80
  a8:	f7d816        	beqz	a8, 29 <CopyStackTopToRegister$constprop$0+0x29>
			a8: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x29
  ab:	fff746        	j	8c <CopyStackTopToRegister$constprop$0+0x8c>
			ab: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x8c
  ae:	979a      	add.n	a9, a7, a9
  b0:	50a382        	movi	a8, 0x350
  b3:	998a      	add.n	a9, a9, a8
  b5:	000962        	l8ui	a6, a9, 0
  b8:	ffdbc6        	j	2b <CopyStackTopToRegister$constprop$0+0x2b>
			b8: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x2b
  bb:	00          	.byte	00
  bc:	0000d1        	l32r	a13, fffc00bc <CopyStackTopToRegister$constprop$0+0xfffc00bc>
			bc: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0
  bf:	0000b1        	l32r	a11, fffc00c0 <CopyStackTopToRegister$constprop$0+0xfffc00c0>
			bf: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x4
  c2:	0000a1        	l32r	a10, fffc00c4 <CopyStackTopToRegister$constprop$0+0xfffc00c4>
			c2: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x8
  c5:	d7a0c2        	movi	a12, 215
  c8:	000081        	l32r	a8, fffc00c8 <CopyStackTopToRegister$constprop$0+0xfffc00c8>
			c8: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x28
			c8: R_XTENSA_ASM_EXPAND	printf
  cb:	0008e0        	callx8	a8
  ce:	211782        	l16ui	a8, a7, 66
  d1:	ffe206        	j	5d <CopyStackTopToRegister$constprop$0+0x5d>
			d1: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x5d
  d4:	000051        	l32r	a5, fffc00d4 <CopyStackTopToRegister$constprop$0+0xfffc00d4>
			d4: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x4
  d7:	000061        	l32r	a6, fffc00d8 <CopyStackTopToRegister$constprop$0+0xfffc00d8>
			d7: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x8
  da:	0000d1        	l32r	a13, fffc00dc <CopyStackTopToRegister$constprop$0+0xfffc00dc>
			da: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0xc
  dd:	07a1c2        	movi	a12, 0x107
  e0:	20b550        	or	a11, a5, a5
  e3:	20a660        	or	a10, a6, a6
  e6:	000081        	l32r	a8, fffc00e8 <CopyStackTopToRegister$constprop$0+0xfffc00e8>
			e6: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x2c
			e6: R_XTENSA_ASM_EXPAND	printf
  e9:	0008e0        	callx8	a8
  ec:	211782        	l16ui	a8, a7, 66
  ef:	b5a287        	bge	a2, a8, a8 <CopyStackTopToRegister$constprop$0+0xa8>
			ef: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0xa8
  f2:	902270        	addx2	a2, a2, a7
  f5:	a81292        	l16ui	a9, a2, 0x150
  f8:	0000a1        	l32r	a10, fffc00f8 <CopyStackTopToRegister$constprop$0+0xfffc00f8>
			f8: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x18
  fb:	02ba97        	bgeu	a10, a9, 101 <CopyStackTopToRegister$constprop$0+0x101>
			fb: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x101
  fe:	ffdd06        	j	76 <CopyStackTopToRegister$constprop$0+0x76>
			fe: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x76
 101:	ffe1c6        	j	8c <CopyStackTopToRegister$constprop$0+0x8c>
			101: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x8c
 104:	000051        	l32r	a5, fffc0104 <CopyStackTopToRegister$constprop$0+0xfffc0104>
			104: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x4
 107:	000061        	l32r	a6, fffc0108 <CopyStackTopToRegister$constprop$0+0xfffc0108>
			107: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x8
 10a:	0000d1        	l32r	a13, fffc010c <CopyStackTopToRegister$constprop$0+0xfffc010c>
			10a: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0
 10d:	d7a0c2        	movi	a12, 215
 110:	20b550        	or	a11, a5, a5
 113:	20a660        	or	a10, a6, a6
 116:	000081        	l32r	a8, fffc0118 <CopyStackTopToRegister$constprop$0+0xfffc0118>
			116: R_XTENSA_SLOT0_OP	.literal.CopyStackTopToRegister$constprop$0+0x30
			116: R_XTENSA_ASM_EXPAND	printf
 119:	0008e0        	callx8	a8
 11c:	211282        	l16ui	a8, a2, 66
 11f:	980b      	addi.n	a9, a8, -1
 121:	232980        	sext	a2, a9, 15
 124:	02a287        	bge	a2, a8, 12a <CopyStackTopToRegister$constprop$0+0x12a>
			124: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x12a
 127:	ffde86        	j	a5 <CopyStackTopToRegister$constprop$0+0xa5>
			127: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0xa5
 12a:	2e0782        	l8ui	a8, a7, 46
 12d:	fa9816        	beqz	a8, da <CopyStackTopToRegister$constprop$0+0xda>
			12d: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0xda
 130:	2017a2        	l16ui	a10, a7, 64
 133:	ffba46        	j	20 <CopyStackTopToRegister$constprop$0+0x20>
			133: R_XTENSA_SLOT0_OP	.text.CopyStackTopToRegister$constprop$0+0x20

Disassembly of section .text.ResolveBlockResults:

00000000 <ResolveBlockResults>:
   0:	006136        	entry	a1, 48
   3:	0c1382        	l16ui	a8, a3, 24
   6:	049d      	mov.n	a9, a4
   8:	fdc882        	addi	a8, a8, -3
   b:	53a8      	l32i.n	a10, a3, 20
   d:	140c      	movi.n	a4, 1
   f:	060c      	movi.n	a6, 0
  11:	836480        	moveqz	a6, a4, a8
  14:	036192        	s32i	a9, a1, 12
  17:	106960        	and	a6, a9, a6
  1a:	000081        	l32r	a8, fffc001c <ResolveBlockResults+0xfffc001c>
			1a: R_XTENSA_SLOT0_OP	.literal.ResolveBlockResults+0x10
			1a: R_XTENSA_ASM_EXPAND	GetFuncTypeNumParams
  1d:	0008e0        	callx8	a8
  20:	0a7d      	mov.n	a7, a10
  22:	53a8      	l32i.n	a10, a3, 20
  24:	025d      	mov.n	a5, a2
  26:	000081        	l32r	a8, fffc0028 <ResolveBlockResults+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.ResolveBlockResults+0x14
			26: R_XTENSA_ASM_EXPAND	GetFuncTypeNumResults
  29:	0008e0        	callx8	a8
  2c:	3198      	l32i.n	a9, a1, 12
  2e:	081332        	l16ui	a3, a3, 16
  31:	211222        	l16ui	a2, a2, 66
  34:	131582        	l16ui	a8, a5, 38
  37:	06f616        	beqz	a6, aa <ResolveBlockResults+0xaa>
			37: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0xaa
  3a:	c08280        	sub	a8, a2, a8
  3d:	f48080        	extui	a8, a8, 0, 16
  40:	140c      	movi.n	a4, 1
  42:	28b877        	bgeu	a8, a7, 6e <ResolveBlockResults+0x6e>
			42: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0x6e
  45:	17ac      	beqz.n	a7, 6a <ResolveBlockResults+0x6a>
			45: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0x6a
  47:	1fe407        	bbsi	a4, 0, 6a <ResolveBlockResults+0x6a>
			47: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0x6a
  4a:	201582        	l16ui	a8, a5, 64
  4d:	24b827        	bgeu	a8, a2, 75 <ResolveBlockResults+0x75>
			4d: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0x75
  50:	a6ec      	bnez.n	a6, 7e <ResolveBlockResults+0x7e>
			50: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0x7e
  52:	420b      	addi.n	a4, a2, -1
  54:	f44040        	extui	a4, a4, 0, 16
  57:	0a0c      	movi.n	a10, 0
  59:	6f3487        	bltu	a4, a8, cc <ResolveBlockResults+0xcc>
			59: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0xcc
  5c:	854a      	add.n	a8, a5, a4
  5e:	50a392        	movi	a9, 0x350
  61:	889a      	add.n	a8, a8, a9
  63:	0008a2        	l8ui	a10, a8, 0
  66:	001886        	j	cc <ResolveBlockResults+0xcc>
			66: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0xcc
  69:	00          	.byte	00
  6a:	020c      	movi.n	a2, 0
  6c:	f01d      	retw.n
  6e:	040c      	movi.n	a4, 0
  70:	fff446        	j	45 <ResolveBlockResults+0x45>
			70: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0x45
  73:	00          	.byte	00
  74:	00          	.byte	00
  75:	2e0582        	l8ui	a8, a5, 46
  78:	070816        	beqz	a8, ec <ResolveBlockResults+0xec>
			78: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0xec
  7b:	046616        	beqz	a6, c5 <ResolveBlockResults+0xc5>
			7b: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0xc5
  7e:	261562        	l16ui	a6, a5, 76
  81:	2a0c      	movi.n	a10, 2
  83:	000081        	l32r	a8, fffc0084 <ResolveBlockResults+0xfffc0084>
			83: R_XTENSA_SLOT0_OP	.literal.ResolveBlockResults+0x18
			83: R_XTENSA_ASM_EXPAND	Is64BitType
  86:	0008e0        	callx8	a8
  89:	8a6a      	add.n	a8, a10, a6
  8b:	10aa80        	and	a10, a10, a8
  8e:	30ea80        	xor	a14, a10, a8
  91:	c0c270        	sub	a12, a2, a7
  94:	02dd      	mov.n	a13, a2
  96:	f4e0e0        	extui	a14, a14, 0, 16
  99:	f4c0c0        	extui	a12, a12, 0, 16
  9c:	03bd      	mov.n	a11, a3
  9e:	05ad      	mov.n	a10, a5
  a0:	000081        	l32r	a8, fffc00a0 <ResolveBlockResults+0xfffc00a0>
			a0: R_XTENSA_SLOT0_OP	.literal.ResolveBlockResults+0x1c
			a0: R_XTENSA_ASM_EXPAND	.text.CopyStackSlotsR
  a3:	0008e0        	callx8	a8
  a6:	0a2d      	mov.n	a2, a10
  a8:	f01d      	retw.n
  aa:	773a      	add.n	a7, a7, a3
  ac:	c08280        	sub	a8, a2, a8
  af:	f43070        	extui	a3, a7, 0, 16
  b2:	f48080        	extui	a8, a8, 0, 16
  b5:	04f956        	bnez	a9, 108 <ResolveBlockResults+0x108>
			b5: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0x108
  b8:	c08a80        	sub	a8, a10, a8
  bb:	834680        	moveqz	a4, a6, a8
  be:	0a7d      	mov.n	a7, a10
  c0:	ffe046        	j	45 <ResolveBlockResults+0x45>
			c0: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0x45
  c3:	00          	.byte	00
  c4:	00          	.byte	00
  c5:	000041        	l32r	a4, fffc00c8 <ResolveBlockResults+0xfffc00c8>
			c5: R_XTENSA_SLOT0_OP	.literal.ResolveBlockResults+0xc
  c8:	06ad      	mov.n	a10, a6
  ca:	f2fc      	bnez.n	a2, 10d <ResolveBlockResults+0x10d>
			ca: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0x10d
  cc:	000081        	l32r	a8, fffc00cc <ResolveBlockResults+0xfffc00cc>
			cc: R_XTENSA_SLOT0_OP	.literal.ResolveBlockResults+0x20
			cc: R_XTENSA_ASM_EXPAND	IsFpType
  cf:	0008e0        	callx8	a8
  d2:	fa8a16        	beqz	a10, 7e <ResolveBlockResults+0x7e>
			d2: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0x7e
  d5:	05ad      	mov.n	a10, a5
  d7:	000081        	l32r	a8, fffc00d8 <ResolveBlockResults+0xfffc00d8>
			d7: R_XTENSA_SLOT0_OP	.literal.ResolveBlockResults+0x24
			d7: R_XTENSA_ASM_EXPAND	.text.CopyStackTopToRegister$constprop$0
  da:	0008e0        	callx8	a8
  dd:	0a2d      	mov.n	a2, a10
  df:	f89a56        	bnez	a10, 6c <ResolveBlockResults+0x6c>
			df: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0x6c
  e2:	770b      	addi.n	a7, a7, -1
  e4:	f47070        	extui	a7, a7, 0, 16
  e7:	042d      	mov.n	a2, a4
  e9:	ffe446        	j	7e <ResolveBlockResults+0x7e>
			e9: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0x7e
  ec:	0000d1        	l32r	a13, fffc00ec <ResolveBlockResults+0xfffc00ec>
			ec: R_XTENSA_SLOT0_OP	.literal.ResolveBlockResults
  ef:	0000b1        	l32r	a11, fffc00f0 <ResolveBlockResults+0xfffc00f0>
			ef: R_XTENSA_SLOT0_OP	.literal.ResolveBlockResults+0x4
  f2:	0000a1        	l32r	a10, fffc00f4 <ResolveBlockResults+0xfffc00f4>
			f2: R_XTENSA_SLOT0_OP	.literal.ResolveBlockResults+0x8
  f5:	d7a0c2        	movi	a12, 215
  f8:	000081        	l32r	a8, fffc00f8 <ResolveBlockResults+0xfffc00f8>
			f8: R_XTENSA_SLOT0_OP	.literal.ResolveBlockResults+0x28
			f8: R_XTENSA_ASM_EXPAND	printf
  fb:	0008e0        	callx8	a8
  fe:	211522        	l16ui	a2, a5, 66
 101:	f79656        	bnez	a6, 7e <ResolveBlockResults+0x7e>
			101: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0x7e
 104:	ffef46        	j	c5 <ResolveBlockResults+0xc5>
			104: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0xc5
 107:	00          	.byte	00
 108:	0a7d      	mov.n	a7, a10
 10a:	ffcc86        	j	40 <ResolveBlockResults+0x40>
			10a: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0x40
 10d:	420b      	addi.n	a4, a2, -1
 10f:	201582        	l16ui	a8, a5, 64
 112:	f44040        	extui	a4, a4, 0, 16
 115:	ffcf86        	j	57 <ResolveBlockResults+0x57>
			115: R_XTENSA_SLOT0_OP	.text.ResolveBlockResults+0x57

Disassembly of section .text.Compile_BranchTable:

00000000 <Compile_BranchTable>:
   0:	008136        	entry	a1, 64
   3:	02a8      	l32i.n	a10, a2, 0
   5:	428b      	addi.n	a4, a2, 8
   7:	88a682        	movi	a8, 0x688
   a:	32d8      	l32i.n	a13, a2, 12
   c:	04cd      	mov.n	a12, a4
   e:	18c1b2        	addi	a11, a1, 24
  11:	aa8a      	add.n	a10, a10, a8
  13:	207220        	or	a7, a2, a2
  16:	000081        	l32r	a8, fffc0018 <Compile_BranchTable+0xfffc0018>
			16: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x50
			16: R_XTENSA_ASM_EXPAND	ReadLEB_ptr
  19:	0008e0        	callx8	a8
  1c:	0a0a56        	bnez	a10, c0 <Compile_BranchTable+0xc0>
			1c: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0xc0
  1f:	2b0c      	movi.n	a11, 2
  21:	02ad      	mov.n	a10, a2
  23:	000081        	l32r	a8, fffc0024 <Compile_BranchTable+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x54
			23: R_XTENSA_ASM_EXPAND	.text.PreserveRegisterIfOccupied
  26:	0008e0        	callx8	a8
  29:	093a56        	bnez	a10, c0 <Compile_BranchTable+0xc0>
			29: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0xc0
  2c:	211282        	l16ui	a8, a2, 66
  2f:	201292        	l16ui	a9, a2, 64
  32:	023987        	bltu	a9, a8, 38 <Compile_BranchTable+0x38>
			32: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x38
  35:	007306        	j	205 <Compile_BranchTable+0x205>
			35: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x205
  38:	880b      	addi.n	a8, a8, -1
  3a:	000061        	l32r	a6, fffc003c <Compile_BranchTable+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x4c
  3d:	f49080        	extui	a9, a8, 0, 16
  40:	05e8f7        	bbsi	a8, 15, 49 <Compile_BranchTable+0x49>
			40: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x49
  43:	909970        	addx2	a9, a9, a7
  46:	a81962        	l16ui	a6, a9, 0x150
  49:	07ad      	mov.n	a10, a7
  4b:	000081        	l32r	a8, fffc004c <Compile_BranchTable+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x58
			4b: R_XTENSA_ASM_EXPAND	.text.Pop
  4e:	0008e0        	callx8	a8
  51:	06ba56        	bnez	a10, c0 <Compile_BranchTable+0xc0>
			51: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0xc0
  54:	61b8      	l32i.n	a11, a1, 24
  56:	07ad      	mov.n	a10, a7
  58:	bb4b      	addi.n	a11, a11, 4
  5a:	000081        	l32r	a8, fffc005c <Compile_BranchTable+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x5c
			5a: R_XTENSA_ASM_EXPAND	.text.EnsureCodePageNumLines
  5d:	0008e0        	callx8	a8
  60:	05ca56        	bnez	a10, c0 <Compile_BranchTable+0xc0>
			60: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0xc0
  63:	0000b1        	l32r	a11, fffc0064 <Compile_BranchTable+0xfffc0064>
			63: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x10
  66:	07ad      	mov.n	a10, a7
  68:	000081        	l32r	a8, fffc0068 <Compile_BranchTable+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x60
			68: R_XTENSA_ASM_EXPAND	.text.EmitOp
  6b:	0008e0        	callx8	a8
  6e:	31a9      	s32i.n	a10, a1, 12
  70:	26aa56        	bnez	a10, 2de <Compile_BranchTable+0x2de>
			70: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x2de
  73:	d7a8      	l32i.n	a10, a7, 52
  75:	20b660        	or	a11, a6, a6
  78:	000081        	l32r	a8, fffc0078 <Compile_BranchTable+0xfffc0078>
			78: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x64
			78: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
  7b:	0008e0        	callx8	a8
  7e:	61b8      	l32i.n	a11, a1, 24
  80:	d7a8      	l32i.n	a10, a7, 52
  82:	000081        	l32r	a8, fffc0084 <Compile_BranchTable+0xfffc0084>
			82: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x68
			82: R_XTENSA_ASM_EXPAND	.text.EmitConstant32$isra$0
  85:	0008e0        	callx8	a8
  88:	6188      	l32i.n	a8, a1, 24
  8a:	881b      	addi.n	a8, a8, 1
  8c:	6189      	s32i.n	a8, a1, 24
  8e:	0a2816        	beqz	a8, 134 <Compile_BranchTable+0x134>
			8e: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x134
  91:	3158      	l32i.n	a5, a1, 12
  93:	2149      	s32i.n	a4, a1, 8
  95:	88a622        	movi	a2, 0x688
  98:	074d      	mov.n	a4, a7
  9a:	04a8      	l32i.n	a10, a4, 0
  9c:	34d8      	l32i.n	a13, a4, 12
  9e:	0221c2        	l32i	a12, a1, 8
  a1:	1cc1b2        	addi	a11, a1, 28
  a4:	80aa20        	add	a10, a10, a2
  a7:	000081        	l32r	a8, fffc00a8 <Compile_BranchTable+0xfffc00a8>
			a7: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x6c
			a7: R_XTENSA_ASM_EXPAND	ReadLEB_u32
  aa:	0008e0        	callx8	a8
  ad:	facc      	bnez.n	a10, c0 <Compile_BranchTable+0xc0>
			ad: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0xc0
  af:	7188      	l32i.n	a8, a1, 28
  b1:	14c462        	addi	a6, a4, 20
  b4:	e88c      	beqz.n	a8, c6 <Compile_BranchTable+0xc6>
			b4: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0xc6
  b6:	0668      	l32i.n	a6, a6, 0
  b8:	880b      	addi.n	a8, a8, -1
  ba:	ff6656        	bnez	a6, b4 <Compile_BranchTable+0xb4>
			ba: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0xb4
  bd:	0000a1        	l32r	a10, fffc00c0 <Compile_BranchTable+0xfffc00c0>
			bd: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable
  c0:	0a2d      	mov.n	a2, a10
  c2:	f01d      	retw.n
  c4:	00          	.byte	00
  c5:	00          	.byte	00
  c6:	04a8      	l32i.n	a10, a4, 0
  c8:	000081        	l32r	a8, fffc00c8 <Compile_BranchTable+0xfffc00c8>
			c8: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x70
			c8: R_XTENSA_ASM_EXPAND	AcquireCodePage
  cb:	0008e0        	callx8	a8
  ce:	11a9      	s32i.n	a10, a1, 4
  d0:	000081        	l32r	a8, fffc00d0 <Compile_BranchTable+0xfffc00d0>
			d0: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x74
			d0: R_XTENSA_ASM_EXPAND	GetPagePC
  d3:	0008e0        	callx8	a8
  d6:	11b8      	l32i.n	a11, a1, 4
  d8:	0c1682        	l16ui	a8, a6, 24
  db:	d478      	l32i.n	a7, a4, 52
  dd:	d4b9      	s32i.n	a11, a4, 52
  df:	0a3d      	mov.n	a3, a10
  e1:	023866        	bnei	a8, 3, e7 <Compile_BranchTable+0xe7>
			e1: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0xe7
  e4:	006646        	j	281 <Compile_BranchTable+0x281>
			e4: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x281
  e7:	2e0482        	l8ui	a8, a4, 46
  ea:	48ec      	bnez.n	a8, 112 <Compile_BranchTable+0x112>
			ea: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x112
  ec:	3688      	l32i.n	a8, a6, 12
  ee:	1c0c      	movi.n	a12, 1
  f0:	06bd      	mov.n	a11, a6
  f2:	04ad      	mov.n	a10, a4
  f4:	12d856        	bnez	a8, 225 <Compile_BranchTable+0x225>
			f4: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x225
  f7:	000081        	l32r	a8, fffc00f8 <Compile_BranchTable+0xfffc00f8>
			f7: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x78
			f7: R_XTENSA_ASM_EXPAND	.text.ReturnValues
  fa:	0008e0        	callx8	a8
  fd:	fbfa56        	bnez	a10, c0 <Compile_BranchTable+0xc0>
			fd: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0xc0
 100:	0000b1        	l32r	a11, fffc0100 <Compile_BranchTable+0xfffc0100>
			100: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x18
 103:	20a440        	or	a10, a4, a4
 106:	000081        	l32r	a8, fffc0108 <Compile_BranchTable+0xfffc0108>
			106: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x7c
			106: R_XTENSA_ASM_EXPAND	.text.EmitOp
 109:	0008e0        	callx8	a8
 10c:	fb0a56        	bnez	a10, c0 <Compile_BranchTable+0xc0>
			10c: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0xc0
 10f:	0d24b2        	l32i	a11, a4, 52
 112:	0024a2        	l32i	a10, a4, 0
 115:	01c552        	addi	a5, a5, 1
 118:	000081        	l32r	a8, fffc0118 <Compile_BranchTable+0xfffc0118>
			118: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x80
			118: R_XTENSA_ASM_EXPAND	ReleaseCodePage
 11b:	0008e0        	callx8	a8
 11e:	03bd      	mov.n	a11, a3
 120:	d479      	s32i.n	a7, a4, 52
 122:	04ad      	mov.n	a10, a4
 124:	000081        	l32r	a8, fffc0124 <Compile_BranchTable+0xfffc0124>
			124: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x84
			124: R_XTENSA_ASM_EXPAND	.text.EmitPointer
 127:	0008e0        	callx8	a8
 12a:	6188      	l32i.n	a8, a1, 24
 12c:	02b587        	bgeu	a5, a8, 132 <Compile_BranchTable+0x132>
			12c: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x132
 12f:	ffd9c6        	j	9a <Compile_BranchTable+0x9a>
			12f: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x9a
 132:	047d      	mov.n	a7, a4
 134:	180c      	movi.n	a8, 1
 136:	0000b1        	l32r	a11, fffc0138 <Compile_BranchTable+0xfffc0138>
			136: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x20
 139:	0000a1        	l32r	a10, fffc013c <Compile_BranchTable+0xfffc013c>
			139: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x28
 13c:	2e4782        	s8i	a8, a7, 46
 13f:	000081        	l32r	a8, fffc0140 <Compile_BranchTable+0xfffc0140>
			13f: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x88
			13f: R_XTENSA_ASM_EXPAND	printf
 142:	0008e0        	callx8	a8
 145:	211782        	l16ui	a8, a7, 66
 148:	1317b2        	l16ui	a11, a7, 38
 14b:	040c      	movi.n	a4, 0
 14d:	023b87        	bltu	a11, a8, 153 <Compile_BranchTable+0x153>
			14d: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x153
 150:	006286        	j	2de <Compile_BranchTable+0x2de>
			150: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x2de
 153:	50a322        	movi	a2, 0x350
 156:	043d      	mov.n	a3, a4
 158:	000946        	j	181 <Compile_BranchTable+0x181>
			158: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x181
 15b:	000091        	l32r	a9, fffc015c <Compile_BranchTable+0xfffc015c>
			15b: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x48
 15e:	0a0c      	movi.n	a10, 0
 160:	449a      	add.n	a4, a4, a9
 162:	160c      	movi.n	a6, 1
 164:	936a40        	movnez	a6, a10, a4
 167:	906670        	addx2	a6, a6, a7
 16a:	06d662        	addmi	a6, a6, 0x600
 16d:	2916a2        	l16ui	a10, a6, 82
 170:	1a1a16        	beqz	a10, 315 <Compile_BranchTable+0x315>
			170: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x315
 173:	00a0a2        	movi	a10, 0
 176:	2956a2        	s16i	a10, a6, 82
 179:	331b      	addi.n	a3, a3, 1
 17b:	023b87        	bltu	a11, a8, 181 <Compile_BranchTable+0x181>
			17b: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x181
 17e:	005286        	j	2cc <Compile_BranchTable+0x2cc>
			17e: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x2cc
 181:	880b      	addi.n	a8, a8, -1
 183:	f48080        	extui	a8, a8, 0, 16
 186:	a8a092        	movi	a9, 168
 189:	a89a      	add.n	a10, a8, a9
 18b:	90aa70        	addx2	a10, a10, a7
 18e:	001a42        	l16ui	a4, a10, 0
 191:	000091        	l32r	a9, fffc0194 <Compile_BranchTable+0xfffc0194>
			191: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x44
 194:	c78a      	add.n	a12, a7, a8
 196:	a49a      	add.n	a10, a4, a9
 198:	0000d1        	l32r	a13, fffc0198 <Compile_BranchTable+0xfffc0198>
			198: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x40
 19b:	215782        	s16i	a8, a7, 66
 19e:	cc2a      	add.n	a12, a12, a2
 1a0:	f4a0a0        	extui	a10, a10, 0, 16
 1a3:	000c52        	l8ui	a5, a12, 0
 1a6:	b1bda7        	bgeu	a13, a10, 15b <Compile_BranchTable+0x15b>
			1a6: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x15b
 1a9:	2517a2        	l16ui	a10, a7, 74
 1ac:	c934a7        	bltu	a4, a10, 179 <Compile_BranchTable+0x179>
			1ac: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x179
 1af:	236480        	sext	a6, a4, 15
 1b2:	02a6a7        	bge	a6, a10, 1b8 <Compile_BranchTable+0x1b8>
			1b2: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x1b8
 1b5:	006306        	j	345 <Compile_BranchTable+0x345>
			1b5: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x345
 1b8:	06d782        	addmi	a8, a7, 0x600
 1bb:	281882        	l16ui	a8, a8, 80
 1be:	022687        	blt	a6, a8, 1c4 <Compile_BranchTable+0x1c4>
			1be: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x1c4
 1c1:	005ac6        	j	330 <Compile_BranchTable+0x330>
			1c1: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x330
 1c4:	20a550        	or	a10, a5, a5
 1c7:	000081        	l32r	a8, fffc01c8 <Compile_BranchTable+0xfffc01c8>
			1c7: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x8c
			1c7: R_XTENSA_ASM_EXPAND	Is64BitType
 1ca:	0008e0        	callx8	a8
 1cd:	ba1b      	addi.n	a11, a10, 1
 1cf:	f4b0b0        	extui	a11, a11, 0, 16
 1d2:	060c      	movi.n	a6, 0
 1d4:	2159      	s32i.n	a5, a1, 8
 1d6:	864a      	add.n	a8, a6, a4
 1d8:	238880        	sext	a8, a8, 15
 1db:	878a      	add.n	a8, a7, a8
 1dd:	50a492        	movi	a9, 0x450
 1e0:	21a8      	l32i.n	a10, a1, 8
 1e2:	589a      	add.n	a5, a8, a9
 1e4:	14b6b7        	bgeu	a6, a11, 1fc <Compile_BranchTable+0x1fc>
			1e4: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x1fc
 1e7:	000592        	l8ui	a9, a5, 0
 1ea:	ffc9b2        	addi	a11, a9, -1
 1ed:	0f4916        	beqz	a9, 2e5 <Compile_BranchTable+0x2e5>
			1ed: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x2e5
 1f0:	0045b2        	s8i	a11, a5, 0
 1f3:	000081        	l32r	a8, fffc01f4 <Compile_BranchTable+0xfffc01f4>
			1f3: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x90
			1f3: R_XTENSA_ASM_EXPAND	Is64BitType
 1f6:	0008e0        	callx8	a8
 1f9:	10ea56        	bnez	a10, 30b <Compile_BranchTable+0x30b>
			1f9: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x30b
 1fc:	211782        	l16ui	a8, a7, 66
 1ff:	1317b2        	l16ui	a11, a7, 38
 202:	ffdcc6        	j	179 <Compile_BranchTable+0x179>
			202: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x179
 205:	2e0292        	l8ui	a9, a2, 46
 208:	e2c956        	bnez	a9, 38 <Compile_BranchTable+0x38>
			208: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x38
 20b:	0000d1        	l32r	a13, fffc020c <Compile_BranchTable+0xfffc020c>
			20b: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x4
 20e:	0000b1        	l32r	a11, fffc0210 <Compile_BranchTable+0xfffc0210>
			20e: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x8
 211:	0000a1        	l32r	a10, fffc0214 <Compile_BranchTable+0xfffc0214>
			211: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xc
 214:	d7a0c2        	movi	a12, 215
 217:	000081        	l32r	a8, fffc0218 <Compile_BranchTable+0xfffc0218>
			217: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x94
			217: R_XTENSA_ASM_EXPAND	printf
 21a:	0008e0        	callx8	a8
 21d:	211282        	l16ui	a8, a2, 66
 220:	ff8506        	j	38 <Compile_BranchTable+0x38>
			220: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x38
 223:	00          	.byte	00
 224:	00          	.byte	00
 225:	000081        	l32r	a8, fffc0228 <Compile_BranchTable+0xfffc0228>
			225: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x98
			225: R_XTENSA_ASM_EXPAND	.text.ResolveBlockResults
 228:	0008e0        	callx8	a8
 22b:	e91a56        	bnez	a10, c0 <Compile_BranchTable+0xc0>
			22b: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0xc0
 22e:	0000b1        	l32r	a11, fffc0230 <Compile_BranchTable+0xfffc0230>
			22e: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x1c
 231:	04ad      	mov.n	a10, a4
 233:	000081        	l32r	a8, fffc0234 <Compile_BranchTable+0xfffc0234>
			233: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x9c
			233: R_XTENSA_ASM_EXPAND	.text.EmitOp
 236:	0008e0        	callx8	a8
 239:	e83a56        	bnez	a10, c0 <Compile_BranchTable+0xc0>
			239: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0xc0
 23c:	26b8      	l32i.n	a11, a6, 8
 23e:	04ad      	mov.n	a10, a4
 240:	000081        	l32r	a8, fffc0240 <Compile_BranchTable+0xfffc0240>
			240: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xa0
			240: R_XTENSA_ASM_EXPAND	.text.EmitPointer
 243:	0008e0        	callx8	a8
 246:	0a8d      	mov.n	a8, a10
 248:	0000b1        	l32r	a11, fffc0248 <Compile_BranchTable+0xfffc0248>
			248: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x20
 24b:	0000a1        	l32r	a10, fffc024c <Compile_BranchTable+0xfffc024c>
			24b: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x24
 24e:	08cd      	mov.n	a12, a8
 250:	1189      	s32i.n	a8, a1, 4
 252:	000081        	l32r	a8, fffc0254 <Compile_BranchTable+0xfffc0254>
			252: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xa4
			252: R_XTENSA_ASM_EXPAND	printf
 255:	0008e0        	callx8	a8
 258:	1188      	l32i.n	a8, a1, 4
 25a:	d4b8      	l32i.n	a11, a4, 52
 25c:	04a8      	l32i.n	a10, a4, 0
 25e:	2689      	s32i.n	a8, a6, 8
 260:	000081        	l32r	a8, fffc0260 <Compile_BranchTable+0xfffc0260>
			260: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xa8
			260: R_XTENSA_ASM_EXPAND	ReleaseCodePage
 263:	0008e0        	callx8	a8
 266:	03bd      	mov.n	a11, a3
 268:	d479      	s32i.n	a7, a4, 52
 26a:	04ad      	mov.n	a10, a4
 26c:	000081        	l32r	a8, fffc026c <Compile_BranchTable+0xfffc026c>
			26c: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xac
			26c: R_XTENSA_ASM_EXPAND	.text.EmitPointer
 26f:	0008e0        	callx8	a8
 272:	6188      	l32i.n	a8, a1, 24
 274:	551b      	addi.n	a5, a5, 1
 276:	02b587        	bgeu	a5, a8, 27c <Compile_BranchTable+0x27c>
			276: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x27c
 279:	ff8746        	j	9a <Compile_BranchTable+0x9a>
			279: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x9a
 27c:	ffac86        	j	132 <Compile_BranchTable+0x132>
			27c: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x132
 27f:	00          	.byte	00
 280:	00          	.byte	00
 281:	1c0c      	movi.n	a12, 1
 283:	06bd      	mov.n	a11, a6
 285:	04ad      	mov.n	a10, a4
 287:	000081        	l32r	a8, fffc0288 <Compile_BranchTable+0xfffc0288>
			287: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xb0
			287: R_XTENSA_ASM_EXPAND	.text.ResolveBlockResults
 28a:	0008e0        	callx8	a8
 28d:	e2fa56        	bnez	a10, c0 <Compile_BranchTable+0xc0>
			28d: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0xc0
 290:	0000b1        	l32r	a11, fffc0290 <Compile_BranchTable+0xfffc0290>
			290: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x14
 293:	20a440        	or	a10, a4, a4
 296:	000081        	l32r	a8, fffc0298 <Compile_BranchTable+0xfffc0298>
			296: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xb4
			296: R_XTENSA_ASM_EXPAND	.text.EmitOp
 299:	0008e0        	callx8	a8
 29c:	e20a56        	bnez	a10, c0 <Compile_BranchTable+0xc0>
			29c: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0xc0
 29f:	16b8      	l32i.n	a11, a6, 4
 2a1:	04ad      	mov.n	a10, a4
 2a3:	000081        	l32r	a8, fffc02a4 <Compile_BranchTable+0xfffc02a4>
			2a3: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xb8
			2a3: R_XTENSA_ASM_EXPAND	.text.EmitPointer
 2a6:	0008e0        	callx8	a8
 2a9:	d4b8      	l32i.n	a11, a4, 52
 2ab:	04a8      	l32i.n	a10, a4, 0
 2ad:	551b      	addi.n	a5, a5, 1
 2af:	000081        	l32r	a8, fffc02b0 <Compile_BranchTable+0xfffc02b0>
			2af: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xbc
			2af: R_XTENSA_ASM_EXPAND	ReleaseCodePage
 2b2:	0008e0        	callx8	a8
 2b5:	03bd      	mov.n	a11, a3
 2b7:	d479      	s32i.n	a7, a4, 52
 2b9:	04ad      	mov.n	a10, a4
 2bb:	000081        	l32r	a8, fffc02bc <Compile_BranchTable+0xfffc02bc>
			2bb: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xc0
			2bb: R_XTENSA_ASM_EXPAND	.text.EmitPointer
 2be:	0008e0        	callx8	a8
 2c1:	6188      	l32i.n	a8, a1, 24
 2c3:	02b587        	bgeu	a5, a8, 2c9 <Compile_BranchTable+0x2c9>
			2c3: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x2c9
 2c6:	ff7406        	j	9a <Compile_BranchTable+0x9a>
			2c6: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x9a
 2c9:	ff9946        	j	132 <Compile_BranchTable+0x132>
			2c9: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x132
 2cc:	034d      	mov.n	a4, a3
 2ce:	c38c      	beqz.n	a3, 2de <Compile_BranchTable+0x2de>
			2ce: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x2de
 2d0:	0000a1        	l32r	a10, fffc02d0 <Compile_BranchTable+0xfffc02d0>
			2d0: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x3c
 2d3:	0000b1        	l32r	a11, fffc02d4 <Compile_BranchTable+0xfffc02d4>
			2d3: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x20
 2d6:	03cd      	mov.n	a12, a3
 2d8:	000081        	l32r	a8, fffc02d8 <Compile_BranchTable+0xfffc02d8>
			2d8: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xc4
			2d8: R_XTENSA_ASM_EXPAND	printf
 2db:	0008e0        	callx8	a8
 2de:	31a8      	l32i.n	a10, a1, 12
 2e0:	0a2d      	mov.n	a2, a10
 2e2:	f01d      	retw.n
 2e4:	00          	.byte	00
 2e5:	0000d1        	l32r	a13, fffc02e8 <Compile_BranchTable+0xfffc02e8>
			2e5: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x38
 2e8:	0000b1        	l32r	a11, fffc02e8 <Compile_BranchTable+0xfffc02e8>
			2e8: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x8
 2eb:	0000a1        	l32r	a10, fffc02ec <Compile_BranchTable+0xfffc02ec>
			2eb: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xc
 2ee:	a4a1c2        	movi	a12, 0x1a4
 2f1:	000081        	l32r	a8, fffc02f4 <Compile_BranchTable+0xfffc02f4>
			2f1: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xc8
			2f1: R_XTENSA_ASM_EXPAND	printf
 2f4:	0008e0        	callx8	a8
 2f7:	000592        	l8ui	a9, a5, 0
 2fa:	21a8      	l32i.n	a10, a1, 8
 2fc:	ffc992        	addi	a9, a9, -1
 2ff:	004592        	s8i	a9, a5, 0
 302:	000081        	l32r	a8, fffc0304 <Compile_BranchTable+0xfffc0304>
			302: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xcc
			302: R_XTENSA_ASM_EXPAND	Is64BitType
 305:	0008e0        	callx8	a8
 308:	ef0a16        	beqz	a10, 1fc <Compile_BranchTable+0x1fc>
			308: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x1fc
 30b:	661b      	addi.n	a6, a6, 1
 30d:	f46060        	extui	a6, a6, 0, 16
 310:	2b0c      	movi.n	a11, 2
 312:	ffb006        	j	1d6 <Compile_BranchTable+0x1d6>
			312: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x1d6
 315:	0000b1        	l32r	a11, fffc0318 <Compile_BranchTable+0xfffc0318>
			315: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x8
 318:	0000d1        	l32r	a13, fffc0318 <Compile_BranchTable+0xfffc0318>
			318: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x2c
 31b:	0000a1        	l32r	a10, fffc031c <Compile_BranchTable+0xfffc031c>
			31b: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xc
 31e:	b8a1c2        	movi	a12, 0x1b8
 321:	000081        	l32r	a8, fffc0324 <Compile_BranchTable+0xfffc0324>
			321: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xd0
			321: R_XTENSA_ASM_EXPAND	printf
 324:	0008e0        	callx8	a8
 327:	211782        	l16ui	a8, a7, 66
 32a:	1317b2        	l16ui	a11, a7, 38
 32d:	ff9086        	j	173 <Compile_BranchTable+0x173>
			32d: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x173
 330:	0000d1        	l32r	a13, fffc0330 <Compile_BranchTable+0xfffc0330>
			330: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x34
 333:	0000b1        	l32r	a11, fffc0334 <Compile_BranchTable+0xfffc0334>
			333: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x8
 336:	0000a1        	l32r	a10, fffc0338 <Compile_BranchTable+0xfffc0338>
			336: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xc
 339:	a2a1c2        	movi	a12, 0x1a2
 33c:	000081        	l32r	a8, fffc033c <Compile_BranchTable+0xfffc033c>
			33c: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xd4
			33c: R_XTENSA_ASM_EXPAND	printf
 33f:	0008e0        	callx8	a8
 342:	ff9f86        	j	1c4 <Compile_BranchTable+0x1c4>
			342: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x1c4
 345:	0000d1        	l32r	a13, fffc0348 <Compile_BranchTable+0xfffc0348>
			345: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x30
 348:	0000b1        	l32r	a11, fffc0348 <Compile_BranchTable+0xfffc0348>
			348: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0x8
 34b:	0000a1        	l32r	a10, fffc034c <Compile_BranchTable+0xfffc034c>
			34b: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xc
 34e:	a1a1c2        	movi	a12, 0x1a1
 351:	000081        	l32r	a8, fffc0354 <Compile_BranchTable+0xfffc0354>
			351: R_XTENSA_SLOT0_OP	.literal.Compile_BranchTable+0xd8
			351: R_XTENSA_ASM_EXPAND	printf
 354:	0008e0        	callx8	a8
 357:	ff9746        	j	1b8 <Compile_BranchTable+0x1b8>
			357: R_XTENSA_SLOT0_OP	.text.Compile_BranchTable+0x1b8

Disassembly of section .text.Compile_Memory_CopyFill:

00000000 <Compile_Memory_CopyFill>:
   0:	006136        	entry	a1, 48
   3:	0278      	l32i.n	a7, a2, 0
   5:	000081        	l32r	a8, fffc0008 <Compile_Memory_CopyFill+0xfffc0008>
			5: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x20
   8:	88a692        	movi	a9, 0x688
   b:	f43030        	extui	a3, a3, 0, 16
   e:	32d8      	l32i.n	a13, a2, 12
  10:	000061        	l32r	a6, fffc0010 <Compile_Memory_CopyFill+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x4
  13:	779a      	add.n	a7, a7, a9
  15:	528b      	addi.n	a5, a2, 8
  17:	029387        	bne	a3, a8, 1d <Compile_Memory_CopyFill+0x1d>
			17: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x1d
  1a:	004d86        	j	154 <Compile_Memory_CopyFill+0x154>
			1a: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x154
  1d:	32d8      	l32i.n	a13, a2, 12
  1f:	05cd      	mov.n	a12, a5
  21:	0cc1b2        	addi	a11, a1, 12
  24:	20a770        	or	a10, a7, a7
  27:	000081        	l32r	a8, fffc0028 <Compile_Memory_CopyFill+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x24
			27: R_XTENSA_ASM_EXPAND	ReadLEB_ptr
  2a:	0008e0        	callx8	a8
  2d:	11fa56        	bnez	a10, 150 <Compile_Memory_CopyFill+0x150>
			2d: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x150
  30:	02ad      	mov.n	a10, a2
  32:	000081        	l32r	a8, fffc0034 <Compile_Memory_CopyFill+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x28
			32: R_XTENSA_ASM_EXPAND	.text.CopyStackTopToRegister$constprop$0
  35:	0008e0        	callx8	a8
  38:	114a56        	bnez	a10, 150 <Compile_Memory_CopyFill+0x150>
			38: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x150
  3b:	06bd      	mov.n	a11, a6
  3d:	02ad      	mov.n	a10, a2
  3f:	000081        	l32r	a8, fffc0040 <Compile_Memory_CopyFill+0xfffc0040>
			3f: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x2c
			3f: R_XTENSA_ASM_EXPAND	.text.EmitOp
  42:	0008e0        	callx8	a8
  45:	107a56        	bnez	a10, 150 <Compile_Memory_CopyFill+0x150>
			45: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x150
  48:	211282        	l16ui	a8, a2, 66
  4b:	053856        	bnez	a8, a2 <Compile_Memory_CopyFill+0xa2>
			4b: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0xa2
  4e:	2e0282        	l8ui	a8, a2, 46
  51:	1bf816        	beqz	a8, 214 <Compile_Memory_CopyFill+0x214>
			51: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x214
  54:	02ad      	mov.n	a10, a2
  56:	000081        	l32r	a8, fffc0058 <Compile_Memory_CopyFill+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x30
			56: R_XTENSA_ASM_EXPAND	.text.Pop
  59:	0008e0        	callx8	a8
  5c:	0f0a56        	bnez	a10, 150 <Compile_Memory_CopyFill+0x150>
			5c: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x150
  5f:	211282        	l16ui	a8, a2, 66
  62:	201292        	l16ui	a9, a2, 64
  65:	053987        	bltu	a9, a8, 6e <Compile_Memory_CopyFill+0x6e>
			65: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x6e
  68:	2e02a2        	l8ui	a10, a2, 46
  6b:	1a5a16        	beqz	a10, 214 <Compile_Memory_CopyFill+0x214>
			6b: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x214
  6e:	980b      	addi.n	a9, a8, -1
  70:	237980        	sext	a7, a9, 15
  73:	02a787        	bge	a7, a8, 79 <Compile_Memory_CopyFill+0x79>
			73: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x79
  76:	003bc6        	j	169 <Compile_Memory_CopyFill+0x169>
			76: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x169
  79:	2e02a2        	l8ui	a10, a2, 46
  7c:	045a16        	beqz	a10, c5 <Compile_Memory_CopyFill+0xc5>
			7c: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0xc5
  7f:	2012b2        	l16ui	a11, a2, 64
  82:	02bb87        	bgeu	a11, a8, 88 <Compile_Memory_CopyFill+0x88>
			82: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x88
  85:	0073c6        	j	258 <Compile_Memory_CopyFill+0x258>
			85: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x258
  88:	0efa16        	beqz	a10, 17b <Compile_Memory_CopyFill+0x17b>
			88: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x17b
  8b:	880b      	addi.n	a8, a8, -1
  8d:	f49080        	extui	a9, a8, 0, 16
  90:	0268f7        	bbci	a8, 15, 96 <Compile_Memory_CopyFill+0x96>
			90: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x96
  93:	005986        	j	1fd <Compile_Memory_CopyFill+0x1fd>
			93: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x1fd
  96:	909920        	addx2	a9, a9, a2
  99:	a819b2        	l16ui	a11, a9, 0x150
  9c:	005806        	j	200 <Compile_Memory_CopyFill+0x200>
			9c: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x200
  9f:	00          	.byte	00
  a0:	00          	.byte	00
  a1:	00          	.byte	00
  a2:	780b      	addi.n	a7, a8, -1
  a4:	2012b2        	l16ui	a11, a2, 64
  a7:	f49070        	extui	a9, a7, 0, 16
  aa:	0239b7        	bltu	a9, a11, b0 <Compile_Memory_CopyFill+0xb0>
			aa: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0xb0
  ad:	004806        	j	1d1 <Compile_Memory_CopyFill+0x1d1>
			ad: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x1d1
  b0:	2e02a2        	l8ui	a10, a2, 46
  b3:	f9da56        	bnez	a10, 54 <Compile_Memory_CopyFill+0x54>
			b3: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x54
  b6:	023b87        	bltu	a11, a8, bc <Compile_Memory_CopyFill+0xbc>
			b6: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0xbc
  b9:	0055c6        	j	214 <Compile_Memory_CopyFill+0x214>
			b9: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x214
  bc:	237780        	sext	a7, a7, 15
  bf:	02a787        	bge	a7, a8, c5 <Compile_Memory_CopyFill+0xc5>
			bf: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0xc5
  c2:	0028c6        	j	169 <Compile_Memory_CopyFill+0x169>
			c2: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x169
  c5:	0000d1        	l32r	a13, fffc00c8 <Compile_Memory_CopyFill+0xfffc00c8>
			c5: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x14
  c8:	0000b1        	l32r	a11, fffc00c8 <Compile_Memory_CopyFill+0xfffc00c8>
			c8: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0xc
  cb:	0000a1        	l32r	a10, fffc00cc <Compile_Memory_CopyFill+0xfffc00cc>
			cb: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x10
  ce:	07a1c2        	movi	a12, 0x107
  d1:	000081        	l32r	a8, fffc00d4 <Compile_Memory_CopyFill+0xfffc00d4>
			d1: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x34
			d1: R_XTENSA_ASM_EXPAND	printf
  d4:	0008e0        	callx8	a8
  d7:	211282        	l16ui	a8, a2, 66
  da:	022787        	blt	a7, a8, e0 <Compile_Memory_CopyFill+0xe0>
			da: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0xe0
  dd:	005bc6        	j	250 <Compile_Memory_CopyFill+0x250>
			dd: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x250
  e0:	907720        	addx2	a7, a7, a2
  e3:	a81792        	l16ui	a9, a7, 0x150
  e6:	0000a1        	l32r	a10, fffc00e8 <Compile_Memory_CopyFill+0xfffc00e8>
			e6: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x1c
  e9:	023a97        	bltu	a10, a9, ef <Compile_Memory_CopyFill+0xef>
			e9: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0xef
  ec:	005b86        	j	25e <Compile_Memory_CopyFill+0x25e>
			ec: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x25e
  ef:	20a220        	or	a10, a2, a2
  f2:	000081        	l32r	a8, fffc00f4 <Compile_Memory_CopyFill+0xfffc00f4>
			f2: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x38
			f2: R_XTENSA_ASM_EXPAND	.text.Pop
  f5:	0008e0        	callx8	a8
  f8:	054a56        	bnez	a10, 150 <Compile_Memory_CopyFill+0x150>
			f8: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x150
  fb:	211282        	l16ui	a8, a2, 66
  fe:	201292        	l16ui	a9, a2, 64
 101:	053987        	bltu	a9, a8, 10a <Compile_Memory_CopyFill+0x10a>
			101: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x10a
 104:	2e0292        	l8ui	a9, a2, 46
 107:	0d9916        	beqz	a9, 1e4 <Compile_Memory_CopyFill+0x1e4>
			107: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x1e4
 10a:	980b      	addi.n	a9, a8, -1
 10c:	237980        	sext	a7, a9, 15
 10f:	02a787        	bge	a7, a8, 115 <Compile_Memory_CopyFill+0x115>
			10f: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x115
 112:	001f86        	j	194 <Compile_Memory_CopyFill+0x194>
			112: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x194
 115:	2e0282        	l8ui	a8, a2, 46
 118:	f49090        	extui	a9, a9, 0, 16
 11b:	0a1856        	bnez	a8, 1c0 <Compile_Memory_CopyFill+0x1c0>
			11b: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x1c0
 11e:	0000d1        	l32r	a13, fffc0120 <Compile_Memory_CopyFill+0xfffc0120>
			11e: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x14
 121:	0000b1        	l32r	a11, fffc0124 <Compile_Memory_CopyFill+0xfffc0124>
			121: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0xc
 124:	0000a1        	l32r	a10, fffc0124 <Compile_Memory_CopyFill+0xfffc0124>
			124: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x10
 127:	07a1c2        	movi	a12, 0x107
 12a:	000081        	l32r	a8, fffc012c <Compile_Memory_CopyFill+0xfffc012c>
			12a: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x3c
			12a: R_XTENSA_ASM_EXPAND	printf
 12d:	0008e0        	callx8	a8
 130:	211282        	l16ui	a8, a2, 66
 133:	022787        	blt	a7, a8, 139 <Compile_Memory_CopyFill+0x139>
			133: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x139
 136:	003c86        	j	22c <Compile_Memory_CopyFill+0x22c>
			136: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x22c
 139:	907720        	addx2	a7, a7, a2
 13c:	a81792        	l16ui	a9, a7, 0x150
 13f:	0000a1        	l32r	a10, fffc0140 <Compile_Memory_CopyFill+0xfffc0140>
			13f: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x1c
 142:	023a97        	bltu	a10, a9, 148 <Compile_Memory_CopyFill+0x148>
			142: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x148
 145:	003cc6        	j	23c <Compile_Memory_CopyFill+0x23c>
			145: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x23c
 148:	02ad      	mov.n	a10, a2
 14a:	000081        	l32r	a8, fffc014c <Compile_Memory_CopyFill+0xfffc014c>
			14a: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x40
			14a: R_XTENSA_ASM_EXPAND	.text.Pop
 14d:	0008e0        	callx8	a8
 150:	0a2d      	mov.n	a2, a10
 152:	f01d      	retw.n
 154:	05cd      	mov.n	a12, a5
 156:	b18b      	addi.n	a11, a1, 8
 158:	07ad      	mov.n	a10, a7
 15a:	000081        	l32r	a8, fffc015c <Compile_Memory_CopyFill+0xfffc015c>
			15a: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x44
			15a: R_XTENSA_ASM_EXPAND	ReadLEB_ptr
 15d:	0008e0        	callx8	a8
 160:	feca56        	bnez	a10, 150 <Compile_Memory_CopyFill+0x150>
			160: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x150
 163:	000061        	l32r	a6, fffc0164 <Compile_Memory_CopyFill+0xfffc0164>
			163: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill
 166:	ffacc6        	j	1d <Compile_Memory_CopyFill+0x1d>
			166: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x1d
 169:	f737d6        	bgez	a7, e0 <Compile_Memory_CopyFill+0xe0>
			169: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0xe0
 16c:	201292        	l16ui	a9, a2, 64
 16f:	02b987        	bgeu	a9, a8, 175 <Compile_Memory_CopyFill+0x175>
			16f: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x175
 172:	0021c6        	j	1fd <Compile_Memory_CopyFill+0x1fd>
			172: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x1fd
 175:	2e0282        	l8ui	a8, a2, 46
 178:	081856        	bnez	a8, 1fd <Compile_Memory_CopyFill+0x1fd>
			178: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x1fd
 17b:	0000d1        	l32r	a13, fffc017c <Compile_Memory_CopyFill+0xfffc017c>
			17b: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x8
 17e:	0000b1        	l32r	a11, fffc0180 <Compile_Memory_CopyFill+0xfffc0180>
			17e: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0xc
 181:	0000a1        	l32r	a10, fffc0184 <Compile_Memory_CopyFill+0xfffc0184>
			181: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x10
 184:	d7a0c2        	movi	a12, 215
 187:	000081        	l32r	a8, fffc0188 <Compile_Memory_CopyFill+0xfffc0188>
			187: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x48
			187: R_XTENSA_ASM_EXPAND	printf
 18a:	0008e0        	callx8	a8
 18d:	211282        	l16ui	a8, a2, 66
 190:	ffbdc6        	j	8b <Compile_Memory_CopyFill+0x8b>
			190: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x8b
 193:	00          	.byte	00
 194:	fa17d6        	bgez	a7, 139 <Compile_Memory_CopyFill+0x139>
			194: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x139
 197:	201292        	l16ui	a9, a2, 64
 19a:	6e3987        	bltu	a9, a8, 20c <Compile_Memory_CopyFill+0x20c>
			19a: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x20c
 19d:	2e0282        	l8ui	a8, a2, 46
 1a0:	068856        	bnez	a8, 20c <Compile_Memory_CopyFill+0x20c>
			1a0: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x20c
 1a3:	0000d1        	l32r	a13, fffc01a4 <Compile_Memory_CopyFill+0xfffc01a4>
			1a3: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x8
 1a6:	0000b1        	l32r	a11, fffc01a8 <Compile_Memory_CopyFill+0xfffc01a8>
			1a6: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0xc
 1a9:	0000a1        	l32r	a10, fffc01ac <Compile_Memory_CopyFill+0xfffc01ac>
			1a9: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x10
 1ac:	d7a0c2        	movi	a12, 215
 1af:	000081        	l32r	a8, fffc01b0 <Compile_Memory_CopyFill+0xfffc01b0>
			1af: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x4c
			1af: R_XTENSA_ASM_EXPAND	printf
 1b2:	0008e0        	callx8	a8
 1b5:	211282        	l16ui	a8, a2, 66
 1b8:	880b      	addi.n	a8, a8, -1
 1ba:	f49080        	extui	a9, a8, 0, 16
 1bd:	4be8f7        	bbsi	a8, 15, 20c <Compile_Memory_CopyFill+0x20c>
			1bd: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x20c
 1c0:	909920        	addx2	a9, a9, a2
 1c3:	a819b2        	l16ui	a11, a9, 0x150
 1c6:	d2a8      	l32i.n	a10, a2, 52
 1c8:	000081        	l32r	a8, fffc01c8 <Compile_Memory_CopyFill+0xfffc01c8>
			1c8: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x50
			1c8: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 1cb:	0008e0        	callx8	a8
 1ce:	ffdd86        	j	148 <Compile_Memory_CopyFill+0x148>
			1ce: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x148
 1d1:	929a      	add.n	a9, a2, a9
 1d3:	50a3a2        	movi	a10, 0x350
 1d6:	99aa      	add.n	a9, a9, a10
 1d8:	000992        	l8ui	a9, a9, 0
 1db:	021966        	bnei	a9, 1, 1e1 <Compile_Memory_CopyFill+0x1e1>
			1db: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x1e1
 1de:	ff9c86        	j	54 <Compile_Memory_CopyFill+0x54>
			1de: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x54
 1e1:	ffb2c6        	j	b0 <Compile_Memory_CopyFill+0xb0>
			1e1: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0xb0
 1e4:	0000d1        	l32r	a13, fffc01e4 <Compile_Memory_CopyFill+0xfffc01e4>
			1e4: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x8
 1e7:	0000b1        	l32r	a11, fffc01e8 <Compile_Memory_CopyFill+0xfffc01e8>
			1e7: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0xc
 1ea:	0000a1        	l32r	a10, fffc01ec <Compile_Memory_CopyFill+0xfffc01ec>
			1ea: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x10
 1ed:	d7a0c2        	movi	a12, 215
 1f0:	000081        	l32r	a8, fffc01f0 <Compile_Memory_CopyFill+0xfffc01f0>
			1f0: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x54
			1f0: R_XTENSA_ASM_EXPAND	printf
 1f3:	0008e0        	callx8	a8
 1f6:	211282        	l16ui	a8, a2, 66
 1f9:	ffc346        	j	10a <Compile_Memory_CopyFill+0x10a>
			1f9: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x10a
 1fc:	00          	.byte	00
 1fd:	0000b1        	l32r	a11, fffc0200 <Compile_Memory_CopyFill+0xfffc0200>
			1fd: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x18
 200:	d2a8      	l32i.n	a10, a2, 52
 202:	000081        	l32r	a8, fffc0204 <Compile_Memory_CopyFill+0xfffc0204>
			202: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x58
			202: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 205:	0008e0        	callx8	a8
 208:	ffb8c6        	j	ef <Compile_Memory_CopyFill+0xef>
			208: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0xef
 20b:	00          	.byte	00
 20c:	0000b1        	l32r	a11, fffc020c <Compile_Memory_CopyFill+0xfffc020c>
			20c: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x18
 20f:	ffecc6        	j	1c6 <Compile_Memory_CopyFill+0x1c6>
			20f: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x1c6
 212:	00          	.byte	00
 213:	00          	.byte	00
 214:	0000d1        	l32r	a13, fffc0214 <Compile_Memory_CopyFill+0xfffc0214>
			214: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x8
 217:	0000b1        	l32r	a11, fffc0218 <Compile_Memory_CopyFill+0xfffc0218>
			217: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0xc
 21a:	0000a1        	l32r	a10, fffc021c <Compile_Memory_CopyFill+0xfffc021c>
			21a: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x10
 21d:	d7a0c2        	movi	a12, 215
 220:	000081        	l32r	a8, fffc0220 <Compile_Memory_CopyFill+0xfffc0220>
			220: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_CopyFill+0x5c
			220: R_XTENSA_ASM_EXPAND	printf
 223:	0008e0        	callx8	a8
 226:	211282        	l16ui	a8, a2, 66
 229:	ff9046        	j	6e <Compile_Memory_CopyFill+0x6e>
			229: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x6e
 22c:	201292        	l16ui	a9, a2, 64
 22f:	12b987        	bgeu	a9, a8, 245 <Compile_Memory_CopyFill+0x245>
			22f: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x245
 232:	880b      	addi.n	a8, a8, -1
 234:	f49080        	extui	a9, a8, 0, 16
 237:	ffe146        	j	1c0 <Compile_Memory_CopyFill+0x1c0>
			237: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x1c0
 23a:	00          	.byte	00
 23b:	00          	.byte	00
 23c:	201292        	l16ui	a9, a2, 64
 23f:	02b987        	bgeu	a9, a8, 245 <Compile_Memory_CopyFill+0x245>
			23f: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x245
 242:	ffdc86        	j	1b8 <Compile_Memory_CopyFill+0x1b8>
			242: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x1b8
 245:	2e0292        	l8ui	a9, a2, 46
 248:	f6c956        	bnez	a9, 1b8 <Compile_Memory_CopyFill+0x1b8>
			248: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x1b8
 24b:	ffd506        	j	1a3 <Compile_Memory_CopyFill+0x1a3>
			24b: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x1a3
 24e:	00          	.byte	00
 24f:	00          	.byte	00
 250:	201292        	l16ui	a9, a2, 64
 253:	10b987        	bgeu	a9, a8, 267 <Compile_Memory_CopyFill+0x267>
			253: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x267
 256:	980b      	addi.n	a9, a8, -1
 258:	f49090        	extui	a9, a9, 0, 16
 25b:	ff8dc6        	j	96 <Compile_Memory_CopyFill+0x96>
			25b: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x96
 25e:	201292        	l16ui	a9, a2, 64
 261:	02b987        	bgeu	a9, a8, 267 <Compile_Memory_CopyFill+0x267>
			261: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x267
 264:	ff88c6        	j	8b <Compile_Memory_CopyFill+0x8b>
			264: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x8b
 267:	2e02a2        	l8ui	a10, a2, 46
 26a:	e1da56        	bnez	a10, 8b <Compile_Memory_CopyFill+0x8b>
			26a: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x8b
 26d:	ffc286        	j	17b <Compile_Memory_CopyFill+0x17b>
			26d: R_XTENSA_SLOT0_OP	.text.Compile_Memory_CopyFill+0x17b

Disassembly of section .text.Compile_Memory_Grow:

00000000 <Compile_Memory_Grow>:
   0:	006136        	entry	a1, 48
   3:	02a8      	l32i.n	a10, a2, 0
   5:	32d8      	l32i.n	a13, a2, 12
   7:	88a682        	movi	a8, 0x688
   a:	c28b      	addi.n	a12, a2, 8
   c:	b1fb      	addi.n	a11, a1, 15
   e:	aa8a      	add.n	a10, a10, a8
  10:	000081        	l32r	a8, fffc0010 <Compile_Memory_Grow+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Grow+0x18
			10: R_XTENSA_ASM_EXPAND	ReadLEB_i7
  13:	0008e0        	callx8	a8
  16:	027d      	mov.n	a7, a2
  18:	0a2d      	mov.n	a2, a10
  1a:	07ea56        	bnez	a10, 9c <Compile_Memory_Grow+0x9c>
			1a: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Grow+0x9c
  1d:	07ad      	mov.n	a10, a7
  1f:	000081        	l32r	a8, fffc0020 <Compile_Memory_Grow+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Grow+0x1c
			1f: R_XTENSA_ASM_EXPAND	.text.CopyStackTopToRegister$constprop$0
  22:	0008e0        	callx8	a8
  25:	0a2d      	mov.n	a2, a10
  27:	071a56        	bnez	a10, 9c <Compile_Memory_Grow+0x9c>
			27: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Grow+0x9c
  2a:	211782        	l16ui	a8, a7, 66
  2d:	06d856        	bnez	a8, 9e <Compile_Memory_Grow+0x9e>
			2d: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Grow+0x9e
  30:	2e0782        	l8ui	a8, a7, 46
  33:	b88c      	beqz.n	a8, 42 <Compile_Memory_Grow+0x42>
			33: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Grow+0x42
  35:	07ad      	mov.n	a10, a7
  37:	000081        	l32r	a8, fffc0038 <Compile_Memory_Grow+0xfffc0038>
			37: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Grow+0x20
			37: R_XTENSA_ASM_EXPAND	.text.Pop
  3a:	0008e0        	callx8	a8
  3d:	0a2d      	mov.n	a2, a10
  3f:	059a56        	bnez	a10, 9c <Compile_Memory_Grow+0x9c>
			3f: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Grow+0x9c
  42:	0000b1        	l32r	a11, fffc0044 <Compile_Memory_Grow+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Grow
  45:	07ad      	mov.n	a10, a7
  47:	000081        	l32r	a8, fffc0048 <Compile_Memory_Grow+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Grow+0x24
			47: R_XTENSA_ASM_EXPAND	.text.EmitOp
  4a:	0008e0        	callx8	a8
  4d:	202aa0        	or	a2, a10, a10
  50:	048a56        	bnez	a10, 9c <Compile_Memory_Grow+0x9c>
			50: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Grow+0x9c
  53:	01a0a2        	movi	a10, 1
  56:	000081        	l32r	a8, fffc0058 <Compile_Memory_Grow+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Grow+0x28
			56: R_XTENSA_ASM_EXPAND	IsFpType
  59:	0008e0        	callx8	a8
  5c:	211782        	l16ui	a8, a7, 66
  5f:	0000b1        	l32r	a11, fffc0060 <Compile_Memory_Grow+0xfffc0060>
			5f: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Grow+0x10
  62:	681b      	addi.n	a6, a8, 1
  64:	0000e1        	l32r	a14, fffc0064 <Compile_Memory_Grow+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Grow+0x14
  67:	f46060        	extui	a6, a6, 0, 16
  6a:	1c0c      	movi.n	a12, 1
  6c:	0c9d      	mov.n	a9, a12
  6e:	215762        	s16i	a6, a7, 66
  71:	ffa0d2        	movi	a13, 255
  74:	8392a0        	moveqz	a9, a2, a10
  77:	93bea0        	movnez	a11, a14, a10
  7a:	1e3d87        	bltu	a13, a8, 9c <Compile_Memory_Grow+0x9c>
			7a: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Grow+0x9c
  7d:	90a870        	addx2	a10, a8, a7
  80:	a85ab2        	s16i	a11, a10, 0x150
  83:	878a      	add.n	a8, a7, a8
  85:	50a3a2        	movi	a10, 0x350
  88:	8088a0        	add	a8, a8, a10
  8b:	909970        	addx2	a9, a9, a7
  8e:	0048c2        	s8i	a12, a8, 0
  91:	06d972        	addmi	a7, a9, 0x600
  94:	291782        	l16ui	a8, a7, 82
  97:	18ec      	bnez.n	a8, bc <Compile_Memory_Grow+0xbc>
			97: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Grow+0xbc
  99:	295762        	s16i	a6, a7, 82
  9c:	f01d      	retw.n
  9e:	880b      	addi.n	a8, a8, -1
  a0:	201792        	l16ui	a9, a7, 64
  a3:	f48080        	extui	a8, a8, 0, 16
  a6:	863897        	bltu	a8, a9, 30 <Compile_Memory_Grow+0x30>
			a6: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Grow+0x30
  a9:	878a      	add.n	a8, a7, a8
  ab:	50a392        	movi	a9, 0x350
  ae:	889a      	add.n	a8, a8, a9
  b0:	000882        	l8ui	a8, a8, 0
  b3:	021866        	bnei	a8, 1, b9 <Compile_Memory_Grow+0xb9>
			b3: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Grow+0xb9
  b6:	ffdec6        	j	35 <Compile_Memory_Grow+0x35>
			b6: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Grow+0x35
  b9:	ffdcc6        	j	30 <Compile_Memory_Grow+0x30>
			b9: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Grow+0x30
  bc:	0000d1        	l32r	a13, fffc00bc <Compile_Memory_Grow+0xfffc00bc>
			bc: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Grow+0x4
  bf:	0000b1        	l32r	a11, fffc00c0 <Compile_Memory_Grow+0xfffc00c0>
			bf: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Grow+0x8
  c2:	0000a1        	l32r	a10, fffc00c4 <Compile_Memory_Grow+0xfffc00c4>
			c2: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Grow+0xc
  c5:	b2a1c2        	movi	a12, 0x1b2
  c8:	000081        	l32r	a8, fffc00c8 <Compile_Memory_Grow+0xfffc00c8>
			c8: R_XTENSA_SLOT0_OP	.literal.Compile_Memory_Grow+0x2c
			c8: R_XTENSA_ASM_EXPAND	printf
  cb:	0008e0        	callx8	a8
  ce:	295762        	s16i	a6, a7, 82
  d1:	fff1c6        	j	9c <Compile_Memory_Grow+0x9c>
			d1: R_XTENSA_SLOT0_OP	.text.Compile_Memory_Grow+0x9c

Disassembly of section .text.Compile_Return:

00000000 <Compile_Return>:
   0:	006136        	entry	a1, 48
   3:	2e0282        	l8ui	a8, a2, 46
   6:	024d      	mov.n	a4, a2
   8:	118856        	bnez	a8, 124 <Compile_Return+0x124>
			8: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x124
   b:	8238      	l32i.n	a3, a2, 32
   d:	14c2b2        	addi	a11, a2, 20
  10:	c38c      	beqz.n	a3, 20 <Compile_Return+0x20>
			10: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x20
  12:	0bb8      	l32i.n	a11, a11, 0
  14:	330b      	addi.n	a3, a3, -1
  16:	ff6b56        	bnez	a11, 10 <Compile_Return+0x10>
			16: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x10
  19:	000021        	l32r	a2, fffc001c <Compile_Return+0xfffc001c>
			19: R_XTENSA_SLOT0_OP	.literal.Compile_Return
  1c:	f01d      	retw.n
  1e:	00          	.byte	00
  1f:	00          	.byte	00
  20:	1c0c      	movi.n	a12, 1
  22:	04ad      	mov.n	a10, a4
  24:	000081        	l32r	a8, fffc0024 <Compile_Return+0xfffc0024>
			24: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x38
			24: R_XTENSA_ASM_EXPAND	.text.ReturnValues
  27:	0008e0        	callx8	a8
  2a:	0a2d      	mov.n	a2, a10
  2c:	feca56        	bnez	a10, 1c <Compile_Return+0x1c>
			2c: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x1c
  2f:	0000b1        	l32r	a11, fffc0030 <Compile_Return+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x4
  32:	04ad      	mov.n	a10, a4
  34:	000081        	l32r	a8, fffc0034 <Compile_Return+0xfffc0034>
			34: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x3c
			34: R_XTENSA_ASM_EXPAND	.text.EmitOp
  37:	0008e0        	callx8	a8
  3a:	0a2d      	mov.n	a2, a10
  3c:	fdca56        	bnez	a10, 1c <Compile_Return+0x1c>
			3c: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x1c
  3f:	1b0c      	movi.n	a11, 1
  41:	2e44b2        	s8i	a11, a4, 46
  44:	0000a1        	l32r	a10, fffc0044 <Compile_Return+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0xc
  47:	0000b1        	l32r	a11, fffc0048 <Compile_Return+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x8
  4a:	000081        	l32r	a8, fffc004c <Compile_Return+0xfffc004c>
			4a: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x40
			4a: R_XTENSA_ASM_EXPAND	printf
  4d:	0008e0        	callx8	a8
  50:	2114a2        	l16ui	a10, a4, 66
  53:	1314d2        	l16ui	a13, a4, 38
  56:	023da7        	bltu	a13, a10, 5c <Compile_Return+0x5c>
			56: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x5c
  59:	0031c6        	j	124 <Compile_Return+0x124>
			59: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x124
  5c:	a8a022        	movi	a2, 168
  5f:	035d      	mov.n	a5, a3
  61:	000906        	j	89 <Compile_Return+0x89>
			61: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x89
  64:	000091        	l32r	a9, fffc0064 <Compile_Return+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x34
  67:	170c      	movi.n	a7, 1
  69:	339a      	add.n	a3, a3, a9
  6b:	090c      	movi.n	a9, 0
  6d:	937930        	movnez	a7, a9, a3
  70:	907740        	addx2	a7, a7, a4
  73:	06d772        	addmi	a7, a7, 0x600
  76:	291792        	l16ui	a9, a7, 82
  79:	0dc916        	beqz	a9, 159 <Compile_Return+0x159>
			79: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x159
  7c:	090c      	movi.n	a9, 0
  7e:	295792        	s16i	a9, a7, 82
  81:	551b      	addi.n	a5, a5, 1
  83:	023da7        	bltu	a13, a10, 89 <Compile_Return+0x89>
			83: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x89
  86:	002206        	j	112 <Compile_Return+0x112>
			86: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x112
  89:	aa0b      	addi.n	a10, a10, -1
  8b:	f4a0a0        	extui	a10, a10, 0, 16
  8e:	9a2a      	add.n	a9, a10, a2
  90:	909940        	addx2	a9, a9, a4
  93:	001932        	l16ui	a3, a9, 0
  96:	000081        	l32r	a8, fffc0098 <Compile_Return+0xfffc0098>
			96: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x30
  99:	b4aa      	add.n	a11, a4, a10
  9b:	938a      	add.n	a9, a3, a8
  9d:	0000c1        	l32r	a12, fffc00a0 <Compile_Return+0xfffc00a0>
			9d: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x2c
  a0:	50a382        	movi	a8, 0x350
  a3:	2154a2        	s16i	a10, a4, 66
  a6:	80bb80        	add	a11, a11, a8
  a9:	f49090        	extui	a9, a9, 0, 16
  ac:	000b62        	l8ui	a6, a11, 0
  af:	b1bc97        	bgeu	a12, a9, 64 <Compile_Return+0x64>
			af: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x64
  b2:	251492        	l16ui	a9, a4, 74
  b5:	c83397        	bltu	a3, a9, 81 <Compile_Return+0x81>
			b5: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x81
  b8:	237380        	sext	a7, a3, 15
  bb:	02a797        	bge	a7, a9, c1 <Compile_Return+0xc1>
			bb: R_XTENSA_SLOT0_OP	.text.Compile_Return+0xc1
  be:	0031c6        	j	189 <Compile_Return+0x189>
			be: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x189
  c1:	06d492        	addmi	a9, a4, 0x600
  c4:	281992        	l16ui	a9, a9, 80
  c7:	022797        	blt	a7, a9, cd <Compile_Return+0xcd>
			c7: R_XTENSA_SLOT0_OP	.text.Compile_Return+0xcd
  ca:	002986        	j	174 <Compile_Return+0x174>
			ca: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x174
  cd:	20a660        	or	a10, a6, a6
  d0:	000081        	l32r	a8, fffc00d0 <Compile_Return+0xfffc00d0>
			d0: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x44
			d0: R_XTENSA_ASM_EXPAND	Is64BitType
  d3:	0008e0        	callx8	a8
  d6:	ba1b      	addi.n	a11, a10, 1
  d8:	f4b0b0        	extui	a11, a11, 0, 16
  db:	070c      	movi.n	a7, 0
  dd:	3169      	s32i.n	a6, a1, 12
  df:	873a      	add.n	a8, a7, a3
  e1:	238880        	sext	a8, a8, 15
  e4:	848a      	add.n	a8, a4, a8
  e6:	50a492        	movi	a9, 0x450
  e9:	31a8      	l32i.n	a10, a1, 12
  eb:	689a      	add.n	a6, a8, a9
  ed:	13b7b7        	bgeu	a7, a11, 104 <Compile_Return+0x104>
			ed: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x104
  f0:	000692        	l8ui	a9, a6, 0
  f3:	ffc9b2        	addi	a11, a9, -1
  f6:	f9ac      	beqz.n	a9, 129 <Compile_Return+0x129>
			f6: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x129
  f8:	0046b2        	s8i	a11, a6, 0
  fb:	000081        	l32r	a8, fffc00fc <Compile_Return+0xfffc00fc>
			fb: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x48
			fb: R_XTENSA_ASM_EXPAND	Is64BitType
  fe:	0008e0        	callx8	a8
 101:	04aa56        	bnez	a10, 14f <Compile_Return+0x14f>
			101: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x14f
 104:	2114a2        	l16ui	a10, a4, 66
 107:	1314d2        	l16ui	a13, a4, 38
 10a:	551b      	addi.n	a5, a5, 1
 10c:	02bda7        	bgeu	a13, a10, 112 <Compile_Return+0x112>
			10c: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x112
 10f:	ffdd86        	j	89 <Compile_Return+0x89>
			10f: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x89
 112:	053d      	mov.n	a3, a5
 114:	c58c      	beqz.n	a5, 124 <Compile_Return+0x124>
			114: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x124
 116:	0000a1        	l32r	a10, fffc0118 <Compile_Return+0xfffc0118>
			116: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x28
 119:	0000b1        	l32r	a11, fffc011c <Compile_Return+0xfffc011c>
			119: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x8
 11c:	05cd      	mov.n	a12, a5
 11e:	000081        	l32r	a8, fffc0120 <Compile_Return+0xfffc0120>
			11e: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x4c
			11e: R_XTENSA_ASM_EXPAND	printf
 121:	0008e0        	callx8	a8
 124:	020c      	movi.n	a2, 0
 126:	f01d      	retw.n
 128:	00          	.byte	00
 129:	0000d1        	l32r	a13, fffc012c <Compile_Return+0xfffc012c>
			129: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x24
 12c:	0000b1        	l32r	a11, fffc012c <Compile_Return+0xfffc012c>
			12c: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x14
 12f:	0000a1        	l32r	a10, fffc0130 <Compile_Return+0xfffc0130>
			12f: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x18
 132:	a4a1c2        	movi	a12, 0x1a4
 135:	000081        	l32r	a8, fffc0138 <Compile_Return+0xfffc0138>
			135: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x50
			135: R_XTENSA_ASM_EXPAND	printf
 138:	0008e0        	callx8	a8
 13b:	000692        	l8ui	a9, a6, 0
 13e:	31a8      	l32i.n	a10, a1, 12
 140:	ffc992        	addi	a9, a9, -1
 143:	004692        	s8i	a9, a6, 0
 146:	000081        	l32r	a8, fffc0148 <Compile_Return+0xfffc0148>
			146: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x54
			146: R_XTENSA_ASM_EXPAND	Is64BitType
 149:	0008e0        	callx8	a8
 14c:	fb4a16        	beqz	a10, 104 <Compile_Return+0x104>
			14c: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x104
 14f:	771b      	addi.n	a7, a7, 1
 151:	f47070        	extui	a7, a7, 0, 16
 154:	2b0c      	movi.n	a11, 2
 156:	ffe146        	j	df <Compile_Return+0xdf>
			156: R_XTENSA_SLOT0_OP	.text.Compile_Return+0xdf
 159:	0000d1        	l32r	a13, fffc015c <Compile_Return+0xfffc015c>
			159: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x10
 15c:	0000b1        	l32r	a11, fffc015c <Compile_Return+0xfffc015c>
			15c: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x14
 15f:	0000a1        	l32r	a10, fffc0160 <Compile_Return+0xfffc0160>
			15f: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x18
 162:	b8a1c2        	movi	a12, 0x1b8
 165:	000081        	l32r	a8, fffc0168 <Compile_Return+0xfffc0168>
			165: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x58
			165: R_XTENSA_ASM_EXPAND	printf
 168:	0008e0        	callx8	a8
 16b:	2114a2        	l16ui	a10, a4, 66
 16e:	1314d2        	l16ui	a13, a4, 38
 171:	ffc1c6        	j	7c <Compile_Return+0x7c>
			171: R_XTENSA_SLOT0_OP	.text.Compile_Return+0x7c
 174:	0000d1        	l32r	a13, fffc0174 <Compile_Return+0xfffc0174>
			174: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x20
 177:	0000b1        	l32r	a11, fffc0178 <Compile_Return+0xfffc0178>
			177: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x14
 17a:	0000a1        	l32r	a10, fffc017c <Compile_Return+0xfffc017c>
			17a: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x18
 17d:	a2a1c2        	movi	a12, 0x1a2
 180:	000081        	l32r	a8, fffc0180 <Compile_Return+0xfffc0180>
			180: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x5c
			180: R_XTENSA_ASM_EXPAND	printf
 183:	0008e0        	callx8	a8
 186:	ffd0c6        	j	cd <Compile_Return+0xcd>
			186: R_XTENSA_SLOT0_OP	.text.Compile_Return+0xcd
 189:	0000d1        	l32r	a13, fffc018c <Compile_Return+0xfffc018c>
			189: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x1c
 18c:	0000b1        	l32r	a11, fffc018c <Compile_Return+0xfffc018c>
			18c: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x14
 18f:	0000a1        	l32r	a10, fffc0190 <Compile_Return+0xfffc0190>
			18f: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x18
 192:	a1a1c2        	movi	a12, 0x1a1
 195:	000081        	l32r	a8, fffc0198 <Compile_Return+0xfffc0198>
			195: R_XTENSA_SLOT0_OP	.literal.Compile_Return+0x60
			195: R_XTENSA_ASM_EXPAND	printf
 198:	0008e0        	callx8	a8
 19b:	ffc886        	j	c1 <Compile_Return+0xc1>
			19b: R_XTENSA_SLOT0_OP	.text.Compile_Return+0xc1

Disassembly of section .text.Compile_Convert:

00000000 <Compile_Convert>:
   0:	006136        	entry	a1, 48
   3:	748830        	extui	a8, a3, 8, 8
   6:	207220        	or	a7, a2, a2
   9:	f43030        	extui	a3, a3, 0, 16
   c:	1c8816        	beqz	a8, 1d8 <Compile_Convert+0x1d8>
			c: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x1d8
   f:	fca092        	movi	a9, 252
  12:	021897        	beq	a8, a9, 18 <Compile_Convert+0x18>
			12: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x18
  15:	0047c6        	j	138 <Compile_Convert+0x138>
			15: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x138
  18:	743030        	extui	a3, a3, 0, 8
  1b:	0ca082        	movi	a8, 12
  1e:	02b837        	bgeu	a8, a3, 24 <Compile_Convert+0x24>
			1e: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x24
  21:	0044c6        	j	138 <Compile_Convert+0x138>
			21: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x138
  24:	000061        	l32r	a6, fffc0024 <Compile_Convert+0xfffc0024>
			24: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x4
  27:	f03330        	subx8	a3, a3, a3
  2a:	a06360        	addx4	a6, a3, a6
  2d:	0506a2        	l8ui	a10, a6, 5
  30:	120c      	movi.n	a2, 1
  32:	000081        	l32r	a8, fffc0034 <Compile_Convert+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x3c
			32: R_XTENSA_ASM_EXPAND	IsFpType
  35:	0008e0        	callx8	a8
  38:	28a382        	movi	a8, 0x328
  3b:	aa8a      	add.n	a10, a10, a8
  3d:	90aa70        	addx2	a10, a10, a7
  40:	011a32        	l16ui	a3, a10, 2
  43:	211782        	l16ui	a8, a7, 66
  46:	00a0a2        	movi	a10, 0
  49:	201792        	l16ui	a9, a7, 64
  4c:	832a30        	moveqz	a2, a10, a3
  4f:	742020        	extui	a2, a2, 0, 8
  52:	02b987        	bgeu	a9, a8, 58 <Compile_Convert+0x58>
			52: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x58
  55:	004546        	j	16e <Compile_Convert+0x16e>
			55: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x16e
  58:	2e0792        	l8ui	a9, a7, 46
  5b:	0fa916        	beqz	a9, 159 <Compile_Convert+0x159>
			5b: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x159
  5e:	ffc852        	addi	a5, a8, -1
  61:	235580        	sext	a5, a5, 15
  64:	02a587        	bge	a5, a8, 6a <Compile_Convert+0x6a>
			64: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x6a
  67:	003546        	j	140 <Compile_Convert+0x140>
			67: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x140
  6a:	180c      	movi.n	a8, 1
  6c:	908280        	addx2	a8, a2, a8
  6f:	a08860        	addx4	a8, a8, a6
  72:	28b8      	l32i.n	a11, a8, 8
  74:	07ad      	mov.n	a10, a7
  76:	000081        	l32r	a8, fffc0078 <Compile_Convert+0xfffc0078>
			76: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x40
			76: R_XTENSA_ASM_EXPAND	.text.EmitOp
  79:	0008e0        	callx8	a8
  7c:	0baa56        	bnez	a10, 13a <Compile_Convert+0x13a>
			7c: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x13a
  7f:	211782        	l16ui	a8, a7, 66
  82:	201792        	l16ui	a9, a7, 64
  85:	053987        	bltu	a9, a8, 8e <Compile_Convert+0x8e>
			85: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x8e
  88:	2e07a2        	l8ui	a10, a7, 46
  8b:	211a16        	beqz	a10, 2a0 <Compile_Convert+0x2a0>
			8b: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x2a0
  8e:	980b      	addi.n	a9, a8, -1
  90:	235980        	sext	a5, a9, 15
  93:	02a587        	bge	a5, a8, 99 <Compile_Convert+0x99>
			93: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x99
  96:	004486        	j	1ac <Compile_Convert+0x1ac>
			96: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x1ac
  99:	2e07a2        	l8ui	a10, a7, 46
  9c:	1aac      	beqz.n	a10, c1 <Compile_Convert+0xc1>
			9c: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0xc1
  9e:	2017b2        	l16ui	a11, a7, 64
  a1:	02bb87        	bgeu	a11, a8, a7 <Compile_Convert+0xa7>
			a1: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0xa7
  a4:	009206        	j	2f0 <Compile_Convert+0x2f0>
			a4: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x2f0
  a7:	113a16        	beqz	a10, 1be <Compile_Convert+0x1be>
			a7: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x1be
  aa:	880b      	addi.n	a8, a8, -1
  ac:	f49080        	extui	a9, a8, 0, 16
  af:	0268f7        	bbci	a8, 15, b5 <Compile_Convert+0xb5>
			af: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0xb5
  b2:	0076c6        	j	291 <Compile_Convert+0x291>
			b2: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x291
  b5:	909970        	addx2	a9, a9, a7
  b8:	a819b2        	l16ui	a11, a9, 0x150
  bb:	007546        	j	294 <Compile_Convert+0x294>
			bb: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x294
  be:	00          	.byte	00
  bf:	00          	.byte	00
  c0:	00          	.byte	00
  c1:	0000d1        	l32r	a13, fffc00c4 <Compile_Convert+0xfffc00c4>
			c1: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x14
  c4:	0000b1        	l32r	a11, fffc00c4 <Compile_Convert+0xfffc00c4>
			c4: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0xc
  c7:	0000a1        	l32r	a10, fffc00c8 <Compile_Convert+0xfffc00c8>
			c7: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x10
  ca:	07a1c2        	movi	a12, 0x107
  cd:	000081        	l32r	a8, fffc00d0 <Compile_Convert+0xfffc00d0>
			cd: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x44
			cd: R_XTENSA_ASM_EXPAND	printf
  d0:	0008e0        	callx8	a8
  d3:	211782        	l16ui	a8, a7, 66
  d6:	022587        	blt	a5, a8, dc <Compile_Convert+0xdc>
			d6: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0xdc
  d9:	0082c6        	j	2e8 <Compile_Convert+0x2e8>
			d9: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x2e8
  dc:	905570        	addx2	a5, a5, a7
  df:	a81592        	l16ui	a9, a5, 0x150
  e2:	0000a1        	l32r	a10, fffc00e4 <Compile_Convert+0xfffc00e4>
			e2: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x38
  e5:	023a97        	bltu	a10, a9, eb <Compile_Convert+0xeb>
			e5: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0xeb
  e8:	008306        	j	2f8 <Compile_Convert+0x2f8>
			e8: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x2f8
  eb:	20a770        	or	a10, a7, a7
  ee:	000081        	l32r	a8, fffc00f0 <Compile_Convert+0xfffc00f0>
			ee: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x48
			ee: R_XTENSA_ASM_EXPAND	.text.Pop
  f1:	0008e0        	callx8	a8
  f4:	042a56        	bnez	a10, 13a <Compile_Convert+0x13a>
			f4: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x13a
  f7:	050662        	l8ui	a6, a6, 5
  fa:	0ef316        	beqz	a3, 1ed <Compile_Convert+0x1ed>
			fa: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x1ed
  fd:	2517d2        	l16ui	a13, a7, 74
 100:	f87c      	movi.n	a8, -1
 102:	00a2e2        	movi	a14, 0x200
 105:	06cd      	mov.n	a12, a6
 107:	b1eb      	addi.n	a11, a1, 14
 109:	20a770        	or	a10, a7, a7
 10c:	075182        	s16i	a8, a1, 14
 10f:	000081        	l32r	a8, fffc0110 <Compile_Convert+0xfffc0110>
			10f: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x4c
			10f: R_XTENSA_ASM_EXPAND	.text.AllocateSlotsWithinRange
 112:	0008e0        	callx8	a8
 115:	1aec      	bnez.n	a10, 13a <Compile_Convert+0x13a>
			115: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x13a
 117:	211782        	l16ui	a8, a7, 66
 11a:	ffa092        	movi	a9, 255
 11d:	581b      	addi.n	a5, a8, 1
 11f:	f45050        	extui	a5, a5, 0, 16
 122:	215752        	s16i	a5, a7, 66
 125:	071132        	l16ui	a3, a1, 14
 128:	023987        	bltu	a9, a8, 12e <Compile_Convert+0x12e>
			128: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x12e
 12b:	004946        	j	254 <Compile_Convert+0x254>
			12b: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x254
 12e:	d7a8      	l32i.n	a10, a7, 52
 130:	03bd      	mov.n	a11, a3
 132:	000081        	l32r	a8, fffc0134 <Compile_Convert+0xfffc0134>
			132: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x50
			132: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 135:	0008e0        	callx8	a8
 138:	0a0c      	movi.n	a10, 0
 13a:	0a2d      	mov.n	a2, a10
 13c:	f01d      	retw.n
 13e:	00          	.byte	00
 13f:	00          	.byte	00
 140:	f26596        	bltz	a5, 6a <Compile_Convert+0x6a>
			140: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x6a
 143:	905570        	addx2	a5, a5, a7
 146:	a81592        	l16ui	a9, a5, 0x150
 149:	0000a1        	l32r	a10, fffc014c <Compile_Convert+0xfffc014c>
			149: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x38
 14c:	180c      	movi.n	a8, 1
 14e:	023a97        	bltu	a10, a9, 154 <Compile_Convert+0x154>
			14e: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x154
 151:	ffc5c6        	j	6c <Compile_Convert+0x6c>
			151: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x6c
 154:	080c      	movi.n	a8, 0
 156:	ffc486        	j	6c <Compile_Convert+0x6c>
			156: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x6c
 159:	0000d1        	l32r	a13, fffc015c <Compile_Convert+0xfffc015c>
			159: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x8
 15c:	0000b1        	l32r	a11, fffc015c <Compile_Convert+0xfffc015c>
			15c: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0xc
 15f:	0000a1        	l32r	a10, fffc0160 <Compile_Convert+0xfffc0160>
			15f: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x10
 162:	d7a0c2        	movi	a12, 215
 165:	000081        	l32r	a8, fffc0168 <Compile_Convert+0xfffc0168>
			165: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x54
			165: R_XTENSA_ASM_EXPAND	printf
 168:	0008e0        	callx8	a8
 16b:	211782        	l16ui	a8, a7, 66
 16e:	580b      	addi.n	a5, a8, -1
 170:	235580        	sext	a5, a5, 15
 173:	c92587        	blt	a5, a8, 140 <Compile_Convert+0x140>
			173: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x140
 176:	2e0782        	l8ui	a8, a7, 46
 179:	eed856        	bnez	a8, 6a <Compile_Convert+0x6a>
			179: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x6a
 17c:	0000d1        	l32r	a13, fffc017c <Compile_Convert+0xfffc017c>
			17c: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x14
 17f:	0000b1        	l32r	a11, fffc0180 <Compile_Convert+0xfffc0180>
			17f: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0xc
 182:	0000a1        	l32r	a10, fffc0184 <Compile_Convert+0xfffc0184>
			182: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x10
 185:	07a1c2        	movi	a12, 0x107
 188:	000081        	l32r	a8, fffc0188 <Compile_Convert+0xfffc0188>
			188: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x58
			188: R_XTENSA_ASM_EXPAND	printf
 18b:	0008e0        	callx8	a8
 18e:	211782        	l16ui	a8, a7, 66
 191:	022587        	blt	a5, a8, 197 <Compile_Convert+0x197>
			191: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x197
 194:	ffb486        	j	6a <Compile_Convert+0x6a>
			194: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x6a
 197:	905570        	addx2	a5, a5, a7
 19a:	a81592        	l16ui	a9, a5, 0x150
 19d:	0000a1        	l32r	a10, fffc01a0 <Compile_Convert+0xfffc01a0>
			19d: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x38
 1a0:	180c      	movi.n	a8, 1
 1a2:	023a97        	bltu	a10, a9, 1a8 <Compile_Convert+0x1a8>
			1a2: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x1a8
 1a5:	ffb0c6        	j	6c <Compile_Convert+0x6c>
			1a5: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x6c
 1a8:	ffea06        	j	154 <Compile_Convert+0x154>
			1a8: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x154
 1ab:	00          	.byte	00
 1ac:	f2c5d6        	bgez	a5, dc <Compile_Convert+0xdc>
			1ac: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0xdc
 1af:	201792        	l16ui	a9, a7, 64
 1b2:	02b987        	bgeu	a9, a8, 1b8 <Compile_Convert+0x1b8>
			1b2: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x1b8
 1b5:	003606        	j	291 <Compile_Convert+0x291>
			1b5: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x291
 1b8:	2e0782        	l8ui	a8, a7, 46
 1bb:	0d2856        	bnez	a8, 291 <Compile_Convert+0x291>
			1bb: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x291
 1be:	0000d1        	l32r	a13, fffc01c0 <Compile_Convert+0xfffc01c0>
			1be: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x8
 1c1:	0000b1        	l32r	a11, fffc01c4 <Compile_Convert+0xfffc01c4>
			1c1: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0xc
 1c4:	0000a1        	l32r	a10, fffc01c4 <Compile_Convert+0xfffc01c4>
			1c4: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x10
 1c7:	d7a0c2        	movi	a12, 215
 1ca:	000081        	l32r	a8, fffc01cc <Compile_Convert+0xfffc01cc>
			1ca: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x5c
			1ca: R_XTENSA_ASM_EXPAND	printf
 1cd:	0008e0        	callx8	a8
 1d0:	211782        	l16ui	a8, a7, 66
 1d3:	ffb4c6        	j	aa <Compile_Convert+0xaa>
			1d3: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0xaa
 1d6:	00          	.byte	00
 1d7:	00          	.byte	00
 1d8:	000091        	l32r	a9, fffc01d8 <Compile_Convert+0xfffc01d8>
			1d8: R_XTENSA_SLOT0_OP	.literal.Compile_Convert
 1db:	f06330        	subx8	a6, a3, a3
 1de:	f2a082        	movi	a8, 242
 1e1:	a06690        	addx4	a6, a6, a9
 1e4:	023837        	bltu	a8, a3, 1ea <Compile_Convert+0x1ea>
			1e4: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x1ea
 1e7:	ff9086        	j	2d <Compile_Convert+0x2d>
			1e7: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x2d
 1ea:	ffd286        	j	138 <Compile_Convert+0x138>
			1ea: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x138
 1ed:	06ad      	mov.n	a10, a6
 1ef:	000081        	l32r	a8, fffc01f0 <Compile_Convert+0xfffc01f0>
			1ef: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x60
			1ef: R_XTENSA_ASM_EXPAND	IsFpType
 1f2:	0008e0        	callx8	a8
 1f5:	000091        	l32r	a9, fffc01f8 <Compile_Convert+0xfffc01f8>
			1f5: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x20
 1f8:	000021        	l32r	a2, fffc01f8 <Compile_Convert+0xfffc01f8>
			1f8: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x24
 1fb:	150c      	movi.n	a5, 1
 1fd:	8353a0        	moveqz	a5, a3, a10
 200:	8329a0        	moveqz	a2, a9, a10
 203:	56dc      	bnez.n	a6, 21c <Compile_Convert+0x21c>
			203: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x21c
 205:	2e0782        	l8ui	a8, a7, 46
 208:	08dc      	bnez.n	a8, 21c <Compile_Convert+0x21c>
			208: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x21c
 20a:	0000d1        	l32r	a13, fffc020c <Compile_Convert+0xfffc020c>
			20a: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x1c
 20d:	0000b1        	l32r	a11, fffc0210 <Compile_Convert+0xfffc0210>
			20d: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0xc
 210:	0000a1        	l32r	a10, fffc0210 <Compile_Convert+0xfffc0210>
			210: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x10
 213:	3fa2c2        	movi	a12, 0x23f
 216:	000081        	l32r	a8, fffc0218 <Compile_Convert+0xfffc0218>
			216: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x64
			216: R_XTENSA_ASM_EXPAND	printf
 219:	0008e0        	callx8	a8
 21c:	211782        	l16ui	a8, a7, 66
 21f:	ffa092        	movi	a9, 255
 222:	a81b      	addi.n	a10, a8, 1
 224:	f430a0        	extui	a3, a10, 0, 16
 227:	215732        	s16i	a3, a7, 66
 22a:	02b987        	bgeu	a9, a8, 230 <Compile_Convert+0x230>
			22a: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x230
 22d:	ffc1c6        	j	138 <Compile_Convert+0x138>
			22d: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x138
 230:	909870        	addx2	a9, a8, a7
 233:	a85922        	s16i	a2, a9, 0x150
 236:	878a      	add.n	a8, a7, a8
 238:	50a392        	movi	a9, 0x350
 23b:	889a      	add.n	a8, a8, a9
 23d:	905570        	addx2	a5, a5, a7
 240:	004862        	s8i	a6, a8, 0
 243:	06d552        	addmi	a5, a5, 0x600
 246:	291582        	l16ui	a8, a5, 82
 249:	06b856        	bnez	a8, 2b8 <Compile_Convert+0x2b8>
			249: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x2b8
 24c:	295532        	s16i	a3, a5, 82
 24f:	ffb946        	j	138 <Compile_Convert+0x138>
			24f: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x138
 252:	00          	.byte	00
 253:	00          	.byte	00
 254:	909870        	addx2	a9, a8, a7
 257:	a85932        	s16i	a3, a9, 0x150
 25a:	878a      	add.n	a8, a7, a8
 25c:	50a392        	movi	a9, 0x350
 25f:	889a      	add.n	a8, a8, a9
 261:	000091        	l32r	a9, fffc0264 <Compile_Convert+0xfffc0264>
			261: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x2c
 264:	0000b1        	l32r	a11, fffc0264 <Compile_Convert+0xfffc0264>
			264: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x30
 267:	939a      	add.n	a9, a3, a9
 269:	004862        	s8i	a6, a8, 0
 26c:	f48090        	extui	a8, a9, 0, 16
 26f:	02bb87        	bgeu	a11, a8, 275 <Compile_Convert+0x275>
			26f: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x275
 272:	ffae06        	j	12e <Compile_Convert+0x12e>
			272: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x12e
 275:	000081        	l32r	a8, fffc0278 <Compile_Convert+0xfffc0278>
			275: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x28
 278:	160c      	movi.n	a6, 1
 27a:	838a      	add.n	a8, a3, a8
 27c:	936a80        	movnez	a6, a10, a8
 27f:	906670        	addx2	a6, a6, a7
 282:	06d662        	addmi	a6, a6, 0x600
 285:	291682        	l16ui	a8, a6, 82
 288:	044856        	bnez	a8, 2d0 <Compile_Convert+0x2d0>
			288: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x2d0
 28b:	295652        	s16i	a5, a6, 82
 28e:	ffa706        	j	12e <Compile_Convert+0x12e>
			28e: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x12e
 291:	0000b1        	l32r	a11, fffc0294 <Compile_Convert+0xfffc0294>
			291: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x34
 294:	d7a8      	l32i.n	a10, a7, 52
 296:	000081        	l32r	a8, fffc0298 <Compile_Convert+0xfffc0298>
			296: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x68
			296: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 299:	0008e0        	callx8	a8
 29c:	ff92c6        	j	eb <Compile_Convert+0xeb>
			29c: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0xeb
 29f:	00          	.byte	00
 2a0:	0000d1        	l32r	a13, fffc02a0 <Compile_Convert+0xfffc02a0>
			2a0: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x8
 2a3:	0000b1        	l32r	a11, fffc02a4 <Compile_Convert+0xfffc02a4>
			2a3: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0xc
 2a6:	0000a1        	l32r	a10, fffc02a8 <Compile_Convert+0xfffc02a8>
			2a6: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x10
 2a9:	d7a0c2        	movi	a12, 215
 2ac:	000081        	l32r	a8, fffc02ac <Compile_Convert+0xfffc02ac>
			2ac: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x6c
			2ac: R_XTENSA_ASM_EXPAND	printf
 2af:	0008e0        	callx8	a8
 2b2:	211782        	l16ui	a8, a7, 66
 2b5:	ff7546        	j	8e <Compile_Convert+0x8e>
			2b5: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x8e
 2b8:	0000d1        	l32r	a13, fffc02b8 <Compile_Convert+0xfffc02b8>
			2b8: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x18
 2bb:	0000b1        	l32r	a11, fffc02bc <Compile_Convert+0xfffc02bc>
			2bb: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0xc
 2be:	0000a1        	l32r	a10, fffc02c0 <Compile_Convert+0xfffc02c0>
			2be: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x10
 2c1:	b2a1c2        	movi	a12, 0x1b2
 2c4:	000081        	l32r	a8, fffc02c4 <Compile_Convert+0xfffc02c4>
			2c4: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x70
			2c4: R_XTENSA_ASM_EXPAND	printf
 2c7:	0008e0        	callx8	a8
 2ca:	295532        	s16i	a3, a5, 82
 2cd:	ff99c6        	j	138 <Compile_Convert+0x138>
			2cd: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x138
 2d0:	0000d1        	l32r	a13, fffc02d0 <Compile_Convert+0xfffc02d0>
			2d0: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x18
 2d3:	0000b1        	l32r	a11, fffc02d4 <Compile_Convert+0xfffc02d4>
			2d3: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0xc
 2d6:	0000a1        	l32r	a10, fffc02d8 <Compile_Convert+0xfffc02d8>
			2d6: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x10
 2d9:	b2a1c2        	movi	a12, 0x1b2
 2dc:	000081        	l32r	a8, fffc02dc <Compile_Convert+0xfffc02dc>
			2dc: R_XTENSA_SLOT0_OP	.literal.Compile_Convert+0x74
			2dc: R_XTENSA_ASM_EXPAND	printf
 2df:	0008e0        	callx8	a8
 2e2:	295652        	s16i	a5, a6, 82
 2e5:	ff9146        	j	12e <Compile_Convert+0x12e>
			2e5: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x12e
 2e8:	201792        	l16ui	a9, a7, 64
 2eb:	12b987        	bgeu	a9, a8, 301 <Compile_Convert+0x301>
			2eb: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x301
 2ee:	980b      	addi.n	a9, a8, -1
 2f0:	f49090        	extui	a9, a9, 0, 16
 2f3:	ff6f86        	j	b5 <Compile_Convert+0xb5>
			2f3: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0xb5
 2f6:	00          	.byte	00
 2f7:	00          	.byte	00
 2f8:	201792        	l16ui	a9, a7, 64
 2fb:	02b987        	bgeu	a9, a8, 301 <Compile_Convert+0x301>
			2fb: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x301
 2fe:	ff6a06        	j	aa <Compile_Convert+0xaa>
			2fe: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0xaa
 301:	2e07a2        	l8ui	a10, a7, 46
 304:	da2a56        	bnez	a10, aa <Compile_Convert+0xaa>
			304: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0xaa
 307:	ffacc6        	j	1be <Compile_Convert+0x1be>
			307: R_XTENSA_SLOT0_OP	.text.Compile_Convert+0x1be

Disassembly of section .text.Compile_SetLocal:

00000000 <Compile_SetLocal>:
   0:	008136        	entry	a1, 64
   3:	02a8      	l32i.n	a10, a2, 0
   5:	32d8      	l32i.n	a13, a2, 12
   7:	88a682        	movi	a8, 0x688
   a:	c28b      	addi.n	a12, a2, 8
   c:	1cc1b2        	addi	a11, a1, 28
   f:	80aa80        	add	a10, a10, a8
  12:	000081        	l32r	a8, fffc0014 <Compile_SetLocal+0xfffc0014>
			12: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x28
			12: R_XTENSA_ASM_EXPAND	ReadLEB_ptr
  15:	0008e0        	callx8	a8
  18:	027d      	mov.n	a7, a2
  1a:	f43030        	extui	a3, a3, 0, 16
  1d:	0a2d      	mov.n	a2, a10
  1f:	eacc      	bnez.n	a10, 31 <Compile_SetLocal+0x31>
			1f: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x31
  21:	c7a8      	l32i.n	a10, a7, 48
  23:	000081        	l32r	a8, fffc0024 <Compile_SetLocal+0xfffc0024>
			23: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x2c
			23: R_XTENSA_ASM_EXPAND	GetFunctionNumArgsAndLocals
  26:	0008e0        	callx8	a8
  29:	7168      	l32i.n	a6, a1, 28
  2b:	000021        	l32r	a2, fffc002c <Compile_SetLocal+0xfffc002c>
			2b: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x8
  2e:	0236a7        	bltu	a6, a10, 34 <Compile_SetLocal+0x34>
			2e: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x34
  31:	f01d      	retw.n
  33:	00          	.byte	00
  34:	211782        	l16ui	a8, a7, 66
  37:	f45060        	extui	a5, a6, 0, 16
  3a:	263587        	bltu	a5, a8, 64 <Compile_SetLocal+0x64>
			3a: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x64
  3d:	2e0782        	l8ui	a8, a7, 46
  40:	888c      	beqz.n	a8, 4c <Compile_SetLocal+0x4c>
			40: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x4c
  42:	0000c1        	l32r	a12, fffc0044 <Compile_SetLocal+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x20
  45:	0c5d      	mov.n	a5, a12
  47:	000906        	j	6f <Compile_SetLocal+0x6f>
			47: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x6f
  4a:	00          	.byte	00
  4b:	00          	.byte	00
  4c:	0000d1        	l32r	a13, fffc004c <Compile_SetLocal+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0xc
  4f:	0000b1        	l32r	a11, fffc0050 <Compile_SetLocal+0xfffc0050>
			4f: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x10
  52:	0000a1        	l32r	a10, fffc0054 <Compile_SetLocal+0xfffc0054>
			52: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x14
  55:	29a1c2        	movi	a12, 0x129
  58:	000081        	l32r	a8, fffc0058 <Compile_SetLocal+0xfffc0058>
			58: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x30
			58: R_XTENSA_ASM_EXPAND	printf
  5b:	0008e0        	callx8	a8
  5e:	211782        	l16ui	a8, a7, 66
  61:	ddb587        	bgeu	a5, a8, 42 <Compile_SetLocal+0x42>
			61: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x42
  64:	f46060        	extui	a6, a6, 0, 16
  67:	906670        	addx2	a6, a6, a7
  6a:	a81652        	l16ui	a5, a6, 0x150
  6d:	05cd      	mov.n	a12, a5
  6f:	1ac1b2        	addi	a11, a1, 26
  72:	07ad      	mov.n	a10, a7
  74:	000081        	l32r	a8, fffc0074 <Compile_SetLocal+0xfffc0074>
			74: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x34
			74: R_XTENSA_ASM_EXPAND	.text.FindReferencedLocalWithinCurrentBlock
  77:	0008e0        	callx8	a8
  7a:	0a2d      	mov.n	a2, a10
  7c:	fb1a56        	bnez	a10, 31 <Compile_SetLocal+0x31>
			7c: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x31
  7f:	0d1142        	l16ui	a4, a1, 26
  82:	211792        	l16ui	a9, a7, 66
  85:	029457        	bne	a4, a5, 8b <Compile_SetLocal+0x8b>
			85: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x8b
  88:	003b46        	j	179 <Compile_SetLocal+0x179>
			88: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x179
  8b:	08a956        	bnez	a9, 119 <Compile_SetLocal+0x119>
			8b: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x119
  8e:	2e0792        	l8ui	a9, a7, 46
  91:	0a8d      	mov.n	a8, a10
  93:	19d916        	beqz	a9, 234 <Compile_SetLocal+0x234>
			93: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x234
  96:	08ad      	mov.n	a10, a8
  98:	000081        	l32r	a8, fffc0098 <Compile_SetLocal+0xfffc0098>
			98: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x38
			98: R_XTENSA_ASM_EXPAND	Is64BitType
  9b:	0008e0        	callx8	a8
  9e:	0000b1        	l32r	a11, fffc00a0 <Compile_SetLocal+0xfffc00a0>
			9e: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal
  a1:	000081        	l32r	a8, fffc00a4 <Compile_SetLocal+0xfffc00a4>
			a1: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x4
  a4:	83b8a0        	moveqz	a11, a8, a10
  a7:	20a770        	or	a10, a7, a7
  aa:	000081        	l32r	a8, fffc00ac <Compile_SetLocal+0xfffc00ac>
			aa: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x3c
			aa: R_XTENSA_ASM_EXPAND	.text.EmitOp
  ad:	0008e0        	callx8	a8
  b0:	1a0a56        	bnez	a10, 254 <Compile_SetLocal+0x254>
			b0: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x254
  b3:	d7a8      	l32i.n	a10, a7, 52
  b5:	05bd      	mov.n	a11, a5
  b7:	000081        	l32r	a8, fffc00b8 <Compile_SetLocal+0xfffc00b8>
			b7: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x40
			b7: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
  ba:	0008e0        	callx8	a8
  bd:	211782        	l16ui	a8, a7, 66
  c0:	201792        	l16ui	a9, a7, 64
  c3:	053987        	bltu	a9, a8, cc <Compile_SetLocal+0xcc>
			c3: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0xcc
  c6:	2e07a2        	l8ui	a10, a7, 46
  c9:	18ba16        	beqz	a10, 258 <Compile_SetLocal+0x258>
			c9: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x258
  cc:	980b      	addi.n	a9, a8, -1
  ce:	236980        	sext	a6, a9, 15
  d1:	02a687        	bge	a6, a8, d7 <Compile_SetLocal+0xd7>
			d1: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0xd7
  d4:	003546        	j	1ad <Compile_SetLocal+0x1ad>
			d4: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x1ad
  d7:	2e07a2        	l8ui	a10, a7, 46
  da:	0e7a16        	beqz	a10, 1c5 <Compile_SetLocal+0x1c5>
			da: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x1c5
  dd:	2017b2        	l16ui	a11, a7, 64
  e0:	02bb87        	bgeu	a11, a8, e6 <Compile_SetLocal+0xe6>
			e0: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0xe6
  e3:	006946        	j	28c <Compile_SetLocal+0x28c>
			e3: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x28c
  e6:	3adc      	bnez.n	a10, fd <Compile_SetLocal+0xfd>
			e6: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0xfd
  e8:	0000d1        	l32r	a13, fffc00e8 <Compile_SetLocal+0xfffc00e8>
			e8: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x18
  eb:	0000b1        	l32r	a11, fffc00ec <Compile_SetLocal+0xfffc00ec>
			eb: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x10
  ee:	0000a1        	l32r	a10, fffc00f0 <Compile_SetLocal+0xfffc00f0>
			ee: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x14
  f1:	d7a0c2        	movi	a12, 215
  f4:	000081        	l32r	a8, fffc00f4 <Compile_SetLocal+0xfffc00f4>
			f4: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x44
			f4: R_XTENSA_ASM_EXPAND	printf
  f7:	0008e0        	callx8	a8
  fa:	211782        	l16ui	a8, a7, 66
  fd:	880b      	addi.n	a8, a8, -1
  ff:	f49080        	extui	a9, a8, 0, 16
 102:	0268f7        	bbci	a8, 15, 108 <Compile_SetLocal+0x108>
			102: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x108
 105:	002cc6        	j	1bc <Compile_SetLocal+0x1bc>
			105: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x1bc
 108:	909970        	addx2	a9, a9, a7
 10b:	a819b2        	l16ui	a11, a9, 0x150
 10e:	d7a8      	l32i.n	a10, a7, 52
 110:	000081        	l32r	a8, fffc0110 <Compile_SetLocal+0xfffc0110>
			110: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x48
			110: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 113:	0008e0        	callx8	a8
 116:	003546        	j	1ef <Compile_SetLocal+0x1ef>
			116: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x1ef
 119:	690b      	addi.n	a6, a9, -1
 11b:	2017a2        	l16ui	a10, a7, 64
 11e:	f46060        	extui	a6, a6, 0, 16
 121:	02b6a7        	bgeu	a6, a10, 127 <Compile_SetLocal+0x127>
			121: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x127
 124:	003586        	j	1fe <Compile_SetLocal+0x1fe>
			124: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x1fe
 127:	876a      	add.n	a8, a7, a6
 129:	50a3a2        	movi	a10, 0x350
 12c:	88aa      	add.n	a8, a8, a10
 12e:	000882        	l8ui	a8, a8, 0
 131:	236680        	sext	a6, a6, 15
 134:	02a697        	bge	a6, a9, 13a <Compile_SetLocal+0x13a>
			134: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x13a
 137:	003646        	j	214 <Compile_SetLocal+0x214>
			137: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x214
 13a:	2e0792        	l8ui	a9, a7, 46
 13d:	f55956        	bnez	a9, 96 <Compile_SetLocal+0x96>
			13d: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x96
 140:	0000d1        	l32r	a13, fffc0140 <Compile_SetLocal+0xfffc0140>
			140: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0xc
 143:	0000b1        	l32r	a11, fffc0144 <Compile_SetLocal+0xfffc0144>
			143: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x10
 146:	0000a1        	l32r	a10, fffc0148 <Compile_SetLocal+0xfffc0148>
			146: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x14
 149:	3189      	s32i.n	a8, a1, 12
 14b:	07a1c2        	movi	a12, 0x107
 14e:	000081        	l32r	a8, fffc0150 <Compile_SetLocal+0xfffc0150>
			14e: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x4c
			14e: R_XTENSA_ASM_EXPAND	printf
 151:	0008e0        	callx8	a8
 154:	211792        	l16ui	a9, a7, 66
 157:	3188      	l32i.n	a8, a1, 12
 159:	022697        	blt	a6, a9, 15f <Compile_SetLocal+0x15f>
			159: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x15f
 15c:	ffcd86        	j	96 <Compile_SetLocal+0x96>
			15c: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x96
 15f:	906670        	addx2	a6, a6, a7
 162:	a81692        	l16ui	a9, a6, 0x150
 165:	0000a1        	l32r	a10, fffc0168 <Compile_SetLocal+0xfffc0168>
			165: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x24
 168:	023a97        	bltu	a10, a9, 16e <Compile_SetLocal+0x16e>
			168: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x16e
 16b:	ffc9c6        	j	96 <Compile_SetLocal+0x96>
			16b: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x96
 16e:	000091        	l32r	a9, fffc0170 <Compile_SetLocal+0xfffc0170>
			16e: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x1c
 171:	a08890        	addx4	a8, a8, a9
 174:	08b8      	l32i.n	a11, a8, 0
 176:	ffcb46        	j	a7 <Compile_SetLocal+0xa7>
			176: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0xa7
 179:	201782        	l16ui	a8, a7, 64
 17c:	053897        	bltu	a8, a9, 185 <Compile_SetLocal+0x185>
			17c: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x185
 17f:	2e0782        	l8ui	a8, a7, 46
 182:	094816        	beqz	a8, 21a <Compile_SetLocal+0x21a>
			182: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x21a
 185:	990b      	addi.n	a9, a9, -1
 187:	f4c090        	extui	a12, a9, 0, 16
 18a:	05bd      	mov.n	a11, a5
 18c:	20a770        	or	a10, a7, a7
 18f:	000081        	l32r	a8, fffc0190 <Compile_SetLocal+0xfffc0190>
			18f: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x50
			18f: R_XTENSA_ASM_EXPAND	.text.CopyStackIndexToSlot
 192:	0008e0        	callx8	a8
 195:	0bba56        	bnez	a10, 254 <Compile_SetLocal+0x254>
			195: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x254
 198:	282c      	movi.n	a8, 34
 19a:	029387        	bne	a3, a8, 1a0 <Compile_SetLocal+0x1a0>
			19a: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x1a0
 19d:	ffa406        	j	31 <Compile_SetLocal+0x31>
			19d: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x31
 1a0:	07ad      	mov.n	a10, a7
 1a2:	000081        	l32r	a8, fffc01a4 <Compile_SetLocal+0xfffc01a4>
			1a2: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x54
			1a2: R_XTENSA_ASM_EXPAND	.text.Pop
 1a5:	0008e0        	callx8	a8
 1a8:	0a2d      	mov.n	a2, a10
 1aa:	f01d      	retw.n
 1ac:	00          	.byte	00
 1ad:	02f6d6        	bgez	a6, 1e0 <Compile_SetLocal+0x1e0>
			1ad: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x1e0
 1b0:	201792        	l16ui	a9, a7, 64
 1b3:	053987        	bltu	a9, a8, 1bc <Compile_SetLocal+0x1bc>
			1b3: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x1bc
 1b6:	2e0782        	l8ui	a8, a7, 46
 1b9:	f2b816        	beqz	a8, e8 <Compile_SetLocal+0xe8>
			1b9: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0xe8
 1bc:	0000b1        	l32r	a11, fffc01bc <Compile_SetLocal+0xfffc01bc>
			1bc: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x20
 1bf:	ffd2c6        	j	10e <Compile_SetLocal+0x10e>
			1bf: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x10e
 1c2:	00          	.byte	00
 1c3:	00          	.byte	00
 1c4:	00          	.byte	00
 1c5:	0000d1        	l32r	a13, fffc01c8 <Compile_SetLocal+0xfffc01c8>
			1c5: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0xc
 1c8:	0000b1        	l32r	a11, fffc01c8 <Compile_SetLocal+0xfffc01c8>
			1c8: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x10
 1cb:	0000a1        	l32r	a10, fffc01cc <Compile_SetLocal+0xfffc01cc>
			1cb: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x14
 1ce:	07a1c2        	movi	a12, 0x107
 1d1:	000081        	l32r	a8, fffc01d4 <Compile_SetLocal+0xfffc01d4>
			1d1: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x58
			1d1: R_XTENSA_ASM_EXPAND	printf
 1d4:	0008e0        	callx8	a8
 1d7:	211782        	l16ui	a8, a7, 66
 1da:	022687        	blt	a6, a8, 1e0 <Compile_SetLocal+0x1e0>
			1da: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x1e0
 1dd:	0028c6        	j	284 <Compile_SetLocal+0x284>
			1dd: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x284
 1e0:	906670        	addx2	a6, a6, a7
 1e3:	a81692        	l16ui	a9, a6, 0x150
 1e6:	0000a1        	l32r	a10, fffc01e8 <Compile_SetLocal+0xfffc01e8>
			1e6: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x24
 1e9:	023a97        	bltu	a10, a9, 1ef <Compile_SetLocal+0x1ef>
			1e9: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x1ef
 1ec:	002006        	j	270 <Compile_SetLocal+0x270>
			1ec: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x270
 1ef:	d7a8      	l32i.n	a10, a7, 52
 1f1:	04bd      	mov.n	a11, a4
 1f3:	000081        	l32r	a8, fffc01f4 <Compile_SetLocal+0xfffc01f4>
			1f3: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x5c
			1f3: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 1f6:	0008e0        	callx8	a8
 1f9:	ffe6c6        	j	198 <Compile_SetLocal+0x198>
			1f9: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x198
 1fc:	00          	.byte	00
 1fd:	00          	.byte	00
 1fe:	028d      	mov.n	a8, a2
 200:	02ba97        	bgeu	a10, a9, 206 <Compile_SetLocal+0x206>
			200: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x206
 203:	ffca86        	j	131 <Compile_SetLocal+0x131>
			203: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x131
 206:	2e07a2        	l8ui	a10, a7, 46
 209:	7aac      	beqz.n	a10, 234 <Compile_SetLocal+0x234>
			209: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x234
 20b:	236680        	sext	a6, a6, 15
 20e:	022697        	blt	a6, a9, 214 <Compile_SetLocal+0x214>
			20e: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x214
 211:	ffa046        	j	96 <Compile_SetLocal+0x96>
			211: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x96
 214:	e7e696        	bltz	a6, 96 <Compile_SetLocal+0x96>
			214: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x96
 217:	ffd106        	j	15f <Compile_SetLocal+0x15f>
			217: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x15f
 21a:	0000d1        	l32r	a13, fffc021c <Compile_SetLocal+0xfffc021c>
			21a: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x18
 21d:	0000b1        	l32r	a11, fffc0220 <Compile_SetLocal+0xfffc0220>
			21d: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x10
 220:	0000a1        	l32r	a10, fffc0220 <Compile_SetLocal+0xfffc0220>
			220: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x14
 223:	d7a0c2        	movi	a12, 215
 226:	000081        	l32r	a8, fffc0228 <Compile_SetLocal+0xfffc0228>
			226: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x60
			226: R_XTENSA_ASM_EXPAND	printf
 229:	0008e0        	callx8	a8
 22c:	211792        	l16ui	a9, a7, 66
 22f:	ffd486        	j	185 <Compile_SetLocal+0x185>
			22f: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x185
 232:	00          	.byte	00
 233:	00          	.byte	00
 234:	0000d1        	l32r	a13, fffc0234 <Compile_SetLocal+0xfffc0234>
			234: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x18
 237:	0000b1        	l32r	a11, fffc0238 <Compile_SetLocal+0xfffc0238>
			237: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x10
 23a:	0000a1        	l32r	a10, fffc023c <Compile_SetLocal+0xfffc023c>
			23a: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x14
 23d:	d7a0c2        	movi	a12, 215
 240:	000081        	l32r	a8, fffc0240 <Compile_SetLocal+0xfffc0240>
			240: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x64
			240: R_XTENSA_ASM_EXPAND	printf
 243:	0008e0        	callx8	a8
 246:	211792        	l16ui	a9, a7, 66
 249:	080c      	movi.n	a8, 0
 24b:	690b      	addi.n	a6, a9, -1
 24d:	f46060        	extui	a6, a6, 0, 16
 250:	ffb746        	j	131 <Compile_SetLocal+0x131>
			250: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x131
 253:	00          	.byte	00
 254:	0a2d      	mov.n	a2, a10
 256:	f01d      	retw.n
 258:	0000d1        	l32r	a13, fffc0258 <Compile_SetLocal+0xfffc0258>
			258: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x18
 25b:	0000b1        	l32r	a11, fffc025c <Compile_SetLocal+0xfffc025c>
			25b: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x10
 25e:	0000a1        	l32r	a10, fffc0260 <Compile_SetLocal+0xfffc0260>
			25e: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x14
 261:	d7a0c2        	movi	a12, 215
 264:	000081        	l32r	a8, fffc0264 <Compile_SetLocal+0xfffc0264>
			264: R_XTENSA_SLOT0_OP	.literal.Compile_SetLocal+0x68
			264: R_XTENSA_ASM_EXPAND	printf
 267:	0008e0        	callx8	a8
 26a:	211782        	l16ui	a8, a7, 66
 26d:	ff96c6        	j	cc <Compile_SetLocal+0xcc>
			26d: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0xcc
 270:	201792        	l16ui	a9, a7, 64
 273:	02b987        	bgeu	a9, a8, 279 <Compile_SetLocal+0x279>
			273: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x279
 276:	ffa0c6        	j	fd <Compile_SetLocal+0xfd>
			276: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0xfd
 279:	2e07a2        	l8ui	a10, a7, 46
 27c:	e7da56        	bnez	a10, fd <Compile_SetLocal+0xfd>
			27c: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0xfd
 27f:	ff9946        	j	e8 <Compile_SetLocal+0xe8>
			27f: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0xe8
 282:	00          	.byte	00
 283:	00          	.byte	00
 284:	201792        	l16ui	a9, a7, 64
 287:	eeb987        	bgeu	a9, a8, 279 <Compile_SetLocal+0x279>
			287: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x279
 28a:	980b      	addi.n	a9, a8, -1
 28c:	f49090        	extui	a9, a9, 0, 16
 28f:	ff9d46        	j	108 <Compile_SetLocal+0x108>
			28f: R_XTENSA_SLOT0_OP	.text.Compile_SetLocal+0x108

Disassembly of section .text.Compile_GetSetGlobal:

00000000 <Compile_GetSetGlobal>:
   0:	006136        	entry	a1, 48
   3:	02a8      	l32i.n	a10, a2, 0
   5:	32d8      	l32i.n	a13, a2, 12
   7:	88a682        	movi	a8, 0x688
   a:	c28b      	addi.n	a12, a2, 8
   c:	b1cb      	addi.n	a11, a1, 12
   e:	aa8a      	add.n	a10, a10, a8
  10:	000081        	l32r	a8, fffc0010 <Compile_GetSetGlobal+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x3c
			10: R_XTENSA_ASM_EXPAND	ReadLEB_ptr
  13:	0008e0        	callx8	a8
  16:	027d      	mov.n	a7, a2
  18:	f43030        	extui	a3, a3, 0, 16
  1b:	0a2d      	mov.n	a2, a10
  1d:	0aba56        	bnez	a10, cc <Compile_GetSetGlobal+0xcc>
			1d: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xcc
  20:	1798      	l32i.n	a9, a7, 4
  22:	3188      	l32i.n	a8, a1, 12
  24:	e9a8      	l32i.n	a10, a9, 56
  26:	0238a7        	bltu	a8, a10, 2c <Compile_GetSetGlobal+0x2c>
			26: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x2c
  29:	0027c6        	j	cc <Compile_GetSetGlobal+0xcc>
			29: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xcc
  2c:	f968      	l32i.n	a6, a9, 60
  2e:	09a616        	beqz	a6, cc <Compile_GetSetGlobal+0xcc>
			2e: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xcc
  31:	1188b0        	slli	a8, a8, 5
  34:	392c      	movi.n	a9, 35
  36:	806680        	add	a6, a6, a8
  39:	029397        	bne	a3, a9, 3f <Compile_GetSetGlobal+0x3f>
			39: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x3f
  3c:	002406        	j	d0 <Compile_GetSetGlobal+0xd0>
			3c: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xd0
  3f:	1e0682        	l8ui	a8, a6, 30
  42:	086816        	beqz	a8, cc <Compile_GetSetGlobal+0xcc>
			42: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xcc
  45:	211782        	l16ui	a8, a7, 66
  48:	129856        	bnez	a8, 175 <Compile_GetSetGlobal+0x175>
			48: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x175
  4b:	2e0792        	l8ui	a9, a7, 46
  4e:	202880        	or	a2, a8, a8
  51:	203916        	beqz	a9, 258 <Compile_GetSetGlobal+0x258>
			51: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x258
  54:	02ad      	mov.n	a10, a2
  56:	000081        	l32r	a8, fffc0058 <Compile_GetSetGlobal+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x40
			56: R_XTENSA_ASM_EXPAND	Is64BitType
  59:	0008e0        	callx8	a8
  5c:	0000b1        	l32r	a11, fffc005c <Compile_GetSetGlobal+0xfffc005c>
			5c: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x8
  5f:	000081        	l32r	a8, fffc0060 <Compile_GetSetGlobal+0xfffc0060>
			5f: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0xc
  62:	83b8a0        	moveqz	a11, a8, a10
  65:	20a770        	or	a10, a7, a7
  68:	000081        	l32r	a8, fffc0068 <Compile_GetSetGlobal+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x44
			68: R_XTENSA_ASM_EXPAND	.text.EmitOp
  6b:	0008e0        	callx8	a8
  6e:	0a2d      	mov.n	a2, a10
  70:	058a56        	bnez	a10, cc <Compile_GetSetGlobal+0xcc>
			70: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xcc
  73:	b68b      	addi.n	a11, a6, 8
  75:	07ad      	mov.n	a10, a7
  77:	000081        	l32r	a8, fffc0078 <Compile_GetSetGlobal+0xfffc0078>
			77: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x48
			77: R_XTENSA_ASM_EXPAND	.text.EmitPointer
  7a:	0008e0        	callx8	a8
  7d:	211782        	l16ui	a8, a7, 66
  80:	201792        	l16ui	a9, a7, 64
  83:	053987        	bltu	a9, a8, 8c <Compile_GetSetGlobal+0x8c>
			83: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x8c
  86:	2e07a2        	l8ui	a10, a7, 46
  89:	1eba16        	beqz	a10, 278 <Compile_GetSetGlobal+0x278>
			89: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x278
  8c:	980b      	addi.n	a9, a8, -1
  8e:	236980        	sext	a6, a9, 15
  91:	02a687        	bge	a6, a8, 97 <Compile_GetSetGlobal+0x97>
			91: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x97
  94:	004e46        	j	1d1 <Compile_GetSetGlobal+0x1d1>
			94: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x1d1
  97:	2e07a2        	l8ui	a10, a7, 46
  9a:	15fa16        	beqz	a10, 1fd <Compile_GetSetGlobal+0x1fd>
			9a: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x1fd
  9d:	2017b2        	l16ui	a11, a7, 64
  a0:	f49090        	extui	a9, a9, 0, 16
  a3:	0d3b87        	bltu	a11, a8, b4 <Compile_GetSetGlobal+0xb4>
			a3: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xb4
  a6:	139a16        	beqz	a10, 1e3 <Compile_GetSetGlobal+0x1e3>
			a6: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x1e3
  a9:	880b      	addi.n	a8, a8, -1
  ab:	f49080        	extui	a9, a8, 0, 16
  ae:	0268f7        	bbci	a8, 15, b4 <Compile_GetSetGlobal+0xb4>
			ae: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xb4
  b1:	007cc6        	j	2a8 <Compile_GetSetGlobal+0x2a8>
			b1: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x2a8
  b4:	909970        	addx2	a9, a9, a7
  b7:	a819b2        	l16ui	a11, a9, 0x150
  ba:	d7a8      	l32i.n	a10, a7, 52
  bc:	000081        	l32r	a8, fffc00bc <Compile_GetSetGlobal+0xfffc00bc>
			bc: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x4c
			bc: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
  bf:	0008e0        	callx8	a8
  c2:	07ad      	mov.n	a10, a7
  c4:	000081        	l32r	a8, fffc00c4 <Compile_GetSetGlobal+0xfffc00c4>
			c4: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x50
			c4: R_XTENSA_ASM_EXPAND	.text.Pop
  c7:	0008e0        	callx8	a8
  ca:	0a2d      	mov.n	a2, a10
  cc:	f01d      	retw.n
  ce:	00          	.byte	00
  cf:	00          	.byte	00
  d0:	1c06a2        	l8ui	a10, a6, 28
  d3:	000081        	l32r	a8, fffc00d4 <Compile_GetSetGlobal+0xfffc00d4>
			d3: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x54
			d3: R_XTENSA_ASM_EXPAND	Is64BitType
  d6:	0008e0        	callx8	a8
  d9:	000091        	l32r	a9, fffc00dc <Compile_GetSetGlobal+0xfffc00dc>
			d9: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal
  dc:	000081        	l32r	a8, fffc00dc <Compile_GetSetGlobal+0xfffc00dc>
			dc: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x4
  df:	20baa0        	or	a11, a10, a10
  e2:	9389b0        	movnez	a8, a9, a11
  e5:	20a770        	or	a10, a7, a7
  e8:	08bd      	mov.n	a11, a8
  ea:	000081        	l32r	a8, fffc00ec <Compile_GetSetGlobal+0xfffc00ec>
			ea: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x58
			ea: R_XTENSA_ASM_EXPAND	.text.EmitOp
  ed:	0008e0        	callx8	a8
  f0:	fd6a56        	bnez	a10, ca <Compile_GetSetGlobal+0xca>
			f0: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xca
  f3:	b68b      	addi.n	a11, a6, 8
  f5:	07ad      	mov.n	a10, a7
  f7:	000081        	l32r	a8, fffc00f8 <Compile_GetSetGlobal+0xfffc00f8>
			f7: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x5c
			f7: R_XTENSA_ASM_EXPAND	.text.EmitPointer
  fa:	0008e0        	callx8	a8
  fd:	1c0662        	l8ui	a6, a6, 28
 100:	2517d2        	l16ui	a13, a7, 74
 103:	f87c      	movi.n	a8, -1
 105:	00a2e2        	movi	a14, 0x200
 108:	06cd      	mov.n	a12, a6
 10a:	0ac1b2        	addi	a11, a1, 10
 10d:	07ad      	mov.n	a10, a7
 10f:	055182        	s16i	a8, a1, 10
 112:	000081        	l32r	a8, fffc0114 <Compile_GetSetGlobal+0xfffc0114>
			112: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x60
			112: R_XTENSA_ASM_EXPAND	.text.AllocateSlotsWithinRange
 115:	0008e0        	callx8	a8
 118:	faea56        	bnez	a10, ca <Compile_GetSetGlobal+0xca>
			118: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xca
 11b:	211782        	l16ui	a8, a7, 66
 11e:	ffa092        	movi	a9, 255
 121:	381b      	addi.n	a3, a8, 1
 123:	f43030        	extui	a3, a3, 0, 16
 126:	215732        	s16i	a3, a7, 66
 129:	051152        	l16ui	a5, a1, 10
 12c:	363987        	bltu	a9, a8, 166 <Compile_GetSetGlobal+0x166>
			12c: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x166
 12f:	909870        	addx2	a9, a8, a7
 132:	a85952        	s16i	a5, a9, 0x150
 135:	878a      	add.n	a8, a7, a8
 137:	50a392        	movi	a9, 0x350
 13a:	889a      	add.n	a8, a8, a9
 13c:	000091        	l32r	a9, fffc013c <Compile_GetSetGlobal+0xfffc013c>
			13c: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x34
 13f:	0000a1        	l32r	a10, fffc0140 <Compile_GetSetGlobal+0xfffc0140>
			13f: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x38
 142:	959a      	add.n	a9, a5, a9
 144:	004862        	s8i	a6, a8, 0
 147:	f48090        	extui	a8, a9, 0, 16
 14a:	183a87        	bltu	a10, a8, 166 <Compile_GetSetGlobal+0x166>
			14a: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x166
 14d:	000081        	l32r	a8, fffc0150 <Compile_GetSetGlobal+0xfffc0150>
			14d: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x30
 150:	160c      	movi.n	a6, 1
 152:	858a      	add.n	a8, a5, a8
 154:	936280        	movnez	a6, a2, a8
 157:	906670        	addx2	a6, a6, a7
 15a:	06d662        	addmi	a6, a6, 0x600
 15d:	291682        	l16ui	a8, a6, 82
 160:	12c856        	bnez	a8, 290 <Compile_GetSetGlobal+0x290>
			160: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x290
 163:	295632        	s16i	a3, a6, 82
 166:	d7a8      	l32i.n	a10, a7, 52
 168:	05bd      	mov.n	a11, a5
 16a:	000081        	l32r	a8, fffc016c <Compile_GetSetGlobal+0xfffc016c>
			16a: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x64
			16a: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 16d:	0008e0        	callx8	a8
 170:	f01d      	retw.n
 172:	00          	.byte	00
 173:	00          	.byte	00
 174:	00          	.byte	00
 175:	380b      	addi.n	a3, a8, -1
 177:	201792        	l16ui	a9, a7, 64
 17a:	f43030        	extui	a3, a3, 0, 16
 17d:	02b397        	bgeu	a3, a9, 183 <Compile_GetSetGlobal+0x183>
			17d: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x183
 180:	002d46        	j	239 <Compile_GetSetGlobal+0x239>
			180: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x239
 183:	973a      	add.n	a9, a7, a3
 185:	50a3a2        	movi	a10, 0x350
 188:	99aa      	add.n	a9, a9, a10
 18a:	000922        	l8ui	a2, a9, 0
 18d:	233380        	sext	a3, a3, 15
 190:	02a387        	bge	a3, a8, 196 <Compile_GetSetGlobal+0x196>
			190: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x196
 193:	002e46        	j	250 <Compile_GetSetGlobal+0x250>
			193: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x250
 196:	2e0782        	l8ui	a8, a7, 46
 199:	eb7856        	bnez	a8, 54 <Compile_GetSetGlobal+0x54>
			199: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x54
 19c:	0000d1        	l32r	a13, fffc019c <Compile_GetSetGlobal+0xfffc019c>
			19c: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x20
 19f:	0000b1        	l32r	a11, fffc01a0 <Compile_GetSetGlobal+0xfffc01a0>
			19f: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x14
 1a2:	0000a1        	l32r	a10, fffc01a4 <Compile_GetSetGlobal+0xfffc01a4>
			1a2: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x18
 1a5:	07a1c2        	movi	a12, 0x107
 1a8:	000081        	l32r	a8, fffc01a8 <Compile_GetSetGlobal+0xfffc01a8>
			1a8: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x68
			1a8: R_XTENSA_ASM_EXPAND	printf
 1ab:	0008e0        	callx8	a8
 1ae:	211782        	l16ui	a8, a7, 66
 1b1:	022387        	blt	a3, a8, 1b7 <Compile_GetSetGlobal+0x1b7>
			1b1: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x1b7
 1b4:	ffa706        	j	54 <Compile_GetSetGlobal+0x54>
			1b4: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x54
 1b7:	903370        	addx2	a3, a3, a7
 1ba:	a81382        	l16ui	a8, a3, 0x150
 1bd:	000091        	l32r	a9, fffc01c0 <Compile_GetSetGlobal+0xfffc01c0>
			1bd: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x2c
 1c0:	023987        	bltu	a9, a8, 1c6 <Compile_GetSetGlobal+0x1c6>
			1c0: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x1c6
 1c3:	ffa346        	j	54 <Compile_GetSetGlobal+0x54>
			1c3: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x54
 1c6:	0000a1        	l32r	a10, fffc01c8 <Compile_GetSetGlobal+0xfffc01c8>
			1c6: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x24
 1c9:	a0a2a0        	addx4	a10, a2, a10
 1cc:	0ab8      	l32i.n	a11, a10, 0
 1ce:	ffa4c6        	j	65 <Compile_GetSetGlobal+0x65>
			1ce: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x65
 1d1:	0436d6        	bgez	a6, 218 <Compile_GetSetGlobal+0x218>
			1d1: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x218
 1d4:	201792        	l16ui	a9, a7, 64
 1d7:	02b987        	bgeu	a9, a8, 1dd <Compile_GetSetGlobal+0x1dd>
			1d7: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x1dd
 1da:	003286        	j	2a8 <Compile_GetSetGlobal+0x2a8>
			1da: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x2a8
 1dd:	2e0782        	l8ui	a8, a7, 46
 1e0:	0c4856        	bnez	a8, 2a8 <Compile_GetSetGlobal+0x2a8>
			1e0: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x2a8
 1e3:	0000d1        	l32r	a13, fffc01e4 <Compile_GetSetGlobal+0xfffc01e4>
			1e3: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x1c
 1e6:	0000b1        	l32r	a11, fffc01e8 <Compile_GetSetGlobal+0xfffc01e8>
			1e6: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x14
 1e9:	0000a1        	l32r	a10, fffc01ec <Compile_GetSetGlobal+0xfffc01ec>
			1e9: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x18
 1ec:	d7a0c2        	movi	a12, 215
 1ef:	000081        	l32r	a8, fffc01f0 <Compile_GetSetGlobal+0xfffc01f0>
			1ef: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x6c
			1ef: R_XTENSA_ASM_EXPAND	printf
 1f2:	0008e0        	callx8	a8
 1f5:	211782        	l16ui	a8, a7, 66
 1f8:	ffab46        	j	a9 <Compile_GetSetGlobal+0xa9>
			1f8: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xa9
 1fb:	00          	.byte	00
 1fc:	00          	.byte	00
 1fd:	0000d1        	l32r	a13, fffc0200 <Compile_GetSetGlobal+0xfffc0200>
			1fd: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x20
 200:	0000b1        	l32r	a11, fffc0200 <Compile_GetSetGlobal+0xfffc0200>
			200: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x14
 203:	0000a1        	l32r	a10, fffc0204 <Compile_GetSetGlobal+0xfffc0204>
			203: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x18
 206:	07a1c2        	movi	a12, 0x107
 209:	000081        	l32r	a8, fffc020c <Compile_GetSetGlobal+0xfffc020c>
			209: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x70
			209: R_XTENSA_ASM_EXPAND	printf
 20c:	0008e0        	callx8	a8
 20f:	211782        	l16ui	a8, a7, 66
 212:	022687        	blt	a6, a8, 218 <Compile_GetSetGlobal+0x218>
			212: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x218
 215:	0025c6        	j	2b0 <Compile_GetSetGlobal+0x2b0>
			215: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x2b0
 218:	906670        	addx2	a6, a6, a7
 21b:	a81692        	l16ui	a9, a6, 0x150
 21e:	0000a1        	l32r	a10, fffc0220 <Compile_GetSetGlobal+0xfffc0220>
			21e: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x2c
 221:	02ba97        	bgeu	a10, a9, 227 <Compile_GetSetGlobal+0x227>
			221: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x227
 224:	ffa686        	j	c2 <Compile_GetSetGlobal+0xc2>
			224: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xc2
 227:	201792        	l16ui	a9, a7, 64
 22a:	02b987        	bgeu	a9, a8, 230 <Compile_GetSetGlobal+0x230>
			22a: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x230
 22d:	ff9e06        	j	a9 <Compile_GetSetGlobal+0xa9>
			22d: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xa9
 230:	2e07a2        	l8ui	a10, a7, 46
 233:	e72a56        	bnez	a10, a9 <Compile_GetSetGlobal+0xa9>
			233: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xa9
 236:	ffea46        	j	1e3 <Compile_GetSetGlobal+0x1e3>
			236: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x1e3
 239:	02b987        	bgeu	a9, a8, 23f <Compile_GetSetGlobal+0x23f>
			239: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x23f
 23c:	ffd346        	j	18d <Compile_GetSetGlobal+0x18d>
			23c: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x18d
 23f:	2e0792        	l8ui	a9, a7, 46
 242:	299c      	beqz.n	a9, 258 <Compile_GetSetGlobal+0x258>
			242: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x258
 244:	233380        	sext	a3, a3, 15
 247:	022387        	blt	a3, a8, 24d <Compile_GetSetGlobal+0x24d>
			247: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x24d
 24a:	ff8186        	j	54 <Compile_GetSetGlobal+0x54>
			24a: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x54
 24d:	00a022        	movi	a2, 0
 250:	e00396        	bltz	a3, 54 <Compile_GetSetGlobal+0x54>
			250: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x54
 253:	ffd806        	j	1b7 <Compile_GetSetGlobal+0x1b7>
			253: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x1b7
 256:	00          	.byte	00
 257:	00          	.byte	00
 258:	0000d1        	l32r	a13, fffc0258 <Compile_GetSetGlobal+0xfffc0258>
			258: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x1c
 25b:	0000b1        	l32r	a11, fffc025c <Compile_GetSetGlobal+0xfffc025c>
			25b: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x14
 25e:	0000a1        	l32r	a10, fffc0260 <Compile_GetSetGlobal+0xfffc0260>
			25e: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x18
 261:	d7a0c2        	movi	a12, 215
 264:	000081        	l32r	a8, fffc0264 <Compile_GetSetGlobal+0xfffc0264>
			264: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x74
			264: R_XTENSA_ASM_EXPAND	printf
 267:	0008e0        	callx8	a8
 26a:	211782        	l16ui	a8, a7, 66
 26d:	020c      	movi.n	a2, 0
 26f:	380b      	addi.n	a3, a8, -1
 271:	f43030        	extui	a3, a3, 0, 16
 274:	ffc546        	j	18d <Compile_GetSetGlobal+0x18d>
			274: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x18d
 277:	00          	.byte	00
 278:	0000d1        	l32r	a13, fffc0278 <Compile_GetSetGlobal+0xfffc0278>
			278: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x1c
 27b:	0000b1        	l32r	a11, fffc027c <Compile_GetSetGlobal+0xfffc027c>
			27b: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x14
 27e:	0000a1        	l32r	a10, fffc0280 <Compile_GetSetGlobal+0xfffc0280>
			27e: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x18
 281:	d7a0c2        	movi	a12, 215
 284:	000081        	l32r	a8, fffc0284 <Compile_GetSetGlobal+0xfffc0284>
			284: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x78
			284: R_XTENSA_ASM_EXPAND	printf
 287:	0008e0        	callx8	a8
 28a:	211782        	l16ui	a8, a7, 66
 28d:	ff7ec6        	j	8c <Compile_GetSetGlobal+0x8c>
			28d: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x8c
 290:	0000d1        	l32r	a13, fffc0290 <Compile_GetSetGlobal+0xfffc0290>
			290: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x10
 293:	0000b1        	l32r	a11, fffc0294 <Compile_GetSetGlobal+0xfffc0294>
			293: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x14
 296:	0000a1        	l32r	a10, fffc0298 <Compile_GetSetGlobal+0xfffc0298>
			296: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x18
 299:	b2a1c2        	movi	a12, 0x1b2
 29c:	000081        	l32r	a8, fffc029c <Compile_GetSetGlobal+0xfffc029c>
			29c: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x7c
			29c: R_XTENSA_ASM_EXPAND	printf
 29f:	0008e0        	callx8	a8
 2a2:	295632        	s16i	a3, a6, 82
 2a5:	ffaf46        	j	166 <Compile_GetSetGlobal+0x166>
			2a5: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x166
 2a8:	0000b1        	l32r	a11, fffc02a8 <Compile_GetSetGlobal+0xfffc02a8>
			2a8: R_XTENSA_SLOT0_OP	.literal.Compile_GetSetGlobal+0x28
 2ab:	ff82c6        	j	ba <Compile_GetSetGlobal+0xba>
			2ab: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xba
 2ae:	00          	.byte	00
 2af:	00          	.byte	00
 2b0:	201792        	l16ui	a9, a7, 64
 2b3:	023987        	bltu	a9, a8, 2b9 <Compile_GetSetGlobal+0x2b9>
			2b3: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x2b9
 2b6:	ffdd86        	j	230 <Compile_GetSetGlobal+0x230>
			2b6: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0x230
 2b9:	880b      	addi.n	a8, a8, -1
 2bb:	f49080        	extui	a9, a8, 0, 16
 2be:	ff7c86        	j	b4 <Compile_GetSetGlobal+0xb4>
			2be: R_XTENSA_SLOT0_OP	.text.Compile_GetSetGlobal+0xb4

Disassembly of section .text.Compile_Operator:

00000000 <Compile_Operator>:
   0:	004136        	entry	a1, 32
   3:	418830        	srli	a8, a3, 8
   6:	027d      	mov.n	a7, a2
   8:	118816        	beqz	a8, 124 <Compile_Operator+0x124>
			8: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x124
   b:	fca092        	movi	a9, 252
   e:	021897        	beq	a8, a9, 14 <Compile_Operator+0x14>
			e: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x14
  11:	004846        	j	136 <Compile_Operator+0x136>
			11: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x136
  14:	746030        	extui	a6, a3, 0, 8
  17:	c80c      	movi.n	a8, 12
  19:	02b867        	bgeu	a8, a6, 1f <Compile_Operator+0x1f>
			19: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x1f
  1c:	004586        	j	136 <Compile_Operator+0x136>
			1c: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x136
  1f:	000081        	l32r	a8, fffc0020 <Compile_Operator+0xfffc0020>
			1f: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x8
  22:	f06660        	subx8	a6, a6, a6
  25:	a06680        	addx4	a6, a6, a8
  28:	211782        	l16ui	a8, a7, 66
  2b:	0a0c      	movi.n	a10, 0
  2d:	389c      	beqz.n	a8, 44 <Compile_Operator+0x44>
			2d: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x44
  2f:	880b      	addi.n	a8, a8, -1
  31:	201792        	l16ui	a9, a7, 64
  34:	f48080        	extui	a8, a8, 0, 16
  37:	093897        	bltu	a8, a9, 44 <Compile_Operator+0x44>
			37: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x44
  3a:	878a      	add.n	a8, a7, a8
  3c:	50a392        	movi	a9, 0x350
  3f:	889a      	add.n	a8, a8, a9
  41:	0008a2        	l8ui	a10, a8, 0
  44:	000081        	l32r	a8, fffc0044 <Compile_Operator+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x38
			44: R_XTENSA_ASM_EXPAND	IsFpType
  47:	0008e0        	callx8	a8
  4a:	0eea56        	bnez	a10, 13c <Compile_Operator+0x13c>
			4a: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x13c
  4d:	0406a2        	l8ui	a10, a6, 4
  50:	211782        	l16ui	a8, a7, 66
  53:	201792        	l16ui	a9, a7, 64
  56:	077a56        	bnez	a10, d1 <Compile_Operator+0xd1>
			56: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xd1
  59:	02b987        	bgeu	a9, a8, 5f <Compile_Operator+0x5f>
			59: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x5f
  5c:	004446        	j	171 <Compile_Operator+0x171>
			5c: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x171
  5f:	2e0792        	l8ui	a9, a7, 46
  62:	0f6916        	beqz	a9, 15c <Compile_Operator+0x15c>
			62: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x15c
  65:	380b      	addi.n	a3, a8, -1
  67:	233380        	sext	a3, a3, 15
  6a:	02a387        	bge	a3, a8, 70 <Compile_Operator+0x70>
			6a: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x70
  6d:	12c3d6        	bgez	a3, 19d <Compile_Operator+0x19d>
			6d: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x19d
  70:	0506b2        	l8ui	a11, a6, 5
  73:	20a770        	or	a10, a7, a7
  76:	000081        	l32r	a8, fffc0078 <Compile_Operator+0xfffc0078>
			76: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x3c
			76: R_XTENSA_ASM_EXPAND	.text.PreserveRegisterIfOccupied
  79:	0008e0        	callx8	a8
  7c:	0a0a56        	bnez	a10, 120 <Compile_Operator+0x120>
			7c: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x120
  7f:	3628      	l32i.n	a2, a6, 12
  81:	098216        	beqz	a2, 11d <Compile_Operator+0x11d>
			81: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x11d
  84:	02bd      	mov.n	a11, a2
  86:	07ad      	mov.n	a10, a7
  88:	000081        	l32r	a8, fffc0088 <Compile_Operator+0xfffc0088>
			88: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x40
			88: R_XTENSA_ASM_EXPAND	.text.EmitOp
  8b:	0008e0        	callx8	a8
  8e:	08ea56        	bnez	a10, 120 <Compile_Operator+0x120>
			8e: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x120
  91:	211782        	l16ui	a8, a7, 66
  94:	201792        	l16ui	a9, a7, 64
  97:	053987        	bltu	a9, a8, a0 <Compile_Operator+0xa0>
			97: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xa0
  9a:	2e07a2        	l8ui	a10, a7, 46
  9d:	353a16        	beqz	a10, 3f4 <Compile_Operator+0x3f4>
			9d: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x3f4
  a0:	980b      	addi.n	a9, a8, -1
  a2:	233980        	sext	a3, a9, 15
  a5:	02a387        	bge	a3, a8, ab <Compile_Operator+0xab>
			a5: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xab
  a8:	004146        	j	1b1 <Compile_Operator+0x1b1>
			a8: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x1b1
  ab:	2e07a2        	l8ui	a10, a7, 46
  ae:	12ba16        	beqz	a10, 1dd <Compile_Operator+0x1dd>
			ae: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x1dd
  b1:	2017b2        	l16ui	a11, a7, 64
  b4:	f49090        	extui	a9, a9, 0, 16
  b7:	0d3b87        	bltu	a11, a8, c8 <Compile_Operator+0xc8>
			b7: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xc8
  ba:	105a16        	beqz	a10, 1c3 <Compile_Operator+0x1c3>
			ba: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x1c3
  bd:	880b      	addi.n	a8, a8, -1
  bf:	f49080        	extui	a9, a8, 0, 16
  c2:	0268f7        	bbci	a8, 15, c8 <Compile_Operator+0xc8>
			c2: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xc8
  c5:	00a606        	j	361 <Compile_Operator+0x361>
			c5: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x361
  c8:	909970        	addx2	a9, a9, a7
  cb:	a819b2        	l16ui	a11, a9, 0x150
  ce:	00a486        	j	364 <Compile_Operator+0x364>
			ce: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x364
  d1:	053987        	bltu	a9, a8, da <Compile_Operator+0xda>
			d1: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xda
  d4:	2e0792        	l8ui	a9, a7, 46
  d7:	26d916        	beqz	a9, 348 <Compile_Operator+0x348>
			d7: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x348
  da:	ffc822        	addi	a2, a8, -1
  dd:	232280        	sext	a2, a2, 15
  e0:	02a287        	bge	a2, a8, e6 <Compile_Operator+0xe6>
			e0: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xe6
  e3:	006346        	j	274 <Compile_Operator+0x274>
			e3: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x274
  e6:	2e0792        	l8ui	a9, a7, 46
  e9:	1f0916        	beqz	a9, 2dd <Compile_Operator+0x2dd>
			e9: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x2dd
  ec:	201792        	l16ui	a9, a7, 64
  ef:	02b987        	bgeu	a9, a8, f5 <Compile_Operator+0xf5>
			ef: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xf5
  f2:	006706        	j	292 <Compile_Operator+0x292>
			f2: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x292
  f5:	2e0792        	l8ui	a9, a7, 46
  f8:	181916        	beqz	a9, 27d <Compile_Operator+0x27d>
			f8: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x27d
  fb:	380b      	addi.n	a3, a8, -1
  fd:	233380        	sext	a3, a3, 15
 100:	ffc332        	addi	a3, a3, -1
 103:	02a387        	bge	a3, a8, 109 <Compile_Operator+0x109>
			103: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x109
 106:	009986        	j	370 <Compile_Operator+0x370>
			106: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x370
 109:	0506b2        	l8ui	a11, a6, 5
 10c:	20a770        	or	a10, a7, a7
 10f:	000081        	l32r	a8, fffc0110 <Compile_Operator+0xfffc0110>
			10f: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x44
			10f: R_XTENSA_ASM_EXPAND	.text.PreserveRegisterIfOccupied
 112:	0008e0        	callx8	a8
 115:	7acc      	bnez.n	a10, 120 <Compile_Operator+0x120>
			115: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x120
 117:	042622        	l32i	a2, a6, 16
 11a:	f66256        	bnez	a2, 84 <Compile_Operator+0x84>
			11a: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x84
 11d:	0000a1        	l32r	a10, fffc0120 <Compile_Operator+0xfffc0120>
			11d: R_XTENSA_SLOT0_OP	.literal.Compile_Operator
 120:	0a2d      	mov.n	a2, a10
 122:	f01d      	retw.n
 124:	000091        	l32r	a9, fffc0124 <Compile_Operator+0xfffc0124>
			124: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x4
 127:	f06330        	subx8	a6, a3, a3
 12a:	f2a082        	movi	a8, 242
 12d:	a06690        	addx4	a6, a6, a9
 130:	023837        	bltu	a8, a3, 136 <Compile_Operator+0x136>
			130: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x136
 133:	ffbc46        	j	28 <Compile_Operator+0x28>
			133: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x28
 136:	0a0c      	movi.n	a10, 0
 138:	fff906        	j	120 <Compile_Operator+0x120>
			138: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x120
 13b:	00          	.byte	00
 13c:	0506a2        	l8ui	a10, a6, 5
 13f:	000081        	l32r	a8, fffc0140 <Compile_Operator+0xfffc0140>
			13f: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x48
			13f: R_XTENSA_ASM_EXPAND	IsIntType
 142:	0008e0        	callx8	a8
 145:	f04a16        	beqz	a10, 4d <Compile_Operator+0x4d>
			145: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x4d
 148:	0506b2        	l8ui	a11, a6, 5
 14b:	20a770        	or	a10, a7, a7
 14e:	000081        	l32r	a8, fffc0150 <Compile_Operator+0xfffc0150>
			14e: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x4c
			14e: R_XTENSA_ASM_EXPAND	.text.PreserveRegisterIfOccupied
 151:	0008e0        	callx8	a8
 154:	ef5a16        	beqz	a10, 4d <Compile_Operator+0x4d>
			154: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x4d
 157:	fff146        	j	120 <Compile_Operator+0x120>
			157: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x120
 15a:	00          	.byte	00
 15b:	00          	.byte	00
 15c:	0000d1        	l32r	a13, fffc015c <Compile_Operator+0xfffc015c>
			15c: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0xc
 15f:	0000b1        	l32r	a11, fffc0160 <Compile_Operator+0xfffc0160>
			15f: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 162:	0000a1        	l32r	a10, fffc0164 <Compile_Operator+0xfffc0164>
			162: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 165:	d7a0c2        	movi	a12, 215
 168:	000081        	l32r	a8, fffc0168 <Compile_Operator+0xfffc0168>
			168: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x50
			168: R_XTENSA_ASM_EXPAND	printf
 16b:	0008e0        	callx8	a8
 16e:	211782        	l16ui	a8, a7, 66
 171:	380b      	addi.n	a3, a8, -1
 173:	233380        	sext	a3, a3, 15
 176:	02a387        	bge	a3, a8, 17c <Compile_Operator+0x17c>
			176: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x17c
 179:	ffbc06        	j	6d <Compile_Operator+0x6d>
			179: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x6d
 17c:	2e0782        	l8ui	a8, a7, 46
 17f:	eed856        	bnez	a8, 70 <Compile_Operator+0x70>
			17f: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x70
 182:	0000d1        	l32r	a13, fffc0184 <Compile_Operator+0xfffc0184>
			182: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x18
 185:	0000b1        	l32r	a11, fffc0188 <Compile_Operator+0xfffc0188>
			185: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 188:	0000a1        	l32r	a10, fffc0188 <Compile_Operator+0xfffc0188>
			188: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 18b:	07a1c2        	movi	a12, 0x107
 18e:	000081        	l32r	a8, fffc0190 <Compile_Operator+0xfffc0190>
			18e: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x54
			18e: R_XTENSA_ASM_EXPAND	printf
 191:	0008e0        	callx8	a8
 194:	211782        	l16ui	a8, a7, 66
 197:	022387        	blt	a3, a8, 19d <Compile_Operator+0x19d>
			197: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x19d
 19a:	ffb486        	j	70 <Compile_Operator+0x70>
			19a: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x70
 19d:	903370        	addx2	a3, a3, a7
 1a0:	a81382        	l16ui	a8, a3, 0x150
 1a3:	000091        	l32r	a9, fffc01a4 <Compile_Operator+0xfffc01a4>
			1a3: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x30
 1a6:	023987        	bltu	a9, a8, 1ac <Compile_Operator+0x1ac>
			1a6: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x1ac
 1a9:	ffb0c6        	j	70 <Compile_Operator+0x70>
			1a9: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x70
 1ac:	2628      	l32i.n	a2, a6, 8
 1ae:	ffb3c6        	j	81 <Compile_Operator+0x81>
			1ae: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x81
 1b1:	0433d6        	bgez	a3, 1f8 <Compile_Operator+0x1f8>
			1b1: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x1f8
 1b4:	201792        	l16ui	a9, a7, 64
 1b7:	02b987        	bgeu	a9, a8, 1bd <Compile_Operator+0x1bd>
			1b7: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x1bd
 1ba:	0068c6        	j	361 <Compile_Operator+0x361>
			1ba: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x361
 1bd:	2e0782        	l8ui	a8, a7, 46
 1c0:	19d856        	bnez	a8, 361 <Compile_Operator+0x361>
			1c0: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x361
 1c3:	0000d1        	l32r	a13, fffc01c4 <Compile_Operator+0xfffc01c4>
			1c3: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0xc
 1c6:	0000b1        	l32r	a11, fffc01c8 <Compile_Operator+0xfffc01c8>
			1c6: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 1c9:	0000a1        	l32r	a10, fffc01cc <Compile_Operator+0xfffc01cc>
			1c9: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 1cc:	d7a0c2        	movi	a12, 215
 1cf:	000081        	l32r	a8, fffc01d0 <Compile_Operator+0xfffc01d0>
			1cf: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x58
			1cf: R_XTENSA_ASM_EXPAND	printf
 1d2:	0008e0        	callx8	a8
 1d5:	211782        	l16ui	a8, a7, 66
 1d8:	ffb846        	j	bd <Compile_Operator+0xbd>
			1d8: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xbd
 1db:	00          	.byte	00
 1dc:	00          	.byte	00
 1dd:	0000d1        	l32r	a13, fffc01e0 <Compile_Operator+0xfffc01e0>
			1dd: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x18
 1e0:	0000b1        	l32r	a11, fffc01e0 <Compile_Operator+0xfffc01e0>
			1e0: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 1e3:	0000a1        	l32r	a10, fffc01e4 <Compile_Operator+0xfffc01e4>
			1e3: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 1e6:	07a1c2        	movi	a12, 0x107
 1e9:	000081        	l32r	a8, fffc01ec <Compile_Operator+0xfffc01ec>
			1e9: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x5c
			1e9: R_XTENSA_ASM_EXPAND	printf
 1ec:	0008e0        	callx8	a8
 1ef:	211782        	l16ui	a8, a7, 66
 1f2:	022387        	blt	a3, a8, 1f8 <Compile_Operator+0x1f8>
			1f2: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x1f8
 1f5:	00b4c6        	j	4cc <Compile_Operator+0x4cc>
			1f5: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x4cc
 1f8:	903370        	addx2	a3, a3, a7
 1fb:	a81392        	l16ui	a9, a3, 0x150
 1fe:	0000a1        	l32r	a10, fffc0200 <Compile_Operator+0xfffc0200>
			1fe: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x30
 201:	023a97        	bltu	a10, a9, 207 <Compile_Operator+0x207>
			201: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x207
 204:	00ba06        	j	4f0 <Compile_Operator+0x4f0>
			204: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x4f0
 207:	20a770        	or	a10, a7, a7
 20a:	000081        	l32r	a8, fffc020c <Compile_Operator+0xfffc020c>
			20a: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x60
			20a: R_XTENSA_ASM_EXPAND	.text.Pop
 20d:	0008e0        	callx8	a8
 210:	f0ca56        	bnez	a10, 120 <Compile_Operator+0x120>
			210: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x120
 213:	040682        	l8ui	a8, a6, 4
 216:	026877        	bbci	a8, 7, 21c <Compile_Operator+0x21c>
			216: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x21c
 219:	005706        	j	379 <Compile_Operator+0x379>
			219: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x379
 21c:	050662        	l8ui	a6, a6, 5
 21f:	f13616        	beqz	a6, 136 <Compile_Operator+0x136>
			21f: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x136
 222:	06ad      	mov.n	a10, a6
 224:	000081        	l32r	a8, fffc0224 <Compile_Operator+0xfffc0224>
			224: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x64
			224: R_XTENSA_ASM_EXPAND	IsFpType
 227:	0008e0        	callx8	a8
 22a:	211782        	l16ui	a8, a7, 66
 22d:	1b0c      	movi.n	a11, 1
 22f:	581b      	addi.n	a5, a8, 1
 231:	090c      	movi.n	a9, 0
 233:	0000d1        	l32r	a13, fffc0234 <Compile_Operator+0xfffc0234>
			233: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x28
 236:	f45050        	extui	a5, a5, 0, 16
 239:	939ba0        	movnez	a9, a11, a10
 23c:	0000b1        	l32r	a11, fffc023c <Compile_Operator+0xfffc023c>
			23c: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x24
 23f:	215752        	s16i	a5, a7, 66
 242:	ffa0c2        	movi	a12, 255
 245:	93bda0        	movnez	a11, a13, a10
 248:	02bc87        	bgeu	a12, a8, 24e <Compile_Operator+0x24e>
			248: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x24e
 24b:	ffb9c6        	j	136 <Compile_Operator+0x136>
			24b: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x136
 24e:	90a870        	addx2	a10, a8, a7
 251:	a85ab2        	s16i	a11, a10, 0x150
 254:	878a      	add.n	a8, a7, a8
 256:	50a3a2        	movi	a10, 0x350
 259:	88aa      	add.n	a8, a8, a10
 25b:	909970        	addx2	a9, a9, a7
 25e:	004862        	s8i	a6, a8, 0
 261:	06d972        	addmi	a7, a9, 0x600
 264:	291782        	l16ui	a8, a7, 82
 267:	209856        	bnez	a8, 474 <Compile_Operator+0x474>
			267: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x474
 26a:	295752        	s16i	a5, a7, 82
 26d:	0a0c      	movi.n	a10, 0
 26f:	ffab46        	j	120 <Compile_Operator+0x120>
			26f: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x120
 272:	00          	.byte	00
 273:	00          	.byte	00
 274:	0802d6        	bgez	a2, 2f8 <Compile_Operator+0x2f8>
			274: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x2f8
 277:	201792        	l16ui	a9, a7, 64
 27a:	ff9c46        	j	ef <Compile_Operator+0xef>
			27a: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xef
 27d:	0000d1        	l32r	a13, fffc0280 <Compile_Operator+0xfffc0280>
			27d: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0xc
 280:	0000b1        	l32r	a11, fffc0280 <Compile_Operator+0xfffc0280>
			280: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 283:	0000a1        	l32r	a10, fffc0284 <Compile_Operator+0xfffc0284>
			283: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 286:	d7a0c2        	movi	a12, 215
 289:	000081        	l32r	a8, fffc028c <Compile_Operator+0xfffc028c>
			289: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x68
			289: R_XTENSA_ASM_EXPAND	printf
 28c:	0008e0        	callx8	a8
 28f:	211782        	l16ui	a8, a7, 66
 292:	380b      	addi.n	a3, a8, -1
 294:	233380        	sext	a3, a3, 15
 297:	ffc332        	addi	a3, a3, -1
 29a:	02a387        	bge	a3, a8, 2a0 <Compile_Operator+0x2a0>
			29a: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x2a0
 29d:	0033c6        	j	370 <Compile_Operator+0x370>
			29d: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x370
 2a0:	2e0782        	l8ui	a8, a7, 46
 2a3:	e62856        	bnez	a8, 109 <Compile_Operator+0x109>
			2a3: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x109
 2a6:	0000d1        	l32r	a13, fffc02a8 <Compile_Operator+0xfffc02a8>
			2a6: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x18
 2a9:	0000b1        	l32r	a11, fffc02ac <Compile_Operator+0xfffc02ac>
			2a9: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 2ac:	0000a1        	l32r	a10, fffc02ac <Compile_Operator+0xfffc02ac>
			2ac: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 2af:	07a1c2        	movi	a12, 0x107
 2b2:	000081        	l32r	a8, fffc02b4 <Compile_Operator+0xfffc02b4>
			2b2: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x6c
			2b2: R_XTENSA_ASM_EXPAND	printf
 2b5:	0008e0        	callx8	a8
 2b8:	211782        	l16ui	a8, a7, 66
 2bb:	022387        	blt	a3, a8, 2c1 <Compile_Operator+0x2c1>
			2bb: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x2c1
 2be:	ff91c6        	j	109 <Compile_Operator+0x109>
			2be: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x109
 2c1:	903370        	addx2	a3, a3, a7
 2c4:	a81382        	l16ui	a8, a3, 0x150
 2c7:	000091        	l32r	a9, fffc02c8 <Compile_Operator+0xfffc02c8>
			2c7: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x30
 2ca:	023987        	bltu	a9, a8, 2d0 <Compile_Operator+0x2d0>
			2ca: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x2d0
 2cd:	ff8e06        	j	109 <Compile_Operator+0x109>
			2cd: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x109
 2d0:	3628      	l32i.n	a2, a6, 12
 2d2:	dae256        	bnez	a2, 84 <Compile_Operator+0x84>
			2d2: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x84
 2d5:	2628      	l32i.n	a2, a6, 8
 2d7:	ff6986        	j	81 <Compile_Operator+0x81>
			2d7: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x81
 2da:	00          	.byte	00
 2db:	00          	.byte	00
 2dc:	00          	.byte	00
 2dd:	0000d1        	l32r	a13, fffc02e0 <Compile_Operator+0xfffc02e0>
			2dd: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x18
 2e0:	0000b1        	l32r	a11, fffc02e0 <Compile_Operator+0xfffc02e0>
			2e0: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 2e3:	0000a1        	l32r	a10, fffc02e4 <Compile_Operator+0xfffc02e4>
			2e3: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 2e6:	07a1c2        	movi	a12, 0x107
 2e9:	000081        	l32r	a8, fffc02ec <Compile_Operator+0xfffc02ec>
			2e9: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x70
			2e9: R_XTENSA_ASM_EXPAND	printf
 2ec:	0008e0        	callx8	a8
 2ef:	211782        	l16ui	a8, a7, 66
 2f2:	022287        	blt	a2, a8, 2f8 <Compile_Operator+0x2f8>
			2f2: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x2f8
 2f5:	ff7cc6        	j	ec <Compile_Operator+0xec>
			2f5: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xec
 2f8:	902270        	addx2	a2, a2, a7
 2fb:	a812a2        	l16ui	a10, a2, 0x150
 2fe:	0000b1        	l32r	a11, fffc0300 <Compile_Operator+0xfffc0300>
			2fe: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x30
 301:	201792        	l16ui	a9, a7, 64
 304:	023ba7        	bltu	a11, a10, 30a <Compile_Operator+0x30a>
			304: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x30a
 307:	ff7906        	j	ef <Compile_Operator+0xef>
			307: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xef
 30a:	2628      	l32i.n	a2, a6, 8
 30c:	02b987        	bgeu	a9, a8, 312 <Compile_Operator+0x312>
			30c: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x312
 30f:	002b86        	j	3c1 <Compile_Operator+0x3c1>
			30f: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x3c1
 312:	2e0792        	l8ui	a9, a7, 46
 315:	093916        	beqz	a9, 3ac <Compile_Operator+0x3ac>
			315: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x3ac
 318:	580b      	addi.n	a5, a8, -1
 31a:	235580        	sext	a5, a5, 15
 31d:	550b      	addi.n	a5, a5, -1
 31f:	022587        	blt	a5, a8, 325 <Compile_Operator+0x325>
			31f: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x325
 322:	ff56c6        	j	81 <Compile_Operator+0x81>
			322: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x81
 325:	d58596        	bltz	a5, 81 <Compile_Operator+0x81>
			325: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x81
 328:	905570        	addx2	a5, a5, a7
 32b:	a81582        	l16ui	a8, a5, 0x150
 32e:	000091        	l32r	a9, fffc0330 <Compile_Operator+0xfffc0330>
			32e: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x30
 331:	023987        	bltu	a9, a8, 337 <Compile_Operator+0x337>
			331: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x337
 334:	ff5246        	j	81 <Compile_Operator+0x81>
			334: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x81
 337:	c8c332        	addi	a3, a3, -56
 33a:	f43030        	extui	a3, a3, 0, 16
 33d:	0223b6        	bltui	a3, 2, 343 <Compile_Operator+0x343>
			33d: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x343
 340:	005206        	j	48c <Compile_Operator+0x48c>
			340: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x48c
 343:	5628      	l32i.n	a2, a6, 20
 345:	ff4e06        	j	81 <Compile_Operator+0x81>
			345: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x81
 348:	0000d1        	l32r	a13, fffc0348 <Compile_Operator+0xfffc0348>
			348: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0xc
 34b:	0000b1        	l32r	a11, fffc034c <Compile_Operator+0xfffc034c>
			34b: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 34e:	0000a1        	l32r	a10, fffc0350 <Compile_Operator+0xfffc0350>
			34e: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 351:	d7a0c2        	movi	a12, 215
 354:	000081        	l32r	a8, fffc0354 <Compile_Operator+0xfffc0354>
			354: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x74
			354: R_XTENSA_ASM_EXPAND	printf
 357:	0008e0        	callx8	a8
 35a:	211782        	l16ui	a8, a7, 66
 35d:	ff5e46        	j	da <Compile_Operator+0xda>
			35d: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xda
 360:	00          	.byte	00
 361:	0000b1        	l32r	a11, fffc0364 <Compile_Operator+0xfffc0364>
			361: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x2c
 364:	d7a8      	l32i.n	a10, a7, 52
 366:	000081        	l32r	a8, fffc0368 <Compile_Operator+0xfffc0368>
			366: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x78
			366: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 369:	0008e0        	callx8	a8
 36c:	ffa5c6        	j	207 <Compile_Operator+0x207>
			36c: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x207
 36f:	00          	.byte	00
 370:	d95396        	bltz	a3, 109 <Compile_Operator+0x109>
			370: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x109
 373:	ffd286        	j	2c1 <Compile_Operator+0x2c1>
			373: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x2c1
 376:	00          	.byte	00
 377:	00          	.byte	00
 378:	00          	.byte	00
 379:	211782        	l16ui	a8, a7, 66
 37c:	201792        	l16ui	a9, a7, 64
 37f:	053987        	bltu	a9, a8, 388 <Compile_Operator+0x388>
			37f: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x388
 382:	2e0792        	l8ui	a9, a7, 46
 385:	11b916        	beqz	a9, 4a4 <Compile_Operator+0x4a4>
			385: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x4a4
 388:	980b      	addi.n	a9, a8, -1
 38a:	235980        	sext	a5, a9, 15
 38d:	7b2587        	blt	a5, a8, 40c <Compile_Operator+0x40c>
			38d: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x40c
 390:	2e0782        	l8ui	a8, a7, 46
 393:	f49090        	extui	a9, a9, 0, 16
 396:	0a7816        	beqz	a8, 441 <Compile_Operator+0x441>
			396: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x441
 399:	909970        	addx2	a9, a9, a7
 39c:	a819b2        	l16ui	a11, a9, 0x150
 39f:	0d27a2        	l32i	a10, a7, 52
 3a2:	000081        	l32r	a8, fffc03a4 <Compile_Operator+0xfffc03a4>
			3a2: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x7c
			3a2: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 3a5:	0008e0        	callx8	a8
 3a8:	002e46        	j	465 <Compile_Operator+0x465>
			3a8: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x465
 3ab:	00          	.byte	00
 3ac:	0000d1        	l32r	a13, fffc03ac <Compile_Operator+0xfffc03ac>
			3ac: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0xc
 3af:	0000b1        	l32r	a11, fffc03b0 <Compile_Operator+0xfffc03b0>
			3af: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 3b2:	0000a1        	l32r	a10, fffc03b4 <Compile_Operator+0xfffc03b4>
			3b2: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 3b5:	d7a0c2        	movi	a12, 215
 3b8:	000081        	l32r	a8, fffc03b8 <Compile_Operator+0xfffc03b8>
			3b8: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x80
			3b8: R_XTENSA_ASM_EXPAND	printf
 3bb:	0008e0        	callx8	a8
 3be:	211782        	l16ui	a8, a7, 66
 3c1:	ffc852        	addi	a5, a8, -1
 3c4:	235580        	sext	a5, a5, 15
 3c7:	ffc552        	addi	a5, a5, -1
 3ca:	02a587        	bge	a5, a8, 3d0 <Compile_Operator+0x3d0>
			3ca: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x3d0
 3cd:	ffd506        	j	325 <Compile_Operator+0x325>
			3cd: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x325
 3d0:	2e0782        	l8ui	a8, a7, 46
 3d3:	caa856        	bnez	a8, 81 <Compile_Operator+0x81>
			3d3: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x81
 3d6:	0000d1        	l32r	a13, fffc03d8 <Compile_Operator+0xfffc03d8>
			3d6: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x18
 3d9:	0000b1        	l32r	a11, fffc03dc <Compile_Operator+0xfffc03dc>
			3d9: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 3dc:	0000a1        	l32r	a10, fffc03dc <Compile_Operator+0xfffc03dc>
			3dc: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 3df:	07a1c2        	movi	a12, 0x107
 3e2:	000081        	l32r	a8, fffc03e4 <Compile_Operator+0xfffc03e4>
			3e2: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x84
			3e2: R_XTENSA_ASM_EXPAND	printf
 3e5:	0008e0        	callx8	a8
 3e8:	211782        	l16ui	a8, a7, 66
 3eb:	02a587        	bge	a5, a8, 3f1 <Compile_Operator+0x3f1>
			3eb: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x3f1
 3ee:	ffcd86        	j	328 <Compile_Operator+0x328>
			3ee: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x328
 3f1:	ff2306        	j	81 <Compile_Operator+0x81>
			3f1: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x81
 3f4:	0000d1        	l32r	a13, fffc03f4 <Compile_Operator+0xfffc03f4>
			3f4: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0xc
 3f7:	0000b1        	l32r	a11, fffc03f8 <Compile_Operator+0xfffc03f8>
			3f7: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 3fa:	0000a1        	l32r	a10, fffc03fc <Compile_Operator+0xfffc03fc>
			3fa: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 3fd:	d7a0c2        	movi	a12, 215
 400:	000081        	l32r	a8, fffc0400 <Compile_Operator+0xfffc0400>
			400: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x88
			400: R_XTENSA_ASM_EXPAND	printf
 403:	0008e0        	callx8	a8
 406:	211782        	l16ui	a8, a7, 66
 409:	ff24c6        	j	a0 <Compile_Operator+0xa0>
			409: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xa0
 40c:	0495d6        	bgez	a5, 459 <Compile_Operator+0x459>
			40c: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x459
 40f:	201792        	l16ui	a9, a7, 64
 412:	253987        	bltu	a9, a8, 43b <Compile_Operator+0x43b>
			412: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x43b
 415:	2e0782        	l8ui	a8, a7, 46
 418:	01f856        	bnez	a8, 43b <Compile_Operator+0x43b>
			418: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x43b
 41b:	0000d1        	l32r	a13, fffc041c <Compile_Operator+0xfffc041c>
			41b: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0xc
 41e:	0000b1        	l32r	a11, fffc0420 <Compile_Operator+0xfffc0420>
			41e: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 421:	0000a1        	l32r	a10, fffc0424 <Compile_Operator+0xfffc0424>
			421: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 424:	d7a0c2        	movi	a12, 215
 427:	000081        	l32r	a8, fffc0428 <Compile_Operator+0xfffc0428>
			427: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x8c
			427: R_XTENSA_ASM_EXPAND	printf
 42a:	0008e0        	callx8	a8
 42d:	211782        	l16ui	a8, a7, 66
 430:	880b      	addi.n	a8, a8, -1
 432:	f49080        	extui	a9, a8, 0, 16
 435:	02e8f7        	bbsi	a8, 15, 43b <Compile_Operator+0x43b>
			435: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x43b
 438:	ffd746        	j	399 <Compile_Operator+0x399>
			438: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x399
 43b:	0000b1        	l32r	a11, fffc043c <Compile_Operator+0xfffc043c>
			43b: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x2c
 43e:	ffd746        	j	39f <Compile_Operator+0x39f>
			43e: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x39f
 441:	0000d1        	l32r	a13, fffc0444 <Compile_Operator+0xfffc0444>
			441: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x18
 444:	0000b1        	l32r	a11, fffc0444 <Compile_Operator+0xfffc0444>
			444: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 447:	0000a1        	l32r	a10, fffc0448 <Compile_Operator+0xfffc0448>
			447: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 44a:	07a1c2        	movi	a12, 0x107
 44d:	000081        	l32r	a8, fffc0450 <Compile_Operator+0xfffc0450>
			44d: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x90
			44d: R_XTENSA_ASM_EXPAND	printf
 450:	0008e0        	callx8	a8
 453:	211782        	l16ui	a8, a7, 66
 456:	62a587        	bge	a5, a8, 4bc <Compile_Operator+0x4bc>
			456: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x4bc
 459:	905570        	addx2	a5, a5, a7
 45c:	a81592        	l16ui	a9, a5, 0x150
 45f:	0000a1        	l32r	a10, fffc0460 <Compile_Operator+0xfffc0460>
			45f: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x30
 462:	76ba97        	bgeu	a10, a9, 4dc <Compile_Operator+0x4dc>
			462: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x4dc
 465:	07ad      	mov.n	a10, a7
 467:	000081        	l32r	a8, fffc0468 <Compile_Operator+0xfffc0468>
			467: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x94
			467: R_XTENSA_ASM_EXPAND	.text.Pop
 46a:	0008e0        	callx8	a8
 46d:	daba16        	beqz	a10, 21c <Compile_Operator+0x21c>
			46d: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x21c
 470:	ff2b06        	j	120 <Compile_Operator+0x120>
			470: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x120
 473:	00          	.byte	00
 474:	0000d1        	l32r	a13, fffc0474 <Compile_Operator+0xfffc0474>
			474: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x20
 477:	0000b1        	l32r	a11, fffc0478 <Compile_Operator+0xfffc0478>
			477: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 47a:	0000a1        	l32r	a10, fffc047c <Compile_Operator+0xfffc047c>
			47a: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 47d:	b2a1c2        	movi	a12, 0x1b2
 480:	000081        	l32r	a8, fffc0480 <Compile_Operator+0xfffc0480>
			480: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x98
			480: R_XTENSA_ASM_EXPAND	printf
 483:	0008e0        	callx8	a8
 486:	295752        	s16i	a5, a7, 82
 489:	ff7806        	j	26d <Compile_Operator+0x26d>
			489: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x26d
 48c:	0000d1        	l32r	a13, fffc048c <Compile_Operator+0xfffc048c>
			48c: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x1c
 48f:	0000c1        	l32r	a12, fffc0490 <Compile_Operator+0xfffc0490>
			48f: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x34
 492:	0000b1        	l32r	a11, fffc0494 <Compile_Operator+0xfffc0494>
			492: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 495:	0000a1        	l32r	a10, fffc0498 <Compile_Operator+0xfffc0498>
			495: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 498:	000081        	l32r	a8, fffc0498 <Compile_Operator+0xfffc0498>
			498: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x9c
			498: R_XTENSA_ASM_EXPAND	printf
 49b:	0008e0        	callx8	a8
 49e:	5628      	l32i.n	a2, a6, 20
 4a0:	fef746        	j	81 <Compile_Operator+0x81>
			4a0: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x81
 4a3:	00          	.byte	00
 4a4:	0000d1        	l32r	a13, fffc04a4 <Compile_Operator+0xfffc04a4>
			4a4: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0xc
 4a7:	0000b1        	l32r	a11, fffc04a8 <Compile_Operator+0xfffc04a8>
			4a7: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x10
 4aa:	0000a1        	l32r	a10, fffc04ac <Compile_Operator+0xfffc04ac>
			4aa: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0x14
 4ad:	d7a0c2        	movi	a12, 215
 4b0:	000081        	l32r	a8, fffc04b0 <Compile_Operator+0xfffc04b0>
			4b0: R_XTENSA_SLOT0_OP	.literal.Compile_Operator+0xa0
			4b0: R_XTENSA_ASM_EXPAND	printf
 4b3:	0008e0        	callx8	a8
 4b6:	211782        	l16ui	a8, a7, 66
 4b9:	ffb2c6        	j	388 <Compile_Operator+0x388>
			4b9: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x388
 4bc:	201792        	l16ui	a9, a7, 64
 4bf:	22b987        	bgeu	a9, a8, 4e5 <Compile_Operator+0x4e5>
			4bf: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x4e5
 4c2:	880b      	addi.n	a8, a8, -1
 4c4:	f49080        	extui	a9, a8, 0, 16
 4c7:	ffb386        	j	399 <Compile_Operator+0x399>
			4c7: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x399
 4ca:	00          	.byte	00
 4cb:	00          	.byte	00
 4cc:	201792        	l16ui	a9, a7, 64
 4cf:	26b987        	bgeu	a9, a8, 4f9 <Compile_Operator+0x4f9>
			4cf: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x4f9
 4d2:	880b      	addi.n	a8, a8, -1
 4d4:	f49080        	extui	a9, a8, 0, 16
 4d7:	fefb46        	j	c8 <Compile_Operator+0xc8>
			4d7: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xc8
 4da:	00          	.byte	00
 4db:	00          	.byte	00
 4dc:	201792        	l16ui	a9, a7, 64
 4df:	02b987        	bgeu	a9, a8, 4e5 <Compile_Operator+0x4e5>
			4df: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x4e5
 4e2:	ffd286        	j	430 <Compile_Operator+0x430>
			4e2: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x430
 4e5:	2e0792        	l8ui	a9, a7, 46
 4e8:	f44956        	bnez	a9, 430 <Compile_Operator+0x430>
			4e8: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x430
 4eb:	ffcb06        	j	41b <Compile_Operator+0x41b>
			4eb: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x41b
 4ee:	00          	.byte	00
 4ef:	00          	.byte	00
 4f0:	201792        	l16ui	a9, a7, 64
 4f3:	02b987        	bgeu	a9, a8, 4f9 <Compile_Operator+0x4f9>
			4f3: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x4f9
 4f6:	fef0c6        	j	bd <Compile_Operator+0xbd>
			4f6: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xbd
 4f9:	2e07a2        	l8ui	a10, a7, 46
 4fc:	bbda56        	bnez	a10, bd <Compile_Operator+0xbd>
			4fc: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0xbd
 4ff:	ff3006        	j	1c3 <Compile_Operator+0x1c3>
			4ff: R_XTENSA_SLOT0_OP	.text.Compile_Operator+0x1c3

Disassembly of section .text.Compile_Load_Store:

00000000 <Compile_Load_Store>:
   0:	006136        	entry	a1, 48
   3:	0268      	l32i.n	a6, a2, 0
   5:	88a682        	movi	a8, 0x688
   8:	32d8      	l32i.n	a13, a2, 12
   a:	668a      	add.n	a6, a6, a8
   c:	528b      	addi.n	a5, a2, 8
   e:	05cd      	mov.n	a12, a5
  10:	b18b      	addi.n	a11, a1, 8
  12:	06ad      	mov.n	a10, a6
  14:	000081        	l32r	a8, fffc0014 <Compile_Load_Store+0xfffc0014>
			14: R_XTENSA_SLOT0_OP	.literal.Compile_Load_Store+0x10
			14: R_XTENSA_ASM_EXPAND	ReadLEB_ptr
  17:	0008e0        	callx8	a8
  1a:	027d      	mov.n	a7, a2
  1c:	f43030        	extui	a3, a3, 0, 16
  1f:	0a2d      	mov.n	a2, a10
  21:	07da56        	bnez	a10, a2 <Compile_Load_Store+0xa2>
			21: R_XTENSA_SLOT0_OP	.text.Compile_Load_Store+0xa2
  24:	37d8      	l32i.n	a13, a7, 12
  26:	20c550        	or	a12, a5, a5
  29:	0cc1b2        	addi	a11, a1, 12
  2c:	20a660        	or	a10, a6, a6
  2f:	000081        	l32r	a8, fffc0030 <Compile_Load_Store+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.Compile_Load_Store+0x14
			2f: R_XTENSA_ASM_EXPAND	ReadLEB_ptr
  32:	0008e0        	callx8	a8
  35:	202aa0        	or	a2, a10, a10
  38:	066a56        	bnez	a10, a2 <Compile_Load_Store+0xa2>
			38: R_XTENSA_SLOT0_OP	.text.Compile_Load_Store+0xa2
  3b:	20a770        	or	a10, a7, a7
  3e:	000081        	l32r	a8, fffc0040 <Compile_Load_Store+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.Compile_Load_Store+0x18
			3e: R_XTENSA_ASM_EXPAND	get_indention_string
  41:	0008e0        	callx8	a8
  44:	0acd      	mov.n	a12, a10
  46:	31d8      	l32i.n	a13, a1, 12
  48:	0000b1        	l32r	a11, fffc0048 <Compile_Load_Store+0xfffc0048>
			48: R_XTENSA_SLOT0_OP	.literal.Compile_Load_Store
  4b:	0000a1        	l32r	a10, fffc004c <Compile_Load_Store+0xfffc004c>
			4b: R_XTENSA_SLOT0_OP	.literal.Compile_Load_Store+0x4
  4e:	000081        	l32r	a8, fffc0050 <Compile_Load_Store+0xfffc0050>
			4e: R_XTENSA_SLOT0_OP	.literal.Compile_Load_Store+0x1c
			4e: R_XTENSA_ASM_EXPAND	printf
  51:	0008e0        	callx8	a8
  54:	418830        	srli	a8, a3, 8
  57:	049816        	beqz	a8, a4 <Compile_Load_Store+0xa4>
			57: R_XTENSA_SLOT0_OP	.text.Compile_Load_Store+0xa4
  5a:	fca092        	movi	a9, 252
  5d:	419897        	bne	a8, a9, a2 <Compile_Load_Store+0xa2>
			5d: R_XTENSA_SLOT0_OP	.text.Compile_Load_Store+0xa2
  60:	748030        	extui	a8, a3, 0, 8
  63:	c90c      	movi.n	a9, 12
  65:	393987        	bltu	a9, a8, a2 <Compile_Load_Store+0xa2>
			65: R_XTENSA_SLOT0_OP	.text.Compile_Load_Store+0xa2
  68:	000091        	l32r	a9, fffc0068 <Compile_Load_Store+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.Compile_Load_Store+0xc
  6b:	f08880        	subx8	a8, a8, a8
  6e:	a08890        	addx4	a8, a8, a9
  71:	0508a2        	l8ui	a10, a8, 5
  74:	000081        	l32r	a8, fffc0074 <Compile_Load_Store+0xfffc0074>
			74: R_XTENSA_SLOT0_OP	.literal.Compile_Load_Store+0x20
			74: R_XTENSA_ASM_EXPAND	IsFpType
  77:	0008e0        	callx8	a8
  7a:	ca8c      	beqz.n	a10, 8a <Compile_Load_Store+0x8a>
			7a: R_XTENSA_SLOT0_OP	.text.Compile_Load_Store+0x8a
  7c:	4b0c      	movi.n	a11, 4
  7e:	07ad      	mov.n	a10, a7
  80:	000081        	l32r	a8, fffc0080 <Compile_Load_Store+0xfffc0080>
			80: R_XTENSA_SLOT0_OP	.literal.Compile_Load_Store+0x24
			80: R_XTENSA_ASM_EXPAND	.text.PreserveRegisterIfOccupied
  83:	0008e0        	callx8	a8
  86:	0a2d      	mov.n	a2, a10
  88:	6adc      	bnez.n	a10, a2 <Compile_Load_Store+0xa2>
			88: R_XTENSA_SLOT0_OP	.text.Compile_Load_Store+0xa2
  8a:	03bd      	mov.n	a11, a3
  8c:	07ad      	mov.n	a10, a7
  8e:	000081        	l32r	a8, fffc0090 <Compile_Load_Store+0xfffc0090>
			8e: R_XTENSA_SLOT0_OP	.literal.Compile_Load_Store+0x28
			8e: R_XTENSA_ASM_EXPAND	.text.Compile_Operator
  91:	0008e0        	callx8	a8
  94:	0a2d      	mov.n	a2, a10
  96:	8acc      	bnez.n	a10, a2 <Compile_Load_Store+0xa2>
			96: R_XTENSA_SLOT0_OP	.text.Compile_Load_Store+0xa2
  98:	31b8      	l32i.n	a11, a1, 12
  9a:	d7a8      	l32i.n	a10, a7, 52
  9c:	000081        	l32r	a8, fffc009c <Compile_Load_Store+0xfffc009c>
			9c: R_XTENSA_SLOT0_OP	.literal.Compile_Load_Store+0x2c
			9c: R_XTENSA_ASM_EXPAND	.text.EmitConstant32$isra$0
  9f:	0008e0        	callx8	a8
  a2:	f01d      	retw.n
  a4:	f2a082        	movi	a8, 242
  a7:	f73837        	bltu	a8, a3, a2 <Compile_Load_Store+0xa2>
			a7: R_XTENSA_SLOT0_OP	.text.Compile_Load_Store+0xa2
  aa:	000091        	l32r	a9, fffc00ac <Compile_Load_Store+0xfffc00ac>
			aa: R_XTENSA_SLOT0_OP	.literal.Compile_Load_Store+0x8
  ad:	f08330        	subx8	a8, a3, a3
  b0:	a08890        	addx4	a8, a8, a9
  b3:	ffee86        	j	71 <Compile_Load_Store+0x71>
			b3: R_XTENSA_SLOT0_OP	.text.Compile_Load_Store+0x71

Disassembly of section .text.Compile_Drop:

00000000 <Compile_Drop>:
   0:	004136        	entry	a1, 32
   3:	211282        	l16ui	a8, a2, 66
   6:	131292        	l16ui	a9, a2, 38
   9:	43b987        	bgeu	a9, a8, 50 <Compile_Drop+0x50>
			9: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0x50
   c:	880b      	addi.n	a8, a8, -1
   e:	f48080        	extui	a8, a8, 0, 16
  11:	909820        	addx2	a9, a8, a2
  14:	a81942        	l16ui	a4, a9, 0x150
  17:	0000a1        	l32r	a10, fffc0018 <Compile_Drop+0xfffc0018>
			17: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x1c
  1a:	b28a      	add.n	a11, a2, a8
  1c:	215282        	s16i	a8, a2, 66
  1f:	a4aa      	add.n	a10, a4, a10
  21:	50a382        	movi	a8, 0x350
  24:	0000c1        	l32r	a12, fffc0024 <Compile_Drop+0xfffc0024>
			24: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x20
  27:	bb8a      	add.n	a11, a11, a8
  29:	f480a0        	extui	a8, a10, 0, 16
  2c:	000b62        	l8ui	a6, a11, 0
  2f:	223c87        	bltu	a12, a8, 55 <Compile_Drop+0x55>
			2f: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0x55
  32:	000081        	l32r	a8, fffc0034 <Compile_Drop+0xfffc0034>
			32: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x18
  35:	170c      	movi.n	a7, 1
  37:	848a      	add.n	a8, a4, a8
  39:	090c      	movi.n	a9, 0
  3b:	937980        	movnez	a7, a9, a8
  3e:	907720        	addx2	a7, a7, a2
  41:	06d772        	addmi	a7, a7, 0x600
  44:	291782        	l16ui	a8, a7, 82
  47:	0a1816        	beqz	a8, ec <Compile_Drop+0xec>
			47: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0xec
  4a:	00a082        	movi	a8, 0
  4d:	295782        	s16i	a8, a7, 82
  50:	020c      	movi.n	a2, 0
  52:	f01d      	retw.n
  54:	00          	.byte	00
  55:	251282        	l16ui	a8, a2, 74
  58:	f43487        	bltu	a4, a8, 50 <Compile_Drop+0x50>
			58: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0x50
  5b:	237480        	sext	a7, a4, 15
  5e:	02a787        	bge	a7, a8, 64 <Compile_Drop+0x64>
			5e: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0x64
  61:	002706        	j	101 <Compile_Drop+0x101>
			61: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0x101
  64:	06d282        	addmi	a8, a2, 0x600
  67:	281882        	l16ui	a8, a8, 80
  6a:	022787        	blt	a7, a8, 70 <Compile_Drop+0x70>
			6a: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0x70
  6d:	0029c6        	j	118 <Compile_Drop+0x118>
			6d: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0x118
  70:	20a660        	or	a10, a6, a6
  73:	000081        	l32r	a8, fffc0074 <Compile_Drop+0xfffc0074>
			73: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x24
			73: R_XTENSA_ASM_EXPAND	Is64BitType
  76:	0008e0        	callx8	a8
  79:	070c      	movi.n	a7, 0
  7b:	847a      	add.n	a8, a4, a7
  7d:	ba1b      	addi.n	a11, a10, 1
  7f:	238880        	sext	a8, a8, 15
  82:	50a452        	movi	a5, 0x450
  85:	828a      	add.n	a8, a2, a8
  87:	f4b0b0        	extui	a11, a11, 0, 16
  8a:	06ad      	mov.n	a10, a6
  8c:	385a      	add.n	a3, a8, a5
  8e:	beb7b7        	bgeu	a7, a11, 50 <Compile_Drop+0x50>
			8e: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0x50
  91:	0003b2        	l8ui	a11, a3, 0
  94:	cb0b      	addi.n	a12, a11, -1
  96:	7bac      	beqz.n	a11, c1 <Compile_Drop+0xc1>
			96: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0xc1
  98:	0043c2        	s8i	a12, a3, 0
  9b:	000081        	l32r	a8, fffc009c <Compile_Drop+0xfffc009c>
			9b: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x28
			9b: R_XTENSA_ASM_EXPAND	Is64BitType
  9e:	0008e0        	callx8	a8
  a1:	faba16        	beqz	a10, 50 <Compile_Drop+0x50>
			a1: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0x50
  a4:	771b      	addi.n	a7, a7, 1
  a6:	f47070        	extui	a7, a7, 0, 16
  a9:	847a      	add.n	a8, a4, a7
  ab:	238880        	sext	a8, a8, 15
  ae:	828a      	add.n	a8, a2, a8
  b0:	2b0c      	movi.n	a11, 2
  b2:	06ad      	mov.n	a10, a6
  b4:	385a      	add.n	a3, a8, a5
  b6:	96b7b7        	bgeu	a7, a11, 50 <Compile_Drop+0x50>
			b6: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0x50
  b9:	0003b2        	l8ui	a11, a3, 0
  bc:	cb0b      	addi.n	a12, a11, -1
  be:	fd6b56        	bnez	a11, 98 <Compile_Drop+0x98>
			be: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0x98
  c1:	0000b1        	l32r	a11, fffc00c4 <Compile_Drop+0xfffc00c4>
			c1: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x4
  c4:	0000d1        	l32r	a13, fffc00c4 <Compile_Drop+0xfffc00c4>
			c4: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x14
  c7:	0000a1        	l32r	a10, fffc00c8 <Compile_Drop+0xfffc00c8>
			c7: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x8
  ca:	a4a1c2        	movi	a12, 0x1a4
  cd:	000081        	l32r	a8, fffc00d0 <Compile_Drop+0xfffc00d0>
			cd: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x2c
			cd: R_XTENSA_ASM_EXPAND	printf
  d0:	0008e0        	callx8	a8
  d3:	0003b2        	l8ui	a11, a3, 0
  d6:	06ad      	mov.n	a10, a6
  d8:	ffcbb2        	addi	a11, a11, -1
  db:	0043b2        	s8i	a11, a3, 0
  de:	000081        	l32r	a8, fffc00e0 <Compile_Drop+0xfffc00e0>
			de: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x30
			de: R_XTENSA_ASM_EXPAND	Is64BitType
  e1:	0008e0        	callx8	a8
  e4:	fbca56        	bnez	a10, a4 <Compile_Drop+0xa4>
			e4: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0xa4
  e7:	020c      	movi.n	a2, 0
  e9:	f01d      	retw.n
  eb:	00          	.byte	00
  ec:	0000d1        	l32r	a13, fffc00ec <Compile_Drop+0xfffc00ec>
			ec: R_XTENSA_SLOT0_OP	.literal.Compile_Drop
  ef:	0000b1        	l32r	a11, fffc00f0 <Compile_Drop+0xfffc00f0>
			ef: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x4
  f2:	0000a1        	l32r	a10, fffc00f4 <Compile_Drop+0xfffc00f4>
			f2: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x8
  f5:	b8a1c2        	movi	a12, 0x1b8
  f8:	000081        	l32r	a8, fffc00f8 <Compile_Drop+0xfffc00f8>
			f8: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x34
			f8: R_XTENSA_ASM_EXPAND	printf
  fb:	0008e0        	callx8	a8
  fe:	ffd206        	j	4a <Compile_Drop+0x4a>
			fe: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0x4a
 101:	0000d1        	l32r	a13, fffc0104 <Compile_Drop+0xfffc0104>
			101: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0xc
 104:	0000b1        	l32r	a11, fffc0104 <Compile_Drop+0xfffc0104>
			104: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x4
 107:	0000a1        	l32r	a10, fffc0108 <Compile_Drop+0xfffc0108>
			107: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x8
 10a:	a1a1c2        	movi	a12, 0x1a1
 10d:	000081        	l32r	a8, fffc0110 <Compile_Drop+0xfffc0110>
			10d: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x38
			10d: R_XTENSA_ASM_EXPAND	printf
 110:	0008e0        	callx8	a8
 113:	ffd346        	j	64 <Compile_Drop+0x64>
			113: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0x64
 116:	00          	.byte	00
 117:	00          	.byte	00
 118:	0000d1        	l32r	a13, fffc0118 <Compile_Drop+0xfffc0118>
			118: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x10
 11b:	0000b1        	l32r	a11, fffc011c <Compile_Drop+0xfffc011c>
			11b: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x4
 11e:	0000a1        	l32r	a10, fffc0120 <Compile_Drop+0xfffc0120>
			11e: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x8
 121:	a2a1c2        	movi	a12, 0x1a2
 124:	000081        	l32r	a8, fffc0124 <Compile_Drop+0xfffc0124>
			124: R_XTENSA_SLOT0_OP	.literal.Compile_Drop+0x3c
			124: R_XTENSA_ASM_EXPAND	printf
 127:	0008e0        	callx8	a8
 12a:	ffd086        	j	70 <Compile_Drop+0x70>
			12a: R_XTENSA_SLOT0_OP	.text.Compile_Drop+0x70

Disassembly of section .text.Compile_Select:

00000000 <Compile_Select>:
   0:	008136        	entry	a1, 64
   3:	fa7c      	movi.n	a10, -1
   5:	211292        	l16ui	a9, a2, 66
   8:	61a9      	s32i.n	a10, a1, 24
   a:	0e51a2        	s16i	a10, a1, 28
   d:	023d      	mov.n	a3, a2
   f:	0e29b6        	bltui	a9, 2, 21 <Compile_Select+0x21>
			f: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x21
  12:	fec992        	addi	a9, a9, -2
  15:	2012a2        	l16ui	a10, a2, 64
  18:	f49090        	extui	a9, a9, 0, 16
  1b:	0239a7        	bltu	a9, a10, 21 <Compile_Select+0x21>
			1b: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x21
  1e:	004686        	j	13c <Compile_Select+0x13c>
			1e: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x13c
  21:	070c      	movi.n	a7, 0
  23:	072d      	mov.n	a2, a7
  25:	07ad      	mov.n	a10, a7
  27:	000081        	l32r	a8, fffc0028 <Compile_Select+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x30
			27: R_XTENSA_ASM_EXPAND	IsFpType
  2a:	0008e0        	callx8	a8
  2d:	055a16        	beqz	a10, 86 <Compile_Select+0x86>
			2d: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x86
  30:	211392        	l16ui	a9, a3, 66
  33:	2013a2        	l16ui	a10, a3, 64
  36:	053a97        	bltu	a10, a9, 3f <Compile_Select+0x3f>
			36: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x3f
  39:	2e03a2        	l8ui	a10, a3, 46
  3c:	324a16        	beqz	a10, 364 <Compile_Select+0x364>
			3c: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x364
  3f:	ffc9a2        	addi	a10, a9, -1
  42:	23aa80        	sext	a10, a10, 15
  45:	ffca62        	addi	a6, a10, -1
  48:	02a697        	bge	a6, a9, 4e <Compile_Select+0x4e>
			48: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x4e
  4b:	003446        	j	120 <Compile_Select+0x120>
			4b: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x120
  4e:	2e03a2        	l8ui	a10, a3, 46
  51:	254a16        	beqz	a10, 2a9 <Compile_Select+0x2a9>
			51: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x2a9
  54:	2013a2        	l16ui	a10, a3, 64
  57:	023a97        	bltu	a10, a9, 5d <Compile_Select+0x5d>
			57: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x5d
  5a:	015e86        	j	5d8 <Compile_Select+0x5d8>
			5a: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x5d8
  5d:	a90b      	addi.n	a10, a9, -1
  5f:	23aa80        	sext	a10, a10, 15
  62:	feca62        	addi	a6, a10, -2
  65:	02a697        	bge	a6, a9, 6b <Compile_Select+0x6b>
			65: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x6b
  68:	003246        	j	135 <Compile_Select+0x135>
			68: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x135
  6b:	2e0392        	l8ui	a9, a3, 46
  6e:	423916        	beqz	a9, 495 <Compile_Select+0x495>
			6e: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x495
  71:	07bd      	mov.n	a11, a7
  73:	20a330        	or	a10, a3, a3
  76:	000081        	l32r	a8, fffc0078 <Compile_Select+0xfffc0078>
			76: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x34
			76: R_XTENSA_ASM_EXPAND	.text.PreserveRegisterIfOccupied
  79:	0008e0        	callx8	a8
  7c:	078a56        	bnez	a10, f8 <Compile_Select+0xf8>
			7c: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xf8
  7f:	211392        	l16ui	a9, a3, 66
  82:	009346        	j	2d3 <Compile_Select+0x2d3>
			82: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x2d3
  85:	00          	.byte	00
  86:	07ad      	mov.n	a10, a7
  88:	000081        	l32r	a8, fffc0088 <Compile_Select+0xfffc0088>
			88: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x38
			88: R_XTENSA_ASM_EXPAND	IsIntType
  8b:	0008e0        	callx8	a8
  8e:	0abd      	mov.n	a11, a10
  90:	0eba56        	bnez	a10, 17f <Compile_Select+0x17f>
			90: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x17f
  93:	2e0392        	l8ui	a9, a3, 46
  96:	05c916        	beqz	a9, f6 <Compile_Select+0xf6>
			96: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xf6
  99:	03ad      	mov.n	a10, a3
  9b:	000081        	l32r	a8, fffc009c <Compile_Select+0xfffc009c>
			9b: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x3c
			9b: R_XTENSA_ASM_EXPAND	.text.EmitOp
  9e:	0008e0        	callx8	a8
  a1:	0c11b2        	l16ui	a11, a1, 24
  a4:	ffa192        	movi	a9, 0x1ff
  a7:	0239b7        	bltu	a9, a11, ad <Compile_Select+0xad>
			a7: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xad
  aa:	002786        	j	14c <Compile_Select+0x14c>
			aa: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x14c
  ad:	0d11b2        	l16ui	a11, a1, 26
  b0:	ffa192        	movi	a9, 0x1ff
  b3:	0239b7        	bltu	a9, a11, b9 <Compile_Select+0xb9>
			b3: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xb9
  b6:	002986        	j	160 <Compile_Select+0x160>
			b6: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x160
  b9:	0e11b2        	l16ui	a11, a1, 28
  bc:	ffa192        	movi	a9, 0x1ff
  bf:	0239b7        	bltu	a9, a11, c5 <Compile_Select+0xc5>
			bf: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xc5
  c2:	002b86        	j	174 <Compile_Select+0x174>
			c2: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x174
  c5:	07ad      	mov.n	a10, a7
  c7:	000081        	l32r	a8, fffc00c8 <Compile_Select+0xfffc00c8>
			c7: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x40
			c7: R_XTENSA_ASM_EXPAND	IsFpType
  ca:	0008e0        	callx8	a8
  cd:	0000b1        	l32r	a11, fffc00d0 <Compile_Select+0xfffc00d0>
			cd: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x24
  d0:	000051        	l32r	a5, fffc00d0 <Compile_Select+0xfffc00d0>
			d0: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x28
  d3:	070c      	movi.n	a7, 0
  d5:	190c      	movi.n	a9, 1
  d7:	9379a0        	movnez	a7, a9, a10
  da:	835ba0        	moveqz	a5, a11, a10
  dd:	42cc      	bnez.n	a2, e5 <Compile_Select+0xe5>
			dd: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xe5
  df:	2e0392        	l8ui	a9, a3, 46
  e2:	382916        	beqz	a9, 468 <Compile_Select+0x468>
			e2: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x468
  e5:	211392        	l16ui	a9, a3, 66
  e8:	ffa0a2        	movi	a10, 255
  eb:	691b      	addi.n	a6, a9, 1
  ed:	f46060        	extui	a6, a6, 0, 16
  f0:	215362        	s16i	a6, a3, 66
  f3:	05ba97        	bgeu	a10, a9, fc <Compile_Select+0xfc>
			f3: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xfc
  f6:	0a0c      	movi.n	a10, 0
  f8:	0a2d      	mov.n	a2, a10
  fa:	f01d      	retw.n
  fc:	90a930        	addx2	a10, a9, a3
  ff:	a85a52        	s16i	a5, a10, 0x150
 102:	939a      	add.n	a9, a3, a9
 104:	50a3a2        	movi	a10, 0x350
 107:	99aa      	add.n	a9, a9, a10
 109:	907730        	addx2	a7, a7, a3
 10c:	004922        	s8i	a2, a9, 0
 10f:	06d772        	addmi	a7, a7, 0x600
 112:	291782        	l16ui	a8, a7, 82
 115:	177856        	bnez	a8, 290 <Compile_Select+0x290>
			115: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x290
 118:	295762        	s16i	a6, a7, 82
 11b:	fff5c6        	j	f6 <Compile_Select+0xf6>
			11b: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xf6
 11e:	00          	.byte	00
 11f:	00          	.byte	00
 120:	1a06d6        	bgez	a6, 2c4 <Compile_Select+0x2c4>
			120: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x2c4
 123:	2013b2        	l16ui	a11, a3, 64
 126:	02bb97        	bgeu	a11, a9, 12c <Compile_Select+0x12c>
			126: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x12c
 129:	ffd106        	j	71 <Compile_Select+0x71>
			129: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x71
 12c:	2e03b2        	l8ui	a11, a3, 46
 12f:	feca62        	addi	a6, a10, -2
 132:	4a8b16        	beqz	a11, 5de <Compile_Select+0x5de>
			132: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x5de
 135:	f38696        	bltz	a6, 71 <Compile_Select+0x71>
			135: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x71
 138:	00dd06        	j	4b0 <Compile_Select+0x4b0>
			138: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x4b0
 13b:	00          	.byte	00
 13c:	929a      	add.n	a9, a2, a9
 13e:	50a3a2        	movi	a10, 0x350
 141:	99aa      	add.n	a9, a9, a10
 143:	000922        	l8ui	a2, a9, 0
 146:	027d      	mov.n	a7, a2
 148:	ffb646        	j	25 <Compile_Select+0x25>
			148: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x25
 14b:	00          	.byte	00
 14c:	d3a8      	l32i.n	a10, a3, 52
 14e:	000081        	l32r	a8, fffc0150 <Compile_Select+0xfffc0150>
			14e: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x44
			14e: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 151:	0008e0        	callx8	a8
 154:	0d11b2        	l16ui	a11, a1, 26
 157:	ffa192        	movi	a9, 0x1ff
 15a:	02b9b7        	bgeu	a9, a11, 160 <Compile_Select+0x160>
			15a: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x160
 15d:	ffd606        	j	b9 <Compile_Select+0xb9>
			15d: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xb9
 160:	d3a8      	l32i.n	a10, a3, 52
 162:	000081        	l32r	a8, fffc0164 <Compile_Select+0xfffc0164>
			162: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x48
			162: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 165:	0008e0        	callx8	a8
 168:	0e11b2        	l16ui	a11, a1, 28
 16b:	ffa192        	movi	a9, 0x1ff
 16e:	02b9b7        	bgeu	a9, a11, 174 <Compile_Select+0x174>
			16e: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x174
 171:	ffd406        	j	c5 <Compile_Select+0xc5>
			171: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xc5
 174:	d3a8      	l32i.n	a10, a3, 52
 176:	000081        	l32r	a8, fffc0178 <Compile_Select+0xfffc0178>
			176: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4c
			176: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 179:	0008e0        	callx8	a8
 17c:	ffd146        	j	c5 <Compile_Select+0xc5>
			17c: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xc5
 17f:	2113b2        	l16ui	a11, a3, 66
 182:	2013a2        	l16ui	a10, a3, 64
 185:	053ab7        	bltu	a10, a11, 18e <Compile_Select+0x18e>
			185: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x18e
 188:	2e03c2        	l8ui	a12, a3, 46
 18b:	46dc16        	beqz	a12, 5fc <Compile_Select+0x5fc>
			18b: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x5fc
 18e:	ffcb92        	addi	a9, a11, -1
 191:	236980        	sext	a6, a9, 15
 194:	02a6b7        	bge	a6, a11, 19a <Compile_Select+0x19a>
			194: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x19a
 197:	00ca46        	j	4c4 <Compile_Select+0x4c4>
			197: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x4c4
 19a:	2e03c2        	l8ui	a12, a3, 46
 19d:	35cc16        	beqz	a12, 4fd <Compile_Select+0x4fd>
			19d: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x4fd
 1a0:	2013a2        	l16ui	a10, a3, 64
 1a3:	1a3ab7        	bltu	a10, a11, 1c1 <Compile_Select+0x1c1>
			1a3: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x1c1
 1a6:	2e03c2        	l8ui	a12, a3, 46
 1a9:	014c56        	bnez	a12, 1c1 <Compile_Select+0x1c1>
			1a9: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x1c1
 1ac:	0000b1        	l32r	a11, fffc01ac <Compile_Select+0xfffc01ac>
			1ac: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 1af:	0000d1        	l32r	a13, fffc01b0 <Compile_Select+0xfffc01b0>
			1af: R_XTENSA_SLOT0_OP	.literal.Compile_Select
 1b2:	0000a1        	l32r	a10, fffc01b4 <Compile_Select+0xfffc01b4>
			1b2: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 1b5:	d7a0c2        	movi	a12, 215
 1b8:	000081        	l32r	a8, fffc01b8 <Compile_Select+0xfffc01b8>
			1b8: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x50
			1b8: R_XTENSA_ASM_EXPAND	printf
 1bb:	0008e0        	callx8	a8
 1be:	2113b2        	l16ui	a11, a3, 66
 1c1:	ffcb92        	addi	a9, a11, -1
 1c4:	236980        	sext	a6, a9, 15
 1c7:	ffc662        	addi	a6, a6, -1
 1ca:	02a6b7        	bge	a6, a11, 1d0 <Compile_Select+0x1d0>
			1ca: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x1d0
 1cd:	0118c6        	j	634 <Compile_Select+0x634>
			1cd: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x634
 1d0:	2e03c2        	l8ui	a12, a3, 46
 1d3:	43dc16        	beqz	a12, 614 <Compile_Select+0x614>
			1d3: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x614
 1d6:	2013a2        	l16ui	a10, a3, 64
 1d9:	053ab7        	bltu	a10, a11, 1e2 <Compile_Select+0x1e2>
			1d9: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x1e2
 1dc:	2e03c2        	l8ui	a12, a3, 46
 1df:	459c16        	beqz	a12, 63c <Compile_Select+0x63c>
			1df: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x63c
 1e2:	ffcb62        	addi	a6, a11, -1
 1e5:	236680        	sext	a6, a6, 15
 1e8:	fec662        	addi	a6, a6, -2
 1eb:	02a6b7        	bge	a6, a11, 1f1 <Compile_Select+0x1f1>
			1eb: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x1f1
 1ee:	0124c6        	j	685 <Compile_Select+0x685>
			1ee: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x685
 1f1:	2e0392        	l8ui	a9, a3, 46
 1f4:	2d8956        	bnez	a9, 4d0 <Compile_Select+0x4d0>
			1f4: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x4d0
 1f7:	0000b1        	l32r	a11, fffc01f8 <Compile_Select+0xfffc01f8>
			1f7: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 1fa:	0000d1        	l32r	a13, fffc01fc <Compile_Select+0xfffc01fc>
			1fa: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0xc
 1fd:	0000a1        	l32r	a10, fffc0200 <Compile_Select+0xfffc0200>
			1fd: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 200:	07a1c2        	movi	a12, 0x107
 203:	000081        	l32r	a8, fffc0204 <Compile_Select+0xfffc0204>
			203: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x54
			203: R_XTENSA_ASM_EXPAND	printf
 206:	0008e0        	callx8	a8
 209:	2113b2        	l16ui	a11, a3, 66
 20c:	0226b7        	blt	a6, a11, 212 <Compile_Select+0x212>
			20c: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x212
 20f:	00af46        	j	4d0 <Compile_Select+0x4d0>
			20f: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x4d0
 212:	906630        	addx2	a6, a6, a3
 215:	a81692        	l16ui	a9, a6, 0x150
 218:	0000a1        	l32r	a10, fffc0218 <Compile_Select+0xfffc0218>
			218: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x2c
 21b:	023a97        	bltu	a10, a9, 221 <Compile_Select+0x221>
			21b: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x221
 21e:	00ab86        	j	4d0 <Compile_Select+0x4d0>
			21e: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x4d0
 221:	2013a2        	l16ui	a10, a3, 64
 224:	040c      	movi.n	a4, 0
 226:	3179      	s32i.n	a7, a1, 12
 228:	18c162        	addi	a6, a1, 24
 22b:	350c      	movi.n	a5, 3
 22d:	047d      	mov.n	a7, a4
 22f:	053ab7        	bltu	a10, a11, 238 <Compile_Select+0x238>
			22f: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x238
 232:	2e03a2        	l8ui	a10, a3, 46
 235:	367a16        	beqz	a10, 5a0 <Compile_Select+0x5a0>
			235: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x5a0
 238:	8b0b      	addi.n	a8, a11, -1
 23a:	234880        	sext	a4, a8, 15
 23d:	02a4b7        	bge	a4, a11, 243 <Compile_Select+0x243>
			23d: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x243
 240:	00ba06        	j	52c <Compile_Select+0x52c>
			240: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x52c
 243:	2e03a2        	l8ui	a10, a3, 46
 246:	30fa16        	beqz	a10, 559 <Compile_Select+0x559>
			246: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x559
 249:	2013c2        	l16ui	a12, a3, 64
 24c:	02bcb7        	bgeu	a12, a11, 252 <Compile_Select+0x252>
			24c: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x252
 24f:	011746        	j	6b0 <Compile_Select+0x6b0>
			24f: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x6b0
 252:	2e8a16        	beqz	a10, 53e <Compile_Select+0x53e>
			252: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x53e
 255:	bb0b      	addi.n	a11, a11, -1
 257:	f480b0        	extui	a8, a11, 0, 16
 25a:	026bf7        	bbci	a11, 15, 260 <Compile_Select+0x260>
			25a: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x260
 25d:	00e546        	j	5f6 <Compile_Select+0x5f6>
			25d: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x5f6
 260:	a8a092        	movi	a9, 168
 263:	808890        	add	a8, a8, a9
 266:	908830        	addx2	a8, a8, a3
 269:	001882        	l16ui	a8, a8, 0
 26c:	005682        	s16i	a8, a6, 0
 26f:	20a330        	or	a10, a3, a3
 272:	000081        	l32r	a8, fffc0274 <Compile_Select+0xfffc0274>
			272: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x58
			272: R_XTENSA_ASM_EXPAND	.text.Pop
 275:	0008e0        	callx8	a8
 278:	e7ca56        	bnez	a10, f8 <Compile_Select+0xf8>
			278: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xf8
 27b:	771b      	addi.n	a7, a7, 1
 27d:	662b      	addi.n	a6, a6, 2
 27f:	023766        	bnei	a7, 3, 285 <Compile_Select+0x285>
			27f: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x285
 282:	00c1c6        	j	58d <Compile_Select+0x58d>
			282: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x58d
 285:	2113b2        	l16ui	a11, a3, 66
 288:	2013a2        	l16ui	a10, a3, 64
 28b:	ffe806        	j	22f <Compile_Select+0x22f>
			28b: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x22f
 28e:	00          	.byte	00
 28f:	00          	.byte	00
 290:	0000d1        	l32r	a13, fffc0290 <Compile_Select+0xfffc0290>
			290: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x1c
 293:	0000b1        	l32r	a11, fffc0294 <Compile_Select+0xfffc0294>
			293: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 296:	0000a1        	l32r	a10, fffc0298 <Compile_Select+0xfffc0298>
			296: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 299:	b2a1c2        	movi	a12, 0x1b2
 29c:	000081        	l32r	a8, fffc029c <Compile_Select+0xfffc029c>
			29c: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x5c
			29c: R_XTENSA_ASM_EXPAND	printf
 29f:	0008e0        	callx8	a8
 2a2:	295762        	s16i	a6, a7, 82
 2a5:	ff9346        	j	f6 <Compile_Select+0xf6>
			2a5: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xf6
 2a8:	00          	.byte	00
 2a9:	0000d1        	l32r	a13, fffc02ac <Compile_Select+0xfffc02ac>
			2a9: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0xc
 2ac:	0000b1        	l32r	a11, fffc02ac <Compile_Select+0xfffc02ac>
			2ac: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 2af:	0000a1        	l32r	a10, fffc02b0 <Compile_Select+0xfffc02b0>
			2af: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 2b2:	07a1c2        	movi	a12, 0x107
 2b5:	000081        	l32r	a8, fffc02b8 <Compile_Select+0xfffc02b8>
			2b5: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x60
			2b5: R_XTENSA_ASM_EXPAND	printf
 2b8:	0008e0        	callx8	a8
 2bb:	211392        	l16ui	a9, a3, 66
 2be:	022697        	blt	a6, a9, 2c4 <Compile_Select+0x2c4>
			2be: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x2c4
 2c1:	ff63c6        	j	54 <Compile_Select+0x54>
			2c1: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x54
 2c4:	906630        	addx2	a6, a6, a3
 2c7:	a816a2        	l16ui	a10, a6, 0x150
 2ca:	0000b1        	l32r	a11, fffc02cc <Compile_Select+0xfffc02cc>
			2ca: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x2c
 2cd:	023ba7        	bltu	a11, a10, 2d3 <Compile_Select+0x2d3>
			2cd: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x2d3
 2d0:	ff6006        	j	54 <Compile_Select+0x54>
			2d0: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x54
 2d3:	2013a2        	l16ui	a10, a3, 64
 2d6:	053a97        	bltu	a10, a9, 2df <Compile_Select+0x2df>
			2d6: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x2df
 2d9:	2e03a2        	l8ui	a10, a3, 46
 2dc:	204a16        	beqz	a10, 4e4 <Compile_Select+0x4e4>
			2dc: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x4e4
 2df:	590b      	addi.n	a5, a9, -1
 2e1:	235580        	sext	a5, a5, 15
 2e4:	02a597        	bge	a5, a9, 2ea <Compile_Select+0x2ea>
			2e4: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x2ea
 2e7:	004586        	j	401 <Compile_Select+0x401>
			2e7: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x401
 2ea:	2e0362        	l8ui	a6, a3, 46
 2ed:	137616        	beqz	a6, 428 <Compile_Select+0x428>
			2ed: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x428
 2f0:	2013a2        	l16ui	a10, a3, 64
 2f3:	060c      	movi.n	a6, 0
 2f5:	053a97        	bltu	a10, a9, 2fe <Compile_Select+0x2fe>
			2f5: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x2fe
 2f8:	2e03a2        	l8ui	a10, a3, 46
 2fb:	111a16        	beqz	a10, 410 <Compile_Select+0x410>
			2fb: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x410
 2fe:	a90b      	addi.n	a10, a9, -1
 300:	f490a0        	extui	a9, a10, 0, 16
 303:	026af7        	bbci	a10, 15, 309 <Compile_Select+0x309>
			303: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x309
 306:	00e086        	j	68c <Compile_Select+0x68c>
			306: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x68c
 309:	909930        	addx2	a9, a9, a3
 30c:	a81992        	l16ui	a9, a9, 0x150
 30f:	03ad      	mov.n	a10, a3
 311:	0c5192        	s16i	a9, a1, 24
 314:	000081        	l32r	a8, fffc0314 <Compile_Select+0xfffc0314>
			314: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x64
			314: R_XTENSA_ASM_EXPAND	.text.Pop
 317:	0008e0        	callx8	a8
 31a:	ddaa56        	bnez	a10, f8 <Compile_Select+0xf8>
			31a: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xf8
 31d:	18c152        	addi	a5, a1, 24
 320:	140c      	movi.n	a4, 1
 322:	0361a2        	s32i	a10, a1, 12
 325:	211382        	l16ui	a8, a3, 66
 328:	201392        	l16ui	a9, a3, 64
 32b:	053987        	bltu	a9, a8, 334 <Compile_Select+0x334>
			32b: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x334
 32e:	2e0392        	l8ui	a9, a3, 46
 331:	148916        	beqz	a9, 47d <Compile_Select+0x47d>
			331: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x47d
 334:	a80b      	addi.n	a10, a8, -1
 336:	239a80        	sext	a9, a10, 15
 339:	402987        	blt	a9, a8, 37d <Compile_Select+0x37d>
			339: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x37d
 33c:	2e0382        	l8ui	a8, a3, 46
 33f:	f4a0a0        	extui	a10, a10, 0, 16
 342:	087816        	beqz	a8, 3cd <Compile_Select+0x3cd>
			342: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x3cd
 345:	90aa30        	addx2	a10, a10, a3
 348:	a81a82        	l16ui	a8, a10, 0x150
 34b:	015582        	s16i	a8, a5, 2
 34e:	03ad      	mov.n	a10, a3
 350:	000081        	l32r	a8, fffc0350 <Compile_Select+0xfffc0350>
			350: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x68
			350: R_XTENSA_ASM_EXPAND	.text.Pop
 353:	0008e0        	callx8	a8
 356:	d9ea56        	bnez	a10, f8 <Compile_Select+0xf8>
			356: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xf8
 359:	552b      	addi.n	a5, a5, 2
 35b:	511466        	bnei	a4, 1, 3b0 <Compile_Select+0x3b0>
			35b: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x3b0
 35e:	240c      	movi.n	a4, 2
 360:	fff046        	j	325 <Compile_Select+0x325>
			360: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x325
 363:	00          	.byte	00
 364:	0000d1        	l32r	a13, fffc0364 <Compile_Select+0xfffc0364>
			364: R_XTENSA_SLOT0_OP	.literal.Compile_Select
 367:	0000b1        	l32r	a11, fffc0368 <Compile_Select+0xfffc0368>
			367: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 36a:	0000a1        	l32r	a10, fffc036c <Compile_Select+0xfffc036c>
			36a: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 36d:	d7a0c2        	movi	a12, 215
 370:	000081        	l32r	a8, fffc0370 <Compile_Select+0xfffc0370>
			370: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x6c
			370: R_XTENSA_ASM_EXPAND	printf
 373:	0008e0        	callx8	a8
 376:	211392        	l16ui	a9, a3, 66
 379:	ff3086        	j	3f <Compile_Select+0x3f>
			379: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x3f
 37c:	00          	.byte	00
 37d:	06b9d6        	bgez	a9, 3ec <Compile_Select+0x3ec>
			37d: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x3ec
 380:	201392        	l16ui	a9, a3, 64
 383:	213987        	bltu	a9, a8, 3a8 <Compile_Select+0x3a8>
			383: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x3a8
 386:	2e0382        	l8ui	a8, a3, 46
 389:	b8dc      	bnez.n	a8, 3a8 <Compile_Select+0x3a8>
			389: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x3a8
 38b:	0000d1        	l32r	a13, fffc038c <Compile_Select+0xfffc038c>
			38b: R_XTENSA_SLOT0_OP	.literal.Compile_Select
 38e:	0000b1        	l32r	a11, fffc0390 <Compile_Select+0xfffc0390>
			38e: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 391:	0000a1        	l32r	a10, fffc0394 <Compile_Select+0xfffc0394>
			391: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 394:	d7a0c2        	movi	a12, 215
 397:	000081        	l32r	a8, fffc0398 <Compile_Select+0xfffc0398>
			397: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x70
			397: R_XTENSA_ASM_EXPAND	printf
 39a:	0008e0        	callx8	a8
 39d:	211382        	l16ui	a8, a3, 66
 3a0:	880b      	addi.n	a8, a8, -1
 3a2:	f4a080        	extui	a10, a8, 0, 16
 3a5:	9c68f7        	bbci	a8, 15, 345 <Compile_Select+0x345>
			3a5: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x345
 3a8:	000081        	l32r	a8, fffc03a8 <Compile_Select+0xfffc03a8>
			3a8: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x20
 3ab:	ffe706        	j	34b <Compile_Select+0x34b>
			3ab: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x34b
 3ae:	00          	.byte	00
 3af:	00          	.byte	00
 3b0:	fdc792        	addi	a9, a7, -3
 3b3:	3188      	l32i.n	a8, a1, 12
 3b5:	906660        	addx2	a6, a6, a6
 3b8:	909990        	addx2	a9, a9, a9
 3bb:	0000a1        	l32r	a10, fffc03bc <Compile_Select+0xfffc03bc>
			3bb: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x10
 3be:	909960        	addx2	a9, a9, a6
 3c1:	998a      	add.n	a9, a9, a8
 3c3:	a099a0        	addx4	a9, a9, a10
 3c6:	09b8      	l32i.n	a11, a9, 0
 3c8:	ff3346        	j	99 <Compile_Select+0x99>
			3c8: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x99
 3cb:	00          	.byte	00
 3cc:	00          	.byte	00
 3cd:	0000d1        	l32r	a13, fffc03d0 <Compile_Select+0xfffc03d0>
			3cd: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0xc
 3d0:	0000b1        	l32r	a11, fffc03d0 <Compile_Select+0xfffc03d0>
			3d0: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 3d3:	0000a1        	l32r	a10, fffc03d4 <Compile_Select+0xfffc03d4>
			3d3: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 3d6:	2199      	s32i.n	a9, a1, 8
 3d8:	07a1c2        	movi	a12, 0x107
 3db:	000081        	l32r	a8, fffc03dc <Compile_Select+0xfffc03dc>
			3db: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x74
			3db: R_XTENSA_ASM_EXPAND	printf
 3de:	0008e0        	callx8	a8
 3e1:	211382        	l16ui	a8, a3, 66
 3e4:	2198      	l32i.n	a9, a1, 8
 3e6:	022987        	blt	a9, a8, 3ec <Compile_Select+0x3ec>
			3e6: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x3ec
 3e9:	009ec6        	j	668 <Compile_Select+0x668>
			3e9: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x668
 3ec:	909930        	addx2	a9, a9, a3
 3ef:	a81992        	l16ui	a9, a9, 0x150
 3f2:	0000a1        	l32r	a10, fffc03f4 <Compile_Select+0xfffc03f4>
			3f2: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x2c
 3f5:	023a97        	bltu	a10, a9, 3fb <Compile_Select+0x3fb>
			3f5: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x3fb
 3f8:	009606        	j	654 <Compile_Select+0x654>
			3f8: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x654
 3fb:	3149      	s32i.n	a4, a1, 12
 3fd:	ffd346        	j	34e <Compile_Select+0x34e>
			3fd: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x34e
 400:	00          	.byte	00
 401:	2013a2        	l16ui	a10, a3, 64
 404:	03e5d6        	bgez	a5, 446 <Compile_Select+0x446>
			404: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x446
 407:	553a97        	bltu	a10, a9, 460 <Compile_Select+0x460>
			407: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x460
 40a:	2e0362        	l8ui	a6, a3, 46
 40d:	04f656        	bnez	a6, 460 <Compile_Select+0x460>
			40d: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x460
 410:	0000d1        	l32r	a13, fffc0410 <Compile_Select+0xfffc0410>
			410: R_XTENSA_SLOT0_OP	.literal.Compile_Select
 413:	0000b1        	l32r	a11, fffc0414 <Compile_Select+0xfffc0414>
			413: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 416:	0000a1        	l32r	a10, fffc0418 <Compile_Select+0xfffc0418>
			416: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 419:	d7a0c2        	movi	a12, 215
 41c:	000081        	l32r	a8, fffc041c <Compile_Select+0xfffc041c>
			41c: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x78
			41c: R_XTENSA_ASM_EXPAND	printf
 41f:	0008e0        	callx8	a8
 422:	211392        	l16ui	a9, a3, 66
 425:	ffb546        	j	2fe <Compile_Select+0x2fe>
			425: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x2fe
 428:	0000d1        	l32r	a13, fffc0428 <Compile_Select+0xfffc0428>
			428: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0xc
 42b:	0000b1        	l32r	a11, fffc042c <Compile_Select+0xfffc042c>
			42b: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 42e:	0000a1        	l32r	a10, fffc0430 <Compile_Select+0xfffc0430>
			42e: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 431:	07a1c2        	movi	a12, 0x107
 434:	000081        	l32r	a8, fffc0434 <Compile_Select+0xfffc0434>
			434: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x7c
			434: R_XTENSA_ASM_EXPAND	printf
 437:	0008e0        	callx8	a8
 43a:	211392        	l16ui	a9, a3, 66
 43d:	2013a2        	l16ui	a10, a3, 64
 440:	022597        	blt	a5, a9, 446 <Compile_Select+0x446>
			440: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x446
 443:	ffab86        	j	2f5 <Compile_Select+0x2f5>
			443: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x2f5
 446:	905530        	addx2	a5, a5, a3
 449:	a815b2        	l16ui	a11, a5, 0x150
 44c:	0000c1        	l32r	a12, fffc044c <Compile_Select+0xfffc044c>
			44c: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x2c
 44f:	01a062        	movi	a6, 1
 452:	023cb7        	bltu	a12, a11, 458 <Compile_Select+0x458>
			452: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x458
 455:	00a062        	movi	a6, 0
 458:	746060        	extui	a6, a6, 0, 8
 45b:	ffa586        	j	2f5 <Compile_Select+0x2f5>
			45b: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x2f5
 45e:	00          	.byte	00
 45f:	00          	.byte	00
 460:	000091        	l32r	a9, fffc0460 <Compile_Select+0xfffc0460>
			460: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x20
 463:	060c      	movi.n	a6, 0
 465:	ffa986        	j	30f <Compile_Select+0x30f>
			465: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x30f
 468:	0000d1        	l32r	a13, fffc0468 <Compile_Select+0xfffc0468>
			468: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x18
 46b:	0000b1        	l32r	a11, fffc046c <Compile_Select+0xfffc046c>
			46b: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 46e:	0000a1        	l32r	a10, fffc0470 <Compile_Select+0xfffc0470>
			46e: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 471:	3fa2c2        	movi	a12, 0x23f
 474:	000081        	l32r	a8, fffc0474 <Compile_Select+0xfffc0474>
			474: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x80
			474: R_XTENSA_ASM_EXPAND	printf
 477:	0008e0        	callx8	a8
 47a:	ff19c6        	j	e5 <Compile_Select+0xe5>
			47a: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xe5
 47d:	0000d1        	l32r	a13, fffc0480 <Compile_Select+0xfffc0480>
			47d: R_XTENSA_SLOT0_OP	.literal.Compile_Select
 480:	0000b1        	l32r	a11, fffc0480 <Compile_Select+0xfffc0480>
			480: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 483:	0000a1        	l32r	a10, fffc0484 <Compile_Select+0xfffc0484>
			483: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 486:	d7a0c2        	movi	a12, 215
 489:	000081        	l32r	a8, fffc048c <Compile_Select+0xfffc048c>
			489: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x84
			489: R_XTENSA_ASM_EXPAND	printf
 48c:	0008e0        	callx8	a8
 48f:	211382        	l16ui	a8, a3, 66
 492:	ffa786        	j	334 <Compile_Select+0x334>
			492: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x334
 495:	0000d1        	l32r	a13, fffc0498 <Compile_Select+0xfffc0498>
			495: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0xc
 498:	0000b1        	l32r	a11, fffc0498 <Compile_Select+0xfffc0498>
			498: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 49b:	0000a1        	l32r	a10, fffc049c <Compile_Select+0xfffc049c>
			49b: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 49e:	07a1c2        	movi	a12, 0x107
 4a1:	000081        	l32r	a8, fffc04a4 <Compile_Select+0xfffc04a4>
			4a1: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x88
			4a1: R_XTENSA_ASM_EXPAND	printf
 4a4:	0008e0        	callx8	a8
 4a7:	211392        	l16ui	a9, a3, 66
 4aa:	022697        	blt	a6, a9, 4b0 <Compile_Select+0x4b0>
			4aa: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x4b0
 4ad:	fef006        	j	71 <Compile_Select+0x71>
			4ad: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x71
 4b0:	90a630        	addx2	a10, a6, a3
 4b3:	a81aa2        	l16ui	a10, a10, 0x150
 4b6:	0000b1        	l32r	a11, fffc04b8 <Compile_Select+0xfffc04b8>
			4b6: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x2c
 4b9:	02bba7        	bgeu	a11, a10, 4bf <Compile_Select+0x4bf>
			4b9: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x4bf
 4bc:	ff84c6        	j	2d3 <Compile_Select+0x2d3>
			4bc: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x2d3
 4bf:	feeb86        	j	71 <Compile_Select+0x71>
			4bf: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x71
 4c2:	00          	.byte	00
 4c3:	00          	.byte	00
 4c4:	0506d6        	bgez	a6, 518 <Compile_Select+0x518>
			4c4: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x518
 4c7:	2013a2        	l16ui	a10, a3, 64
 4ca:	023ab7        	bltu	a10, a11, 4d0 <Compile_Select+0x4d0>
			4ca: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x4d0
 4cd:	003a06        	j	5b9 <Compile_Select+0x5b9>
			4cd: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x5b9
 4d0:	07bd      	mov.n	a11, a7
 4d2:	03ad      	mov.n	a10, a3
 4d4:	000081        	l32r	a8, fffc04d4 <Compile_Select+0xfffc04d4>
			4d4: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8c
			4d4: R_XTENSA_ASM_EXPAND	.text.PreserveRegisterIfOccupied
 4d7:	0008e0        	callx8	a8
 4da:	c1aa56        	bnez	a10, f8 <Compile_Select+0xf8>
			4da: R_XTENSA_SLOT0_OP	.text.Compile_Select+0xf8
 4dd:	2113b2        	l16ui	a11, a3, 66
 4e0:	ff4f46        	j	221 <Compile_Select+0x221>
			4e0: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x221
 4e3:	00          	.byte	00
 4e4:	0000d1        	l32r	a13, fffc04e4 <Compile_Select+0xfffc04e4>
			4e4: R_XTENSA_SLOT0_OP	.literal.Compile_Select
 4e7:	0000b1        	l32r	a11, fffc04e8 <Compile_Select+0xfffc04e8>
			4e7: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 4ea:	0000a1        	l32r	a10, fffc04ec <Compile_Select+0xfffc04ec>
			4ea: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 4ed:	d7a0c2        	movi	a12, 215
 4f0:	000081        	l32r	a8, fffc04f0 <Compile_Select+0xfffc04f0>
			4f0: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x90
			4f0: R_XTENSA_ASM_EXPAND	printf
 4f3:	0008e0        	callx8	a8
 4f6:	211392        	l16ui	a9, a3, 66
 4f9:	ff7886        	j	2df <Compile_Select+0x2df>
			4f9: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x2df
 4fc:	00          	.byte	00
 4fd:	0000b1        	l32r	a11, fffc0500 <Compile_Select+0xfffc0500>
			4fd: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 500:	0000d1        	l32r	a13, fffc0500 <Compile_Select+0xfffc0500>
			500: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0xc
 503:	0000a1        	l32r	a10, fffc0504 <Compile_Select+0xfffc0504>
			503: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 506:	07a1c2        	movi	a12, 0x107
 509:	000081        	l32r	a8, fffc050c <Compile_Select+0xfffc050c>
			509: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x94
			509: R_XTENSA_ASM_EXPAND	printf
 50c:	0008e0        	callx8	a8
 50f:	2113b2        	l16ui	a11, a3, 66
 512:	0226b7        	blt	a6, a11, 518 <Compile_Select+0x518>
			512: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x518
 515:	ff21c6        	j	1a0 <Compile_Select+0x1a0>
			515: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x1a0
 518:	906630        	addx2	a6, a6, a3
 51b:	a81692        	l16ui	a9, a6, 0x150
 51e:	0000a1        	l32r	a10, fffc0520 <Compile_Select+0xfffc0520>
			51e: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x2c
 521:	02ba97        	bgeu	a10, a9, 527 <Compile_Select+0x527>
			521: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x527
 524:	ff3e46        	j	221 <Compile_Select+0x221>
			524: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x221
 527:	ff1d46        	j	1a0 <Compile_Select+0x1a0>
			527: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x1a0
 52a:	00          	.byte	00
 52b:	00          	.byte	00
 52c:	0444d6        	bgez	a4, 574 <Compile_Select+0x574>
			52c: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x574
 52f:	201382        	l16ui	a8, a3, 64
 532:	02b8b7        	bgeu	a8, a11, 538 <Compile_Select+0x538>
			532: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x538
 535:	002f46        	j	5f6 <Compile_Select+0x5f6>
			535: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x5f6
 538:	2e0382        	l8ui	a8, a3, 46
 53b:	0b7856        	bnez	a8, 5f6 <Compile_Select+0x5f6>
			53b: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x5f6
 53e:	0000b1        	l32r	a11, fffc0540 <Compile_Select+0xfffc0540>
			53e: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 541:	0000d1        	l32r	a13, fffc0544 <Compile_Select+0xfffc0544>
			541: R_XTENSA_SLOT0_OP	.literal.Compile_Select
 544:	0000a1        	l32r	a10, fffc0544 <Compile_Select+0xfffc0544>
			544: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 547:	d7a0c2        	movi	a12, 215
 54a:	000081        	l32r	a8, fffc054c <Compile_Select+0xfffc054c>
			54a: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x98
			54a: R_XTENSA_ASM_EXPAND	printf
 54d:	0008e0        	callx8	a8
 550:	2113b2        	l16ui	a11, a3, 66
 553:	ff3f86        	j	255 <Compile_Select+0x255>
			553: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x255
 556:	00          	.byte	00
 557:	00          	.byte	00
 558:	00          	.byte	00
 559:	0000b1        	l32r	a11, fffc055c <Compile_Select+0xfffc055c>
			559: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 55c:	0000d1        	l32r	a13, fffc055c <Compile_Select+0xfffc055c>
			55c: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0xc
 55f:	0000a1        	l32r	a10, fffc0560 <Compile_Select+0xfffc0560>
			55f: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 562:	07a1c2        	movi	a12, 0x107
 565:	000081        	l32r	a8, fffc0568 <Compile_Select+0xfffc0568>
			565: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x9c
			565: R_XTENSA_ASM_EXPAND	printf
 568:	0008e0        	callx8	a8
 56b:	2113b2        	l16ui	a11, a3, 66
 56e:	0224b7        	blt	a4, a11, 574 <Compile_Select+0x574>
			56e: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x574
 571:	004cc6        	j	6a8 <Compile_Select+0x6a8>
			571: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x6a8
 574:	a8a092        	movi	a9, 168
 577:	849a      	add.n	a8, a4, a9
 579:	908830        	addx2	a8, a8, a3
 57c:	001882        	l16ui	a8, a8, 0
 57f:	0000a1        	l32r	a10, fffc0580 <Compile_Select+0xfffc0580>
			57f: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x2c
 582:	023a87        	bltu	a10, a8, 588 <Compile_Select+0x588>
			582: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x588
 585:	0042c6        	j	694 <Compile_Select+0x694>
			585: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x694
 588:	075d      	mov.n	a5, a7
 58a:	ff3846        	j	26f <Compile_Select+0x26f>
			58a: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x26f
 58d:	3178      	l32i.n	a7, a1, 12
 58f:	0000a1        	l32r	a10, fffc0590 <Compile_Select+0xfffc0590>
			58f: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x14
 592:	970b      	addi.n	a9, a7, -1
 594:	a09950        	addx4	a9, a9, a5
 597:	a099a0        	addx4	a9, a9, a10
 59a:	09b8      	l32i.n	a11, a9, 0
 59c:	febe46        	j	99 <Compile_Select+0x99>
			59c: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x99
 59f:	00          	.byte	00
 5a0:	0000b1        	l32r	a11, fffc05a0 <Compile_Select+0xfffc05a0>
			5a0: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 5a3:	0000d1        	l32r	a13, fffc05a4 <Compile_Select+0xfffc05a4>
			5a3: R_XTENSA_SLOT0_OP	.literal.Compile_Select
 5a6:	0000a1        	l32r	a10, fffc05a8 <Compile_Select+0xfffc05a8>
			5a6: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 5a9:	d7a0c2        	movi	a12, 215
 5ac:	000081        	l32r	a8, fffc05ac <Compile_Select+0xfffc05ac>
			5ac: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0xa0
			5ac: R_XTENSA_ASM_EXPAND	printf
 5af:	0008e0        	callx8	a8
 5b2:	2113b2        	l16ui	a11, a3, 66
 5b5:	ff1fc6        	j	238 <Compile_Select+0x238>
			5b5: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x238
 5b8:	00          	.byte	00
 5b9:	2e03c2        	l8ui	a12, a3, 46
 5bc:	660b      	addi.n	a6, a6, -1
 5be:	beac16        	beqz	a12, 1ac <Compile_Select+0x1ac>
			5be: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x1ac
 5c1:	0b4696        	bltz	a6, 679 <Compile_Select+0x679>
			5c1: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x679
 5c4:	906630        	addx2	a6, a6, a3
 5c7:	a81692        	l16ui	a9, a6, 0x150
 5ca:	0000c1        	l32r	a12, fffc05cc <Compile_Select+0xfffc05cc>
			5ca: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x2c
 5cd:	02bc97        	bgeu	a12, a9, 5d3 <Compile_Select+0x5d3>
			5cd: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x5d3
 5d0:	ff1406        	j	224 <Compile_Select+0x224>
			5d0: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x224
 5d3:	ff0086        	j	1d9 <Compile_Select+0x1d9>
			5d3: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x1d9
 5d6:	00          	.byte	00
 5d7:	00          	.byte	00
 5d8:	2e03a2        	l8ui	a10, a3, 46
 5db:	a7ea56        	bnez	a10, 5d <Compile_Select+0x5d>
			5db: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x5d
 5de:	0000d1        	l32r	a13, fffc05e0 <Compile_Select+0xfffc05e0>
			5de: R_XTENSA_SLOT0_OP	.literal.Compile_Select
 5e1:	0000b1        	l32r	a11, fffc05e4 <Compile_Select+0xfffc05e4>
			5e1: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 5e4:	0000a1        	l32r	a10, fffc05e4 <Compile_Select+0xfffc05e4>
			5e4: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 5e7:	d7a0c2        	movi	a12, 215
 5ea:	000081        	l32r	a8, fffc05ec <Compile_Select+0xfffc05ec>
			5ea: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0xa4
			5ea: R_XTENSA_ASM_EXPAND	printf
 5ed:	0008e0        	callx8	a8
 5f0:	211392        	l16ui	a9, a3, 66
 5f3:	fe9986        	j	5d <Compile_Select+0x5d>
			5f3: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x5d
 5f6:	000081        	l32r	a8, fffc05f8 <Compile_Select+0xfffc05f8>
			5f6: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x20
 5f9:	ff1bc6        	j	26c <Compile_Select+0x26c>
			5f9: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x26c
 5fc:	0000b1        	l32r	a11, fffc05fc <Compile_Select+0xfffc05fc>
			5fc: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 5ff:	0000d1        	l32r	a13, fffc0600 <Compile_Select+0xfffc0600>
			5ff: R_XTENSA_SLOT0_OP	.literal.Compile_Select
 602:	0000a1        	l32r	a10, fffc0604 <Compile_Select+0xfffc0604>
			602: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 605:	d7a0c2        	movi	a12, 215
 608:	000081        	l32r	a8, fffc0608 <Compile_Select+0xfffc0608>
			608: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0xa8
			608: R_XTENSA_ASM_EXPAND	printf
 60b:	0008e0        	callx8	a8
 60e:	2113b2        	l16ui	a11, a3, 66
 611:	fede46        	j	18e <Compile_Select+0x18e>
			611: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x18e
 614:	0000b1        	l32r	a11, fffc0614 <Compile_Select+0xfffc0614>
			614: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 617:	0000d1        	l32r	a13, fffc0618 <Compile_Select+0xfffc0618>
			617: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0xc
 61a:	0000a1        	l32r	a10, fffc061c <Compile_Select+0xfffc061c>
			61a: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 61d:	07a1c2        	movi	a12, 0x107
 620:	000081        	l32r	a8, fffc0620 <Compile_Select+0xfffc0620>
			620: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0xac
			620: R_XTENSA_ASM_EXPAND	printf
 623:	0008e0        	callx8	a8
 626:	2113b2        	l16ui	a11, a3, 66
 629:	2013a2        	l16ui	a10, a3, 64
 62c:	9426b7        	blt	a6, a11, 5c4 <Compile_Select+0x5c4>
			62c: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x5c4
 62f:	fee986        	j	1d9 <Compile_Select+0x1d9>
			62f: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x1d9
 632:	00          	.byte	00
 633:	00          	.byte	00
 634:	2013a2        	l16ui	a10, a3, 64
 637:	ffe186        	j	5c1 <Compile_Select+0x5c1>
			637: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x5c1
 63a:	00          	.byte	00
 63b:	00          	.byte	00
 63c:	0000b1        	l32r	a11, fffc063c <Compile_Select+0xfffc063c>
			63c: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x4
 63f:	0000d1        	l32r	a13, fffc0640 <Compile_Select+0xfffc0640>
			63f: R_XTENSA_SLOT0_OP	.literal.Compile_Select
 642:	0000a1        	l32r	a10, fffc0644 <Compile_Select+0xfffc0644>
			642: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x8
 645:	d7a0c2        	movi	a12, 215
 648:	000081        	l32r	a8, fffc0648 <Compile_Select+0xfffc0648>
			648: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0xb0
			648: R_XTENSA_ASM_EXPAND	printf
 64b:	0008e0        	callx8	a8
 64e:	2113b2        	l16ui	a11, a3, 66
 651:	fee346        	j	1e2 <Compile_Select+0x1e2>
			651: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x1e2
 654:	201392        	l16ui	a9, a3, 64
 657:	02b987        	bgeu	a9, a8, 65d <Compile_Select+0x65d>
			657: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x65d
 65a:	ff5086        	j	3a0 <Compile_Select+0x3a0>
			65a: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x3a0
 65d:	2e0392        	l8ui	a9, a3, 46
 660:	d3c956        	bnez	a9, 3a0 <Compile_Select+0x3a0>
			660: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x3a0
 663:	ff4906        	j	38b <Compile_Select+0x38b>
			663: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x38b
 666:	00          	.byte	00
 667:	00          	.byte	00
 668:	201392        	l16ui	a9, a3, 64
 66b:	a80b      	addi.n	a10, a8, -1
 66d:	f4a0a0        	extui	a10, a10, 0, 16
 670:	02b987        	bgeu	a9, a8, 676 <Compile_Select+0x676>
			670: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x676
 673:	ff3386        	j	345 <Compile_Select+0x345>
			673: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x345
 676:	fff8c6        	j	65d <Compile_Select+0x65d>
			676: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x65d
 679:	023ab7        	bltu	a10, a11, 67f <Compile_Select+0x67f>
			679: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x67f
 67c:	fed706        	j	1dc <Compile_Select+0x1dc>
			67c: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x1dc
 67f:	239980        	sext	a9, a9, 15
 682:	fec962        	addi	a6, a9, -2
 685:	e47696        	bltz	a6, 4d0 <Compile_Select+0x4d0>
			685: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x4d0
 688:	fee186        	j	212 <Compile_Select+0x212>
			688: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x212
 68b:	00          	.byte	00
 68c:	000091        	l32r	a9, fffc068c <Compile_Select+0xfffc068c>
			68c: R_XTENSA_SLOT0_OP	.literal.Compile_Select+0x20
 68f:	ff1f06        	j	30f <Compile_Select+0x30f>
			68f: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x30f
 692:	00          	.byte	00
 693:	00          	.byte	00
 694:	201382        	l16ui	a8, a3, 64
 697:	02b8b7        	bgeu	a8, a11, 69d <Compile_Select+0x69d>
			697: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x69d
 69a:	feedc6        	j	255 <Compile_Select+0x255>
			69a: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x255
 69d:	2e03a2        	l8ui	a10, a3, 46
 6a0:	bb1a56        	bnez	a10, 255 <Compile_Select+0x255>
			6a0: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x255
 6a3:	ffa5c6        	j	53e <Compile_Select+0x53e>
			6a3: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x53e
 6a6:	00          	.byte	00
 6a7:	00          	.byte	00
 6a8:	201382        	l16ui	a8, a3, 64
 6ab:	eeb8b7        	bgeu	a8, a11, 69d <Compile_Select+0x69d>
			6ab: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x69d
 6ae:	8b0b      	addi.n	a8, a11, -1
 6b0:	f48080        	extui	a8, a8, 0, 16
 6b3:	feea46        	j	260 <Compile_Select+0x260>
			6b3: R_XTENSA_SLOT0_OP	.text.Compile_Select+0x260

Disassembly of section .text.PushConst:

00000000 <PushConst>:
   0:	008136        	entry	a1, 64
   3:	d288      	l32i.n	a8, a2, 52
   5:	2149      	s32i.n	a4, a1, 8
   7:	3159      	s32i.n	a5, a1, 12
   9:	023d      	mov.n	a3, a2
   b:	17b816        	beqz	a8, 18a <PushConst+0x18a>
			b: R_XTENSA_SLOT0_OP	.text.PushConst+0x18a
   e:	06ad      	mov.n	a10, a6
  10:	000081        	l32r	a8, fffc0010 <PushConst+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.PushConst+0x28
			10: R_XTENSA_ASM_EXPAND	Is64BitType
  13:	0008e0        	callx8	a8
  16:	0a5d      	mov.n	a5, a10
  18:	20a660        	or	a10, a6, a6
  1b:	000081        	l32r	a8, fffc001c <PushConst+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.PushConst+0x2c
			1b: R_XTENSA_ASM_EXPAND	Is64BitType
  1e:	0008e0        	callx8	a8
  21:	2212d2        	l16ui	a13, a2, 68
  24:	231282        	l16ui	a8, a2, 70
  27:	c088d0        	sub	a8, a8, a13
  2a:	09ea56        	bnez	a10, cc <PushConst+0xcc>
			2a: R_XTENSA_SLOT0_OP	.text.PushConst+0xcc
  2d:	f42080        	extui	a2, a8, 0, 16
  30:	046216        	beqz	a2, 7a <PushConst+0x7a>
			30: R_XTENSA_SLOT0_OP	.text.PushConst+0x7a
  33:	50c3e2        	addi	a14, a3, 80
  36:	046556        	bnez	a5, 80 <PushConst+0x80>
			36: R_XTENSA_SLOT0_OP	.text.PushConst+0x80
  39:	057d      	mov.n	a7, a5
  3b:	50a4f2        	movi	a15, 0x450
  3e:	4d7a      	add.n	a4, a13, a7
  40:	f44040        	extui	a4, a4, 0, 16
  43:	934a      	add.n	a9, a3, a4
  45:	99fa      	add.n	a9, a9, a15
  47:	000992        	l8ui	a9, a9, 0
  4a:	4c0c      	movi.n	a12, 4
  4c:	0ebd      	mov.n	a11, a14
  4e:	18c1a2        	addi	a10, a1, 24
  51:	b99c      	beqz.n	a9, 70 <PushConst+0x70>
			51: R_XTENSA_SLOT0_OP	.text.PushConst+0x70
  53:	01e9      	s32i.n	a14, a1, 0
  55:	11f9      	s32i.n	a15, a1, 4
  57:	000081        	l32r	a8, fffc0058 <PushConst+0xfffc0058>
			57: R_XTENSA_SLOT0_OP	.literal.PushConst+0x30
			57: R_XTENSA_ASM_EXPAND	memcpy
  5a:	0008e0        	callx8	a8
  5d:	6198      	l32i.n	a9, a1, 24
  5f:	21a8      	l32i.n	a10, a1, 8
  61:	31b8      	l32i.n	a11, a1, 12
  63:	01e8      	l32i.n	a14, a1, 0
  65:	11f8      	l32i.n	a15, a1, 4
  67:	029a97        	bne	a10, a9, 6d <PushConst+0x6d>
			67: R_XTENSA_SLOT0_OP	.text.PushConst+0x6d
  6a:	00ae86        	j	328 <PushConst+0x328>
			6a: R_XTENSA_SLOT0_OP	.text.PushConst+0x328
  6d:	2213d2        	l16ui	a13, a3, 68
  70:	771b      	addi.n	a7, a7, 1
  72:	f47070        	extui	a7, a7, 0, 16
  75:	ee4b      	addi.n	a14, a14, 4
  77:	c39277        	bne	a2, a7, 3e <PushConst+0x3e>
			77: R_XTENSA_SLOT0_OP	.text.PushConst+0x3e
  7a:	170c      	movi.n	a7, 1
  7c:	0015c6        	j	d7 <PushConst+0xd7>
			7c: R_XTENSA_SLOT0_OP	.text.PushConst+0xd7
  7f:	00          	.byte	00
  80:	0a7d      	mov.n	a7, a10
  82:	50a482        	movi	a8, 0x450
  85:	47da      	add.n	a4, a7, a13
  87:	f44040        	extui	a4, a4, 0, 16
  8a:	934a      	add.n	a9, a3, a4
  8c:	998a      	add.n	a9, a9, a8
  8e:	000992        	l8ui	a9, a9, 0
  91:	8c0c      	movi.n	a12, 8
  93:	0ebd      	mov.n	a11, a14
  95:	18c1a2        	addi	a10, a1, 24
  98:	09ac      	beqz.n	a9, bc <PushConst+0xbc>
			98: R_XTENSA_SLOT0_OP	.text.PushConst+0xbc
  9a:	016182        	s32i	a8, a1, 4
  9d:	0061e2        	s32i	a14, a1, 0
  a0:	000081        	l32r	a8, fffc00a0 <PushConst+0xfffc00a0>
			a0: R_XTENSA_SLOT0_OP	.literal.PushConst+0x34
			a0: R_XTENSA_ASM_EXPAND	memcpy
  a3:	0008e0        	callx8	a8
  a6:	61a8      	l32i.n	a10, a1, 24
  a8:	2198      	l32i.n	a9, a1, 8
  aa:	71c8      	l32i.n	a12, a1, 28
  ac:	31b8      	l32i.n	a11, a1, 12
  ae:	1188      	l32i.n	a8, a1, 4
  b0:	0021e2        	l32i	a14, a1, 0
  b3:	029a97        	bne	a10, a9, b9 <PushConst+0xb9>
			b3: R_XTENSA_SLOT0_OP	.text.PushConst+0xb9
  b6:	008486        	j	2cc <PushConst+0x2cc>
			b6: R_XTENSA_SLOT0_OP	.text.PushConst+0x2cc
  b9:	2213d2        	l16ui	a13, a3, 68
  bc:	771b      	addi.n	a7, a7, 1
  be:	f47070        	extui	a7, a7, 0, 16
  c1:	ee4b      	addi.n	a14, a14, 4
  c3:	be9727        	bne	a7, a2, 85 <PushConst+0x85>
			c3: R_XTENSA_SLOT0_OP	.text.PushConst+0x85
  c6:	170c      	movi.n	a7, 1
  c8:	0002c6        	j	d7 <PushConst+0xd7>
			c8: R_XTENSA_SLOT0_OP	.text.PushConst+0xd7
  cb:	00          	.byte	00
  cc:	f48080        	extui	a8, a8, 0, 16
  cf:	0228b6        	bltui	a8, 2, d5 <PushConst+0xd5>
			cf: R_XTENSA_SLOT0_OP	.text.PushConst+0xd5
  d2:	002e06        	j	18e <PushConst+0x18e>
			d2: R_XTENSA_SLOT0_OP	.text.PushConst+0x18e
  d5:	270c      	movi.n	a7, 2
  d7:	2513e2        	l16ui	a14, a3, 74
  da:	40cd82        	addi	a8, a13, 64
  dd:	f48080        	extui	a8, a8, 0, 16
  e0:	63e8e0        	minu	a14, a8, a14
  e3:	06cd      	mov.n	a12, a6
  e5:	f87c      	movi.n	a8, -1
  e7:	16c1b2        	addi	a11, a1, 22
  ea:	03ad      	mov.n	a10, a3
  ec:	0b5182        	s16i	a8, a1, 22
  ef:	000081        	l32r	a8, fffc00f0 <PushConst+0xfffc00f0>
			ef: R_XTENSA_SLOT0_OP	.literal.PushConst+0x38
			ef: R_XTENSA_ASM_EXPAND	.text.AllocateSlotsWithinRange
  f2:	0008e0        	callx8	a8
  f5:	133a16        	beqz	a10, 22c <PushConst+0x22c>
			f5: R_XTENSA_SLOT0_OP	.text.PushConst+0x22c
  f8:	111556        	bnez	a5, 20d <PushConst+0x20d>
			f8: R_XTENSA_SLOT0_OP	.text.PushConst+0x20d
  fb:	0000b1        	l32r	a11, fffc00fc <PushConst+0xfffc00fc>
			fb: R_XTENSA_SLOT0_OP	.literal.PushConst+0x10
  fe:	03ad      	mov.n	a10, a3
 100:	000081        	l32r	a8, fffc0100 <PushConst+0xfffc0100>
			100: R_XTENSA_SLOT0_OP	.literal.PushConst+0x3c
			100: R_XTENSA_ASM_EXPAND	.text.EmitOp
 103:	0008e0        	callx8	a8
 106:	0a2d      	mov.n	a2, a10
 108:	080a56        	bnez	a10, 18c <PushConst+0x18c>
			108: R_XTENSA_SLOT0_OP	.text.PushConst+0x18c
 10b:	21b8      	l32i.n	a11, a1, 8
 10d:	0d23a2        	l32i	a10, a3, 52
 110:	000081        	l32r	a8, fffc0110 <PushConst+0xfffc0110>
			110: R_XTENSA_SLOT0_OP	.literal.PushConst+0x40
			110: R_XTENSA_ASM_EXPAND	EmitWord32
 113:	0008e0        	callx8	a8
 116:	f87c      	movi.n	a8, -1
 118:	2513d2        	l16ui	a13, a3, 74
 11b:	00a2e2        	movi	a14, 0x200
 11e:	06cd      	mov.n	a12, a6
 120:	18c1b2        	addi	a11, a1, 24
 123:	03ad      	mov.n	a10, a3
 125:	0c5182        	s16i	a8, a1, 24
 128:	000081        	l32r	a8, fffc0128 <PushConst+0xfffc0128>
			128: R_XTENSA_SLOT0_OP	.literal.PushConst+0x44
			128: R_XTENSA_ASM_EXPAND	.text.AllocateSlotsWithinRange
 12b:	0008e0        	callx8	a8
 12e:	0a2d      	mov.n	a2, a10
 130:	058a56        	bnez	a10, 18c <PushConst+0x18c>
			130: R_XTENSA_SLOT0_OP	.text.PushConst+0x18c
 133:	211382        	l16ui	a8, a3, 66
 136:	ffa092        	movi	a9, 255
 139:	781b      	addi.n	a7, a8, 1
 13b:	f47070        	extui	a7, a7, 0, 16
 13e:	215372        	s16i	a7, a3, 66
 141:	0c1152        	l16ui	a5, a1, 24
 144:	383987        	bltu	a9, a8, 180 <PushConst+0x180>
			144: R_XTENSA_SLOT0_OP	.text.PushConst+0x180
 147:	909830        	addx2	a9, a8, a3
 14a:	a85952        	s16i	a5, a9, 0x150
 14d:	838a      	add.n	a8, a3, a8
 14f:	50a392        	movi	a9, 0x350
 152:	889a      	add.n	a8, a8, a9
 154:	000091        	l32r	a9, fffc0154 <PushConst+0xfffc0154>
			154: R_XTENSA_SLOT0_OP	.literal.PushConst+0x1c
 157:	0000a1        	l32r	a10, fffc0158 <PushConst+0xfffc0158>
			157: R_XTENSA_SLOT0_OP	.literal.PushConst+0x20
 15a:	959a      	add.n	a9, a5, a9
 15c:	004862        	s8i	a6, a8, 0
 15f:	f48090        	extui	a8, a9, 0, 16
 162:	1a3a87        	bltu	a10, a8, 180 <PushConst+0x180>
			162: R_XTENSA_SLOT0_OP	.text.PushConst+0x180
 165:	000091        	l32r	a9, fffc0168 <PushConst+0xfffc0168>
			165: R_XTENSA_SLOT0_OP	.literal.PushConst+0x18
 168:	180c      	movi.n	a8, 1
 16a:	959a      	add.n	a9, a5, a9
 16c:	026d      	mov.n	a6, a2
 16e:	836890        	moveqz	a6, a8, a9
 171:	906630        	addx2	a6, a6, a3
 174:	06d662        	addmi	a6, a6, 0x600
 177:	291682        	l16ui	a8, a6, 82
 17a:	1b2856        	bnez	a8, 330 <PushConst+0x330>
			17a: R_XTENSA_SLOT0_OP	.text.PushConst+0x330
 17d:	295672        	s16i	a7, a6, 82
 180:	d3a8      	l32i.n	a10, a3, 52
 182:	05bd      	mov.n	a11, a5
 184:	000081        	l32r	a8, fffc0184 <PushConst+0xfffc0184>
			184: R_XTENSA_SLOT0_OP	.literal.PushConst+0x48
			184: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 187:	0008e0        	callx8	a8
 18a:	020c      	movi.n	a2, 0
 18c:	f01d      	retw.n
 18e:	11d9      	s32i.n	a13, a1, 4
 190:	2a0c      	movi.n	a10, 2
 192:	000081        	l32r	a8, fffc0194 <PushConst+0xfffc0194>
			192: R_XTENSA_SLOT0_OP	.literal.PushConst+0x4c
			192: R_XTENSA_ASM_EXPAND	Is64BitType
 195:	0008e0        	callx8	a8
 198:	11d8      	l32i.n	a13, a1, 4
 19a:	231282        	l16ui	a8, a2, 70
 19d:	ddaa      	add.n	a13, a13, a10
 19f:	107ad0        	and	a7, a10, a13
 1a2:	3077d0        	xor	a7, a7, a13
 1a5:	f47070        	extui	a7, a7, 0, 16
 1a8:	a80b      	addi.n	a10, a8, -1
 1aa:	2212d2        	l16ui	a13, a2, 68
 1ad:	0227a7        	blt	a7, a10, 1b3 <PushConst+0x1b3>
			1ad: R_XTENSA_SLOT0_OP	.text.PushConst+0x1b3
 1b0:	ffc846        	j	d5 <PushConst+0xd5>
			1b0: R_XTENSA_SLOT0_OP	.text.PushConst+0xd5
 1b3:	50a422        	movi	a2, 0x450
 1b6:	840c      	movi.n	a4, 8
 1b8:	0002c6        	j	1c7 <PushConst+0x1c7>
			1b8: R_XTENSA_SLOT0_OP	.text.PushConst+0x1c7
 1bb:	00          	.byte	00
 1bc:	772b      	addi.n	a7, a7, 2
 1be:	f47070        	extui	a7, a7, 0, 16
 1c1:	0227a7        	blt	a7, a10, 1c7 <PushConst+0x1c7>
			1c1: R_XTENSA_SLOT0_OP	.text.PushConst+0x1c7
 1c4:	ffc346        	j	d5 <PushConst+0xd5>
			1c4: R_XTENSA_SLOT0_OP	.text.PushConst+0xd5
 1c7:	937a      	add.n	a9, a3, a7
 1c9:	871b      	addi.n	a8, a7, 1
 1cb:	992a      	add.n	a9, a9, a2
 1cd:	f48080        	extui	a8, a8, 0, 16
 1d0:	000992        	l8ui	a9, a9, 0
 1d3:	838a      	add.n	a8, a3, a8
 1d5:	808820        	add	a8, a8, a2
 1d8:	fe0916        	beqz	a9, 1bc <PushConst+0x1bc>
			1d8: R_XTENSA_SLOT0_OP	.text.PushConst+0x1bc
 1db:	000882        	l8ui	a8, a8, 0
 1de:	fda816        	beqz	a8, 1bc <PushConst+0x1bc>
			1de: R_XTENSA_SLOT0_OP	.text.PushConst+0x1bc
 1e1:	c0b7d0        	sub	a11, a7, a13
 1e4:	14cbb2        	addi	a11, a11, 20
 1e7:	20c440        	or	a12, a4, a4
 1ea:	a0bb30        	addx4	a11, a11, a3
 1ed:	18c1a2        	addi	a10, a1, 24
 1f0:	000081        	l32r	a8, fffc01f0 <PushConst+0xfffc01f0>
			1f0: R_XTENSA_SLOT0_OP	.literal.PushConst+0x50
			1f0: R_XTENSA_ASM_EXPAND	memcpy
 1f3:	0008e0        	callx8	a8
 1f6:	6198      	l32i.n	a9, a1, 24
 1f8:	2188      	l32i.n	a8, a1, 8
 1fa:	029987        	bne	a9, a8, 200 <PushConst+0x200>
			1fa: R_XTENSA_SLOT0_OP	.text.PushConst+0x200
 1fd:	005cc6        	j	374 <PushConst+0x374>
			1fd: R_XTENSA_SLOT0_OP	.text.PushConst+0x374
 200:	231382        	l16ui	a8, a3, 70
 203:	2213d2        	l16ui	a13, a3, 68
 206:	a80b      	addi.n	a10, a8, -1
 208:	ffec06        	j	1bc <PushConst+0x1bc>
			208: R_XTENSA_SLOT0_OP	.text.PushConst+0x1bc
 20b:	00          	.byte	00
 20c:	00          	.byte	00
 20d:	0000b1        	l32r	a11, fffc0210 <PushConst+0xfffc0210>
			20d: R_XTENSA_SLOT0_OP	.literal.PushConst+0xc
 210:	03ad      	mov.n	a10, a3
 212:	000081        	l32r	a8, fffc0214 <PushConst+0xfffc0214>
			212: R_XTENSA_SLOT0_OP	.literal.PushConst+0x54
			212: R_XTENSA_ASM_EXPAND	.text.EmitOp
 215:	0008e0        	callx8	a8
 218:	0a2d      	mov.n	a2, a10
 21a:	f6ea56        	bnez	a10, 18c <PushConst+0x18c>
			21a: R_XTENSA_SLOT0_OP	.text.PushConst+0x18c
 21d:	d3a8      	l32i.n	a10, a3, 52
 21f:	21c8      	l32i.n	a12, a1, 8
 221:	31d8      	l32i.n	a13, a1, 12
 223:	000081        	l32r	a8, fffc0224 <PushConst+0xfffc0224>
			223: R_XTENSA_SLOT0_OP	.literal.PushConst+0x58
			223: R_XTENSA_ASM_EXPAND	EmitWord64
 226:	0008e0        	callx8	a8
 229:	ffba46        	j	116 <PushConst+0x116>
			229: R_XTENSA_SLOT0_OP	.text.PushConst+0x116
 22c:	0b1122        	l16ui	a2, a1, 22
 22f:	000081        	l32r	a8, fffc0230 <PushConst+0xfffc0230>
			22f: R_XTENSA_SLOT0_OP	.literal.PushConst+0x24
 232:	029287        	bne	a2, a8, 238 <PushConst+0x238>
			232: R_XTENSA_SLOT0_OP	.text.PushConst+0x238
 235:	ffafc6        	j	f8 <PushConst+0xf8>
			235: R_XTENSA_SLOT0_OP	.text.PushConst+0xf8
 238:	221342        	l16ui	a4, a3, 68
 23b:	f83c      	movi.n	a8, 63
 23d:	c04240        	sub	a4, a2, a4
 240:	f44040        	extui	a4, a4, 0, 16
 243:	02b847        	bgeu	a8, a4, 249 <PushConst+0x249>
			243: R_XTENSA_SLOT0_OP	.text.PushConst+0x249
 246:	006886        	j	3ec <PushConst+0x3ec>
			246: R_XTENSA_SLOT0_OP	.text.PushConst+0x3ec
 249:	14c4a2        	addi	a10, a4, 20
 24c:	a0aa30        	addx4	a10, a10, a3
 24f:	06b556        	bnez	a5, 2be <PushConst+0x2be>
			24f: R_XTENSA_SLOT0_OP	.text.PushConst+0x2be
 252:	2188      	l32i.n	a8, a1, 8
 254:	4c0c      	movi.n	a12, 4
 256:	18c1b2        	addi	a11, a1, 24
 259:	6189      	s32i.n	a8, a1, 24
 25b:	000081        	l32r	a8, fffc025c <PushConst+0xfffc025c>
			25b: R_XTENSA_SLOT0_OP	.literal.PushConst+0x5c
			25b: R_XTENSA_ASM_EXPAND	memcpy
 25e:	0008e0        	callx8	a8
 261:	211382        	l16ui	a8, a3, 66
 264:	ffa092        	movi	a9, 255
 267:	581b      	addi.n	a5, a8, 1
 269:	f45050        	extui	a5, a5, 0, 16
 26c:	215352        	s16i	a5, a3, 66
 26f:	393987        	bltu	a9, a8, 2ac <PushConst+0x2ac>
			26f: R_XTENSA_SLOT0_OP	.text.PushConst+0x2ac
 272:	909830        	addx2	a9, a8, a3
 275:	a85922        	s16i	a2, a9, 0x150
 278:	838a      	add.n	a8, a3, a8
 27a:	50a392        	movi	a9, 0x350
 27d:	889a      	add.n	a8, a8, a9
 27f:	000091        	l32r	a9, fffc0280 <PushConst+0xfffc0280>
			27f: R_XTENSA_SLOT0_OP	.literal.PushConst+0x1c
 282:	0000a1        	l32r	a10, fffc0284 <PushConst+0xfffc0284>
			282: R_XTENSA_SLOT0_OP	.literal.PushConst+0x20
 285:	929a      	add.n	a9, a2, a9
 287:	004862        	s8i	a6, a8, 0
 28a:	f48090        	extui	a8, a9, 0, 16
 28d:	1b3a87        	bltu	a10, a8, 2ac <PushConst+0x2ac>
			28d: R_XTENSA_SLOT0_OP	.text.PushConst+0x2ac
 290:	000081        	l32r	a8, fffc0290 <PushConst+0xfffc0290>
			290: R_XTENSA_SLOT0_OP	.literal.PushConst+0x18
 293:	160c      	movi.n	a6, 1
 295:	828a      	add.n	a8, a2, a8
 297:	00a092        	movi	a9, 0
 29a:	936980        	movnez	a6, a9, a8
 29d:	906630        	addx2	a6, a6, a3
 2a0:	06d662        	addmi	a6, a6, 0x600
 2a3:	291682        	l16ui	a8, a6, 82
 2a6:	09b856        	bnez	a8, 345 <PushConst+0x345>
			2a6: R_XTENSA_SLOT0_OP	.text.PushConst+0x345
 2a9:	295652        	s16i	a5, a6, 82
 2ac:	231392        	l16ui	a9, a3, 70
 2af:	827a      	add.n	a8, a2, a7
 2b1:	538980        	max	a8, a9, a8
 2b4:	235382        	s16i	a8, a3, 70
 2b7:	020c      	movi.n	a2, 0
 2b9:	ffb3c6        	j	18c <PushConst+0x18c>
			2b9: R_XTENSA_SLOT0_OP	.text.PushConst+0x18c
 2bc:	00          	.byte	00
 2bd:	00          	.byte	00
 2be:	8c0c      	movi.n	a12, 8
 2c0:	b1ca      	add.n	a11, a1, a12
 2c2:	000081        	l32r	a8, fffc02c4 <PushConst+0xfffc02c4>
			2c2: R_XTENSA_SLOT0_OP	.literal.PushConst+0x60
			2c2: R_XTENSA_ASM_EXPAND	memcpy
 2c5:	0008e0        	callx8	a8
 2c8:	ffe546        	j	261 <PushConst+0x261>
			2c8: R_XTENSA_SLOT0_OP	.text.PushConst+0x261
 2cb:	00          	.byte	00
 2cc:	021cb7        	beq	a12, a11, 2d2 <PushConst+0x2d2>
			2cc: R_XTENSA_SLOT0_OP	.text.PushConst+0x2d2
 2cf:	ff7986        	j	b9 <PushConst+0xb9>
			2cf: R_XTENSA_SLOT0_OP	.text.PushConst+0xb9
 2d2:	211382        	l16ui	a8, a3, 66
 2d5:	ffa092        	movi	a9, 255
 2d8:	781b      	addi.n	a7, a8, 1
 2da:	f47070        	extui	a7, a7, 0, 16
 2dd:	215372        	s16i	a7, a3, 66
 2e0:	02b987        	bgeu	a9, a8, 2e6 <PushConst+0x2e6>
			2e0: R_XTENSA_SLOT0_OP	.text.PushConst+0x2e6
 2e3:	ffa8c6        	j	18a <PushConst+0x18a>
			2e3: R_XTENSA_SLOT0_OP	.text.PushConst+0x18a
 2e6:	909830        	addx2	a9, a8, a3
 2e9:	a85942        	s16i	a4, a9, 0x150
 2ec:	838a      	add.n	a8, a3, a8
 2ee:	50a392        	movi	a9, 0x350
 2f1:	889a      	add.n	a8, a8, a9
 2f3:	000091        	l32r	a9, fffc02f4 <PushConst+0xfffc02f4>
			2f3: R_XTENSA_SLOT0_OP	.literal.PushConst+0x1c
 2f6:	0000a1        	l32r	a10, fffc02f8 <PushConst+0xfffc02f8>
			2f6: R_XTENSA_SLOT0_OP	.literal.PushConst+0x20
 2f9:	949a      	add.n	a9, a4, a9
 2fb:	004862        	s8i	a6, a8, 0
 2fe:	f48090        	extui	a8, a9, 0, 16
 301:	02ba87        	bgeu	a10, a8, 307 <PushConst+0x307>
			301: R_XTENSA_SLOT0_OP	.text.PushConst+0x307
 304:	ffa086        	j	18a <PushConst+0x18a>
			304: R_XTENSA_SLOT0_OP	.text.PushConst+0x18a
 307:	000081        	l32r	a8, fffc0308 <PushConst+0xfffc0308>
			307: R_XTENSA_SLOT0_OP	.literal.PushConst+0x18
 30a:	160c      	movi.n	a6, 1
 30c:	448a      	add.n	a4, a4, a8
 30e:	080c      	movi.n	a8, 0
 310:	936840        	movnez	a6, a8, a4
 313:	906630        	addx2	a6, a6, a3
 316:	06d662        	addmi	a6, a6, 0x600
 319:	291682        	l16ui	a8, a6, 82
 31c:	c8fc      	bnez.n	a8, 35c <PushConst+0x35c>
			31c: R_XTENSA_SLOT0_OP	.text.PushConst+0x35c
 31e:	295672        	s16i	a7, a6, 82
 321:	020c      	movi.n	a2, 0
 323:	ff9946        	j	18c <PushConst+0x18c>
			323: R_XTENSA_SLOT0_OP	.text.PushConst+0x18c
 326:	00          	.byte	00
 327:	00          	.byte	00
 328:	d41b56        	bnez	a11, 6d <PushConst+0x6d>
			328: R_XTENSA_SLOT0_OP	.text.PushConst+0x6d
 32b:	ffe8c6        	j	2d2 <PushConst+0x2d2>
			32b: R_XTENSA_SLOT0_OP	.text.PushConst+0x2d2
 32e:	00          	.byte	00
 32f:	00          	.byte	00
 330:	0000d1        	l32r	a13, fffc0330 <PushConst+0xfffc0330>
			330: R_XTENSA_SLOT0_OP	.literal.PushConst
 333:	0000b1        	l32r	a11, fffc0334 <PushConst+0xfffc0334>
			333: R_XTENSA_SLOT0_OP	.literal.PushConst+0x4
 336:	0000a1        	l32r	a10, fffc0338 <PushConst+0xfffc0338>
			336: R_XTENSA_SLOT0_OP	.literal.PushConst+0x8
 339:	b2a1c2        	movi	a12, 0x1b2
 33c:	000081        	l32r	a8, fffc033c <PushConst+0xfffc033c>
			33c: R_XTENSA_SLOT0_OP	.literal.PushConst+0x64
			33c: R_XTENSA_ASM_EXPAND	printf
 33f:	0008e0        	callx8	a8
 342:	ff8dc6        	j	17d <PushConst+0x17d>
			342: R_XTENSA_SLOT0_OP	.text.PushConst+0x17d
 345:	0000d1        	l32r	a13, fffc0348 <PushConst+0xfffc0348>
			345: R_XTENSA_SLOT0_OP	.literal.PushConst
 348:	0000b1        	l32r	a11, fffc0348 <PushConst+0xfffc0348>
			348: R_XTENSA_SLOT0_OP	.literal.PushConst+0x4
 34b:	0000a1        	l32r	a10, fffc034c <PushConst+0xfffc034c>
			34b: R_XTENSA_SLOT0_OP	.literal.PushConst+0x8
 34e:	b2a1c2        	movi	a12, 0x1b2
 351:	000081        	l32r	a8, fffc0354 <PushConst+0xfffc0354>
			351: R_XTENSA_SLOT0_OP	.literal.PushConst+0x68
			351: R_XTENSA_ASM_EXPAND	printf
 354:	0008e0        	callx8	a8
 357:	ffd386        	j	2a9 <PushConst+0x2a9>
			357: R_XTENSA_SLOT0_OP	.text.PushConst+0x2a9
 35a:	00          	.byte	00
 35b:	00          	.byte	00
 35c:	0000d1        	l32r	a13, fffc035c <PushConst+0xfffc035c>
			35c: R_XTENSA_SLOT0_OP	.literal.PushConst
 35f:	0000b1        	l32r	a11, fffc0360 <PushConst+0xfffc0360>
			35f: R_XTENSA_SLOT0_OP	.literal.PushConst+0x4
 362:	0000a1        	l32r	a10, fffc0364 <PushConst+0xfffc0364>
			362: R_XTENSA_SLOT0_OP	.literal.PushConst+0x8
 365:	b2a1c2        	movi	a12, 0x1b2
 368:	000081        	l32r	a8, fffc0368 <PushConst+0xfffc0368>
			368: R_XTENSA_SLOT0_OP	.literal.PushConst+0x6c
			368: R_XTENSA_ASM_EXPAND	printf
 36b:	0008e0        	callx8	a8
 36e:	295672        	s16i	a7, a6, 82
 371:	ffeb06        	j	321 <PushConst+0x321>
			371: R_XTENSA_SLOT0_OP	.text.PushConst+0x321
 374:	7198      	l32i.n	a9, a1, 28
 376:	3188      	l32i.n	a8, a1, 12
 378:	021987        	beq	a9, a8, 37e <PushConst+0x37e>
			378: R_XTENSA_SLOT0_OP	.text.PushConst+0x37e
 37b:	ffa046        	j	200 <PushConst+0x200>
			37b: R_XTENSA_SLOT0_OP	.text.PushConst+0x200
 37e:	211382        	l16ui	a8, a3, 66
 381:	ffa092        	movi	a9, 255
 384:	581b      	addi.n	a5, a8, 1
 386:	f45050        	extui	a5, a5, 0, 16
 389:	215352        	s16i	a5, a3, 66
 38c:	02b987        	bgeu	a9, a8, 392 <PushConst+0x392>
			38c: R_XTENSA_SLOT0_OP	.text.PushConst+0x392
 38f:	ff7dc6        	j	18a <PushConst+0x18a>
			38f: R_XTENSA_SLOT0_OP	.text.PushConst+0x18a
 392:	909830        	addx2	a9, a8, a3
 395:	a85972        	s16i	a7, a9, 0x150
 398:	838a      	add.n	a8, a3, a8
 39a:	50a392        	movi	a9, 0x350
 39d:	889a      	add.n	a8, a8, a9
 39f:	000091        	l32r	a9, fffc03a0 <PushConst+0xfffc03a0>
			39f: R_XTENSA_SLOT0_OP	.literal.PushConst+0x1c
 3a2:	0000a1        	l32r	a10, fffc03a4 <PushConst+0xfffc03a4>
			3a2: R_XTENSA_SLOT0_OP	.literal.PushConst+0x20
 3a5:	979a      	add.n	a9, a7, a9
 3a7:	004862        	s8i	a6, a8, 0
 3aa:	f48090        	extui	a8, a9, 0, 16
 3ad:	02ba87        	bgeu	a10, a8, 3b3 <PushConst+0x3b3>
			3ad: R_XTENSA_SLOT0_OP	.text.PushConst+0x3b3
 3b0:	ff7586        	j	18a <PushConst+0x18a>
			3b0: R_XTENSA_SLOT0_OP	.text.PushConst+0x18a
 3b3:	000081        	l32r	a8, fffc03b4 <PushConst+0xfffc03b4>
			3b3: R_XTENSA_SLOT0_OP	.literal.PushConst+0x18
 3b6:	090c      	movi.n	a9, 0
 3b8:	778a      	add.n	a7, a7, a8
 3ba:	180c      	movi.n	a8, 1
 3bc:	938970        	movnez	a8, a9, a7
 3bf:	907830        	addx2	a7, a8, a3
 3c2:	06d772        	addmi	a7, a7, 0x600
 3c5:	291782        	l16ui	a8, a7, 82
 3c8:	88cc      	bnez.n	a8, 3d4 <PushConst+0x3d4>
			3c8: R_XTENSA_SLOT0_OP	.text.PushConst+0x3d4
 3ca:	295752        	s16i	a5, a7, 82
 3cd:	020c      	movi.n	a2, 0
 3cf:	ff6e46        	j	18c <PushConst+0x18c>
			3cf: R_XTENSA_SLOT0_OP	.text.PushConst+0x18c
 3d2:	00          	.byte	00
 3d3:	00          	.byte	00
 3d4:	0000d1        	l32r	a13, fffc03d4 <PushConst+0xfffc03d4>
			3d4: R_XTENSA_SLOT0_OP	.literal.PushConst
 3d7:	0000b1        	l32r	a11, fffc03d8 <PushConst+0xfffc03d8>
			3d7: R_XTENSA_SLOT0_OP	.literal.PushConst+0x4
 3da:	0000a1        	l32r	a10, fffc03dc <PushConst+0xfffc03dc>
			3da: R_XTENSA_SLOT0_OP	.literal.PushConst+0x8
 3dd:	b2a1c2        	movi	a12, 0x1b2
 3e0:	000081        	l32r	a8, fffc03e0 <PushConst+0xfffc03e0>
			3e0: R_XTENSA_SLOT0_OP	.literal.PushConst+0x70
			3e0: R_XTENSA_ASM_EXPAND	printf
 3e3:	0008e0        	callx8	a8
 3e6:	295752        	s16i	a5, a7, 82
 3e9:	fff806        	j	3cd <PushConst+0x3cd>
			3e9: R_XTENSA_SLOT0_OP	.text.PushConst+0x3cd
 3ec:	0000d1        	l32r	a13, fffc03ec <PushConst+0xfffc03ec>
			3ec: R_XTENSA_SLOT0_OP	.literal.PushConst+0x14
 3ef:	0000b1        	l32r	a11, fffc03f0 <PushConst+0xfffc03f0>
			3ef: R_XTENSA_SLOT0_OP	.literal.PushConst+0x4
 3f2:	0000a1        	l32r	a10, fffc03f4 <PushConst+0xfffc03f4>
			3f2: R_XTENSA_SLOT0_OP	.literal.PushConst+0x8
 3f5:	e8a2c2        	movi	a12, 0x2e8
 3f8:	000081        	l32r	a8, fffc03f8 <PushConst+0xfffc03f8>
			3f8: R_XTENSA_SLOT0_OP	.literal.PushConst+0x74
			3f8: R_XTENSA_ASM_EXPAND	printf
 3fb:	0008e0        	callx8	a8
 3fe:	ff91c6        	j	249 <PushConst+0x249>
			3fe: R_XTENSA_SLOT0_OP	.text.PushConst+0x249

Disassembly of section .text.Compile_Const_f64:

00000000 <Compile_Const_f64>:
   0:	006136        	entry	a1, 48
   3:	02a8      	l32i.n	a10, a2, 0
   5:	32d8      	l32i.n	a13, a2, 12
   7:	88a682        	movi	a8, 0x688
   a:	c28b      	addi.n	a12, a2, 8
   c:	aa8a      	add.n	a10, a10, a8
   e:	b18b      	addi.n	a11, a1, 8
  10:	080c      	movi.n	a8, 0
  12:	2189      	s32i.n	a8, a1, 8
  14:	3189      	s32i.n	a8, a1, 12
  16:	000081        	l32r	a8, fffc0018 <Compile_Const_f64+0xfffc0018>
			16: R_XTENSA_SLOT0_OP	.literal.Compile_Const_f64+0x8
			16: R_XTENSA_ASM_EXPAND	Read_f64
  19:	0008e0        	callx8	a8
  1c:	027d      	mov.n	a7, a2
  1e:	0a2d      	mov.n	a2, a10
  20:	8aec      	bnez.n	a10, 4c <Compile_Const_f64+0x4c>
			20: R_XTENSA_SLOT0_OP	.text.Compile_Const_f64+0x4c
  22:	07ad      	mov.n	a10, a7
  24:	000081        	l32r	a8, fffc0024 <Compile_Const_f64+0xfffc0024>
			24: R_XTENSA_SLOT0_OP	.literal.Compile_Const_f64+0xc
			24: R_XTENSA_ASM_EXPAND	get_indention_string
  27:	0008e0        	callx8	a8
  2a:	0acd      	mov.n	a12, a10
  2c:	0000b1        	l32r	a11, fffc002c <Compile_Const_f64+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.Compile_Const_f64
  2f:	21e8      	l32i.n	a14, a1, 8
  31:	31f8      	l32i.n	a15, a1, 12
  33:	0000a1        	l32r	a10, fffc0034 <Compile_Const_f64+0xfffc0034>
			33: R_XTENSA_SLOT0_OP	.literal.Compile_Const_f64+0x4
  36:	000081        	l32r	a8, fffc0038 <Compile_Const_f64+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.Compile_Const_f64+0x10
			36: R_XTENSA_ASM_EXPAND	printf
  39:	0008e0        	callx8	a8
  3c:	21c8      	l32i.n	a12, a1, 8
  3e:	31d8      	l32i.n	a13, a1, 12
  40:	4e0c      	movi.n	a14, 4
  42:	07ad      	mov.n	a10, a7
  44:	000081        	l32r	a8, fffc0044 <Compile_Const_f64+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.Compile_Const_f64+0x14
			44: R_XTENSA_ASM_EXPAND	.text.PushConst
  47:	0008e0        	callx8	a8
  4a:	0a2d      	mov.n	a2, a10
  4c:	f01d      	retw.n

Disassembly of section .text.Compile_Const_f32:

00000000 <Compile_Const_f32>:
   0:	006136        	entry	a1, 48
   3:	02a8      	l32i.n	a10, a2, 0
   5:	32d8      	l32i.n	a13, a2, 12
   7:	88a682        	movi	a8, 0x688
   a:	c28b      	addi.n	a12, a2, 8
   c:	aa8a      	add.n	a10, a10, a8
   e:	b1cb      	addi.n	a11, a1, 12
  10:	080c      	movi.n	a8, 0
  12:	3189      	s32i.n	a8, a1, 12
  14:	000081        	l32r	a8, fffc0014 <Compile_Const_f32+0xfffc0014>
			14: R_XTENSA_SLOT0_OP	.literal.Compile_Const_f32+0x8
			14: R_XTENSA_ASM_EXPAND	Read_f32
  17:	0008e0        	callx8	a8
  1a:	027d      	mov.n	a7, a2
  1c:	0a2d      	mov.n	a2, a10
  1e:	2afc      	bnez.n	a10, 54 <Compile_Const_f32+0x54>
			1e: R_XTENSA_SLOT0_OP	.text.Compile_Const_f32+0x54
  20:	07ad      	mov.n	a10, a7
  22:	000081        	l32r	a8, fffc0024 <Compile_Const_f32+0xfffc0024>
			22: R_XTENSA_SLOT0_OP	.literal.Compile_Const_f32+0xc
			22: R_XTENSA_ASM_EXPAND	get_indention_string
  25:	0008e0        	callx8	a8
  28:	0a6d      	mov.n	a6, a10
  2a:	31a8      	l32i.n	a10, a1, 12
  2c:	000081        	l32r	a8, fffc002c <Compile_Const_f32+0xfffc002c>
			2c: R_XTENSA_SLOT0_OP	.literal.Compile_Const_f32+0x10
			2c: R_XTENSA_ASM_EXPAND	__extendsfdf2
  2f:	0008e0        	callx8	a8
  32:	0aed      	mov.n	a14, a10
  34:	0bfd      	mov.n	a15, a11
  36:	0000a1        	l32r	a10, fffc0038 <Compile_Const_f32+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.Compile_Const_f32+0x4
  39:	0000b1        	l32r	a11, fffc003c <Compile_Const_f32+0xfffc003c>
			39: R_XTENSA_SLOT0_OP	.literal.Compile_Const_f32
  3c:	06cd      	mov.n	a12, a6
  3e:	000081        	l32r	a8, fffc0040 <Compile_Const_f32+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.Compile_Const_f32+0x14
			3e: R_XTENSA_ASM_EXPAND	printf
  41:	0008e0        	callx8	a8
  44:	31c8      	l32i.n	a12, a1, 12
  46:	02dd      	mov.n	a13, a2
  48:	3e0c      	movi.n	a14, 3
  4a:	07ad      	mov.n	a10, a7
  4c:	000081        	l32r	a8, fffc004c <Compile_Const_f32+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.Compile_Const_f32+0x18
			4c: R_XTENSA_ASM_EXPAND	.text.PushConst
  4f:	0008e0        	callx8	a8
  52:	0a2d      	mov.n	a2, a10
  54:	f01d      	retw.n

Disassembly of section .text.Compile_Const_i64:

00000000 <Compile_Const_i64>:
   0:	006136        	entry	a1, 48
   3:	02a8      	l32i.n	a10, a2, 0
   5:	32d8      	l32i.n	a13, a2, 12
   7:	88a682        	movi	a8, 0x688
   a:	c28b      	addi.n	a12, a2, 8
   c:	b18b      	addi.n	a11, a1, 8
   e:	aa8a      	add.n	a10, a10, a8
  10:	000081        	l32r	a8, fffc0010 <Compile_Const_i64+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.Compile_Const_i64+0x8
			10: R_XTENSA_ASM_EXPAND	ReadLEB_i64
  13:	0008e0        	callx8	a8
  16:	027d      	mov.n	a7, a2
  18:	0a2d      	mov.n	a2, a10
  1a:	aaec      	bnez.n	a10, 48 <Compile_Const_i64+0x48>
			1a: R_XTENSA_SLOT0_OP	.text.Compile_Const_i64+0x48
  1c:	21c8      	l32i.n	a12, a1, 8
  1e:	31d8      	l32i.n	a13, a1, 12
  20:	2e0c      	movi.n	a14, 2
  22:	07ad      	mov.n	a10, a7
  24:	000081        	l32r	a8, fffc0024 <Compile_Const_i64+0xfffc0024>
			24: R_XTENSA_SLOT0_OP	.literal.Compile_Const_i64+0xc
			24: R_XTENSA_ASM_EXPAND	.text.PushConst
  27:	0008e0        	callx8	a8
  2a:	0a2d      	mov.n	a2, a10
  2c:	8adc      	bnez.n	a10, 48 <Compile_Const_i64+0x48>
			2c: R_XTENSA_SLOT0_OP	.text.Compile_Const_i64+0x48
  2e:	07ad      	mov.n	a10, a7
  30:	000081        	l32r	a8, fffc0030 <Compile_Const_i64+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.Compile_Const_i64+0x10
			30: R_XTENSA_ASM_EXPAND	get_indention_string
  33:	0008e0        	callx8	a8
  36:	0acd      	mov.n	a12, a10
  38:	0000b1        	l32r	a11, fffc0038 <Compile_Const_i64+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.Compile_Const_i64
  3b:	0000a1        	l32r	a10, fffc003c <Compile_Const_i64+0xfffc003c>
			3b: R_XTENSA_SLOT0_OP	.literal.Compile_Const_i64+0x4
  3e:	21e8      	l32i.n	a14, a1, 8
  40:	31f8      	l32i.n	a15, a1, 12
  42:	000081        	l32r	a8, fffc0044 <Compile_Const_i64+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.Compile_Const_i64+0x14
			42: R_XTENSA_ASM_EXPAND	printf
  45:	0008e0        	callx8	a8
  48:	f01d      	retw.n

Disassembly of section .text.Compile_Const_i32:

00000000 <Compile_Const_i32>:
   0:	006136        	entry	a1, 48
   3:	02a8      	l32i.n	a10, a2, 0
   5:	32d8      	l32i.n	a13, a2, 12
   7:	88a682        	movi	a8, 0x688
   a:	c28b      	addi.n	a12, a2, 8
   c:	b1cb      	addi.n	a11, a1, 12
   e:	aa8a      	add.n	a10, a10, a8
  10:	000081        	l32r	a8, fffc0010 <Compile_Const_i32+0xfffc0010>
			10: R_XTENSA_SLOT0_OP	.literal.Compile_Const_i32+0x8
			10: R_XTENSA_ASM_EXPAND	ReadLEB_i32
  13:	0008e0        	callx8	a8
  16:	027d      	mov.n	a7, a2
  18:	0a2d      	mov.n	a2, a10
  1a:	baec      	bnez.n	a10, 49 <Compile_Const_i32+0x49>
			1a: R_XTENSA_SLOT0_OP	.text.Compile_Const_i32+0x49
  1c:	31d8      	l32i.n	a13, a1, 12
  1e:	1e0c      	movi.n	a14, 1
  20:	0dcd      	mov.n	a12, a13
  22:	07ad      	mov.n	a10, a7
  24:	31dfd0        	srai	a13, a13, 31
  27:	000081        	l32r	a8, fffc0028 <Compile_Const_i32+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.Compile_Const_i32+0xc
			27: R_XTENSA_ASM_EXPAND	.text.PushConst
  2a:	0008e0        	callx8	a8
  2d:	0a2d      	mov.n	a2, a10
  2f:	6adc      	bnez.n	a10, 49 <Compile_Const_i32+0x49>
			2f: R_XTENSA_SLOT0_OP	.text.Compile_Const_i32+0x49
  31:	07ad      	mov.n	a10, a7
  33:	000081        	l32r	a8, fffc0034 <Compile_Const_i32+0xfffc0034>
			33: R_XTENSA_SLOT0_OP	.literal.Compile_Const_i32+0x10
			33: R_XTENSA_ASM_EXPAND	get_indention_string
  36:	0008e0        	callx8	a8
  39:	0acd      	mov.n	a12, a10
  3b:	31d8      	l32i.n	a13, a1, 12
  3d:	0000b1        	l32r	a11, fffc0040 <Compile_Const_i32+0xfffc0040>
			3d: R_XTENSA_SLOT0_OP	.literal.Compile_Const_i32
  40:	0000a1        	l32r	a10, fffc0040 <Compile_Const_i32+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.Compile_Const_i32+0x4
  43:	000081        	l32r	a8, fffc0044 <Compile_Const_i32+0xfffc0044>
			43: R_XTENSA_SLOT0_OP	.literal.Compile_Const_i32+0x14
			43: R_XTENSA_ASM_EXPAND	printf
  46:	0008e0        	callx8	a8
  49:	f01d      	retw.n

Disassembly of section .text.Compile_Branch:

00000000 <Compile_Branch>:
   0:	00a136        	entry	a1, 80
   3:	02a8      	l32i.n	a10, a2, 0
   5:	32d8      	l32i.n	a13, a2, 12
   7:	88a682        	movi	a8, 0x688
   a:	08c2c2        	addi	a12, a2, 8
   d:	2cc1b2        	addi	a11, a1, 44
  10:	aa8a      	add.n	a10, a10, a8
  12:	000081        	l32r	a8, fffc0014 <Compile_Branch+0xfffc0014>
			12: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x68
			12: R_XTENSA_ASM_EXPAND	ReadLEB_ptr
  15:	0008e0        	callx8	a8
  18:	025d      	mov.n	a5, a2
  1a:	f43030        	extui	a3, a3, 0, 16
  1d:	0a2d      	mov.n	a2, a10
  1f:	facc      	bnez.n	a10, 32 <Compile_Branch+0x32>
			1f: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x32
  21:	b148      	l32i.n	a4, a1, 44
  23:	14c572        	addi	a7, a5, 20
  26:	a48c      	beqz.n	a4, 34 <Compile_Branch+0x34>
			26: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x34
  28:	0778      	l32i.n	a7, a7, 0
  2a:	440b      	addi.n	a4, a4, -1
  2c:	ff6756        	bnez	a7, 26 <Compile_Branch+0x26>
			2c: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x26
  2f:	000021        	l32r	a2, fffc0030 <Compile_Branch+0xfffc0030>
			2f: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x10
  32:	f01d      	retw.n
  34:	0c17a2        	l16ui	a10, a7, 24
  37:	283a66        	bnei	a10, 3, 63 <Compile_Branch+0x63>
			37: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x63
  3a:	d80c      	movi.n	a8, 13
  3c:	029387        	bne	a3, a8, 42 <Compile_Branch+0x42>
			3c: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x42
  3f:	002a86        	j	ed <Compile_Branch+0xed>
			3f: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0xed
  42:	0000b1        	l32r	a11, fffc0044 <Compile_Branch+0xfffc0044>
			42: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x34
  45:	05ad      	mov.n	a10, a5
  47:	000081        	l32r	a8, fffc0048 <Compile_Branch+0xfffc0048>
			47: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x6c
			47: R_XTENSA_ASM_EXPAND	.text.EmitOp
  4a:	0008e0        	callx8	a8
  4d:	0a2d      	mov.n	a2, a10
  4f:	fdfa56        	bnez	a10, 32 <Compile_Branch+0x32>
			4f: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x32
  52:	17b8      	l32i.n	a11, a7, 4
  54:	05ad      	mov.n	a10, a5
  56:	000081        	l32r	a8, fffc0058 <Compile_Branch+0xfffc0058>
			56: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x70
			56: R_XTENSA_ASM_EXPAND	.text.EmitPointer
  59:	0008e0        	callx8	a8
  5c:	180c      	movi.n	a8, 1
  5e:	2e4582        	s8i	a8, a5, 46
  61:	f01d      	retw.n
  63:	57a8      	l32i.n	a10, a7, 20
  65:	032762        	l32i	a6, a7, 12
  68:	000081        	l32r	a8, fffc0068 <Compile_Branch+0xfffc0068>
			68: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x74
			68: R_XTENSA_ASM_EXPAND	GetFuncTypeNumResults
  6b:	0008e0        	callx8	a8
  6e:	db0c      	movi.n	a11, 13
  70:	0293b7        	bne	a3, a11, 76 <Compile_Branch+0x76>
			70: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x76
  73:	003dc6        	j	16e <Compile_Branch+0x16e>
			73: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x16e
  76:	2e05a2        	l8ui	a10, a5, 46
  79:	0afc      	bnez.n	a10, ad <Compile_Branch+0xad>
			79: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0xad
  7b:	5129      	s32i.n	a2, a1, 20
  7d:	1c0c      	movi.n	a12, 1
  7f:	07bd      	mov.n	a11, a7
  81:	05ad      	mov.n	a10, a5
  83:	195656        	bnez	a6, 21c <Compile_Branch+0x21c>
			83: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x21c
  86:	000081        	l32r	a8, fffc0088 <Compile_Branch+0xfffc0088>
			86: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x78
			86: R_XTENSA_ASM_EXPAND	.text.ReturnValues
  89:	0008e0        	callx8	a8
  8c:	057a56        	bnez	a10, e7 <Compile_Branch+0xe7>
			8c: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0xe7
  8f:	0000b1        	l32r	a11, fffc0090 <Compile_Branch+0xfffc0090>
			8f: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x44
  92:	05ad      	mov.n	a10, a5
  94:	000081        	l32r	a8, fffc0094 <Compile_Branch+0xfffc0094>
			94: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x7c
			94: R_XTENSA_ASM_EXPAND	.text.EmitOp
  97:	0008e0        	callx8	a8
  9a:	049a56        	bnez	a10, e7 <Compile_Branch+0xe7>
			9a: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0xe7
  9d:	5188      	l32i.n	a8, a1, 20
  9f:	a88c      	beqz.n	a8, ad <Compile_Branch+0xad>
			9f: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0xad
  a1:	d5a8      	l32i.n	a10, a5, 52
  a3:	000081        	l32r	a8, fffc00a4 <Compile_Branch+0xfffc00a4>
			a3: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x80
			a3: R_XTENSA_ASM_EXPAND	GetPagePC
  a6:	0008e0        	callx8	a8
  a9:	5198      	l32i.n	a9, a1, 20
  ab:	09a9      	s32i.n	a10, a9, 0
  ad:	81a366        	bnei	a3, 12, 32 <Compile_Branch+0x32>
			ad: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x32
  b0:	1b0c      	movi.n	a11, 1
  b2:	2e45b2        	s8i	a11, a5, 46
  b5:	0000a1        	l32r	a10, fffc00b8 <Compile_Branch+0xfffc00b8>
			b5: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x4c
  b8:	0000b1        	l32r	a11, fffc00b8 <Compile_Branch+0xfffc00b8>
			b8: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x3c
  bb:	000081        	l32r	a8, fffc00bc <Compile_Branch+0xfffc00bc>
			bb: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x84
			bb: R_XTENSA_ASM_EXPAND	printf
  be:	0008e0        	callx8	a8
  c1:	2115a2        	l16ui	a10, a5, 66
  c4:	1315b2        	l16ui	a11, a5, 38
  c7:	113ba7        	bltu	a11, a10, dc <Compile_Branch+0xdc>
			c7: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0xdc
  ca:	ffd906        	j	32 <Compile_Branch+0x32>
			ca: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x32
  cd:	211582        	l16ui	a8, a5, 66
  d0:	131592        	l16ui	a9, a5, 38
  d3:	01c442        	addi	a4, a4, 1
  d6:	023987        	bltu	a9, a8, dc <Compile_Branch+0xdc>
			d6: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0xdc
  d9:	00acc6        	j	390 <Compile_Branch+0x390>
			d9: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x390
  dc:	05ad      	mov.n	a10, a5
  de:	000081        	l32r	a8, fffc00e0 <Compile_Branch+0xfffc00e0>
			de: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x88
			de: R_XTENSA_ASM_EXPAND	.text.Pop
  e1:	0008e0        	callx8	a8
  e4:	fe5a16        	beqz	a10, cd <Compile_Branch+0xcd>
			e4: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0xcd
  e7:	0a2d      	mov.n	a2, a10
  e9:	f01d      	retw.n
  eb:	00          	.byte	00
  ec:	00          	.byte	00
  ed:	57a8      	l32i.n	a10, a7, 20
  ef:	000081        	l32r	a8, fffc00f0 <Compile_Branch+0xfffc00f0>
			ef: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x8c
			ef: R_XTENSA_ASM_EXPAND	GetFuncTypeNumParams
  f2:	0008e0        	callx8	a8
  f5:	159a16        	beqz	a10, 252 <Compile_Branch+0x252>
			f5: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x252
  f8:	211582        	l16ui	a8, a5, 66
  fb:	2015a2        	l16ui	a10, a5, 64
  fe:	1a3a87        	bltu	a10, a8, 11c <Compile_Branch+0x11c>
			fe: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x11c
 101:	2e05a2        	l8ui	a10, a5, 46
 104:	014a56        	bnez	a10, 11c <Compile_Branch+0x11c>
			104: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x11c
 107:	0000d1        	l32r	a13, fffc0108 <Compile_Branch+0xfffc0108>
			107: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x14
 10a:	0000b1        	l32r	a11, fffc010c <Compile_Branch+0xfffc010c>
			10a: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 10d:	0000a1        	l32r	a10, fffc0110 <Compile_Branch+0xfffc0110>
			10d: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 110:	d7a0c2        	movi	a12, 215
 113:	000081        	l32r	a8, fffc0114 <Compile_Branch+0xfffc0114>
			113: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x90
			113: R_XTENSA_ASM_EXPAND	printf
 116:	0008e0        	callx8	a8
 119:	211582        	l16ui	a8, a5, 66
 11c:	680b      	addi.n	a6, a8, -1
 11e:	236680        	sext	a6, a6, 15
 121:	02a687        	bge	a6, a8, 127 <Compile_Branch+0x127>
			121: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x127
 124:	008806        	j	348 <Compile_Branch+0x348>
			124: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x348
 127:	2e0582        	l8ui	a8, a5, 46
 12a:	230816        	beqz	a8, 35e <Compile_Branch+0x35e>
			12a: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x35e
 12d:	0000b1        	l32r	a11, fffc0130 <Compile_Branch+0xfffc0130>
			12d: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x4
 130:	05ad      	mov.n	a10, a5
 132:	000081        	l32r	a8, fffc0134 <Compile_Branch+0xfffc0134>
			132: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x94
			132: R_XTENSA_ASM_EXPAND	.text.EmitOp
 135:	0008e0        	callx8	a8
 138:	0a2d      	mov.n	a2, a10
 13a:	ef4a56        	bnez	a10, 32 <Compile_Branch+0x32>
			13a: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x32
 13d:	211582        	l16ui	a8, a5, 66
 140:	2015a2        	l16ui	a10, a5, 64
 143:	053a87        	bltu	a10, a8, 14c <Compile_Branch+0x14c>
			143: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x14c
 146:	2e05a2        	l8ui	a10, a5, 46
 149:	71ba16        	beqz	a10, 868 <Compile_Branch+0x868>
			149: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x868
 14c:	b80b      	addi.n	a11, a8, -1
 14e:	236b80        	sext	a6, a11, 15
 151:	02a687        	bge	a6, a8, 157 <Compile_Branch+0x157>
			151: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x157
 154:	009346        	j	3a5 <Compile_Branch+0x3a5>
			154: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x3a5
 157:	2e05a2        	l8ui	a10, a5, 46
 15a:	47ba16        	beqz	a10, 5d9 <Compile_Branch+0x5d9>
			15a: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x5d9
 15d:	2015c2        	l16ui	a12, a5, 64
 160:	02bc87        	bgeu	a12, a8, 166 <Compile_Branch+0x166>
			160: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x166
 163:	021546        	j	9bc <Compile_Branch+0x9bc>
			163: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x9bc
 166:	262a56        	bnez	a10, 3cc <Compile_Branch+0x3cc>
			166: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x3cc
 169:	009286        	j	3b7 <Compile_Branch+0x3b7>
			169: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x3b7
 16c:	00          	.byte	00
 16d:	00          	.byte	00
 16e:	1b0c      	movi.n	a11, 1
 170:	04dd      	mov.n	a13, a4
 172:	83db60        	moveqz	a13, a11, a6
 175:	74d0d0        	extui	a13, a13, 0, 8
 178:	2115c2        	l16ui	a12, a5, 66
 17b:	2015e2        	l16ui	a14, a5, 64
 17e:	12fd56        	bnez	a13, 2b1 <Compile_Branch+0x2b1>
			17e: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x2b1
 181:	83b4a0        	moveqz	a11, a4, a10
 184:	74b0b0        	extui	a11, a11, 0, 8
 187:	126b56        	bnez	a11, 2b1 <Compile_Branch+0x2b1>
			187: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x2b1
 18a:	1a3ec7        	bltu	a14, a12, 1a8 <Compile_Branch+0x1a8>
			18a: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x1a8
 18d:	2e0582        	l8ui	a8, a5, 46
 190:	014856        	bnez	a8, 1a8 <Compile_Branch+0x1a8>
			190: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x1a8
 193:	0000d1        	l32r	a13, fffc0194 <Compile_Branch+0xfffc0194>
			193: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x14
 196:	0000b1        	l32r	a11, fffc0198 <Compile_Branch+0xfffc0198>
			196: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 199:	0000a1        	l32r	a10, fffc019c <Compile_Branch+0xfffc019c>
			199: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 19c:	d7a0c2        	movi	a12, 215
 19f:	000081        	l32r	a8, fffc01a0 <Compile_Branch+0xfffc01a0>
			19f: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x98
			19f: R_XTENSA_ASM_EXPAND	printf
 1a2:	0008e0        	callx8	a8
 1a5:	2115c2        	l16ui	a12, a5, 66
 1a8:	6c0b      	addi.n	a6, a12, -1
 1aa:	236680        	sext	a6, a6, 15
 1ad:	02a6c7        	bge	a6, a12, 1b3 <Compile_Branch+0x1b3>
			1ad: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x1b3
 1b0:	006906        	j	358 <Compile_Branch+0x358>
			1b0: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x358
 1b3:	2e0582        	l8ui	a8, a5, 46
 1b6:	58ec      	bnez.n	a8, 1df <Compile_Branch+0x1df>
			1b6: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x1df
 1b8:	0000d1        	l32r	a13, fffc01b8 <Compile_Branch+0xfffc01b8>
			1b8: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x20
 1bb:	0000b1        	l32r	a11, fffc01bc <Compile_Branch+0xfffc01bc>
			1bb: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 1be:	0000a1        	l32r	a10, fffc01c0 <Compile_Branch+0xfffc01c0>
			1be: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 1c1:	07a1c2        	movi	a12, 0x107
 1c4:	000081        	l32r	a8, fffc01c4 <Compile_Branch+0xfffc01c4>
			1c4: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x9c
			1c4: R_XTENSA_ASM_EXPAND	printf
 1c7:	0008e0        	callx8	a8
 1ca:	211582        	l16ui	a8, a5, 66
 1cd:	0ea687        	bge	a6, a8, 1df <Compile_Branch+0x1df>
			1cd: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x1df
 1d0:	906650        	addx2	a6, a6, a5
 1d3:	a81682        	l16ui	a8, a6, 0x150
 1d6:	0000a1        	l32r	a10, fffc01d8 <Compile_Branch+0xfffc01d8>
			1d6: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x64
 1d9:	0000b1        	l32r	a11, fffc01dc <Compile_Branch+0xfffc01dc>
			1d9: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x8
 1dc:	023a87        	bltu	a10, a8, 1e2 <Compile_Branch+0x1e2>
			1dc: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x1e2
 1df:	0000b1        	l32r	a11, fffc01e0 <Compile_Branch+0xfffc01e0>
			1df: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xc
 1e2:	05ad      	mov.n	a10, a5
 1e4:	000081        	l32r	a8, fffc01e4 <Compile_Branch+0xfffc01e4>
			1e4: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xa0
			1e4: R_XTENSA_ASM_EXPAND	.text.EmitOp
 1e7:	0008e0        	callx8	a8
 1ea:	ef9a56        	bnez	a10, e7 <Compile_Branch+0xe7>
			1ea: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0xe7
 1ed:	211582        	l16ui	a8, a5, 66
 1f0:	2015a2        	l16ui	a10, a5, 64
 1f3:	053a87        	bltu	a10, a8, 1fc <Compile_Branch+0x1fc>
			1f3: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x1fc
 1f6:	2e05a2        	l8ui	a10, a5, 46
 1f9:	683a16        	beqz	a10, 880 <Compile_Branch+0x880>
			1f9: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x880
 1fc:	b80b      	addi.n	a11, a8, -1
 1fe:	236b80        	sext	a6, a11, 15
 201:	02a687        	bge	a6, a8, 207 <Compile_Branch+0x207>
			201: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x207
 204:	00c846        	j	529 <Compile_Branch+0x529>
			204: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x529
 207:	2e05a2        	l8ui	a10, a5, 46
 20a:	447a16        	beqz	a10, 655 <Compile_Branch+0x655>
			20a: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x655
 20d:	2015c2        	l16ui	a12, a5, 64
 210:	02bc87        	bgeu	a12, a8, 216 <Compile_Branch+0x216>
			210: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x216
 213:	01e446        	j	9a8 <Compile_Branch+0x9a8>
			213: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x9a8
 216:	336a56        	bnez	a10, 550 <Compile_Branch+0x550>
			216: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x550
 219:	00c786        	j	53b <Compile_Branch+0x53b>
			219: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x53b
 21c:	000081        	l32r	a8, fffc021c <Compile_Branch+0xfffc021c>
			21c: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xa4
			21c: R_XTENSA_ASM_EXPAND	.text.ResolveBlockResults
 21f:	0008e0        	callx8	a8
 222:	ec1a56        	bnez	a10, e7 <Compile_Branch+0xe7>
			222: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0xe7
 225:	0000b1        	l32r	a11, fffc0228 <Compile_Branch+0xfffc0228>
			225: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x48
 228:	05ad      	mov.n	a10, a5
 22a:	000081        	l32r	a8, fffc022c <Compile_Branch+0xfffc022c>
			22a: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xa8
			22a: R_XTENSA_ASM_EXPAND	.text.EmitOp
 22d:	0008e0        	callx8	a8
 230:	eb3a56        	bnez	a10, e7 <Compile_Branch+0xe7>
			230: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0xe7
 233:	27b8      	l32i.n	a11, a7, 8
 235:	05ad      	mov.n	a10, a5
 237:	000081        	l32r	a8, fffc0238 <Compile_Branch+0xfffc0238>
			237: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xac
			237: R_XTENSA_ASM_EXPAND	.text.EmitPointer
 23a:	0008e0        	callx8	a8
 23d:	0a6d      	mov.n	a6, a10
 23f:	0000b1        	l32r	a11, fffc0240 <Compile_Branch+0xfffc0240>
			23f: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x3c
 242:	0000a1        	l32r	a10, fffc0244 <Compile_Branch+0xfffc0244>
			242: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x40
 245:	06cd      	mov.n	a12, a6
 247:	000081        	l32r	a8, fffc0248 <Compile_Branch+0xfffc0248>
			247: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xb0
			247: R_XTENSA_ASM_EXPAND	printf
 24a:	0008e0        	callx8	a8
 24d:	2769      	s32i.n	a6, a7, 8
 24f:	ff9286        	j	9d <Compile_Branch+0x9d>
			24f: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x9d
 252:	05ad      	mov.n	a10, a5
 254:	000081        	l32r	a8, fffc0254 <Compile_Branch+0xfffc0254>
			254: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xb4
			254: R_XTENSA_ASM_EXPAND	.text.CopyStackTopToRegister$constprop$0
 257:	0008e0        	callx8	a8
 25a:	0a2d      	mov.n	a2, a10
 25c:	dd2a56        	bnez	a10, 32 <Compile_Branch+0x32>
			25c: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x32
 25f:	211582        	l16ui	a8, a5, 66
 262:	042816        	beqz	a8, 2a8 <Compile_Branch+0x2a8>
			262: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x2a8
 265:	880b      	addi.n	a8, a8, -1
 267:	2015a2        	l16ui	a10, a5, 64
 26a:	f48080        	extui	a8, a8, 0, 16
 26d:	3738a7        	bltu	a8, a10, 2a8 <Compile_Branch+0x2a8>
			26d: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x2a8
 270:	858a      	add.n	a8, a5, a8
 272:	50a3a2        	movi	a10, 0x350
 275:	88aa      	add.n	a8, a8, a10
 277:	000882        	l8ui	a8, a8, 0
 27a:	2a1866        	bnei	a8, 1, 2a8 <Compile_Branch+0x2a8>
			27a: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x2a8
 27d:	05ad      	mov.n	a10, a5
 27f:	000081        	l32r	a8, fffc0280 <Compile_Branch+0xfffc0280>
			27f: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xb8
			27f: R_XTENSA_ASM_EXPAND	.text.Pop
 282:	0008e0        	callx8	a8
 285:	0a2d      	mov.n	a2, a10
 287:	da7a56        	bnez	a10, 32 <Compile_Branch+0x32>
			287: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x32
 28a:	0000b1        	l32r	a11, fffc028c <Compile_Branch+0xfffc028c>
			28a: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x38
 28d:	05ad      	mov.n	a10, a5
 28f:	000081        	l32r	a8, fffc0290 <Compile_Branch+0xfffc0290>
			28f: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xbc
			28f: R_XTENSA_ASM_EXPAND	.text.EmitOp
 292:	0008e0        	callx8	a8
 295:	0a2d      	mov.n	a2, a10
 297:	d97a56        	bnez	a10, 32 <Compile_Branch+0x32>
			297: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x32
 29a:	17b8      	l32i.n	a11, a7, 4
 29c:	05ad      	mov.n	a10, a5
 29e:	000081        	l32r	a8, fffc02a0 <Compile_Branch+0xfffc02a0>
			29e: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xc0
			29e: R_XTENSA_ASM_EXPAND	.text.EmitPointer
 2a1:	0008e0        	callx8	a8
 2a4:	f01d      	retw.n
 2a6:	00          	.byte	00
 2a7:	00          	.byte	00
 2a8:	2e0582        	l8ui	a8, a5, 46
 2ab:	fce856        	bnez	a8, 27d <Compile_Branch+0x27d>
			2ab: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x27d
 2ae:	fff606        	j	28a <Compile_Branch+0x28a>
			2ae: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x28a
 2b1:	1a3ec7        	bltu	a14, a12, 2cf <Compile_Branch+0x2cf>
			2b1: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x2cf
 2b4:	2e05a2        	l8ui	a10, a5, 46
 2b7:	014a56        	bnez	a10, 2cf <Compile_Branch+0x2cf>
			2b7: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x2cf
 2ba:	0000d1        	l32r	a13, fffc02bc <Compile_Branch+0xfffc02bc>
			2ba: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x14
 2bd:	0000b1        	l32r	a11, fffc02c0 <Compile_Branch+0xfffc02c0>
			2bd: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 2c0:	0000a1        	l32r	a10, fffc02c0 <Compile_Branch+0xfffc02c0>
			2c0: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 2c3:	d7a0c2        	movi	a12, 215
 2c6:	000081        	l32r	a8, fffc02c8 <Compile_Branch+0xfffc02c8>
			2c6: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xc4
			2c6: R_XTENSA_ASM_EXPAND	printf
 2c9:	0008e0        	callx8	a8
 2cc:	2115c2        	l16ui	a12, a5, 66
 2cf:	8c0b      	addi.n	a8, a12, -1
 2d1:	238880        	sext	a8, a8, 15
 2d4:	7828c7        	blt	a8, a12, 350 <Compile_Branch+0x350>
			2d4: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x350
 2d7:	2e05a2        	l8ui	a10, a5, 46
 2da:	baec      	bnez.n	a10, 309 <Compile_Branch+0x309>
			2da: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x309
 2dc:	0000d1        	l32r	a13, fffc02dc <Compile_Branch+0xfffc02dc>
			2dc: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x20
 2df:	0000b1        	l32r	a11, fffc02e0 <Compile_Branch+0xfffc02e0>
			2df: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 2e2:	0000a1        	l32r	a10, fffc02e4 <Compile_Branch+0xfffc02e4>
			2e2: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 2e5:	036182        	s32i	a8, a1, 12
 2e8:	07a1c2        	movi	a12, 0x107
 2eb:	000081        	l32r	a8, fffc02ec <Compile_Branch+0xfffc02ec>
			2eb: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xc8
			2eb: R_XTENSA_ASM_EXPAND	printf
 2ee:	0008e0        	callx8	a8
 2f1:	2115a2        	l16ui	a10, a5, 66
 2f4:	032182        	l32i	a8, a1, 12
 2f7:	0ea8a7        	bge	a8, a10, 309 <Compile_Branch+0x309>
			2f7: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x309
 2fa:	908850        	addx2	a8, a8, a5
 2fd:	a818a2        	l16ui	a10, a8, 0x150
 300:	0000c1        	l32r	a12, fffc0300 <Compile_Branch+0xfffc0300>
			300: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x64
 303:	0000b1        	l32r	a11, fffc0304 <Compile_Branch+0xfffc0304>
			303: R_XTENSA_SLOT0_OP	.literal.Compile_Branch
 306:	023ca7        	bltu	a12, a10, 30c <Compile_Branch+0x30c>
			306: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x30c
 309:	0000b1        	l32r	a11, fffc030c <Compile_Branch+0xfffc030c>
			309: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x4
 30c:	05ad      	mov.n	a10, a5
 30e:	000081        	l32r	a8, fffc0310 <Compile_Branch+0xfffc0310>
			30e: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xcc
			30e: R_XTENSA_ASM_EXPAND	.text.EmitOp
 311:	0008e0        	callx8	a8
 314:	dcfa56        	bnez	a10, e7 <Compile_Branch+0xe7>
			314: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0xe7
 317:	2115c2        	l16ui	a12, a5, 66
 31a:	2015a2        	l16ui	a10, a5, 64
 31d:	053ac7        	bltu	a10, a12, 326 <Compile_Branch+0x326>
			31d: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x326
 320:	2e05a2        	l8ui	a10, a5, 46
 323:	571a16        	beqz	a10, 898 <Compile_Branch+0x898>
			323: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x898
 326:	bc0b      	addi.n	a11, a12, -1
 328:	238b80        	sext	a8, a11, 15
 32b:	02a8c7        	bge	a8, a12, 331 <Compile_Branch+0x331>
			32b: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x331
 32e:	0050c6        	j	475 <Compile_Branch+0x475>
			32e: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x475
 331:	2e05a2        	l8ui	a10, a5, 46
 334:	2dda16        	beqz	a10, 615 <Compile_Branch+0x615>
			334: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x615
 337:	2015d2        	l16ui	a13, a5, 64
 33a:	02bdc7        	bgeu	a13, a12, 340 <Compile_Branch+0x340>
			33a: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x340
 33d:	01a3c6        	j	9d0 <Compile_Branch+0x9d0>
			33d: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x9d0
 340:	158a56        	bnez	a10, 49c <Compile_Branch+0x49c>
			340: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x49c
 343:	005006        	j	487 <Compile_Branch+0x487>
			343: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x487
 346:	00          	.byte	00
 347:	00          	.byte	00
 348:	de1696        	bltz	a6, 12d <Compile_Branch+0x12d>
			348: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x12d
 34b:	000a86        	j	379 <Compile_Branch+0x379>
			34b: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x379
 34e:	00          	.byte	00
 34f:	00          	.byte	00
 350:	fb5896        	bltz	a8, 309 <Compile_Branch+0x309>
			350: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x309
 353:	ffe8c6        	j	2fa <Compile_Branch+0x2fa>
			353: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x2fa
 356:	00          	.byte	00
 357:	00          	.byte	00
 358:	e83696        	bltz	a6, 1df <Compile_Branch+0x1df>
			358: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x1df
 35b:	ff9c46        	j	1d0 <Compile_Branch+0x1d0>
			35b: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x1d0
 35e:	0000d1        	l32r	a13, fffc0360 <Compile_Branch+0xfffc0360>
			35e: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x20
 361:	0000b1        	l32r	a11, fffc0364 <Compile_Branch+0xfffc0364>
			361: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 364:	0000a1        	l32r	a10, fffc0364 <Compile_Branch+0xfffc0364>
			364: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 367:	07a1c2        	movi	a12, 0x107
 36a:	000081        	l32r	a8, fffc036c <Compile_Branch+0xfffc036c>
			36a: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xd0
			36a: R_XTENSA_ASM_EXPAND	printf
 36d:	0008e0        	callx8	a8
 370:	211582        	l16ui	a8, a5, 66
 373:	022687        	blt	a6, a8, 379 <Compile_Branch+0x379>
			373: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x379
 376:	ff6cc6        	j	12d <Compile_Branch+0x12d>
			376: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x12d
 379:	906650        	addx2	a6, a6, a5
 37c:	a81682        	l16ui	a8, a6, 0x150
 37f:	0000a1        	l32r	a10, fffc0380 <Compile_Branch+0xfffc0380>
			37f: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x64
 382:	0000b1        	l32r	a11, fffc0384 <Compile_Branch+0xfffc0384>
			382: R_XTENSA_SLOT0_OP	.literal.Compile_Branch
 385:	02ba87        	bgeu	a10, a8, 38b <Compile_Branch+0x38b>
			385: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x38b
 388:	ff6906        	j	130 <Compile_Branch+0x130>
			388: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x130
 38b:	ff6786        	j	12d <Compile_Branch+0x12d>
			38b: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x12d
 38e:	00          	.byte	00
 38f:	00          	.byte	00
 390:	c9e416        	beqz	a4, 32 <Compile_Branch+0x32>
			390: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x32
 393:	0000b1        	l32r	a11, fffc0394 <Compile_Branch+0xfffc0394>
			393: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x3c
 396:	0000a1        	l32r	a10, fffc0398 <Compile_Branch+0xfffc0398>
			396: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x50
 399:	04cd      	mov.n	a12, a4
 39b:	000081        	l32r	a8, fffc039c <Compile_Branch+0xfffc039c>
			39b: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xd4
			39b: R_XTENSA_ASM_EXPAND	printf
 39e:	0008e0        	callx8	a8
 3a1:	f01d      	retw.n
 3a3:	00          	.byte	00
 3a4:	00          	.byte	00
 3a5:	24b6d6        	bgez	a6, 5f4 <Compile_Branch+0x5f4>
			3a5: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x5f4
 3a8:	2015a2        	l16ui	a10, a5, 64
 3ab:	02ba87        	bgeu	a10, a8, 3b1 <Compile_Branch+0x3b1>
			3ab: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x3b1
 3ae:	0146c6        	j	8cd <Compile_Branch+0x8cd>
			3ae: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x8cd
 3b1:	2e0582        	l8ui	a8, a5, 46
 3b4:	515856        	bnez	a8, 8cd <Compile_Branch+0x8cd>
			3b4: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x8cd
 3b7:	0000d1        	l32r	a13, fffc03b8 <Compile_Branch+0xfffc03b8>
			3b7: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x14
 3ba:	0000b1        	l32r	a11, fffc03bc <Compile_Branch+0xfffc03bc>
			3ba: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 3bd:	0000a1        	l32r	a10, fffc03c0 <Compile_Branch+0xfffc03c0>
			3bd: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 3c0:	d7a0c2        	movi	a12, 215
 3c3:	000081        	l32r	a8, fffc03c4 <Compile_Branch+0xfffc03c4>
			3c3: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xd8
			3c3: R_XTENSA_ASM_EXPAND	printf
 3c6:	0008e0        	callx8	a8
 3c9:	211582        	l16ui	a8, a5, 66
 3cc:	880b      	addi.n	a8, a8, -1
 3ce:	f4b080        	extui	a11, a8, 0, 16
 3d1:	0268f7        	bbci	a8, 15, 3d7 <Compile_Branch+0x3d7>
			3d1: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x3d7
 3d4:	013d46        	j	8cd <Compile_Branch+0x8cd>
			3d4: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x8cd
 3d7:	90bb50        	addx2	a11, a11, a5
 3da:	a81bb2        	l16ui	a11, a11, 0x150
 3dd:	d5a8      	l32i.n	a10, a5, 52
 3df:	000081        	l32r	a8, fffc03e0 <Compile_Branch+0xfffc03e0>
			3df: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xdc
			3df: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 3e2:	0008e0        	callx8	a8
 3e5:	211582        	l16ui	a8, a5, 66
 3e8:	1315a2        	l16ui	a10, a5, 38
 3eb:	45ba87        	bgeu	a10, a8, 434 <Compile_Branch+0x434>
			3eb: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x434
 3ee:	880b      	addi.n	a8, a8, -1
 3f0:	f4a080        	extui	a10, a8, 0, 16
 3f3:	908a50        	addx2	a8, a10, a5
 3f6:	a81822        	l16ui	a2, a8, 0x150
 3f9:	000081        	l32r	a8, fffc03fc <Compile_Branch+0xfffc03fc>
			3f9: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x58
 3fc:	b5aa      	add.n	a11, a5, a10
 3fe:	2155a2        	s16i	a10, a5, 66
 401:	828a      	add.n	a8, a2, a8
 403:	50a3a2        	movi	a10, 0x350
 406:	0000c1        	l32r	a12, fffc0408 <Compile_Branch+0xfffc0408>
			406: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x5c
 409:	abaa      	add.n	a10, a11, a10
 40b:	f48080        	extui	a8, a8, 0, 16
 40e:	000a32        	l8ui	a3, a10, 0
 411:	02bc87        	bgeu	a12, a8, 417 <Compile_Branch+0x417>
			411: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x417
 414:	009e46        	j	691 <Compile_Branch+0x691>
			414: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x691
 417:	000081        	l32r	a8, fffc0418 <Compile_Branch+0xfffc0418>
			417: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x54
 41a:	160c      	movi.n	a6, 1
 41c:	828a      	add.n	a8, a2, a8
 41e:	0a0c      	movi.n	a10, 0
 420:	936a80        	movnez	a6, a10, a8
 423:	906650        	addx2	a6, a6, a5
 426:	06d662        	addmi	a6, a6, 0x600
 429:	291682        	l16ui	a8, a6, 82
 42c:	488816        	beqz	a8, 8b8 <Compile_Branch+0x8b8>
			42c: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x8b8
 42f:	080c      	movi.n	a8, 0
 431:	295682        	s16i	a8, a6, 82
 434:	05ad      	mov.n	a10, a5
 436:	000081        	l32r	a8, fffc0438 <Compile_Branch+0xfffc0438>
			436: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xe0
			436: R_XTENSA_ASM_EXPAND	.text.ReservePointer
 439:	0008e0        	callx8	a8
 43c:	0a6d      	mov.n	a6, a10
 43e:	1c0c      	movi.n	a12, 1
 440:	07bd      	mov.n	a11, a7
 442:	05ad      	mov.n	a10, a5
 444:	000081        	l32r	a8, fffc0444 <Compile_Branch+0xfffc0444>
			444: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xe4
			444: R_XTENSA_ASM_EXPAND	.text.ResolveBlockResults
 447:	0008e0        	callx8	a8
 44a:	0a2d      	mov.n	a2, a10
 44c:	be2a56        	bnez	a10, 32 <Compile_Branch+0x32>
			44c: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x32
 44f:	0000b1        	l32r	a11, fffc0450 <Compile_Branch+0xfffc0450>
			44f: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x34
 452:	05ad      	mov.n	a10, a5
 454:	000081        	l32r	a8, fffc0454 <Compile_Branch+0xfffc0454>
			454: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xe8
			454: R_XTENSA_ASM_EXPAND	.text.EmitOp
 457:	0008e0        	callx8	a8
 45a:	0a2d      	mov.n	a2, a10
 45c:	bd2a56        	bnez	a10, 32 <Compile_Branch+0x32>
			45c: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x32
 45f:	17b8      	l32i.n	a11, a7, 4
 461:	05ad      	mov.n	a10, a5
 463:	000081        	l32r	a8, fffc0464 <Compile_Branch+0xfffc0464>
			463: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xec
			463: R_XTENSA_ASM_EXPAND	.text.EmitPointer
 466:	0008e0        	callx8	a8
 469:	d5a8      	l32i.n	a10, a5, 52
 46b:	000081        	l32r	a8, fffc046c <Compile_Branch+0xfffc046c>
			46b: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xf0
			46b: R_XTENSA_ASM_EXPAND	GetPagePC
 46e:	0008e0        	callx8	a8
 471:	06a9      	s32i.n	a10, a6, 0
 473:	f01d      	retw.n
 475:	1bb8d6        	bgez	a8, 634 <Compile_Branch+0x634>
			475: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x634
 478:	2015a2        	l16ui	a10, a5, 64
 47b:	02bac7        	bgeu	a10, a12, 481 <Compile_Branch+0x481>
			47b: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x481
 47e:	011486        	j	8d4 <Compile_Branch+0x8d4>
			47e: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x8d4
 481:	2e05a2        	l8ui	a10, a5, 46
 484:	44ca56        	bnez	a10, 8d4 <Compile_Branch+0x8d4>
			484: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x8d4
 487:	0000d1        	l32r	a13, fffc0488 <Compile_Branch+0xfffc0488>
			487: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x14
 48a:	0000b1        	l32r	a11, fffc048c <Compile_Branch+0xfffc048c>
			48a: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 48d:	0000a1        	l32r	a10, fffc0490 <Compile_Branch+0xfffc0490>
			48d: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 490:	d7a0c2        	movi	a12, 215
 493:	000081        	l32r	a8, fffc0494 <Compile_Branch+0xfffc0494>
			493: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xf4
			493: R_XTENSA_ASM_EXPAND	printf
 496:	0008e0        	callx8	a8
 499:	2115c2        	l16ui	a12, a5, 66
 49c:	cc0b      	addi.n	a12, a12, -1
 49e:	f4b0c0        	extui	a11, a12, 0, 16
 4a1:	026cf7        	bbci	a12, 15, 4a7 <Compile_Branch+0x4a7>
			4a1: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x4a7
 4a4:	010b06        	j	8d4 <Compile_Branch+0x8d4>
			4a4: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x8d4
 4a7:	90bb50        	addx2	a11, a11, a5
 4aa:	a81bb2        	l16ui	a11, a11, 0x150
 4ad:	d5a8      	l32i.n	a10, a5, 52
 4af:	000081        	l32r	a8, fffc04b0 <Compile_Branch+0xfffc04b0>
			4af: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xf8
			4af: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 4b2:	0008e0        	callx8	a8
 4b5:	2115c2        	l16ui	a12, a5, 66
 4b8:	1315a2        	l16ui	a10, a5, 38
 4bb:	47bac7        	bgeu	a10, a12, 506 <Compile_Branch+0x506>
			4bb: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x506
 4be:	bc0b      	addi.n	a11, a12, -1
 4c0:	f4b0b0        	extui	a11, a11, 0, 16
 4c3:	90ab50        	addx2	a10, a11, a5
 4c6:	a81af2        	l16ui	a15, a10, 0x150
 4c9:	c5ba      	add.n	a12, a5, a11
 4cb:	2155b2        	s16i	a11, a5, 66
 4ce:	50a3b2        	movi	a11, 0x350
 4d1:	0000a1        	l32r	a10, fffc04d4 <Compile_Branch+0xfffc04d4>
			4d1: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x58
 4d4:	bcba      	add.n	a11, a12, a11
 4d6:	000bb2        	l8ui	a11, a11, 0
 4d9:	afaa      	add.n	a10, a15, a10
 4db:	0000d1        	l32r	a13, fffc04dc <Compile_Branch+0xfffc04dc>
			4db: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x5c
 4de:	f4a0a0        	extui	a10, a10, 0, 16
 4e1:	51b9      	s32i.n	a11, a1, 20
 4e3:	02bda7        	bgeu	a13, a10, 4e9 <Compile_Branch+0x4e9>
			4e3: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x4e9
 4e6:	00a386        	j	778 <Compile_Branch+0x778>
			4e6: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x778
 4e9:	0000a1        	l32r	a10, fffc04ec <Compile_Branch+0xfffc04ec>
			4e9: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x54
 4ec:	180c      	movi.n	a8, 1
 4ee:	afaa      	add.n	a10, a15, a10
 4f0:	0b0c      	movi.n	a11, 0
 4f2:	938ba0        	movnez	a8, a11, a10
 4f5:	908850        	addx2	a8, a8, a5
 4f8:	06d882        	addmi	a8, a8, 0x600
 4fb:	2918a2        	l16ui	a10, a8, 82
 4fe:	3daa16        	beqz	a10, 8dc <Compile_Branch+0x8dc>
			4fe: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x8dc
 501:	0a0c      	movi.n	a10, 0
 503:	2958a2        	s16i	a10, a8, 82
 506:	05ad      	mov.n	a10, a5
 508:	000081        	l32r	a8, fffc0508 <Compile_Branch+0xfffc0508>
			508: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0xfc
			508: R_XTENSA_ASM_EXPAND	.text.ReservePointer
 50b:	0008e0        	callx8	a8
 50e:	2e05b2        	l8ui	a11, a5, 46
 511:	51a9      	s32i.n	a10, a1, 20
 513:	b66b16        	beqz	a11, 7d <Compile_Branch+0x7d>
			513: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x7d
 516:	b18a16        	beqz	a10, 32 <Compile_Branch+0x32>
			516: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x32
 519:	d5a8      	l32i.n	a10, a5, 52
 51b:	000081        	l32r	a8, fffc051c <Compile_Branch+0xfffc051c>
			51b: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x100
			51b: R_XTENSA_ASM_EXPAND	GetPagePC
 51e:	0008e0        	callx8	a8
 521:	5198      	l32i.n	a9, a1, 20
 523:	09a9      	s32i.n	a10, a9, 0
 525:	f01d      	retw.n
 527:	00          	.byte	00
 528:	00          	.byte	00
 529:	1436d6        	bgez	a6, 670 <Compile_Branch+0x670>
			529: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x670
 52c:	2015a2        	l16ui	a10, a5, 64
 52f:	02ba87        	bgeu	a10, a8, 535 <Compile_Branch+0x535>
			52f: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x535
 532:	00de86        	j	8b0 <Compile_Branch+0x8b0>
			532: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x8b0
 535:	2e0582        	l8ui	a8, a5, 46
 538:	374856        	bnez	a8, 8b0 <Compile_Branch+0x8b0>
			538: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x8b0
 53b:	0000d1        	l32r	a13, fffc053c <Compile_Branch+0xfffc053c>
			53b: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x14
 53e:	0000b1        	l32r	a11, fffc0540 <Compile_Branch+0xfffc0540>
			53e: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 541:	0000a1        	l32r	a10, fffc0544 <Compile_Branch+0xfffc0544>
			541: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 544:	d7a0c2        	movi	a12, 215
 547:	000081        	l32r	a8, fffc0548 <Compile_Branch+0xfffc0548>
			547: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x104
			547: R_XTENSA_ASM_EXPAND	printf
 54a:	0008e0        	callx8	a8
 54d:	211582        	l16ui	a8, a5, 66
 550:	880b      	addi.n	a8, a8, -1
 552:	f4b080        	extui	a11, a8, 0, 16
 555:	0268f7        	bbci	a8, 15, 55b <Compile_Branch+0x55b>
			555: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x55b
 558:	00d506        	j	8b0 <Compile_Branch+0x8b0>
			558: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x8b0
 55b:	90bb50        	addx2	a11, a11, a5
 55e:	a81bb2        	l16ui	a11, a11, 0x150
 561:	d5a8      	l32i.n	a10, a5, 52
 563:	000081        	l32r	a8, fffc0564 <Compile_Branch+0xfffc0564>
			563: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x108
			563: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 566:	0008e0        	callx8	a8
 569:	211582        	l16ui	a8, a5, 66
 56c:	1315a2        	l16ui	a10, a5, 38
 56f:	45ba87        	bgeu	a10, a8, 5b8 <Compile_Branch+0x5b8>
			56f: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x5b8
 572:	880b      	addi.n	a8, a8, -1
 574:	f4a080        	extui	a10, a8, 0, 16
 577:	908a50        	addx2	a8, a10, a5
 57a:	a81842        	l16ui	a4, a8, 0x150
 57d:	000081        	l32r	a8, fffc0580 <Compile_Branch+0xfffc0580>
			57d: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x58
 580:	b5aa      	add.n	a11, a5, a10
 582:	2155a2        	s16i	a10, a5, 66
 585:	848a      	add.n	a8, a4, a8
 587:	50a3a2        	movi	a10, 0x350
 58a:	0000c1        	l32r	a12, fffc058c <Compile_Branch+0xfffc058c>
			58a: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x5c
 58d:	abaa      	add.n	a10, a11, a10
 58f:	f48080        	extui	a8, a8, 0, 16
 592:	000a32        	l8ui	a3, a10, 0
 595:	02bc87        	bgeu	a12, a8, 59b <Compile_Branch+0x59b>
			595: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x59b
 598:	005a06        	j	704 <Compile_Branch+0x704>
			598: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x704
 59b:	000081        	l32r	a8, fffc059c <Compile_Branch+0xfffc059c>
			59b: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x54
 59e:	160c      	movi.n	a6, 1
 5a0:	848a      	add.n	a8, a4, a8
 5a2:	0a0c      	movi.n	a10, 0
 5a4:	936a80        	movnez	a6, a10, a8
 5a7:	906650        	addx2	a6, a6, a5
 5aa:	06d662        	addmi	a6, a6, 0x600
 5ad:	291682        	l16ui	a8, a6, 82
 5b0:	341816        	beqz	a8, 8f5 <Compile_Branch+0x8f5>
			5b0: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x8f5
 5b3:	080c      	movi.n	a8, 0
 5b5:	295682        	s16i	a8, a6, 82
 5b8:	27b8      	l32i.n	a11, a7, 8
 5ba:	05ad      	mov.n	a10, a5
 5bc:	000081        	l32r	a8, fffc05bc <Compile_Branch+0xfffc05bc>
			5bc: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x10c
			5bc: R_XTENSA_ASM_EXPAND	.text.EmitPointer
 5bf:	0008e0        	callx8	a8
 5c2:	0a6d      	mov.n	a6, a10
 5c4:	0000b1        	l32r	a11, fffc05c4 <Compile_Branch+0xfffc05c4>
			5c4: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x3c
 5c7:	0000a1        	l32r	a10, fffc05c8 <Compile_Branch+0xfffc05c8>
			5c7: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x40
 5ca:	06cd      	mov.n	a12, a6
 5cc:	000081        	l32r	a8, fffc05cc <Compile_Branch+0xfffc05cc>
			5cc: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x110
			5cc: R_XTENSA_ASM_EXPAND	printf
 5cf:	0008e0        	callx8	a8
 5d2:	2769      	s32i.n	a6, a7, 8
 5d4:	f01d      	retw.n
 5d6:	00          	.byte	00
 5d7:	00          	.byte	00
 5d8:	00          	.byte	00
 5d9:	0000d1        	l32r	a13, fffc05dc <Compile_Branch+0xfffc05dc>
			5d9: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x20
 5dc:	0000b1        	l32r	a11, fffc05dc <Compile_Branch+0xfffc05dc>
			5dc: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 5df:	0000a1        	l32r	a10, fffc05e0 <Compile_Branch+0xfffc05e0>
			5df: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 5e2:	07a1c2        	movi	a12, 0x107
 5e5:	000081        	l32r	a8, fffc05e8 <Compile_Branch+0xfffc05e8>
			5e5: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x114
			5e5: R_XTENSA_ASM_EXPAND	printf
 5e8:	0008e0        	callx8	a8
 5eb:	211582        	l16ui	a8, a5, 66
 5ee:	022687        	blt	a6, a8, 5f4 <Compile_Branch+0x5f4>
			5ee: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x5f4
 5f1:	00ef06        	j	9b1 <Compile_Branch+0x9b1>
			5f1: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x9b1
 5f4:	906650        	addx2	a6, a6, a5
 5f7:	a816a2        	l16ui	a10, a6, 0x150
 5fa:	0000b1        	l32r	a11, fffc05fc <Compile_Branch+0xfffc05fc>
			5fa: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x64
 5fd:	02bba7        	bgeu	a11, a10, 603 <Compile_Branch+0x603>
			5fd: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x603
 600:	ff7906        	j	3e8 <Compile_Branch+0x3e8>
			600: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x3e8
 603:	2015a2        	l16ui	a10, a5, 64
 606:	02ba87        	bgeu	a10, a8, 60c <Compile_Branch+0x60c>
			606: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x60c
 609:	ff6fc6        	j	3cc <Compile_Branch+0x3cc>
			609: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x3cc
 60c:	2e05a2        	l8ui	a10, a5, 46
 60f:	db9a56        	bnez	a10, 3cc <Compile_Branch+0x3cc>
			60f: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x3cc
 612:	ff6846        	j	3b7 <Compile_Branch+0x3b7>
			612: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x3b7
 615:	0000d1        	l32r	a13, fffc0618 <Compile_Branch+0xfffc0618>
			615: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x20
 618:	0000b1        	l32r	a11, fffc0618 <Compile_Branch+0xfffc0618>
			618: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 61b:	0000a1        	l32r	a10, fffc061c <Compile_Branch+0xfffc061c>
			61b: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 61e:	07a1c2        	movi	a12, 0x107
 621:	3189      	s32i.n	a8, a1, 12
 623:	000081        	l32r	a8, fffc0624 <Compile_Branch+0xfffc0624>
			623: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x118
			623: R_XTENSA_ASM_EXPAND	printf
 626:	0008e0        	callx8	a8
 629:	2115c2        	l16ui	a12, a5, 66
 62c:	3188      	l32i.n	a8, a1, 12
 62e:	0228c7        	blt	a8, a12, 634 <Compile_Branch+0x634>
			62e: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x634
 631:	00e406        	j	9c5 <Compile_Branch+0x9c5>
			631: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x9c5
 634:	908850        	addx2	a8, a8, a5
 637:	a818a2        	l16ui	a10, a8, 0x150
 63a:	0000b1        	l32r	a11, fffc063c <Compile_Branch+0xfffc063c>
			63a: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x64
 63d:	02bba7        	bgeu	a11, a10, 643 <Compile_Branch+0x643>
			63d: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x643
 640:	ff9d06        	j	4b8 <Compile_Branch+0x4b8>
			640: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x4b8
 643:	2015a2        	l16ui	a10, a5, 64
 646:	02bac7        	bgeu	a10, a12, 64c <Compile_Branch+0x64c>
			646: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x64c
 649:	ff93c6        	j	49c <Compile_Branch+0x49c>
			649: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x49c
 64c:	2e05a2        	l8ui	a10, a5, 46
 64f:	e49a56        	bnez	a10, 49c <Compile_Branch+0x49c>
			64f: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x49c
 652:	ff8c46        	j	487 <Compile_Branch+0x487>
			652: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x487
 655:	0000d1        	l32r	a13, fffc0658 <Compile_Branch+0xfffc0658>
			655: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x20
 658:	0000b1        	l32r	a11, fffc0658 <Compile_Branch+0xfffc0658>
			658: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 65b:	0000a1        	l32r	a10, fffc065c <Compile_Branch+0xfffc065c>
			65b: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 65e:	07a1c2        	movi	a12, 0x107
 661:	000081        	l32r	a8, fffc0664 <Compile_Branch+0xfffc0664>
			661: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x11c
			661: R_XTENSA_ASM_EXPAND	printf
 664:	0008e0        	callx8	a8
 667:	211582        	l16ui	a8, a5, 66
 66a:	022687        	blt	a6, a8, 670 <Compile_Branch+0x670>
			66a: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x670
 66d:	00cb06        	j	99d <Compile_Branch+0x99d>
			66d: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x99d
 670:	906650        	addx2	a6, a6, a5
 673:	a816a2        	l16ui	a10, a6, 0x150
 676:	0000b1        	l32r	a11, fffc0678 <Compile_Branch+0xfffc0678>
			676: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x64
 679:	02bba7        	bgeu	a11, a10, 67f <Compile_Branch+0x67f>
			679: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x67f
 67c:	ffbb06        	j	56c <Compile_Branch+0x56c>
			67c: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x56c
 67f:	2015a2        	l16ui	a10, a5, 64
 682:	02ba87        	bgeu	a10, a8, 688 <Compile_Branch+0x688>
			682: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x688
 685:	ffb1c6        	j	550 <Compile_Branch+0x550>
			685: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x550
 688:	2e05a2        	l8ui	a10, a5, 46
 68b:	ec1a56        	bnez	a10, 550 <Compile_Branch+0x550>
			68b: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x550
 68e:	ffaa46        	j	53b <Compile_Branch+0x53b>
			68e: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x53b
 691:	251582        	l16ui	a8, a5, 74
 694:	02b287        	bgeu	a2, a8, 69a <Compile_Branch+0x69a>
			694: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x69a
 697:	ff6646        	j	434 <Compile_Branch+0x434>
			697: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x434
 69a:	236280        	sext	a6, a2, 15
 69d:	02a687        	bge	a6, a8, 6a3 <Compile_Branch+0x6a3>
			69d: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x6a3
 6a0:	00ad46        	j	959 <Compile_Branch+0x959>
			6a0: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x959
 6a3:	06d582        	addmi	a8, a5, 0x600
 6a6:	281882        	l16ui	a8, a8, 80
 6a9:	022687        	blt	a6, a8, 6af <Compile_Branch+0x6af>
			6a9: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x6af
 6ac:	00a506        	j	944 <Compile_Branch+0x944>
			6ac: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x944
 6af:	03ad      	mov.n	a10, a3
 6b1:	060c      	movi.n	a6, 0
 6b3:	000081        	l32r	a8, fffc06b4 <Compile_Branch+0xfffc06b4>
			6b3: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x120
			6b3: R_XTENSA_ASM_EXPAND	Is64BitType
 6b6:	0008e0        	callx8	a8
 6b9:	5139      	s32i.n	a3, a1, 20
 6bb:	063d      	mov.n	a3, a6
 6bd:	823a      	add.n	a8, a2, a3
 6bf:	ba1b      	addi.n	a11, a10, 1
 6c1:	238880        	sext	a8, a8, 15
 6c4:	50a442        	movi	a4, 0x450
 6c7:	808580        	add	a8, a5, a8
 6ca:	f4b0b0        	extui	a11, a11, 0, 16
 6cd:	51a8      	l32i.n	a10, a1, 20
 6cf:	806840        	add	a6, a8, a4
 6d2:	0233b7        	bltu	a3, a11, 6d8 <Compile_Branch+0x6d8>
			6d2: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x6d8
 6d5:	ff56c6        	j	434 <Compile_Branch+0x434>
			6d5: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x434
 6d8:	000682        	l8ui	a8, a6, 0
 6db:	b80b      	addi.n	a11, a8, -1
 6dd:	12f816        	beqz	a8, 810 <Compile_Branch+0x810>
			6dd: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x810
 6e0:	0046b2        	s8i	a11, a6, 0
 6e3:	000081        	l32r	a8, fffc06e4 <Compile_Branch+0xfffc06e4>
			6e3: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x124
			6e3: R_XTENSA_ASM_EXPAND	Is64BitType
 6e6:	0008e0        	callx8	a8
 6e9:	d47a16        	beqz	a10, 434 <Compile_Branch+0x434>
			6e9: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x434
 6ec:	931b      	addi.n	a9, a3, 1
 6ee:	f43090        	extui	a3, a9, 0, 16
 6f1:	823a      	add.n	a8, a2, a3
 6f3:	238880        	sext	a8, a8, 15
 6f6:	858a      	add.n	a8, a5, a8
 6f8:	2b0c      	movi.n	a11, 2
 6fa:	51a8      	l32i.n	a10, a1, 20
 6fc:	684a      	add.n	a6, a8, a4
 6fe:	d633b7        	bltu	a3, a11, 6d8 <Compile_Branch+0x6d8>
			6fe: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x6d8
 701:	ff4bc6        	j	434 <Compile_Branch+0x434>
			701: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x434
 704:	251582        	l16ui	a8, a5, 74
 707:	02b487        	bgeu	a4, a8, 70d <Compile_Branch+0x70d>
			707: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x70d
 70a:	ffaa86        	j	5b8 <Compile_Branch+0x5b8>
			70a: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x5b8
 70d:	236480        	sext	a6, a4, 15
 710:	02a687        	bge	a6, a8, 716 <Compile_Branch+0x716>
			710: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x716
 713:	009b86        	j	985 <Compile_Branch+0x985>
			713: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x985
 716:	06d582        	addmi	a8, a5, 0x600
 719:	281882        	l16ui	a8, a8, 80
 71c:	022687        	blt	a6, a8, 722 <Compile_Branch+0x722>
			71c: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x722
 71f:	009346        	j	970 <Compile_Branch+0x970>
			71f: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x970
 722:	03ad      	mov.n	a10, a3
 724:	060c      	movi.n	a6, 0
 726:	000081        	l32r	a8, fffc0728 <Compile_Branch+0xfffc0728>
			726: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x128
			726: R_XTENSA_ASM_EXPAND	Is64BitType
 729:	0008e0        	callx8	a8
 72c:	5139      	s32i.n	a3, a1, 20
 72e:	063d      	mov.n	a3, a6
 730:	834a      	add.n	a8, a3, a4
 732:	ba1b      	addi.n	a11, a10, 1
 734:	238880        	sext	a8, a8, 15
 737:	858a      	add.n	a8, a5, a8
 739:	50a492        	movi	a9, 0x450
 73c:	f4b0b0        	extui	a11, a11, 0, 16
 73f:	51a8      	l32i.n	a10, a1, 20
 741:	689a      	add.n	a6, a8, a9
 743:	0233b7        	bltu	a3, a11, 749 <Compile_Branch+0x749>
			743: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x749
 746:	ff9b86        	j	5b8 <Compile_Branch+0x5b8>
			746: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x5b8
 749:	000682        	l8ui	a8, a6, 0
 74c:	b80b      	addi.n	a11, a8, -1
 74e:	0ea816        	beqz	a8, 83c <Compile_Branch+0x83c>
			74e: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x83c
 751:	0046b2        	s8i	a11, a6, 0
 754:	000081        	l32r	a8, fffc0754 <Compile_Branch+0xfffc0754>
			754: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x12c
			754: R_XTENSA_ASM_EXPAND	Is64BitType
 757:	0008e0        	callx8	a8
 75a:	e5aa16        	beqz	a10, 5b8 <Compile_Branch+0x5b8>
			75a: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x5b8
 75d:	931b      	addi.n	a9, a3, 1
 75f:	f43090        	extui	a3, a9, 0, 16
 762:	834a      	add.n	a8, a3, a4
 764:	238880        	sext	a8, a8, 15
 767:	858a      	add.n	a8, a5, a8
 769:	50a492        	movi	a9, 0x450
 76c:	2b0c      	movi.n	a11, 2
 76e:	51a8      	l32i.n	a10, a1, 20
 770:	689a      	add.n	a6, a8, a9
 772:	d333b7        	bltu	a3, a11, 749 <Compile_Branch+0x749>
			772: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x749
 775:	ff8fc6        	j	5b8 <Compile_Branch+0x5b8>
			775: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x5b8
 778:	2515a2        	l16ui	a10, a5, 74
 77b:	02bfa7        	bgeu	a15, a10, 781 <Compile_Branch+0x781>
			77b: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x781
 77e:	ff6106        	j	506 <Compile_Branch+0x506>
			77e: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x506
 781:	238f80        	sext	a8, a15, 15
 784:	02a8a7        	bge	a8, a10, 78a <Compile_Branch+0x78a>
			784: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x78a
 787:	006686        	j	925 <Compile_Branch+0x925>
			787: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x925
 78a:	06d5a2        	addmi	a10, a5, 0x600
 78d:	281aa2        	l16ui	a10, a10, 80
 790:	0228a7        	blt	a8, a10, 796 <Compile_Branch+0x796>
			790: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x796
 793:	005d46        	j	90c <Compile_Branch+0x90c>
			793: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x90c
 796:	51a8      	l32i.n	a10, a1, 20
 798:	41f9      	s32i.n	a15, a1, 16
 79a:	000081        	l32r	a8, fffc079c <Compile_Branch+0xfffc079c>
			79a: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x130
			79a: R_XTENSA_ASM_EXPAND	Is64BitType
 79d:	0008e0        	callx8	a8
 7a0:	41f8      	l32i.n	a15, a1, 16
 7a2:	ba1b      	addi.n	a11, a10, 1
 7a4:	080c      	movi.n	a8, 0
 7a6:	6179      	s32i.n	a7, a1, 24
 7a8:	f4b0b0        	extui	a11, a11, 0, 16
 7ab:	087d      	mov.n	a7, a8
 7ad:	71f9      	s32i.n	a15, a1, 28
 7af:	7198      	l32i.n	a9, a1, 28
 7b1:	51a8      	l32i.n	a10, a1, 20
 7b3:	879a      	add.n	a8, a7, a9
 7b5:	238880        	sext	a8, a8, 15
 7b8:	858a      	add.n	a8, a5, a8
 7ba:	50a492        	movi	a9, 0x450
 7bd:	889a      	add.n	a8, a8, a9
 7bf:	11b7b7        	bgeu	a7, a11, 7d4 <Compile_Branch+0x7d4>
			7bf: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x7d4
 7c2:	000892        	l8ui	a9, a8, 0
 7c5:	b90b      	addi.n	a11, a9, -1
 7c7:	e98c      	beqz.n	a9, 7d9 <Compile_Branch+0x7d9>
			7c7: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x7d9
 7c9:	0048b2        	s8i	a11, a8, 0
 7cc:	000081        	l32r	a8, fffc07cc <Compile_Branch+0xfffc07cc>
			7cc: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x134
			7cc: R_XTENSA_ASM_EXPAND	Is64BitType
 7cf:	0008e0        	callx8	a8
 7d2:	eaec      	bnez.n	a10, 804 <Compile_Branch+0x804>
			7d2: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x804
 7d4:	6178      	l32i.n	a7, a1, 24
 7d6:	ff4b06        	j	506 <Compile_Branch+0x506>
			7d6: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x506
 7d9:	0000d1        	l32r	a13, fffc07dc <Compile_Branch+0xfffc07dc>
			7d9: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x30
 7dc:	0000b1        	l32r	a11, fffc07dc <Compile_Branch+0xfffc07dc>
			7dc: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 7df:	0000a1        	l32r	a10, fffc07e0 <Compile_Branch+0xfffc07e0>
			7df: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 7e2:	036182        	s32i	a8, a1, 12
 7e5:	a4a1c2        	movi	a12, 0x1a4
 7e8:	000081        	l32r	a8, fffc07e8 <Compile_Branch+0xfffc07e8>
			7e8: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x138
			7e8: R_XTENSA_ASM_EXPAND	printf
 7eb:	0008e0        	callx8	a8
 7ee:	3188      	l32i.n	a8, a1, 12
 7f0:	51a8      	l32i.n	a10, a1, 20
 7f2:	000892        	l8ui	a9, a8, 0
 7f5:	ffc992        	addi	a9, a9, -1
 7f8:	004892        	s8i	a9, a8, 0
 7fb:	000081        	l32r	a8, fffc07fc <Compile_Branch+0xfffc07fc>
			7fb: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x13c
			7fb: R_XTENSA_ASM_EXPAND	Is64BitType
 7fe:	0008e0        	callx8	a8
 801:	fcfa16        	beqz	a10, 7d4 <Compile_Branch+0x7d4>
			801: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x7d4
 804:	871b      	addi.n	a8, a7, 1
 806:	f47080        	extui	a7, a8, 0, 16
 809:	2b0c      	movi.n	a11, 2
 80b:	ffe806        	j	7af <Compile_Branch+0x7af>
			80b: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x7af
 80e:	00          	.byte	00
 80f:	00          	.byte	00
 810:	0000d1        	l32r	a13, fffc0810 <Compile_Branch+0xfffc0810>
			810: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x30
 813:	0000b1        	l32r	a11, fffc0814 <Compile_Branch+0xfffc0814>
			813: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 816:	0000a1        	l32r	a10, fffc0818 <Compile_Branch+0xfffc0818>
			816: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 819:	a4a1c2        	movi	a12, 0x1a4
 81c:	000081        	l32r	a8, fffc081c <Compile_Branch+0xfffc081c>
			81c: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x140
			81c: R_XTENSA_ASM_EXPAND	printf
 81f:	0008e0        	callx8	a8
 822:	000682        	l8ui	a8, a6, 0
 825:	0521a2        	l32i	a10, a1, 20
 828:	ffc882        	addi	a8, a8, -1
 82b:	004682        	s8i	a8, a6, 0
 82e:	000081        	l32r	a8, fffc0830 <Compile_Branch+0xfffc0830>
			82e: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x144
			82e: R_XTENSA_ASM_EXPAND	Is64BitType
 831:	0008e0        	callx8	a8
 834:	bfca16        	beqz	a10, 434 <Compile_Branch+0x434>
			834: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x434
 837:	ffac46        	j	6ec <Compile_Branch+0x6ec>
			837: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x6ec
 83a:	00          	.byte	00
 83b:	00          	.byte	00
 83c:	0000d1        	l32r	a13, fffc083c <Compile_Branch+0xfffc083c>
			83c: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x30
 83f:	0000b1        	l32r	a11, fffc0840 <Compile_Branch+0xfffc0840>
			83f: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 842:	0000a1        	l32r	a10, fffc0844 <Compile_Branch+0xfffc0844>
			842: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 845:	a4a1c2        	movi	a12, 0x1a4
 848:	000081        	l32r	a8, fffc0848 <Compile_Branch+0xfffc0848>
			848: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x148
			848: R_XTENSA_ASM_EXPAND	printf
 84b:	0008e0        	callx8	a8
 84e:	000682        	l8ui	a8, a6, 0
 851:	0521a2        	l32i	a10, a1, 20
 854:	ffc882        	addi	a8, a8, -1
 857:	004682        	s8i	a8, a6, 0
 85a:	000081        	l32r	a8, fffc085c <Compile_Branch+0xfffc085c>
			85a: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x14c
			85a: R_XTENSA_ASM_EXPAND	Is64BitType
 85d:	0008e0        	callx8	a8
 860:	d54a16        	beqz	a10, 5b8 <Compile_Branch+0x5b8>
			860: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x5b8
 863:	ffbd86        	j	75d <Compile_Branch+0x75d>
			863: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x75d
 866:	00          	.byte	00
 867:	00          	.byte	00
 868:	0000d1        	l32r	a13, fffc0868 <Compile_Branch+0xfffc0868>
			868: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x14
 86b:	0000b1        	l32r	a11, fffc086c <Compile_Branch+0xfffc086c>
			86b: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 86e:	0000a1        	l32r	a10, fffc0870 <Compile_Branch+0xfffc0870>
			86e: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 871:	d7a0c2        	movi	a12, 215
 874:	000081        	l32r	a8, fffc0874 <Compile_Branch+0xfffc0874>
			874: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x150
			874: R_XTENSA_ASM_EXPAND	printf
 877:	0008e0        	callx8	a8
 87a:	211582        	l16ui	a8, a5, 66
 87d:	fe32c6        	j	14c <Compile_Branch+0x14c>
			87d: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x14c
 880:	0000d1        	l32r	a13, fffc0880 <Compile_Branch+0xfffc0880>
			880: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x14
 883:	0000b1        	l32r	a11, fffc0884 <Compile_Branch+0xfffc0884>
			883: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 886:	0000a1        	l32r	a10, fffc0888 <Compile_Branch+0xfffc0888>
			886: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 889:	d7a0c2        	movi	a12, 215
 88c:	000081        	l32r	a8, fffc088c <Compile_Branch+0xfffc088c>
			88c: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x154
			88c: R_XTENSA_ASM_EXPAND	printf
 88f:	0008e0        	callx8	a8
 892:	211582        	l16ui	a8, a5, 66
 895:	fe58c6        	j	1fc <Compile_Branch+0x1fc>
			895: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x1fc
 898:	0000d1        	l32r	a13, fffc0898 <Compile_Branch+0xfffc0898>
			898: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x14
 89b:	0000b1        	l32r	a11, fffc089c <Compile_Branch+0xfffc089c>
			89b: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 89e:	0000a1        	l32r	a10, fffc08a0 <Compile_Branch+0xfffc08a0>
			89e: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 8a1:	d7a0c2        	movi	a12, 215
 8a4:	000081        	l32r	a8, fffc08a4 <Compile_Branch+0xfffc08a4>
			8a4: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x158
			8a4: R_XTENSA_ASM_EXPAND	printf
 8a7:	0008e0        	callx8	a8
 8aa:	2115c2        	l16ui	a12, a5, 66
 8ad:	fe9d46        	j	326 <Compile_Branch+0x326>
			8ad: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x326
 8b0:	0000b1        	l32r	a11, fffc08b0 <Compile_Branch+0xfffc08b0>
			8b0: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x60
 8b3:	ff2a86        	j	561 <Compile_Branch+0x561>
			8b3: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x561
 8b6:	00          	.byte	00
 8b7:	00          	.byte	00
 8b8:	0000d1        	l32r	a13, fffc08b8 <Compile_Branch+0xfffc08b8>
			8b8: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x24
 8bb:	0000b1        	l32r	a11, fffc08bc <Compile_Branch+0xfffc08bc>
			8bb: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 8be:	0000a1        	l32r	a10, fffc08c0 <Compile_Branch+0xfffc08c0>
			8be: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 8c1:	b8a1c2        	movi	a12, 0x1b8
 8c4:	000081        	l32r	a8, fffc08c4 <Compile_Branch+0xfffc08c4>
			8c4: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x15c
			8c4: R_XTENSA_ASM_EXPAND	printf
 8c7:	0008e0        	callx8	a8
 8ca:	fed846        	j	42f <Compile_Branch+0x42f>
			8ca: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x42f
 8cd:	0000b1        	l32r	a11, fffc08d0 <Compile_Branch+0xfffc08d0>
			8cd: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x60
 8d0:	fec246        	j	3dd <Compile_Branch+0x3dd>
			8d0: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x3dd
 8d3:	00          	.byte	00
 8d4:	0000b1        	l32r	a11, fffc08d4 <Compile_Branch+0xfffc08d4>
			8d4: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x60
 8d7:	fef486        	j	4ad <Compile_Branch+0x4ad>
			8d7: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x4ad
 8da:	00          	.byte	00
 8db:	00          	.byte	00
 8dc:	0000d1        	l32r	a13, fffc08dc <Compile_Branch+0xfffc08dc>
			8dc: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x24
 8df:	0000b1        	l32r	a11, fffc08e0 <Compile_Branch+0xfffc08e0>
			8df: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 8e2:	0000a1        	l32r	a10, fffc08e4 <Compile_Branch+0xfffc08e4>
			8e2: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 8e5:	3189      	s32i.n	a8, a1, 12
 8e7:	b8a1c2        	movi	a12, 0x1b8
 8ea:	000081        	l32r	a8, fffc08ec <Compile_Branch+0xfffc08ec>
			8ea: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x160
			8ea: R_XTENSA_ASM_EXPAND	printf
 8ed:	0008e0        	callx8	a8
 8f0:	3188      	l32i.n	a8, a1, 12
 8f2:	ff02c6        	j	501 <Compile_Branch+0x501>
			8f2: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x501
 8f5:	0000d1        	l32r	a13, fffc08f8 <Compile_Branch+0xfffc08f8>
			8f5: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x24
 8f8:	0000b1        	l32r	a11, fffc08f8 <Compile_Branch+0xfffc08f8>
			8f8: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 8fb:	0000a1        	l32r	a10, fffc08fc <Compile_Branch+0xfffc08fc>
			8fb: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 8fe:	b8a1c2        	movi	a12, 0x1b8
 901:	000081        	l32r	a8, fffc0904 <Compile_Branch+0xfffc0904>
			901: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x164
			901: R_XTENSA_ASM_EXPAND	printf
 904:	0008e0        	callx8	a8
 907:	ff2a06        	j	5b3 <Compile_Branch+0x5b3>
			907: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x5b3
 90a:	00          	.byte	00
 90b:	00          	.byte	00
 90c:	0000d1        	l32r	a13, fffc090c <Compile_Branch+0xfffc090c>
			90c: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x2c
 90f:	0000b1        	l32r	a11, fffc0910 <Compile_Branch+0xfffc0910>
			90f: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 912:	0000a1        	l32r	a10, fffc0914 <Compile_Branch+0xfffc0914>
			912: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 915:	41f9      	s32i.n	a15, a1, 16
 917:	a2a1c2        	movi	a12, 0x1a2
 91a:	000081        	l32r	a8, fffc091c <Compile_Branch+0xfffc091c>
			91a: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x168
			91a: R_XTENSA_ASM_EXPAND	printf
 91d:	0008e0        	callx8	a8
 920:	41f8      	l32i.n	a15, a1, 16
 922:	ff9c06        	j	796 <Compile_Branch+0x796>
			922: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x796
 925:	0000d1        	l32r	a13, fffc0928 <Compile_Branch+0xfffc0928>
			925: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x28
 928:	0000b1        	l32r	a11, fffc0928 <Compile_Branch+0xfffc0928>
			928: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 92b:	0000a1        	l32r	a10, fffc092c <Compile_Branch+0xfffc092c>
			92b: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 92e:	3189      	s32i.n	a8, a1, 12
 930:	0461f2        	s32i	a15, a1, 16
 933:	a1a1c2        	movi	a12, 0x1a1
 936:	000081        	l32r	a8, fffc0938 <Compile_Branch+0xfffc0938>
			936: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x16c
			936: R_XTENSA_ASM_EXPAND	printf
 939:	0008e0        	callx8	a8
 93c:	41f8      	l32i.n	a15, a1, 16
 93e:	3188      	l32i.n	a8, a1, 12
 940:	ff9186        	j	78a <Compile_Branch+0x78a>
			940: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x78a
 943:	00          	.byte	00
 944:	0000d1        	l32r	a13, fffc0944 <Compile_Branch+0xfffc0944>
			944: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x2c
 947:	0000b1        	l32r	a11, fffc0948 <Compile_Branch+0xfffc0948>
			947: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 94a:	0000a1        	l32r	a10, fffc094c <Compile_Branch+0xfffc094c>
			94a: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 94d:	a2a1c2        	movi	a12, 0x1a2
 950:	000081        	l32r	a8, fffc0950 <Compile_Branch+0xfffc0950>
			950: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x170
			950: R_XTENSA_ASM_EXPAND	printf
 953:	0008e0        	callx8	a8
 956:	ff5546        	j	6af <Compile_Branch+0x6af>
			956: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x6af
 959:	0000d1        	l32r	a13, fffc095c <Compile_Branch+0xfffc095c>
			959: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x28
 95c:	0000b1        	l32r	a11, fffc095c <Compile_Branch+0xfffc095c>
			95c: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 95f:	0000a1        	l32r	a10, fffc0960 <Compile_Branch+0xfffc0960>
			95f: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 962:	a1a1c2        	movi	a12, 0x1a1
 965:	000081        	l32r	a8, fffc0968 <Compile_Branch+0xfffc0968>
			965: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x174
			965: R_XTENSA_ASM_EXPAND	printf
 968:	0008e0        	callx8	a8
 96b:	ff4d06        	j	6a3 <Compile_Branch+0x6a3>
			96b: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x6a3
 96e:	00          	.byte	00
 96f:	00          	.byte	00
 970:	0000d1        	l32r	a13, fffc0970 <Compile_Branch+0xfffc0970>
			970: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x2c
 973:	0000b1        	l32r	a11, fffc0974 <Compile_Branch+0xfffc0974>
			973: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 976:	0000a1        	l32r	a10, fffc0978 <Compile_Branch+0xfffc0978>
			976: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 979:	a2a1c2        	movi	a12, 0x1a2
 97c:	000081        	l32r	a8, fffc097c <Compile_Branch+0xfffc097c>
			97c: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x178
			97c: R_XTENSA_ASM_EXPAND	printf
 97f:	0008e0        	callx8	a8
 982:	ff6706        	j	722 <Compile_Branch+0x722>
			982: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x722
 985:	0000d1        	l32r	a13, fffc0988 <Compile_Branch+0xfffc0988>
			985: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x28
 988:	0000b1        	l32r	a11, fffc0988 <Compile_Branch+0xfffc0988>
			988: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x18
 98b:	0000a1        	l32r	a10, fffc098c <Compile_Branch+0xfffc098c>
			98b: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x1c
 98e:	a1a1c2        	movi	a12, 0x1a1
 991:	000081        	l32r	a8, fffc0994 <Compile_Branch+0xfffc0994>
			991: R_XTENSA_SLOT0_OP	.literal.Compile_Branch+0x17c
			991: R_XTENSA_ASM_EXPAND	printf
 994:	0008e0        	callx8	a8
 997:	ff5ec6        	j	716 <Compile_Branch+0x716>
			997: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x716
 99a:	00          	.byte	00
 99b:	00          	.byte	00
 99c:	00          	.byte	00
 99d:	2015a2        	l16ui	a10, a5, 64
 9a0:	023a87        	bltu	a10, a8, 9a6 <Compile_Branch+0x9a6>
			9a0: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x9a6
 9a3:	ff3846        	j	688 <Compile_Branch+0x688>
			9a3: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x688
 9a6:	b80b      	addi.n	a11, a8, -1
 9a8:	f4b0b0        	extui	a11, a11, 0, 16
 9ab:	feeb06        	j	55b <Compile_Branch+0x55b>
			9ab: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x55b
 9ae:	00          	.byte	00
 9af:	00          	.byte	00
 9b0:	00          	.byte	00
 9b1:	2015a2        	l16ui	a10, a5, 64
 9b4:	023a87        	bltu	a10, a8, 9ba <Compile_Branch+0x9ba>
			9b4: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x9ba
 9b7:	ff1446        	j	60c <Compile_Branch+0x60c>
			9b7: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x60c
 9ba:	b80b      	addi.n	a11, a8, -1
 9bc:	f4b0b0        	extui	a11, a11, 0, 16
 9bf:	fe8506        	j	3d7 <Compile_Branch+0x3d7>
			9bf: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x3d7
 9c2:	00          	.byte	00
 9c3:	00          	.byte	00
 9c4:	00          	.byte	00
 9c5:	2015a2        	l16ui	a10, a5, 64
 9c8:	023ac7        	bltu	a10, a12, 9ce <Compile_Branch+0x9ce>
			9c8: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x9ce
 9cb:	ff1f46        	j	64c <Compile_Branch+0x64c>
			9cb: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x64c
 9ce:	bc0b      	addi.n	a11, a12, -1
 9d0:	f4b0b0        	extui	a11, a11, 0, 16
 9d3:	feb406        	j	4a7 <Compile_Branch+0x4a7>
			9d3: R_XTENSA_SLOT0_OP	.text.Compile_Branch+0x4a7

Disassembly of section .text.GetMaxUsedSlotPlusOne:

00000000 <GetMaxUsedSlotPlusOne>:
   0:	004136        	entry	a1, 32
   3:	06d272        	addmi	a7, a2, 0x600
   6:	281782        	l16ui	a8, a7, 80
   9:	2512d2        	l16ui	a13, a2, 74
   c:	75bd87        	bgeu	a13, a8, 85 <GetMaxUsedSlotPlusOne+0x85>
			c: R_XTENSA_SLOT0_OP	.text.GetMaxUsedSlotPlusOne+0x85
   f:	a80b      	addi.n	a10, a8, -1
  11:	f490a0        	extui	a9, a10, 0, 16
  14:	50a4b2        	movi	a11, 0x450
  17:	99ba      	add.n	a9, a9, a11
  19:	929a      	add.n	a9, a2, a9
  1b:	000246        	j	28 <GetMaxUsedSlotPlusOne+0x28>
			1b: R_XTENSA_SLOT0_OP	.text.GetMaxUsedSlotPlusOne+0x28
  1e:	285782        	s16i	a8, a7, 80
  21:	990b      	addi.n	a9, a9, -1
  23:	5e18d7        	beq	a8, a13, 85 <GetMaxUsedSlotPlusOne+0x85>
			23: R_XTENSA_SLOT0_OP	.text.GetMaxUsedSlotPlusOne+0x85
  26:	a80b      	addi.n	a10, a8, -1
  28:	0009b2        	l8ui	a11, a9, 0
  2b:	08cd      	mov.n	a12, a8
  2d:	f480a0        	extui	a8, a10, 0, 16
  30:	feab16        	beqz	a11, 1e <GetMaxUsedSlotPlusOne+0x1e>
			30: R_XTENSA_SLOT0_OP	.text.GetMaxUsedSlotPlusOne+0x1e
  33:	ffa182        	movi	a8, 0x1ff
  36:	4638c7        	bltu	a8, a12, 80 <GetMaxUsedSlotPlusOne+0x80>
			36: R_XTENSA_SLOT0_OP	.text.GetMaxUsedSlotPlusOne+0x80
  39:	51a492        	movi	a9, 0x451
  3c:	ffa182        	movi	a8, 0x1ff
  3f:	929a      	add.n	a9, a2, a9
  41:	c088c0        	sub	a8, a8, a12
  44:	50a4a2        	movi	a10, 0x450
  47:	acaa      	add.n	a10, a12, a10
  49:	99ca      	add.n	a9, a9, a12
  4b:	f48080        	extui	a8, a8, 0, 16
  4e:	000041        	l32r	a4, fffc0050 <GetMaxUsedSlotPlusOne+0xfffc0050>
			4e: R_XTENSA_SLOT0_OP	.literal.GetMaxUsedSlotPlusOne
  51:	000051        	l32r	a5, fffc0054 <GetMaxUsedSlotPlusOne+0xfffc0054>
			51: R_XTENSA_SLOT0_OP	.literal.GetMaxUsedSlotPlusOne+0x4
  54:	22aa      	add.n	a2, a2, a10
  56:	698a      	add.n	a6, a9, a8
  58:	d0a132        	movi	a3, 0x1d0
  5b:	000106        	j	63 <GetMaxUsedSlotPlusOne+0x63>
			5b: R_XTENSA_SLOT0_OP	.text.GetMaxUsedSlotPlusOne+0x63
  5e:	221b      	addi.n	a2, a2, 1
  60:	1c1267        	beq	a2, a6, 80 <GetMaxUsedSlotPlusOne+0x80>
			60: R_XTENSA_SLOT0_OP	.text.GetMaxUsedSlotPlusOne+0x80
  63:	000282        	l8ui	a8, a2, 0
  66:	ff4816        	beqz	a8, 5e <GetMaxUsedSlotPlusOne+0x5e>
			66: R_XTENSA_SLOT0_OP	.text.GetMaxUsedSlotPlusOne+0x5e
  69:	0000a1        	l32r	a10, fffc006c <GetMaxUsedSlotPlusOne+0xfffc006c>
			69: R_XTENSA_SLOT0_OP	.literal.GetMaxUsedSlotPlusOne+0x8
  6c:	04dd      	mov.n	a13, a4
  6e:	20c330        	or	a12, a3, a3
  71:	20b550        	or	a11, a5, a5
  74:	01c222        	addi	a2, a2, 1
  77:	000081        	l32r	a8, fffc0078 <GetMaxUsedSlotPlusOne+0xfffc0078>
			77: R_XTENSA_SLOT0_OP	.literal.GetMaxUsedSlotPlusOne+0xc
			77: R_XTENSA_ASM_EXPAND	printf
  7a:	0008e0        	callx8	a8
  7d:	e29267        	bne	a2, a6, 63 <GetMaxUsedSlotPlusOne+0x63>
			7d: R_XTENSA_SLOT0_OP	.text.GetMaxUsedSlotPlusOne+0x63
  80:	281722        	l16ui	a2, a7, 80
  83:	f01d      	retw.n
  85:	08cd      	mov.n	a12, a8
  87:	ffea06        	j	33 <GetMaxUsedSlotPlusOne+0x33>
			87: R_XTENSA_SLOT0_OP	.text.GetMaxUsedSlotPlusOne+0x33

Disassembly of section .text.AddTrapRecord:

00000000 <AddTrapRecord>:
   0:	004136        	entry	a1, 32
   3:	020c      	movi.n	a2, 0
   5:	f01d      	retw.n

Disassembly of section .text.CompileRawFunction:

00000000 <CompileRawFunction>:
   0:	004136        	entry	a1, 32
   3:	0022a2        	l32i	a10, a2, 0
   6:	04ea16        	beqz	a10, 58 <CompileRawFunction+0x58>
			6: R_XTENSA_SLOT0_OP	.text.CompileRawFunction+0x58
   9:	04a0b2        	movi	a11, 4
   c:	000081        	l32r	a8, fffc000c <CompileRawFunction+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.CompileRawFunction+0x14
			c: R_XTENSA_ASM_EXPAND	AcquireCodePageWithCapacity
   f:	0008e0        	callx8	a8
  12:	207aa0        	or	a7, a10, a10
  15:	babc      	beqz.n	a10, 54 <CompileRawFunction+0x54>
			15: R_XTENSA_SLOT0_OP	.text.CompileRawFunction+0x54
  17:	000081        	l32r	a8, fffc0018 <CompileRawFunction+0xfffc0018>
			17: R_XTENSA_SLOT0_OP	.literal.CompileRawFunction+0x18
			17: R_XTENSA_ASM_EXPAND	GetPagePC
  1a:	0008e0        	callx8	a8
  1d:	0000b1        	l32r	a11, fffc0020 <CompileRawFunction+0xfffc0020>
			1d: R_XTENSA_SLOT0_OP	.literal.CompileRawFunction+0xc
  20:	b3a9      	s32i.n	a10, a3, 44
  22:	0329      	s32i.n	a2, a3, 0
  24:	07ad      	mov.n	a10, a7
  26:	000081        	l32r	a8, fffc0028 <CompileRawFunction+0xfffc0028>
			26: R_XTENSA_SLOT0_OP	.literal.CompileRawFunction+0x1c
			26: R_XTENSA_ASM_EXPAND	EmitWord_impl
  29:	0008e0        	callx8	a8
  2c:	04bd      	mov.n	a11, a4
  2e:	07ad      	mov.n	a10, a7
  30:	000081        	l32r	a8, fffc0030 <CompileRawFunction+0xfffc0030>
			30: R_XTENSA_SLOT0_OP	.literal.CompileRawFunction+0x20
			30: R_XTENSA_ASM_EXPAND	EmitWord_impl
  33:	0008e0        	callx8	a8
  36:	03bd      	mov.n	a11, a3
  38:	07ad      	mov.n	a10, a7
  3a:	000081        	l32r	a8, fffc003c <CompileRawFunction+0xfffc003c>
			3a: R_XTENSA_SLOT0_OP	.literal.CompileRawFunction+0x24
			3a: R_XTENSA_ASM_EXPAND	EmitWord_impl
  3d:	0008e0        	callx8	a8
  40:	05bd      	mov.n	a11, a5
  42:	07ad      	mov.n	a10, a7
  44:	000081        	l32r	a8, fffc0044 <CompileRawFunction+0xfffc0044>
			44: R_XTENSA_SLOT0_OP	.literal.CompileRawFunction+0x28
			44: R_XTENSA_ASM_EXPAND	EmitWord_impl
  47:	0008e0        	callx8	a8
  4a:	02a8      	l32i.n	a10, a2, 0
  4c:	07bd      	mov.n	a11, a7
  4e:	000081        	l32r	a8, fffc0050 <CompileRawFunction+0xfffc0050>
			4e: R_XTENSA_SLOT0_OP	.literal.CompileRawFunction+0x2c
			4e: R_XTENSA_ASM_EXPAND	ReleaseCodePage
  51:	0008e0        	callx8	a8
  54:	020c      	movi.n	a2, 0
  56:	f01d      	retw.n
  58:	0000d1        	l32r	a13, fffc0058 <CompileRawFunction+0xfffc0058>
			58: R_XTENSA_SLOT0_OP	.literal.CompileRawFunction
  5b:	0000c1        	l32r	a12, fffc005c <CompileRawFunction+0xfffc005c>
			5b: R_XTENSA_SLOT0_OP	.literal.CompileRawFunction+0x10
  5e:	0000b1        	l32r	a11, fffc0060 <CompileRawFunction+0xfffc0060>
			5e: R_XTENSA_SLOT0_OP	.literal.CompileRawFunction+0x4
  61:	0000a1        	l32r	a10, fffc0064 <CompileRawFunction+0xfffc0064>
			61: R_XTENSA_SLOT0_OP	.literal.CompileRawFunction+0x8
  64:	000081        	l32r	a8, fffc0064 <CompileRawFunction+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.CompileRawFunction+0x30
			64: R_XTENSA_ASM_EXPAND	printf
  67:	0008e0        	callx8	a8
  6a:	02a8      	l32i.n	a10, a2, 0
  6c:	ffe646        	j	9 <CompileRawFunction+0x9>
			6c: R_XTENSA_SLOT0_OP	.text.CompileRawFunction+0x9

Disassembly of section .text.GetOpInfo:

00000000 <GetOpInfo>:
   0:	004136        	entry	a1, 32
   3:	748820        	extui	a8, a2, 8, 8
   6:	f42020        	extui	a2, a2, 0, 16
   9:	b89c      	beqz.n	a8, 28 <GetOpInfo+0x28>
			9: R_XTENSA_SLOT0_OP	.text.GetOpInfo+0x28
   b:	fca092        	movi	a9, 252
   e:	129897        	bne	a8, a9, 24 <GetOpInfo+0x24>
			e: R_XTENSA_SLOT0_OP	.text.GetOpInfo+0x24
  11:	742020        	extui	a2, a2, 0, 8
  14:	c80c      	movi.n	a8, 12
  16:	0a3827        	bltu	a8, a2, 24 <GetOpInfo+0x24>
			16: R_XTENSA_SLOT0_OP	.text.GetOpInfo+0x24
  19:	000081        	l32r	a8, fffc001c <GetOpInfo+0xfffc001c>
			19: R_XTENSA_SLOT0_OP	.literal.GetOpInfo+0x4
  1c:	f02220        	subx8	a2, a2, a2
  1f:	a02280        	addx4	a2, a2, a8
  22:	f01d      	retw.n
  24:	020c      	movi.n	a2, 0
  26:	f01d      	retw.n
  28:	f2a092        	movi	a9, 242
  2b:	f53927        	bltu	a9, a2, 24 <GetOpInfo+0x24>
			2b: R_XTENSA_SLOT0_OP	.text.GetOpInfo+0x24
  2e:	000081        	l32r	a8, fffc0030 <GetOpInfo+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.GetOpInfo
  31:	f02220        	subx8	a2, a2, a2
  34:	a02280        	addx4	a2, a2, a8
  37:	f01d      	retw.n

Disassembly of section .text.CompileBlockStatements:

00000000 <CompileBlockStatements>:
   0:	006136        	entry	a1, 48
   3:	2298      	l32i.n	a9, a2, 8
   5:	32a8      	l32i.n	a10, a2, 12
   7:	023d      	mov.n	a3, a2
   9:	728b      	addi.n	a7, a2, 8
   b:	79b9a7        	bgeu	a9, a10, 88 <CompileBlockStatements+0x88>
			b: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0x88
   e:	88a662        	movi	a6, 0x688
  11:	342c      	movi.n	a4, 35
  13:	fca052        	movi	a5, 252
  16:	4399      	s32i.n	a9, a3, 16
  18:	000081        	l32r	a8, fffc0018 <CompileBlockStatements+0xfffc0018>
			18: R_XTENSA_SLOT0_OP	.literal.CompileBlockStatements+0x8
			18: R_XTENSA_ASM_EXPAND	nothing_todo
  1b:	0008e0        	callx8	a8
  1e:	03a8      	l32i.n	a10, a3, 0
  20:	33d8      	l32i.n	a13, a3, 12
  22:	07cd      	mov.n	a12, a7
  24:	b1eb      	addi.n	a11, a1, 14
  26:	aa6a      	add.n	a10, a10, a6
  28:	000081        	l32r	a8, fffc0028 <CompileBlockStatements+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.CompileBlockStatements+0xc
			28: R_XTENSA_ASM_EXPAND	Read_opcode
  2b:	0008e0        	callx8	a8
  2e:	0a2d      	mov.n	a2, a10
  30:	056a56        	bnez	a10, 8a <CompileBlockStatements+0x8a>
			30: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0x8a
  33:	0711b2        	l16ui	a11, a1, 14
  36:	03ad      	mov.n	a10, a3
  38:	000081        	l32r	a8, fffc0038 <CompileBlockStatements+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.CompileBlockStatements+0x10
			38: R_XTENSA_ASM_EXPAND	log_opcode
  3b:	0008e0        	callx8	a8
  3e:	c398      	l32i.n	a9, a3, 48
  40:	0711b2        	l16ui	a11, a1, 14
  43:	046916        	beqz	a9, 8d <CompileBlockStatements+0x8d>
			43: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0x8d
  46:	4198b0        	srli	a9, a11, 8
  49:	073916        	beqz	a9, c0 <CompileBlockStatements+0xc0>
			49: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0xc0
  4c:	3a9957        	bne	a9, a5, 8a <CompileBlockStatements+0x8a>
			4c: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0x8a
  4f:	7490b0        	extui	a9, a11, 0, 8
  52:	0ca0a2        	movi	a10, 12
  55:	313a97        	bltu	a10, a9, 8a <CompileBlockStatements+0x8a>
			55: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0x8a
  58:	0000a1        	l32r	a10, fffc0058 <CompileBlockStatements+0xfffc0058>
			58: R_XTENSA_SLOT0_OP	.literal.CompileBlockStatements+0x4
  5b:	f09990        	subx8	a9, a9, a9
  5e:	a099a0        	addx4	a9, a9, a10
  61:	062992        	l32i	a9, a9, 24
  64:	20a330        	or	a10, a3, a3
  67:	041916        	beqz	a9, ac <CompileBlockStatements+0xac>
			67: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0xac
  6a:	0009e0        	callx8	a9
  6d:	044a56        	bnez	a10, b5 <CompileBlockStatements+0xb5>
			6d: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0xb5
  70:	071192        	l16ui	a9, a1, 14
  73:	06d3a2        	addmi	a10, a3, 0x600
  76:	2b5a92        	s16i	a9, a10, 86
  79:	505926        	beqi	a9, 5, cd <CompileBlockStatements+0xcd>
			79: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0xcd
  7c:	ba0c      	movi.n	a10, 11
  7e:	0619a7        	beq	a9, a10, 88 <CompileBlockStatements+0x88>
			7e: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0x88
  81:	2398      	l32i.n	a9, a3, 8
  83:	33a8      	l32i.n	a10, a3, 12
  85:	8d39a7        	bltu	a9, a10, 16 <CompileBlockStatements+0x16>
			85: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0x16
  88:	020c      	movi.n	a2, 0
  8a:	f01d      	retw.n
  8c:	00          	.byte	00
  8d:	371b47        	beq	a11, a4, c8 <CompileBlockStatements+0xc8>
			8d: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0xc8
  90:	25b4b7        	bgeu	a4, a11, b9 <CompileBlockStatements+0xb9>
			90: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0xb9
  93:	bfcb92        	addi	a9, a11, -65
  96:	f49090        	extui	a9, a9, 0, 16
  99:	ed49f6        	bgeui	a9, 4, 8a <CompileBlockStatements+0x8a>
			99: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0x8a
  9c:	000081        	l32r	a8, fffc009c <CompileBlockStatements+0xfffc009c>
			9c: R_XTENSA_SLOT0_OP	.literal.CompileBlockStatements
  9f:	f09bb0        	subx8	a9, a11, a11
  a2:	a09980        	addx4	a9, a9, a8
  a5:	6998      	l32i.n	a9, a9, 24
  a7:	03ad      	mov.n	a10, a3
  a9:	fbd956        	bnez	a9, 6a <CompileBlockStatements+0x6a>
			a9: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0x6a
  ac:	000081        	l32r	a8, fffc00ac <CompileBlockStatements+0xfffc00ac>
			ac: R_XTENSA_SLOT0_OP	.literal.CompileBlockStatements+0x14
			ac: R_XTENSA_ASM_EXPAND	.text.Compile_Operator
  af:	0008e0        	callx8	a8
  b2:	fbaa16        	beqz	a10, 70 <CompileBlockStatements+0x70>
			b2: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0x70
  b5:	0a2d      	mov.n	a2, a10
  b7:	f01d      	retw.n
  b9:	b90c      	movi.n	a9, 11
  bb:	dd1b97        	beq	a11, a9, 9c <CompileBlockStatements+0x9c>
			bb: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0x9c
  be:	f01d      	retw.n
  c0:	f2a092        	movi	a9, 242
  c3:	d5b9b7        	bgeu	a9, a11, 9c <CompileBlockStatements+0x9c>
			c3: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0x9c
  c6:	f01d      	retw.n
  c8:	04bd      	mov.n	a11, a4
  ca:	fff386        	j	9c <CompileBlockStatements+0x9c>
			ca: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0x9c
  cd:	161382        	l16ui	a8, a3, 44
  d0:	b64866        	bnei	a8, 4, 8a <CompileBlockStatements+0x8a>
			d0: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0x8a
  d3:	020c      	movi.n	a2, 0
  d5:	ffec46        	j	8a <CompileBlockStatements+0x8a>
			d5: R_XTENSA_SLOT0_OP	.text.CompileBlockStatements+0x8a

Disassembly of section .text.CompileFunction$part$0:

00000000 <CompileFunction$part$0>:
   0:	00c136        	entry	a1, 96
   3:	a268      	l32i.n	a6, a2, 40
   5:	02ad      	mov.n	a10, a2
   7:	d258      	l32i.n	a5, a2, 52
   9:	046122        	s32i	a2, a1, 16
   c:	000081        	l32r	a8, fffc000c <CompileFunction$part$0+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x4c
			c: R_XTENSA_ASM_EXPAND	m3_GetFunctionName
   f:	0008e0        	callx8	a8
  12:	0a7d      	mov.n	a7, a10
  14:	20a660        	or	a10, a6, a6
  17:	000081        	l32r	a8, fffc0018 <CompileFunction$part$0+0xfffc0018>
			17: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x50
			17: R_XTENSA_ASM_EXPAND	SPrintFuncTypeSignature
  1a:	0008e0        	callx8	a8
  1d:	4188      	l32i.n	a8, a1, 16
  1f:	0aed      	mov.n	a14, a10
  21:	48f8      	l32i.n	a15, a8, 16
  23:	3888      	l32i.n	a8, a8, 12
  25:	0000b1        	l32r	a11, fffc0028 <CompileFunction$part$0+0xfffc0028>
			25: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0
  28:	0000a1        	l32r	a10, fffc0028 <CompileFunction$part$0+0xfffc0028>
			28: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x4
  2b:	c0ff80        	sub	a15, a15, a8
  2e:	07dd      	mov.n	a13, a7
  30:	20c550        	or	a12, a5, a5
  33:	000081        	l32r	a8, fffc0034 <CompileFunction$part$0+0xfffc0034>
			33: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x54
			33: R_XTENSA_ASM_EXPAND	printf
  36:	0008e0        	callx8	a8
  39:	4198      	l32i.n	a9, a1, 16
  3b:	58a6c2        	movi	a12, 0x658
  3e:	0988      	l32i.n	a8, a9, 0
  40:	0b0c      	movi.n	a11, 0
  42:	0858      	l32i.n	a5, a8, 0
  44:	05ad      	mov.n	a10, a5
  46:	000081        	l32r	a8, fffc0048 <CompileFunction$part$0+0xfffc0048>
			46: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x58
			46: R_XTENSA_ASM_EXPAND	memset
  49:	0008e0        	callx8	a8
  4c:	4188      	l32i.n	a8, a1, 16
  4e:	f58b      	addi.n	a15, a5, 8
  50:	08a8      	l32i.n	a10, a8, 0
  52:	3898      	l32i.n	a9, a8, 12
  54:	48d8      	l32i.n	a13, a8, 16
  56:	15a9      	s32i.n	a10, a5, 4
  58:	88a6a2        	movi	a10, 0x688
  5b:	0fcd      	mov.n	a12, a15
  5d:	0559      	s32i.n	a5, a5, 0
  5f:	c589      	s32i.n	a8, a5, 48
  61:	2599      	s32i.n	a9, a5, 8
  63:	35d9      	s32i.n	a13, a5, 12
  65:	a569      	s32i.n	a6, a5, 40
  67:	34c1b2        	addi	a11, a1, 52
  6a:	a5aa      	add.n	a10, a5, a10
  6c:	51f9      	s32i.n	a15, a1, 20
  6e:	000081        	l32r	a8, fffc0070 <CompileFunction$part$0+0xfffc0070>
			6e: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x5c
			6e: R_XTENSA_ASM_EXPAND	ReadLEB_u32
  71:	0008e0        	callx8	a8
  74:	0afd      	mov.n	a15, a10
  76:	08ca56        	bnez	a10, 106 <CompileFunction$part$0+0x106>
			76: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x106
  79:	3598      	l32i.n	a9, a5, 12
  7b:	25b8      	l32i.n	a11, a5, 8
  7d:	d1a8      	l32i.n	a10, a1, 52
  7f:	c099b0        	sub	a9, a9, a11
  82:	0219a7        	beq	a9, a10, 88 <CompileFunction$part$0+0x88>
			82: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x88
  85:	010646        	j	4a2 <CompileFunction$part$0+0x4a2>
			85: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x4a2
  88:	05a8      	l32i.n	a10, a5, 0
  8a:	000081        	l32r	a8, fffc008c <CompileFunction$part$0+0xfffc008c>
			8a: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x60
			8a: R_XTENSA_ASM_EXPAND	AcquireCodePage
  8d:	0008e0        	callx8	a8
  90:	d5a9      	s32i.n	a10, a5, 52
  92:	000081        	l32r	a8, fffc0094 <CompileFunction$part$0+0xfffc0094>
			92: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x64
			92: R_XTENSA_ASM_EXPAND	GetPagePC
  95:	0008e0        	callx8	a8
  98:	0a9d      	mov.n	a9, a10
  9a:	c5a8      	l32i.n	a10, a5, 48
  9c:	7199      	s32i.n	a9, a1, 28
  9e:	000081        	l32r	a8, fffc00a0 <CompileFunction$part$0+0xfffc00a0>
			9e: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x68
			9e: R_XTENSA_ASM_EXPAND	GetFunctionNumReturns
  a1:	0008e0        	callx8	a8
  a4:	aaaa      	add.n	a10, a10, a10
  a6:	f470a0        	extui	a7, a10, 0, 16
  a9:	069716        	beqz	a7, 116 <CompileFunction$part$0+0x116>
			a9: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x116
  ac:	270b      	addi.n	a2, a7, -1
  ae:	51a492        	movi	a9, 0x451
  b1:	959a      	add.n	a9, a5, a9
  b3:	f42020        	extui	a2, a2, 0, 16
  b6:	50a432        	movi	a3, 0x450
  b9:	229a      	add.n	a2, a2, a9
  bb:	b1ab92        	movi	a9, 0xfffffbb1
  be:	353a      	add.n	a3, a5, a3
  c0:	06d542        	addmi	a4, a5, 0x600
  c3:	c06950        	sub	a6, a9, a5
  c6:	000786        	j	e8 <CompileFunction$part$0+0xe8>
			c6: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0xe8
  c9:	00          	.byte	00
  ca:	180c      	movi.n	a8, 1
  cc:	004382        	s8i	a8, a3, 0
  cf:	281492        	l16ui	a9, a4, 80
  d2:	261582        	l16ui	a8, a5, 76
  d5:	a63a      	add.n	a10, a6, a3
  d7:	5399a0        	max	a9, a9, a10
  da:	285492        	s16i	a9, a4, 80
  dd:	5388a0        	max	a8, a8, a10
  e0:	265582        	s16i	a8, a5, 76
  e3:	331b      	addi.n	a3, a3, 1
  e5:	2d1237        	beq	a2, a3, 116 <CompileFunction$part$0+0x116>
			e5: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x116
  e8:	000382        	l8ui	a8, a3, 0
  eb:	fdb816        	beqz	a8, ca <CompileFunction$part$0+0xca>
			eb: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0xca
  ee:	0000d1        	l32r	a13, fffc00f0 <CompileFunction$part$0+0xfffc00f0>
			ee: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x14
  f1:	0000b1        	l32r	a11, fffc00f4 <CompileFunction$part$0+0xfffc00f4>
			f1: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xc
  f4:	0000a1        	l32r	a10, fffc00f4 <CompileFunction$part$0+0xfffc00f4>
			f4: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x10
  f7:	4aa1c2        	movi	a12, 0x14a
  fa:	000081        	l32r	a8, fffc00fc <CompileFunction$part$0+0xfffc00fc>
			fa: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x6c
			fa: R_XTENSA_ASM_EXPAND	printf
  fd:	0008e0        	callx8	a8
 100:	fff186        	j	ca <CompileFunction$part$0+0xca>
			100: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0xca
 103:	00          	.byte	00
 104:	0afd      	mov.n	a15, a10
 106:	d5b8      	l32i.n	a11, a5, 52
 108:	05a8      	l32i.n	a10, a5, 0
 10a:	31f9      	s32i.n	a15, a1, 12
 10c:	000081        	l32r	a8, fffc010c <CompileFunction$part$0+0xfffc010c>
			10c: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x70
			10c: R_XTENSA_ASM_EXPAND	ReleaseCodePage
 10f:	0008e0        	callx8	a8
 112:	3128      	l32i.n	a2, a1, 12
 114:	f01d      	retw.n
 116:	c5a8      	l32i.n	a10, a5, 48
 118:	255572        	s16i	a7, a5, 74
 11b:	1d5a72        	s16i	a7, a10, 58
 11e:	000081        	l32r	a8, fffc0120 <CompileFunction$part$0+0xfffc0120>
			11e: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x74
			11e: R_XTENSA_ASM_EXPAND	GetFunctionNumArgs
 121:	0008e0        	callx8	a8
 124:	040c      	movi.n	a4, 0
 126:	3cc162        	addi	a6, a1, 60
 129:	3dfa16        	beqz	a10, 50c <CompileFunction$part$0+0x50c>
			129: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x50c
 12c:	0a7d      	mov.n	a7, a10
 12e:	c5a8      	l32i.n	a10, a5, 48
 130:	04bd      	mov.n	a11, a4
 132:	000081        	l32r	a8, fffc0134 <CompileFunction$part$0+0xfffc0134>
			132: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x78
			132: R_XTENSA_ASM_EXPAND	GetFunctionArgType
 135:	0008e0        	callx8	a8
 138:	f87c      	movi.n	a8, -1
 13a:	005682        	s16i	a8, a6, 0
 13d:	2515d2        	l16ui	a13, a5, 74
 140:	0a3d      	mov.n	a3, a10
 142:	0acd      	mov.n	a12, a10
 144:	00a2e2        	movi	a14, 0x200
 147:	06bd      	mov.n	a11, a6
 149:	05ad      	mov.n	a10, a5
 14b:	000081        	l32r	a8, fffc014c <CompileFunction$part$0+0xfffc014c>
			14b: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x7c
			14b: R_XTENSA_ASM_EXPAND	.text.AllocateSlotsWithinRange
 14e:	0008e0        	callx8	a8
 151:	fafa56        	bnez	a10, 104 <CompileFunction$part$0+0x104>
			151: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x104
 154:	211582        	l16ui	a8, a5, 66
 157:	0016c2        	l16ui	a12, a6, 0
 15a:	0000e1        	l32r	a14, fffc015c <CompileFunction$part$0+0xfffc015c>
			15a: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x40
 15d:	281b      	addi.n	a2, a8, 1
 15f:	50a392        	movi	a9, 0x350
 162:	b58a      	add.n	a11, a5, a8
 164:	f42020        	extui	a2, a2, 0, 16
 167:	bb9a      	add.n	a11, a11, a9
 169:	215522        	s16i	a2, a5, 66
 16c:	9cea      	add.n	a9, a12, a14
 16e:	ffa0f2        	movi	a15, 255
 171:	90d850        	addx2	a13, a8, a5
 174:	f49090        	extui	a9, a9, 0, 16
 177:	253f87        	bltu	a15, a8, 1a0 <CompileFunction$part$0+0x1a0>
			177: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x1a0
 17a:	000081        	l32r	a8, fffc017c <CompileFunction$part$0+0xfffc017c>
			17a: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x44
 17d:	a85dc2        	s16i	a12, a13, 0x150
 180:	ec8a      	add.n	a14, a12, a8
 182:	01a082        	movi	a8, 1
 185:	938ae0        	movnez	a8, a10, a14
 188:	0000a1        	l32r	a10, fffc0188 <CompileFunction$part$0+0xfffc0188>
			188: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x3c
 18b:	908850        	addx2	a8, a8, a5
 18e:	004b32        	s8i	a3, a11, 0
 191:	06d882        	addmi	a8, a8, 0x600
 194:	083a97        	bltu	a10, a9, 1a0 <CompileFunction$part$0+0x1a0>
			194: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x1a0
 197:	291892        	l16ui	a9, a8, 82
 19a:	31a956        	bnez	a9, 4b8 <CompileFunction$part$0+0x4b8>
			19a: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x4b8
 19d:	295822        	s16i	a2, a8, 82
 1a0:	251592        	l16ui	a9, a5, 74
 1a3:	441b      	addi.n	a4, a4, 1
 1a5:	992b      	addi.n	a9, a9, 2
 1a7:	f49090        	extui	a9, a9, 0, 16
 1aa:	255592        	s16i	a9, a5, 74
 1ad:	021747        	beq	a7, a4, 1b3 <CompileFunction$part$0+0x1b3>
			1ad: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x1b3
 1b0:	ffde86        	j	12e <CompileFunction$part$0+0x12e>
			1b0: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x12e
 1b3:	c5a8      	l32i.n	a10, a5, 48
 1b5:	05b8      	l32i.n	a11, a5, 0
 1b7:	245592        	s16i	a9, a5, 72
 1ba:	1e5a92        	s16i	a9, a10, 60
 1bd:	88a6a2        	movi	a10, 0x688
 1c0:	bbaa      	add.n	a11, a11, a10
 1c2:	61b9      	s32i.n	a11, a1, 24
 1c4:	35d8      	l32i.n	a13, a5, 12
 1c6:	51c8      	l32i.n	a12, a1, 20
 1c8:	61a8      	l32i.n	a10, a1, 24
 1ca:	06d542        	addmi	a4, a5, 0x600
 1cd:	285492        	s16i	a9, a4, 80
 1d0:	38c1b2        	addi	a11, a1, 56
 1d3:	000081        	l32r	a8, fffc01d4 <CompileFunction$part$0+0xfffc01d4>
			1d3: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x80
			1d3: R_XTENSA_ASM_EXPAND	ReadLEB_u32
 1d6:	0008e0        	callx8	a8
 1d9:	0afd      	mov.n	a15, a10
 1db:	f27a56        	bnez	a10, 106 <CompileFunction$part$0+0x106>
			1db: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x106
 1de:	e198      	l32i.n	a9, a1, 56
 1e0:	8199      	s32i.n	a9, a1, 32
 1e2:	0f8916        	beqz	a9, 2de <CompileFunction$part$0+0x2de>
			1e2: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x2de
 1e5:	91f9      	s32i.n	a15, a1, 36
 1e7:	81f9      	s32i.n	a15, a1, 32
 1e9:	3cc162        	addi	a6, a1, 60
 1ec:	a8a022        	movi	a2, 168
 1ef:	0b6142        	s32i	a4, a1, 44
 1f2:	35d8      	l32i.n	a13, a5, 12
 1f4:	51c8      	l32i.n	a12, a1, 20
 1f6:	61a8      	l32i.n	a10, a1, 24
 1f8:	06bd      	mov.n	a11, a6
 1fa:	000081        	l32r	a8, fffc01fc <CompileFunction$part$0+0xfffc01fc>
			1fa: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x84
			1fa: R_XTENSA_ASM_EXPAND	ReadLEB_u32
 1fd:	0008e0        	callx8	a8
 200:	f00a56        	bnez	a10, 104 <CompileFunction$part$0+0x104>
			200: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x104
 203:	0325d2        	l32i	a13, a5, 12
 206:	0521c2        	l32i	a12, a1, 20
 209:	61a8      	l32i.n	a10, a1, 24
 20b:	30c1b2        	addi	a11, a1, 48
 20e:	000081        	l32r	a8, fffc0210 <CompileFunction$part$0+0xfffc0210>
			20e: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x88
			20e: R_XTENSA_ASM_EXPAND	ReadLEB_i7
 211:	0008e0        	callx8	a8
 214:	eeca56        	bnez	a10, 104 <CompileFunction$part$0+0x104>
			214: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x104
 217:	3001b2        	l8ui	a11, a1, 48
 21a:	31c1a2        	addi	a10, a1, 49
 21d:	23bb00        	sext	a11, a11, 7
 220:	000081        	l32r	a8, fffc0220 <CompileFunction$part$0+0xfffc0220>
			220: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x8c
			220: R_XTENSA_ASM_EXPAND	NormalizeType
 223:	0008e0        	callx8	a8
 226:	edaa56        	bnez	a10, 104 <CompileFunction$part$0+0x104>
			226: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x104
 229:	0698      	l32i.n	a9, a6, 0
 22b:	310182        	l8ui	a8, a1, 49
 22e:	a199      	s32i.n	a9, a1, 40
 230:	000091        	l32r	a9, fffc0230 <CompileFunction$part$0+0xfffc0230>
			230: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x1c
 233:	0000a1        	l32r	a10, fffc0234 <CompileFunction$part$0+0xfffc0234>
			233: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x20
 236:	a08890        	addx4	a8, a8, a9
 239:	08d8      	l32i.n	a13, a8, 0
 23b:	a1c8      	l32i.n	a12, a1, 40
 23d:	0000b1        	l32r	a11, fffc0240 <CompileFunction$part$0+0xfffc0240>
			23d: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0
 240:	000081        	l32r	a8, fffc0240 <CompileFunction$part$0+0xfffc0240>
			240: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x90
			240: R_XTENSA_ASM_EXPAND	printf
 243:	0008e0        	callx8	a8
 246:	0688      	l32i.n	a8, a6, 0
 248:	980b      	addi.n	a9, a8, -1
 24a:	0699      	s32i.n	a9, a6, 0
 24c:	074816        	beqz	a8, 2c4 <CompileFunction$part$0+0x2c4>
			24c: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x2c4
 24f:	f47c      	movi.n	a4, -1
 251:	ffa032        	movi	a3, 255
 254:	310172        	l8ui	a7, a1, 49
 257:	2515d2        	l16ui	a13, a5, 74
 25a:	00a2e2        	movi	a14, 0x200
 25d:	07cd      	mov.n	a12, a7
 25f:	32c1b2        	addi	a11, a1, 50
 262:	05ad      	mov.n	a10, a5
 264:	195142        	s16i	a4, a1, 50
 267:	000081        	l32r	a8, fffc0268 <CompileFunction$part$0+0xfffc0268>
			267: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x94
			267: R_XTENSA_ASM_EXPAND	.text.AllocateSlotsWithinRange
 26a:	0008e0        	callx8	a8
 26d:	e93a56        	bnez	a10, 104 <CompileFunction$part$0+0x104>
			26d: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x104
 270:	211582        	l16ui	a8, a5, 66
 273:	1911e2        	l16ui	a14, a1, 50
 276:	0000f1        	l32r	a15, fffc0278 <CompileFunction$part$0+0xfffc0278>
			276: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x40
 279:	981b      	addi.n	a9, a8, 1
 27b:	50a3b2        	movi	a11, 0x350
 27e:	c58a      	add.n	a12, a5, a8
 280:	f49090        	extui	a9, a9, 0, 16
 283:	d82a      	add.n	a13, a8, a2
 285:	ccba      	add.n	a12, a12, a11
 287:	215592        	s16i	a9, a5, 66
 28a:	befa      	add.n	a11, a14, a15
 28c:	90dd50        	addx2	a13, a13, a5
 28f:	f4b0b0        	extui	a11, a11, 0, 16
 292:	243387        	bltu	a3, a8, 2ba <CompileFunction$part$0+0x2ba>
			292: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x2ba
 295:	000081        	l32r	a8, fffc0298 <CompileFunction$part$0+0xfffc0298>
			295: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x44
 298:	005de2        	s16i	a14, a13, 0
 29b:	fe8a      	add.n	a15, a14, a8
 29d:	180c      	movi.n	a8, 1
 29f:	938af0        	movnez	a8, a10, a15
 2a2:	0000a1        	l32r	a10, fffc02a4 <CompileFunction$part$0+0xfffc02a4>
			2a2: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x3c
 2a5:	908850        	addx2	a8, a8, a5
 2a8:	004c72        	s8i	a7, a12, 0
 2ab:	06d882        	addmi	a8, a8, 0x600
 2ae:	083ab7        	bltu	a10, a11, 2ba <CompileFunction$part$0+0x2ba>
			2ae: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x2ba
 2b1:	2918a2        	l16ui	a10, a8, 82
 2b4:	219a56        	bnez	a10, 4d1 <CompileFunction$part$0+0x4d1>
			2b4: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x4d1
 2b7:	295892        	s16i	a9, a8, 82
 2ba:	0688      	l32i.n	a8, a6, 0
 2bc:	ffc892        	addi	a9, a8, -1
 2bf:	0699      	s32i.n	a9, a6, 0
 2c1:	f8f856        	bnez	a8, 254 <CompileFunction$part$0+0x254>
			2c1: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x254
 2c4:	91f8      	l32i.n	a15, a1, 36
 2c6:	8198      	l32i.n	a9, a1, 32
 2c8:	ff1b      	addi.n	a15, a15, 1
 2ca:	91f9      	s32i.n	a15, a1, 36
 2cc:	a1f8      	l32i.n	a15, a1, 40
 2ce:	e188      	l32i.n	a8, a1, 56
 2d0:	99fa      	add.n	a9, a9, a15
 2d2:	8199      	s32i.n	a9, a1, 32
 2d4:	9198      	l32i.n	a9, a1, 36
 2d6:	02b987        	bgeu	a9, a8, 2dc <CompileFunction$part$0+0x2dc>
			2d6: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x2dc
 2d9:	ffc546        	j	1f2 <CompileFunction$part$0+0x1f2>
			2d9: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x1f2
 2dc:	b148      	l32i.n	a4, a1, 44
 2de:	c5e8      	l32i.n	a14, a5, 48
 2e0:	4e8c      	beqz.n	a14, 2e8 <CompileFunction$part$0+0x2e8>
			2e0: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x2e8
 2e2:	0821f2        	l32i	a15, a1, 32
 2e5:	1f5ef2        	s16i	a15, a14, 62
 2e8:	281492        	l16ui	a9, a4, 80
 2eb:	2515d2        	l16ui	a13, a5, 74
 2ee:	023d97        	bltu	a13, a9, 2f4 <CompileFunction$part$0+0x2f4>
			2ee: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x2f4
 2f1:	008946        	j	51a <CompileFunction$part$0+0x51a>
			2f1: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x51a
 2f4:	b90b      	addi.n	a11, a9, -1
 2f6:	f4a0b0        	extui	a10, a11, 0, 16
 2f9:	50a4c2        	movi	a12, 0x450
 2fc:	aaca      	add.n	a10, a10, a12
 2fe:	a5aa      	add.n	a10, a5, a10
 300:	000086        	j	306 <CompileFunction$part$0+0x306>
			300: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x306
 303:	00          	.byte	00
 304:	b90b      	addi.n	a11, a9, -1
 306:	000a82        	l8ui	a8, a10, 0
 309:	09fd      	mov.n	a15, a9
 30b:	f490b0        	extui	a9, a11, 0, 16
 30e:	1f4856        	bnez	a8, 506 <CompileFunction$part$0+0x506>
			30e: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x506
 311:	285492        	s16i	a9, a4, 80
 314:	aa0b      	addi.n	a10, a10, -1
 316:	ea9d97        	bne	a13, a9, 304 <CompileFunction$part$0+0x304>
			316: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x304
 319:	ffa192        	movi	a9, 0x1ff
 31c:	4639d7        	bltu	a9, a13, 366 <CompileFunction$part$0+0x366>
			31c: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x366
 31f:	51a422        	movi	a2, 0x451
 322:	ffa192        	movi	a9, 0x1ff
 325:	252a      	add.n	a2, a5, a2
 327:	c099d0        	sub	a9, a9, a13
 32a:	50a432        	movi	a3, 0x450
 32d:	3d3a      	add.n	a3, a13, a3
 32f:	22da      	add.n	a2, a2, a13
 331:	f49090        	extui	a9, a9, 0, 16
 334:	000061        	l32r	a6, fffc0334 <CompileFunction$part$0+0xfffc0334>
			334: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xc
 337:	353a      	add.n	a3, a5, a3
 339:	229a      	add.n	a2, a2, a9
 33b:	d0a172        	movi	a7, 0x1d0
 33e:	000146        	j	347 <CompileFunction$part$0+0x347>
			33e: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x347
 341:	00          	.byte	00
 342:	331b      	addi.n	a3, a3, 1
 344:	1c1237        	beq	a2, a3, 364 <CompileFunction$part$0+0x364>
			344: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x364
 347:	000382        	l8ui	a8, a3, 0
 34a:	ff4816        	beqz	a8, 342 <CompileFunction$part$0+0x342>
			34a: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x342
 34d:	0000d1        	l32r	a13, fffc0350 <CompileFunction$part$0+0xfffc0350>
			34d: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x24
 350:	0000a1        	l32r	a10, fffc0350 <CompileFunction$part$0+0xfffc0350>
			350: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x10
 353:	07cd      	mov.n	a12, a7
 355:	20b660        	or	a11, a6, a6
 358:	01c332        	addi	a3, a3, 1
 35b:	000081        	l32r	a8, fffc035c <CompileFunction$part$0+0xfffc035c>
			35b: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x98
			35b: R_XTENSA_ASM_EXPAND	printf
 35e:	0008e0        	callx8	a8
 361:	e29237        	bne	a2, a3, 347 <CompileFunction$part$0+0x347>
			361: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x347
 364:	c5e8      	l32i.n	a14, a5, 48
 366:	281492        	l16ui	a9, a4, 80
 369:	2415a2        	l16ui	a10, a5, 72
 36c:	11b900        	slli	a11, a9, 16
 36f:	c0a9a0        	sub	a10, a9, a10
 372:	11aae0        	slli	a10, a10, 2
 375:	205ea2        	s16i	a10, a14, 64
 378:	2099b0        	or	a9, a9, a11
 37b:	2578      	l32i.n	a7, a5, 8
 37d:	35a8      	l32i.n	a10, a5, 12
 37f:	116592        	s32i	a9, a5, 68
 382:	0237a7        	bltu	a7, a10, 388 <CompileFunction$part$0+0x388>
			382: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x388
 385:	0062c6        	j	514 <CompileFunction$part$0+0x514>
			385: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x514
 388:	060c      	movi.n	a6, 0
 38a:	d87c      	movi.n	a8, -3
 38c:	124c      	movi.n	a2, 65
 38e:	130c      	movi.n	a3, 1
 390:	000646        	j	3ad <CompileFunction$part$0+0x3ad>
			390: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x3ad
 393:	00          	.byte	00
 394:	00          	.byte	00
 395:	0abd      	mov.n	a11, a10
 397:	155916        	beqz	a9, 4f0 <CompileFunction$part$0+0x4f0>
			397: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x4f0
 39a:	a6aa      	add.n	a10, a6, a10
 39c:	f93c      	movi.n	a9, 63
 39e:	b6ba      	add.n	a11, a6, a11
 3a0:	771b      	addi.n	a7, a7, 1
 3a2:	2a29a7        	blt	a9, a10, 3d0 <CompileFunction$part$0+0x3d0>
			3a2: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x3d0
 3a5:	3598      	l32i.n	a9, a5, 12
 3a7:	f460b0        	extui	a6, a11, 0, 16
 3aa:	22b797        	bgeu	a7, a9, 3d0 <CompileFunction$part$0+0x3d0>
			3aa: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x3d0
 3ad:	0007b2        	l8ui	a11, a7, 0
 3b0:	0a0c      	movi.n	a10, 0
 3b2:	becb92        	addi	a9, a11, -66
 3b5:	109980        	and	a9, a9, a8
 3b8:	10bb80        	and	a11, a11, a8
 3bb:	749090        	extui	a9, a9, 0, 8
 3be:	d39b27        	bne	a11, a2, 395 <CompileFunction$part$0+0x395>
			3be: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x395
 3c1:	03ad      	mov.n	a10, a3
 3c3:	03bd      	mov.n	a11, a3
 3c5:	a6aa      	add.n	a10, a6, a10
 3c7:	f93c      	movi.n	a9, 63
 3c9:	b6ba      	add.n	a11, a6, a11
 3cb:	771b      	addi.n	a7, a7, 1
 3cd:	d4a9a7        	bge	a9, a10, 3a5 <CompileFunction$part$0+0x3a5>
			3cd: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x3a5
 3d0:	660b      	addi.n	a6, a6, -1
 3d2:	f46060        	extui	a6, a6, 0, 16
 3d5:	2a0c      	movi.n	a10, 2
 3d7:	000081        	l32r	a8, fffc03d8 <CompileFunction$part$0+0xfffc03d8>
			3d7: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x9c
			3d7: R_XTENSA_ASM_EXPAND	Is64BitType
 3da:	0008e0        	callx8	a8
 3dd:	661b      	addi.n	a6, a6, 1
 3df:	6a6a      	add.n	a6, a10, a6
 3e1:	107a60        	and	a7, a10, a6
 3e4:	307760        	xor	a7, a7, a6
 3e7:	0000b1        	l32r	a11, fffc03e8 <CompileFunction$part$0+0xfffc03e8>
			3e7: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0
 3ea:	f47070        	extui	a7, a7, 0, 16
 3ed:	0000a1        	l32r	a10, fffc03f0 <CompileFunction$part$0+0xfffc03f0>
			3ed: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x28
 3f0:	07cd      	mov.n	a12, a7
 3f2:	000081        	l32r	a8, fffc03f4 <CompileFunction$part$0+0xfffc03f4>
			3f2: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xa0
			3f2: R_XTENSA_ASM_EXPAND	printf
 3f5:	0008e0        	callx8	a8
 3f8:	221592        	l16ui	a9, a5, 68
 3fb:	2115c2        	l16ui	a12, a5, 66
 3fe:	979a      	add.n	a9, a7, a9
 400:	f49090        	extui	a9, a9, 0, 16
 403:	255592        	s16i	a9, a5, 74
 406:	285492        	s16i	a9, a4, 80
 409:	0000b1        	l32r	a11, fffc040c <CompileFunction$part$0+0xfffc040c>
			409: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0
 40c:	0000a1        	l32r	a10, fffc040c <CompileFunction$part$0+0xfffc040c>
			40c: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x2c
 40f:	265592        	s16i	a9, a5, 76
 412:	2055c2        	s16i	a12, a5, 64
 415:	1355c2        	s16i	a12, a5, 38
 418:	000081        	l32r	a8, fffc0418 <CompileFunction$part$0+0xfffc0418>
			418: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xa4
			418: R_XTENSA_ASM_EXPAND	printf
 41b:	0008e0        	callx8	a8
 41e:	0000b1        	l32r	a11, fffc0420 <CompileFunction$part$0+0xfffc0420>
			41e: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x30
 421:	05ad      	mov.n	a10, a5
 423:	000081        	l32r	a8, fffc0424 <CompileFunction$part$0+0xfffc0424>
			423: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xa8
			423: R_XTENSA_ASM_EXPAND	.text.EmitOp
 426:	0008e0        	callx8	a8
 429:	0afd      	mov.n	a15, a10
 42b:	cd7a56        	bnez	a10, 106 <CompileFunction$part$0+0x106>
			42b: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x106
 42e:	41b8      	l32i.n	a11, a1, 16
 430:	05ad      	mov.n	a10, a5
 432:	000081        	l32r	a8, fffc0434 <CompileFunction$part$0+0xfffc0434>
			432: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xac
			432: R_XTENSA_ASM_EXPAND	.text.EmitPointer
 435:	0008e0        	callx8	a8
 438:	05ad      	mov.n	a10, a5
 43a:	000081        	l32r	a8, fffc043c <CompileFunction$part$0+0xfffc043c>
			43a: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xb0
			43a: R_XTENSA_ASM_EXPAND	CompileBlockStatements
 43d:	0008e0        	callx8	a8
 440:	0afd      	mov.n	a15, a10
 442:	cc0a56        	bnez	a10, 106 <CompileFunction$part$0+0x106>
			442: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x106
 445:	2b14a2        	l16ui	a10, a4, 86
 448:	b90c      	movi.n	a9, 11
 44a:	021a97        	beq	a10, a9, 450 <CompileFunction$part$0+0x450>
			44a: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x450
 44d:	ff2d46        	j	106 <CompileFunction$part$0+0x106>
			44d: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x106
 450:	231592        	l16ui	a9, a5, 70
 453:	221572        	l16ui	a7, a5, 68
 456:	2615b2        	l16ui	a11, a5, 76
 459:	4188      	l32i.n	a8, a1, 16
 45b:	71c8      	l32i.n	a12, a1, 28
 45d:	2515d2        	l16ui	a13, a5, 74
 460:	c07970        	sub	a7, a9, a7
 463:	b8c9      	s32i.n	a12, a8, 44
 465:	1c58b2        	s16i	a11, a8, 56
 468:	f47070        	extui	a7, a7, 0, 16
 46b:	0000b1        	l32r	a11, fffc046c <CompileFunction$part$0+0xfffc046c>
			46b: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0
 46e:	0000a1        	l32r	a10, fffc0470 <CompileFunction$part$0+0xfffc0470>
			46e: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x34
 471:	31f9      	s32i.n	a15, a1, 12
 473:	c0dd90        	sub	a13, a13, a9
 476:	07cd      	mov.n	a12, a7
 478:	000081        	l32r	a8, fffc0478 <CompileFunction$part$0+0xfffc0478>
			478: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xb4
			478: R_XTENSA_ASM_EXPAND	printf
 47b:	0008e0        	callx8	a8
 47e:	4188      	l32i.n	a8, a1, 16
 480:	11b7e0        	slli	a11, a7, 2
 483:	f4b0b0        	extui	a11, a11, 0, 16
 486:	2258b2        	s16i	a11, a8, 68
 489:	0321f2        	l32i	a15, a1, 12
 48c:	c76716        	beqz	a7, 106 <CompileFunction$part$0+0x106>
			48c: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x106
 48f:	50c5a2        	addi	a10, a5, 80
 492:	000081        	l32r	a8, fffc0494 <CompileFunction$part$0+0xfffc0494>
			492: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xb8
			492: R_XTENSA_ASM_EXPAND	m3_Int_CopyMem
 495:	0008e0        	callx8	a8
 498:	4198      	l32i.n	a9, a1, 16
 49a:	31f8      	l32i.n	a15, a1, 12
 49c:	1269a2        	s32i	a10, a9, 72
 49f:	ff18c6        	j	106 <CompileFunction$part$0+0x106>
			49f: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x106
 4a2:	0000d1        	l32r	a13, fffc04a4 <CompileFunction$part$0+0xfffc04a4>
			4a2: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x8
 4a5:	0000c1        	l32r	a12, fffc04a8 <CompileFunction$part$0+0xfffc04a8>
			4a5: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x48
 4a8:	0000b1        	l32r	a11, fffc04a8 <CompileFunction$part$0+0xfffc04a8>
			4a8: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xc
 4ab:	0000a1        	l32r	a10, fffc04ac <CompileFunction$part$0+0xfffc04ac>
			4ab: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x10
 4ae:	000081        	l32r	a8, fffc04b0 <CompileFunction$part$0+0xfffc04b0>
			4ae: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xbc
			4ae: R_XTENSA_ASM_EXPAND	printf
 4b1:	0008e0        	callx8	a8
 4b4:	fef406        	j	88 <CompileFunction$part$0+0x88>
			4b4: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x88
 4b7:	00          	.byte	00
 4b8:	0000d1        	l32r	a13, fffc04b8 <CompileFunction$part$0+0xfffc04b8>
			4b8: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x18
 4bb:	0000b1        	l32r	a11, fffc04bc <CompileFunction$part$0+0xfffc04bc>
			4bb: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xc
 4be:	0000a1        	l32r	a10, fffc04c0 <CompileFunction$part$0+0xfffc04c0>
			4be: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x10
 4c1:	2189      	s32i.n	a8, a1, 8
 4c3:	b2a1c2        	movi	a12, 0x1b2
 4c6:	000081        	l32r	a8, fffc04c8 <CompileFunction$part$0+0xfffc04c8>
			4c6: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xc0
			4c6: R_XTENSA_ASM_EXPAND	printf
 4c9:	0008e0        	callx8	a8
 4cc:	2188      	l32i.n	a8, a1, 8
 4ce:	ff32c6        	j	19d <CompileFunction$part$0+0x19d>
			4ce: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x19d
 4d1:	0000d1        	l32r	a13, fffc04d4 <CompileFunction$part$0+0xfffc04d4>
			4d1: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x18
 4d4:	0000b1        	l32r	a11, fffc04d4 <CompileFunction$part$0+0xfffc04d4>
			4d4: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xc
 4d7:	0000a1        	l32r	a10, fffc04d8 <CompileFunction$part$0+0xfffc04d8>
			4d7: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x10
 4da:	2189      	s32i.n	a8, a1, 8
 4dc:	036192        	s32i	a9, a1, 12
 4df:	b2a1c2        	movi	a12, 0x1b2
 4e2:	000081        	l32r	a8, fffc04e4 <CompileFunction$part$0+0xfffc04e4>
			4e2: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xc4
			4e2: R_XTENSA_ASM_EXPAND	printf
 4e5:	0008e0        	callx8	a8
 4e8:	3198      	l32i.n	a9, a1, 12
 4ea:	2188      	l32i.n	a8, a1, 8
 4ec:	ff71c6        	j	2b7 <CompileFunction$part$0+0x2b7>
			4ec: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x2b7
 4ef:	00          	.byte	00
 4f0:	2189      	s32i.n	a8, a1, 8
 4f2:	2a0c      	movi.n	a10, 2
 4f4:	000081        	l32r	a8, fffc04f4 <CompileFunction$part$0+0xfffc04f4>
			4f4: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0xc8
			4f4: R_XTENSA_ASM_EXPAND	Is64BitType
 4f7:	0008e0        	callx8	a8
 4fa:	ba1b      	addi.n	a11, a10, 1
 4fc:	f4b0b0        	extui	a11, a11, 0, 16
 4ff:	2188      	l32i.n	a8, a1, 8
 501:	0bad      	mov.n	a10, a11
 503:	ffa4c6        	j	39a <CompileFunction$part$0+0x39a>
			503: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x39a
 506:	0fdd      	mov.n	a13, a15
 508:	ff8346        	j	319 <CompileFunction$part$0+0x319>
			508: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x319
 50b:	00          	.byte	00
 50c:	251592        	l16ui	a9, a5, 74
 50f:	ff2806        	j	1b3 <CompileFunction$part$0+0x1b3>
			50f: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x1b3
 512:	00          	.byte	00
 513:	00          	.byte	00
 514:	000061        	l32r	a6, fffc0514 <CompileFunction$part$0+0xfffc0514>
			514: R_XTENSA_SLOT0_OP	.literal.CompileFunction$part$0+0x38
 517:	ffae86        	j	3d5 <CompileFunction$part$0+0x3d5>
			517: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x3d5
 51a:	09dd      	mov.n	a13, a9
 51c:	ff7e46        	j	319 <CompileFunction$part$0+0x319>
			51c: R_XTENSA_SLOT0_OP	.text.CompileFunction$part$0+0x319

Disassembly of section .text.op_Compile:

00000000 <op_Compile>:
   0:	008136        	entry	a1, 64
   3:	000081        	l32r	a8, fffc0004 <op_Compile+0xfffc0004>
			3: R_XTENSA_SLOT0_OP	.literal.op_Compile+0x4
   6:	fcc252        	addi	a5, a2, -4
   9:	0589      	s32i.n	a8, a5, 0
   b:	04a0c2        	movi	a12, 4
   e:	20b220        	or	a11, a2, a2
  11:	04ad      	mov.n	a10, a4
  13:	000081        	l32r	a8, fffc0014 <op_Compile+0xfffc0014>
			13: R_XTENSA_SLOT0_OP	.literal.op_Compile+0xc
			13: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  16:	0008e0        	callx8	a8
  19:	0a98      	l32i.n	a9, a10, 0
  1b:	b988      	l32i.n	a8, a9, 44
  1d:	18bc      	beqz.n	a8, 52 <op_Compile+0x52>
			1d: R_XTENSA_SLOT0_OP	.text.op_Compile+0x52
  1f:	0589      	s32i.n	a8, a5, 0
  21:	f8c2b2        	addi	a11, a2, -8
  24:	04a0c2        	movi	a12, 4
  27:	20a440        	or	a10, a4, a4
  2a:	000081        	l32r	a8, fffc002c <op_Compile+0xfffc002c>
			2a: R_XTENSA_SLOT0_OP	.literal.op_Compile+0x10
			2a: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  2d:	0008e0        	callx8	a8
  30:	102182        	l32i	a8, a1, 64
  33:	112192        	l32i	a9, a1, 68
  36:	0189      	s32i.n	a8, a1, 0
  38:	000081        	l32r	a8, fffc0038 <op_Compile+0xfffc0038>
			38: R_XTENSA_SLOT0_OP	.literal.op_Compile+0x8
  3b:	1199      	s32i.n	a9, a1, 4
  3d:	2189      	s32i.n	a8, a1, 8
  3f:	0a88      	l32i.n	a8, a10, 0
  41:	06ed      	mov.n	a14, a6
  43:	07fd      	mov.n	a15, a7
  45:	04cd      	mov.n	a12, a4
  47:	03bd      	mov.n	a11, a3
  49:	05ad      	mov.n	a10, a5
  4b:	0008e0        	callx8	a8
  4e:	0a2d      	mov.n	a2, a10
  50:	f01d      	retw.n
  52:	3988      	l32i.n	a8, a9, 12
  54:	889c      	beqz.n	a8, 70 <op_Compile+0x70>
			54: R_XTENSA_SLOT0_OP	.text.op_Compile+0x70
  56:	09ad      	mov.n	a10, a9
  58:	7199      	s32i.n	a9, a1, 28
  5a:	000081        	l32r	a8, fffc005c <op_Compile+0xfffc005c>
			5a: R_XTENSA_SLOT0_OP	.literal.op_Compile+0x14
			5a: R_XTENSA_ASM_EXPAND	.text.CompileFunction$part$0
  5d:	0008e0        	callx8	a8
  60:	7198      	l32i.n	a9, a1, 28
  62:	0a9c      	beqz.n	a10, 76 <op_Compile+0x76>
			62: R_XTENSA_SLOT0_OP	.text.op_Compile+0x76
  64:	000081        	l32r	a8, fffc0064 <op_Compile+0xfffc0064>
			64: R_XTENSA_SLOT0_OP	.literal.op_Compile+0x18
			64: R_XTENSA_ASM_EXPAND	backtrace_err
  67:	0008e0        	callx8	a8
  6a:	0a2d      	mov.n	a2, a10
  6c:	f01d      	retw.n
  6e:	00          	.byte	00
  6f:	00          	.byte	00
  70:	0000a1        	l32r	a10, fffc0070 <op_Compile+0xfffc0070>
			70: R_XTENSA_SLOT0_OP	.literal.op_Compile
  73:	fffb46        	j	64 <op_Compile+0x64>
			73: R_XTENSA_SLOT0_OP	.text.op_Compile+0x64
  76:	b988      	l32i.n	a8, a9, 44
  78:	ffe8c6        	j	1f <op_Compile+0x1f>
			78: R_XTENSA_SLOT0_OP	.text.op_Compile+0x1f

Disassembly of section .text.op_CallIndirect:

00000000 <op_CallIndirect>:
   0:	008136        	entry	a1, 64
   3:	4c0c      	movi.n	a12, 4
   5:	02bd      	mov.n	a11, a2
   7:	04ad      	mov.n	a10, a4
   9:	076172        	s32i	a7, a1, 28
   c:	066162        	s32i	a6, a1, 24
   f:	000081        	l32r	a8, fffc0010 <op_CallIndirect+0xfffc0010>
			f: R_XTENSA_SLOT0_OP	.literal.op_CallIndirect+0x8
			f: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  12:	0008e0        	callx8	a8
  15:	0ab8      	l32i.n	a11, a10, 0
  17:	4c0c      	movi.n	a12, 4
  19:	a0bb30        	addx4	a11, a11, a3
  1c:	04ad      	mov.n	a10, a4
  1e:	000081        	l32r	a8, fffc0020 <op_CallIndirect+0xfffc0020>
			1e: R_XTENSA_SLOT0_OP	.literal.op_CallIndirect+0xc
			1e: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  21:	0008e0        	callx8	a8
  24:	0a8d      	mov.n	a8, a10
  26:	4c0c      	movi.n	a12, 4
  28:	02bd      	mov.n	a11, a2
  2a:	04ad      	mov.n	a10, a4
  2c:	0878      	l32i.n	a7, a8, 0
  2e:	000081        	l32r	a8, fffc0030 <op_CallIndirect+0xfffc0030>
			2e: R_XTENSA_SLOT0_OP	.literal.op_CallIndirect+0x10
			2e: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  31:	0008e0        	callx8	a8
  34:	0a9d      	mov.n	a9, a10
  36:	4c0c      	movi.n	a12, 4
  38:	02bd      	mov.n	a11, a2
  3a:	04ad      	mov.n	a10, a4
  3c:	0968      	l32i.n	a6, a9, 0
  3e:	000081        	l32r	a8, fffc0040 <op_CallIndirect+0xfffc0040>
			3e: R_XTENSA_SLOT0_OP	.literal.op_CallIndirect+0x14
			3e: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  41:	0008e0        	callx8	a8
  44:	0add      	mov.n	a13, a10
  46:	4c0c      	movi.n	a12, 4
  48:	02bd      	mov.n	a11, a2
  4a:	04ad      	mov.n	a10, a4
  4c:	0d58      	l32i.n	a5, a13, 0
  4e:	000081        	l32r	a8, fffc0050 <op_CallIndirect+0xfffc0050>
			4e: R_XTENSA_SLOT0_OP	.literal.op_CallIndirect+0x18
			4e: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  51:	0008e0        	callx8	a8
  54:	1426c2        	l32i	a12, a6, 80
  57:	0ab8      	l32i.n	a11, a10, 0
  59:	51b7c7        	bgeu	a7, a12, ae <op_CallIndirect+0xae>
			59: R_XTENSA_SLOT0_OP	.text.op_CallIndirect+0xae
  5c:	132692        	l32i	a9, a6, 76
  5f:	a08790        	addx4	a8, a7, a9
  62:	0888      	l32i.n	a8, a8, 0
  64:	046816        	beqz	a8, ae <op_CallIndirect+0xae>
			64: R_XTENSA_SLOT0_OP	.text.op_CallIndirect+0xae
  67:	0a2892        	l32i	a9, a8, 40
  6a:	409957        	bne	a9, a5, ae <op_CallIndirect+0xae>
			6a: R_XTENSA_SLOT0_OP	.text.op_CallIndirect+0xae
  6d:	0b28a2        	l32i	a10, a8, 44
  70:	046a16        	beqz	a10, ba <op_CallIndirect+0xba>
			70: R_XTENSA_SLOT0_OP	.text.op_CallIndirect+0xba
  73:	04cd      	mov.n	a12, a4
  75:	a0bb30        	addx4	a11, a11, a3
  78:	000081        	l32r	a8, fffc0078 <op_CallIndirect+0xfffc0078>
			78: R_XTENSA_SLOT0_OP	.literal.op_CallIndirect+0x1c
			78: R_XTENSA_ASM_EXPAND	.text.Call$constprop$0
  7b:	0008e0        	callx8	a8
  7e:	eaec      	bnez.n	a10, b0 <op_CallIndirect+0xb0>
			7e: R_XTENSA_SLOT0_OP	.text.op_CallIndirect+0xb0
  80:	02bd      	mov.n	a11, a2
  82:	4c0c      	movi.n	a12, 4
  84:	04ad      	mov.n	a10, a4
  86:	000081        	l32r	a8, fffc0088 <op_CallIndirect+0xfffc0088>
			86: R_XTENSA_SLOT0_OP	.literal.op_CallIndirect+0x20
			86: R_XTENSA_ASM_EXPAND	m3SegmentedMemAccess
  89:	0008e0        	callx8	a8
  8c:	102182        	l32i	a8, a1, 64
  8f:	112192        	l32i	a9, a1, 68
  92:	0189      	s32i.n	a8, a1, 0
  94:	000081        	l32r	a8, fffc0094 <op_CallIndirect+0xfffc0094>
			94: R_XTENSA_SLOT0_OP	.literal.op_CallIndirect+0x4
  97:	1199      	s32i.n	a9, a1, 4
  99:	2189      	s32i.n	a8, a1, 8
  9b:	0a88      	l32i.n	a8, a10, 0
  9d:	61e8      	l32i.n	a14, a1, 24
  9f:	71f8      	l32i.n	a15, a1, 28
  a1:	04cd      	mov.n	a12, a4
  a3:	03bd      	mov.n	a11, a3
  a5:	a24b      	addi.n	a10, a2, 4
  a7:	0008e0        	callx8	a8
  aa:	0a2d      	mov.n	a2, a10
  ac:	f01d      	retw.n
  ae:	0a0c      	movi.n	a10, 0
  b0:	000081        	l32r	a8, fffc00b0 <op_CallIndirect+0xfffc00b0>
			b0: R_XTENSA_SLOT0_OP	.literal.op_CallIndirect+0x24
			b0: R_XTENSA_ASM_EXPAND	backtrace_err
  b3:	0008e0        	callx8	a8
  b6:	0a2d      	mov.n	a2, a10
  b8:	f01d      	retw.n
  ba:	3898      	l32i.n	a9, a8, 12
  bc:	899c      	beqz.n	a9, d8 <op_CallIndirect+0xd8>
			bc: R_XTENSA_SLOT0_OP	.text.op_CallIndirect+0xd8
  be:	08ad      	mov.n	a10, a8
  c0:	4189      	s32i.n	a8, a1, 16
  c2:	51b9      	s32i.n	a11, a1, 20
  c4:	000081        	l32r	a8, fffc00c4 <op_CallIndirect+0xfffc00c4>
			c4: R_XTENSA_SLOT0_OP	.literal.op_CallIndirect+0x28
			c4: R_XTENSA_ASM_EXPAND	.text.CompileFunction$part$0
  c7:	0008e0        	callx8	a8
  ca:	4188      	l32i.n	a8, a1, 16
  cc:	51b8      	l32i.n	a11, a1, 20
  ce:	fdea56        	bnez	a10, b0 <op_CallIndirect+0xb0>
			ce: R_XTENSA_SLOT0_OP	.text.op_CallIndirect+0xb0
  d1:	b8a8      	l32i.n	a10, a8, 44
  d3:	ffe706        	j	73 <op_CallIndirect+0x73>
			d3: R_XTENSA_SLOT0_OP	.text.op_CallIndirect+0x73
  d6:	00          	.byte	00
  d7:	00          	.byte	00
  d8:	0000a1        	l32r	a10, fffc00d8 <op_CallIndirect+0xfffc00d8>
			d8: R_XTENSA_SLOT0_OP	.literal.op_CallIndirect
  db:	fff446        	j	b0 <op_CallIndirect+0xb0>
			db: R_XTENSA_SLOT0_OP	.text.op_CallIndirect+0xb0

Disassembly of section .text.CompileBlock:

00000000 <CompileBlock>:
   0:	00c136        	entry	a1, 96
   3:	06d282        	addmi	a8, a2, 0x600
   6:	f44040        	extui	a4, a4, 0, 16
   9:	291892        	l16ui	a9, a8, 82
   c:	3189      	s32i.n	a8, a1, 12
   e:	2139      	s32i.n	a3, a1, 8
  10:	5149      	s32i.n	a4, a1, 20
  12:	026d      	mov.n	a6, a2
  14:	3e0956        	bnez	a9, 3f8 <CompileBlock+0x3f8>
			14: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x3f8
  17:	032182        	l32i	a8, a1, 12
  1a:	2a1892        	l16ui	a9, a8, 84
  1d:	3c0956        	bnez	a9, 3e1 <CompileBlock+0x3e1>
			1d: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x3e1
  20:	000081        	l32r	a8, fffc0020 <CompileBlock+0xfffc0020>
			20: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x44
			20: R_XTENSA_ASM_EXPAND	nothing_todo
  23:	0008e0        	callx8	a8
  26:	66f8      	l32i.n	a15, a6, 24
  28:	5678      	l32i.n	a7, a6, 20
  2a:	76e8      	l32i.n	a14, a6, 28
  2c:	86d8      	l32i.n	a13, a6, 32
  2e:	96c8      	l32i.n	a12, a6, 36
  30:	a6b8      	l32i.n	a11, a6, 40
  32:	b698      	l32i.n	a9, a6, 44
  34:	24c182        	addi	a8, a1, 36
  37:	d6a8      	l32i.n	a10, a6, 52
  39:	5689      	s32i.n	a8, a6, 20
  3b:	14c682        	addi	a8, a6, 20
  3e:	4189      	s32i.n	a8, a1, 16
  40:	a1f9      	s32i.n	a15, a1, 40
  42:	b1e9      	s32i.n	a14, a1, 44
  44:	c1d9      	s32i.n	a13, a1, 48
  46:	d1c9      	s32i.n	a12, a1, 52
  48:	e1b9      	s32i.n	a11, a1, 56
  4a:	0f6192        	s32i	a9, a1, 60
  4d:	096172        	s32i	a7, a1, 36
  50:	000081        	l32r	a8, fffc0050 <CompileBlock+0xfffc0050>
			50: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x48
			50: R_XTENSA_ASM_EXPAND	GetPagePC
  53:	0008e0        	callx8	a8
  56:	8698      	l32i.n	a9, a6, 32
  58:	2188      	l32i.n	a8, a1, 8
  5a:	991b      	addi.n	a9, a9, 1
  5c:	8699      	s32i.n	a9, a6, 32
  5e:	5198      	l32i.n	a9, a1, 20
  60:	66a9      	s32i.n	a10, a6, 24
  62:	a689      	s32i.n	a8, a6, 40
  64:	08ad      	mov.n	a10, a8
  66:	050c      	movi.n	a5, 0
  68:	211682        	l16ui	a8, a6, 66
  6b:	165692        	s16i	a9, a6, 44
  6e:	076652        	s32i	a5, a6, 28
  71:	066182        	s32i	a8, a1, 24
  74:	000081        	l32r	a8, fffc0074 <CompileBlock+0xfffc0074>
			74: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x4c
			74: R_XTENSA_ASM_EXPAND	GetFuncTypeNumParams
  77:	0008e0        	callx8	a8
  7a:	5198      	l32i.n	a9, a1, 20
  7c:	0a2d      	mov.n	a2, a10
  7e:	025966        	bnei	a9, 5, 84 <CompileBlock+0x84>
			7e: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x84
  81:	00c406        	j	395 <CompileBlock+0x395>
			81: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x395
  84:	399a16        	beqz	a10, 421 <CompileBlock+0x421>
			84: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x421
  87:	7a0b      	addi.n	a7, a10, -1
  89:	000041        	l32r	a4, fffc008c <CompileBlock+0xfffc008c>
			89: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x38
  8c:	2128      	l32i.n	a2, a1, 8
  8e:	f47070        	extui	a7, a7, 0, 16
  91:	50a332        	movi	a3, 0x350
  94:	71a9      	s32i.n	a10, a1, 28
  96:	07bd      	mov.n	a11, a7
  98:	02ad      	mov.n	a10, a2
  9a:	000081        	l32r	a8, fffc009c <CompileBlock+0xfffc009c>
			9a: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x50
			9a: R_XTENSA_ASM_EXPAND	GetFuncTypeParamType
  9d:	0008e0        	callx8	a8
  a0:	2116b2        	l16ui	a11, a6, 66
  a3:	0a8d      	mov.n	a8, a10
  a5:	9b0b      	addi.n	a9, a11, -1
  a7:	06ad      	mov.n	a10, a6
  a9:	05cd      	mov.n	a12, a5
  ab:	f49090        	extui	a9, a9, 0, 16
  ae:	bb8c      	beqz.n	a11, bd <CompileBlock+0xbd>
			ae: R_XTENSA_SLOT0_OP	.text.CompileBlock+0xbd
  b0:	2016d2        	l16ui	a13, a6, 64
  b3:	b69a      	add.n	a11, a6, a9
  b5:	bb3a      	add.n	a11, a11, a3
  b7:	0239d7        	bltu	a9, a13, bd <CompileBlock+0xbd>
			b7: R_XTENSA_SLOT0_OP	.text.CompileBlock+0xbd
  ba:	000bc2        	l8ui	a12, a11, 0
  bd:	0418c7        	beq	a8, a12, c5 <CompileBlock+0xc5>
			bd: R_XTENSA_SLOT0_OP	.text.CompileBlock+0xc5
  c0:	2e0682        	l8ui	a8, a6, 46
  c3:	788c      	beqz.n	a8, ce <CompileBlock+0xce>
			c3: R_XTENSA_SLOT0_OP	.text.CompileBlock+0xce
  c5:	000081        	l32r	a8, fffc00c8 <CompileBlock+0xfffc00c8>
			c5: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x54
			c5: R_XTENSA_ASM_EXPAND	.text.Pop
  c8:	0008e0        	callx8	a8
  cb:	1bda56        	bnez	a10, 28c <CompileBlock+0x28c>
			cb: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x28c
  ce:	770b      	addi.n	a7, a7, -1
  d0:	f47070        	extui	a7, a7, 0, 16
  d3:	bf9747        	bne	a7, a4, 96 <CompileBlock+0x96>
			d3: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x96
  d6:	211672        	l16ui	a7, a6, 66
  d9:	6188      	l32i.n	a8, a1, 24
  db:	20a660        	or	a10, a6, a6
  de:	215682        	s16i	a8, a6, 66
  e1:	125672        	s16i	a7, a6, 36
  e4:	072122        	l32i	a2, a1, 28
  e7:	000081        	l32r	a8, fffc00e8 <CompileBlock+0xfffc00e8>
			e7: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x58
			e7: R_XTENSA_ASM_EXPAND	.text.PushBlockResults
  ea:	0008e0        	callx8	a8
  ed:	21a8      	l32i.n	a10, a1, 8
  ef:	211642        	l16ui	a4, a6, 66
  f2:	000081        	l32r	a8, fffc00f4 <CompileBlock+0xfffc00f4>
			f2: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x5c
			f2: R_XTENSA_ASM_EXPAND	GetFuncTypeNumResults
  f5:	0008e0        	callx8	a8
  f8:	ffca32        	addi	a3, a10, -1
  fb:	f43030        	extui	a3, a3, 0, 16
  fe:	316a16        	beqz	a10, 418 <CompileBlock+0x418>
			fe: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x418
 101:	000051        	l32r	a5, fffc0104 <CompileBlock+0xfffc0104>
			101: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x38
 104:	330b      	addi.n	a3, a3, -1
 106:	06ad      	mov.n	a10, a6
 108:	f43030        	extui	a3, a3, 0, 16
 10b:	000081        	l32r	a8, fffc010c <CompileBlock+0xfffc010c>
			10b: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x60
			10b: R_XTENSA_ASM_EXPAND	.text.Pop
 10e:	0008e0        	callx8	a8
 111:	ef9357        	bne	a3, a5, 104 <CompileBlock+0x104>
			111: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x104
 114:	215642        	s16i	a4, a6, 66
 117:	135642        	s16i	a4, a6, 38
 11a:	122216        	beqz	a2, 240 <CompileBlock+0x240>
			11a: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x240
 11d:	050c      	movi.n	a5, 0
 11f:	000dc6        	j	15a <CompileBlock+0x15a>
			11f: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x15a
 122:	00          	.byte	00
 123:	00          	.byte	00
 124:	2e06a2        	l8ui	a10, a6, 46
 127:	1a6a16        	beqz	a10, 2d1 <CompileBlock+0x2d1>
			127: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x2d1
 12a:	a81b      	addi.n	a10, a8, 1
 12c:	2156a2        	s16i	a10, a6, 66
 12f:	ffa0a2        	movi	a10, 255
 132:	173a87        	bltu	a10, a8, 14d <CompileBlock+0x14d>
			132: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x14d
 135:	a8a092        	movi	a9, 168
 138:	a89a      	add.n	a10, a8, a9
 13a:	90aa60        	addx2	a10, a10, a6
 13d:	fb7c      	movi.n	a11, -1
 13f:	005ab2        	s16i	a11, a10, 0
 142:	868a      	add.n	a8, a6, a8
 144:	50a3a2        	movi	a10, 0x350
 147:	8088a0        	add	a8, a8, a10
 14a:	0048f2        	s8i	a15, a8, 0
 14d:	771b      	addi.n	a7, a7, 1
 14f:	551b      	addi.n	a5, a5, 1
 151:	f47070        	extui	a7, a7, 0, 16
 154:	029257        	bne	a2, a5, 15a <CompileBlock+0x15a>
			154: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x15a
 157:	003946        	j	240 <CompileBlock+0x240>
			157: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x240
 15a:	21a8      	l32i.n	a10, a1, 8
 15c:	05bd      	mov.n	a11, a5
 15e:	000081        	l32r	a8, fffc0160 <CompileBlock+0xfffc0160>
			15e: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x64
			15e: R_XTENSA_ASM_EXPAND	GetFuncTypeParamType
 161:	0008e0        	callx8	a8
 164:	211682        	l16ui	a8, a6, 66
 167:	0afd      	mov.n	a15, a10
 169:	b7b787        	bgeu	a7, a8, 124 <CompileBlock+0x124>
			169: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x124
 16c:	a8a092        	movi	a9, 168
 16f:	a79a      	add.n	a10, a7, a9
 171:	481b      	addi.n	a4, a8, 1
 173:	90aa60        	addx2	a10, a10, a6
 176:	f44040        	extui	a4, a4, 0, 16
 179:	001a32        	l16ui	a3, a10, 0
 17c:	ffa0a2        	movi	a10, 255
 17f:	215642        	s16i	a4, a6, 66
 182:	02ba87        	bgeu	a10, a8, 188 <CompileBlock+0x188>
			182: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x188
 185:	0041c6        	j	290 <CompileBlock+0x290>
			185: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x290
 188:	a89a      	add.n	a10, a8, a9
 18a:	90aa60        	addx2	a10, a10, a6
 18d:	000091        	l32r	a9, fffc0190 <CompileBlock+0xfffc0190>
			18d: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x30
 190:	005a32        	s16i	a3, a10, 0
 193:	868a      	add.n	a8, a6, a8
 195:	50a3a2        	movi	a10, 0x350
 198:	88aa      	add.n	a8, a8, a10
 19a:	0000b1        	l32r	a11, fffc019c <CompileBlock+0xfffc019c>
			19a: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x28
 19d:	a39a      	add.n	a10, a3, a9
 19f:	0048f2        	s8i	a15, a8, 0
 1a2:	f480a0        	extui	a8, a10, 0, 16
 1a5:	02bb87        	bgeu	a11, a8, 1ab <CompileBlock+0x1ab>
			1a5: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x1ab
 1a8:	003906        	j	290 <CompileBlock+0x290>
			1a8: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x290
 1ab:	000081        	l32r	a8, fffc01ac <CompileBlock+0xfffc01ac>
			1ab: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x34
 1ae:	0a0c      	movi.n	a10, 0
 1b0:	b38a      	add.n	a11, a3, a8
 1b2:	180c      	movi.n	a8, 1
 1b4:	938ab0        	movnez	a8, a10, a11
 1b7:	908860        	addx2	a8, a8, a6
 1ba:	06d882        	addmi	a8, a8, 0x600
 1bd:	2918a2        	l16ui	a10, a8, 82
 1c0:	1b4a56        	bnez	a10, 378 <CompileBlock+0x378>
			1c0: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x378
 1c3:	295842        	s16i	a4, a8, 82
 1c6:	251682        	l16ui	a8, a6, 74
 1c9:	803387        	bltu	a3, a8, 14d <CompileBlock+0x14d>
			1c9: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x14d
 1cc:	20aff0        	or	a10, a15, a15
 1cf:	000081        	l32r	a8, fffc01d0 <CompileBlock+0xfffc01d0>
			1cf: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x68
			1cf: R_XTENSA_ASM_EXPAND	Is64BitType
 1d2:	0008e0        	callx8	a8
 1d5:	463a      	add.n	a4, a6, a3
 1d7:	50a482        	movi	a8, 0x450
 1da:	848a      	add.n	a8, a4, a8
 1dc:	000882        	l8ui	a8, a8, 0
 1df:	0afd      	mov.n	a15, a10
 1e1:	0d3856        	bnez	a8, 2b8 <CompileBlock+0x2b8>
			1e1: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x2b8
 1e4:	50a4a2        	movi	a10, 0x450
 1e7:	3198      	l32i.n	a9, a1, 12
 1e9:	84aa      	add.n	a8, a4, a10
 1eb:	1b0c      	movi.n	a11, 1
 1ed:	0048b2        	s8i	a11, a8, 0
 1f0:	2819c2        	l16ui	a12, a9, 80
 1f3:	2616b2        	l16ui	a11, a6, 76
 1f6:	831b      	addi.n	a8, a3, 1
 1f8:	53cc80        	max	a12, a12, a8
 1fb:	2859c2        	s16i	a12, a9, 80
 1fe:	53bb80        	max	a11, a11, a8
 201:	2656b2        	s16i	a11, a6, 76
 204:	f45f16        	beqz	a15, 14d <CompileBlock+0x14d>
			204: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x14d
 207:	468a      	add.n	a4, a6, a8
 209:	84aa      	add.n	a8, a4, a10
 20b:	000882        	l8ui	a8, a8, 0
 20e:	1ba856        	bnez	a8, 3cc <CompileBlock+0x3cc>
			20e: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x3cc
 211:	50a482        	movi	a8, 0x450
 214:	848a      	add.n	a8, a4, a8
 216:	1a0c      	movi.n	a10, 1
 218:	0048a2        	s8i	a10, a8, 0
 21b:	3188      	l32i.n	a8, a1, 12
 21d:	e32b      	addi.n	a14, a3, 2
 21f:	2818a2        	l16ui	a10, a8, 80
 222:	3198      	l32i.n	a9, a1, 12
 224:	261682        	l16ui	a8, a6, 76
 227:	53aae0        	max	a10, a10, a14
 22a:	2859a2        	s16i	a10, a9, 80
 22d:	5388e0        	max	a8, a8, a14
 230:	771b      	addi.n	a7, a7, 1
 232:	265682        	s16i	a8, a6, 76
 235:	551b      	addi.n	a5, a5, 1
 237:	f47070        	extui	a7, a7, 0, 16
 23a:	021257        	beq	a2, a5, 240 <CompileBlock+0x240>
			23a: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x240
 23d:	ffc646        	j	15a <CompileBlock+0x15a>
			23d: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x15a
 240:	06ad      	mov.n	a10, a6
 242:	000081        	l32r	a8, fffc0244 <CompileBlock+0xfffc0244>
			242: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x6c
			242: R_XTENSA_ASM_EXPAND	CompileBlockStatements
 245:	0008e0        	callx8	a8
 248:	0a4d      	mov.n	a4, a10
 24a:	eafc      	bnez.n	a10, 28c <CompileBlock+0x28c>
			24a: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x28c
 24c:	c698      	l32i.n	a9, a6, 48
 24e:	0d2916        	beqz	a9, 324 <CompileBlock+0x324>
			24e: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x324
 251:	2e0692        	l8ui	a9, a6, 46
 254:	c9cc      	bnez.n	a9, 264 <CompileBlock+0x264>
			254: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x264
 256:	41b8      	l32i.n	a11, a1, 16
 258:	0acd      	mov.n	a12, a10
 25a:	06ad      	mov.n	a10, a6
 25c:	000081        	l32r	a8, fffc025c <CompileBlock+0xfffc025c>
			25c: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x70
			25c: R_XTENSA_ASM_EXPAND	.text.ResolveBlockResults
 25f:	0008e0        	callx8	a8
 262:	6aec      	bnez.n	a10, 28c <CompileBlock+0x28c>
			262: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x28c
 264:	1316a2        	l16ui	a10, a6, 38
 267:	211692        	l16ui	a9, a6, 66
 26a:	070c      	movi.n	a7, 0
 26c:	113a97        	bltu	a10, a9, 281 <CompileBlock+0x281>
			26c: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x281
 26f:	0024c6        	j	306 <CompileBlock+0x306>
			26f: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x306
 272:	00          	.byte	00
 273:	00          	.byte	00
 274:	00          	.byte	00
 275:	211682        	l16ui	a8, a6, 66
 278:	131692        	l16ui	a9, a6, 38
 27b:	01c772        	addi	a7, a7, 1
 27e:	74b987        	bgeu	a9, a8, 2f6 <CompileBlock+0x2f6>
			27e: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x2f6
 281:	06ad      	mov.n	a10, a6
 283:	000081        	l32r	a8, fffc0284 <CompileBlock+0xfffc0284>
			283: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x74
			283: R_XTENSA_ASM_EXPAND	.text.Pop
 286:	0008e0        	callx8	a8
 289:	fe8a16        	beqz	a10, 275 <CompileBlock+0x275>
			289: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x275
 28c:	0a2d      	mov.n	a2, a10
 28e:	f01d      	retw.n
 290:	251682        	l16ui	a8, a6, 74
 293:	02b387        	bgeu	a3, a8, 299 <CompileBlock+0x299>
			293: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x299
 296:	ffacc6        	j	14d <CompileBlock+0x14d>
			296: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x14d
 299:	000091        	l32r	a9, fffc029c <CompileBlock+0xfffc029c>
			299: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x2c
 29c:	839a      	add.n	a8, a3, a9
 29e:	eab816        	beqz	a8, 14d <CompileBlock+0x14d>
			29e: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x14d
 2a1:	0fad      	mov.n	a10, a15
 2a3:	000081        	l32r	a8, fffc02a4 <CompileBlock+0xfffc02a4>
			2a3: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x78
			2a3: R_XTENSA_ASM_EXPAND	Is64BitType
 2a6:	0008e0        	callx8	a8
 2a9:	463a      	add.n	a4, a6, a3
 2ab:	50a482        	movi	a8, 0x450
 2ae:	848a      	add.n	a8, a4, a8
 2b0:	000882        	l8ui	a8, a8, 0
 2b3:	0afd      	mov.n	a15, a10
 2b5:	f2b816        	beqz	a8, 1e4 <CompileBlock+0x1e4>
			2b5: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x1e4
 2b8:	0000d1        	l32r	a13, fffc02b8 <CompileBlock+0xfffc02b8>
			2b8: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x18
 2bb:	0000b1        	l32r	a11, fffc02bc <CompileBlock+0xfffc02bc>
			2bb: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x4
 2be:	0000a1        	l32r	a10, fffc02c0 <CompileBlock+0xfffc02c0>
			2be: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x8
 2c1:	01f9      	s32i.n	a15, a1, 0
 2c3:	4aa1c2        	movi	a12, 0x14a
 2c6:	000081        	l32r	a8, fffc02c8 <CompileBlock+0xfffc02c8>
			2c6: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x7c
			2c6: R_XTENSA_ASM_EXPAND	printf
 2c9:	0008e0        	callx8	a8
 2cc:	01f8      	l32i.n	a15, a1, 0
 2ce:	ffc486        	j	1e4 <CompileBlock+0x1e4>
			2ce: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x1e4
 2d1:	0000d1        	l32r	a13, fffc02d4 <CompileBlock+0xfffc02d4>
			2d1: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x10
 2d4:	0000b1        	l32r	a11, fffc02d4 <CompileBlock+0xfffc02d4>
			2d4: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x4
 2d7:	0000a1        	l32r	a10, fffc02d8 <CompileBlock+0xfffc02d8>
			2d7: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x8
 2da:	01f9      	s32i.n	a15, a1, 0
 2dc:	29a1c2        	movi	a12, 0x129
 2df:	000081        	l32r	a8, fffc02e0 <CompileBlock+0xfffc02e0>
			2df: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x80
			2df: R_XTENSA_ASM_EXPAND	printf
 2e2:	0008e0        	callx8	a8
 2e5:	211682        	l16ui	a8, a6, 66
 2e8:	01f8      	l32i.n	a15, a1, 0
 2ea:	02b787        	bgeu	a7, a8, 2f0 <CompileBlock+0x2f0>
			2ea: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x2f0
 2ed:	ff9ec6        	j	16c <CompileBlock+0x16c>
			2ed: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x16c
 2f0:	ff8d86        	j	12a <CompileBlock+0x12a>
			2f0: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x12a
 2f3:	00          	.byte	00
 2f4:	00          	.byte	00
 2f5:	00          	.byte	00
 2f6:	c78c      	beqz.n	a7, 306 <CompileBlock+0x306>
			2f6: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x306
 2f8:	0000b1        	l32r	a11, fffc02f8 <CompileBlock+0xfffc02f8>
			2f8: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x1c
 2fb:	0000a1        	l32r	a10, fffc02fc <CompileBlock+0xfffc02fc>
			2fb: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x20
 2fe:	07cd      	mov.n	a12, a7
 300:	000081        	l32r	a8, fffc0300 <CompileBlock+0xfffc0300>
			300: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x84
			300: R_XTENSA_ASM_EXPAND	printf
 303:	0008e0        	callx8	a8
 306:	5188      	l32i.n	a8, a1, 20
 308:	184826        	beqi	a8, 4, 324 <CompileBlock+0x324>
			308: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x324
 30b:	3188      	l32i.n	a8, a1, 12
 30d:	2b1892        	l16ui	a9, a8, 86
 310:	105926        	beqi	a9, 5, 324 <CompileBlock+0x324>
			310: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x324
 313:	121692        	l16ui	a9, a6, 36
 316:	06ad      	mov.n	a10, a6
 318:	215692        	s16i	a9, a6, 66
 31b:	000081        	l32r	a8, fffc031c <CompileBlock+0xfffc031c>
			31b: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x88
			31b: R_XTENSA_ASM_EXPAND	.text.PushBlockResults
 31e:	0008e0        	callx8	a8
 321:	f67a56        	bnez	a10, 28c <CompileBlock+0x28c>
			321: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x28c
 324:	d6a8      	l32i.n	a10, a6, 52
 326:	000081        	l32r	a8, fffc0328 <CompileBlock+0xfffc0328>
			326: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x8c
			326: R_XTENSA_ASM_EXPAND	GetPagePC
 329:	0008e0        	callx8	a8
 32c:	090c      	movi.n	a9, 0
 32e:	7628      	l32i.n	a2, a6, 28
 330:	7699      	s32i.n	a9, a6, 28
 332:	000031        	l32r	a3, fffc0334 <CompileBlock+0xfffc0334>
			332: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x1c
 335:	000051        	l32r	a5, fffc0338 <CompileBlock+0xfffc0338>
			335: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x24
 338:	0a7d      	mov.n	a7, a10
 33a:	629c      	beqz.n	a2, 354 <CompileBlock+0x354>
			33a: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x354
 33c:	02cd      	mov.n	a12, a2
 33e:	07dd      	mov.n	a13, a7
 340:	03bd      	mov.n	a11, a3
 342:	05ad      	mov.n	a10, a5
 344:	000081        	l32r	a8, fffc0344 <CompileBlock+0xfffc0344>
			344: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x90
			344: R_XTENSA_ASM_EXPAND	printf
 347:	0008e0        	callx8	a8
 34a:	028d      	mov.n	a8, a2
 34c:	0228      	l32i.n	a2, a2, 0
 34e:	006872        	s32i	a7, a8, 0
 351:	fe7256        	bnez	a2, 33c <CompileBlock+0x33c>
			351: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x33c
 354:	91f8      	l32i.n	a15, a1, 36
 356:	4188      	l32i.n	a8, a1, 16
 358:	e1a8      	l32i.n	a10, a1, 56
 35a:	56f9      	s32i.n	a15, a6, 20
 35c:	a1e8      	l32i.n	a14, a1, 40
 35e:	b1d8      	l32i.n	a13, a1, 44
 360:	c1c8      	l32i.n	a12, a1, 48
 362:	d1b8      	l32i.n	a11, a1, 52
 364:	f198      	l32i.n	a9, a1, 60
 366:	58a9      	s32i.n	a10, a8, 20
 368:	04ad      	mov.n	a10, a4
 36a:	18e9      	s32i.n	a14, a8, 4
 36c:	28d9      	s32i.n	a13, a8, 8
 36e:	38c9      	s32i.n	a12, a8, 12
 370:	48b9      	s32i.n	a11, a8, 16
 372:	6899      	s32i.n	a9, a8, 24
 374:	0a2d      	mov.n	a2, a10
 376:	f01d      	retw.n
 378:	0000d1        	l32r	a13, fffc0378 <CompileBlock+0xfffc0378>
			378: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x14
 37b:	0000b1        	l32r	a11, fffc037c <CompileBlock+0xfffc037c>
			37b: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x4
 37e:	0000a1        	l32r	a10, fffc0380 <CompileBlock+0xfffc0380>
			37e: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x8
 381:	1189      	s32i.n	a8, a1, 4
 383:	01f9      	s32i.n	a15, a1, 0
 385:	b2a1c2        	movi	a12, 0x1b2
 388:	000081        	l32r	a8, fffc0388 <CompileBlock+0xfffc0388>
			388: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x94
			388: R_XTENSA_ASM_EXPAND	printf
 38b:	0008e0        	callx8	a8
 38e:	01f8      	l32i.n	a15, a1, 0
 390:	1188      	l32i.n	a8, a1, 4
 392:	ff8b46        	j	1c3 <CompileBlock+0x1c3>
			392: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x1c3
 395:	2e06a2        	l8ui	a10, a6, 46
 398:	211692        	l16ui	a9, a6, 66
 39b:	06ea56        	bnez	a10, 40d <CompileBlock+0x40d>
			39b: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x40d
 39e:	c09920        	sub	a9, a9, a2
 3a1:	f47090        	extui	a7, a9, 0, 16
 3a4:	6198      	l32i.n	a9, a1, 24
 3a6:	125672        	s16i	a7, a6, 36
 3a9:	215692        	s16i	a9, a6, 66
 3ac:	20a660        	or	a10, a6, a6
 3af:	000081        	l32r	a8, fffc03b0 <CompileBlock+0xfffc03b0>
			3af: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x98
			3af: R_XTENSA_ASM_EXPAND	.text.PushBlockResults
 3b2:	0008e0        	callx8	a8
 3b5:	21a8      	l32i.n	a10, a1, 8
 3b7:	211642        	l16ui	a4, a6, 66
 3ba:	000081        	l32r	a8, fffc03bc <CompileBlock+0xfffc03bc>
			3ba: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x9c
			3ba: R_XTENSA_ASM_EXPAND	GetFuncTypeNumResults
 3bd:	0008e0        	callx8	a8
 3c0:	3a0b      	addi.n	a3, a10, -1
 3c2:	f43030        	extui	a3, a3, 0, 16
 3c5:	d38a56        	bnez	a10, 101 <CompileBlock+0x101>
			3c5: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x101
 3c8:	ff5206        	j	114 <CompileBlock+0x114>
			3c8: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x114
 3cb:	00          	.byte	00
 3cc:	0000d1        	l32r	a13, fffc03cc <CompileBlock+0xfffc03cc>
			3cc: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x18
 3cf:	0000b1        	l32r	a11, fffc03d0 <CompileBlock+0xfffc03d0>
			3cf: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x4
 3d2:	0000a1        	l32r	a10, fffc03d4 <CompileBlock+0xfffc03d4>
			3d2: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x8
 3d5:	4aa1c2        	movi	a12, 0x14a
 3d8:	000081        	l32r	a8, fffc03d8 <CompileBlock+0xfffc03d8>
			3d8: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0xa0
			3d8: R_XTENSA_ASM_EXPAND	printf
 3db:	0008e0        	callx8	a8
 3de:	ff8bc6        	j	211 <CompileBlock+0x211>
			3de: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x211
 3e1:	0000d1        	l32r	a13, fffc03e4 <CompileBlock+0xfffc03e4>
			3e1: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0xc
 3e4:	0000c1        	l32r	a12, fffc03e4 <CompileBlock+0xfffc03e4>
			3e4: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x3c
 3e7:	0000b1        	l32r	a11, fffc03e8 <CompileBlock+0xfffc03e8>
			3e7: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x4
 3ea:	0000a1        	l32r	a10, fffc03ec <CompileBlock+0xfffc03ec>
			3ea: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x8
 3ed:	000081        	l32r	a8, fffc03f0 <CompileBlock+0xfffc03f0>
			3ed: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0xa4
			3ed: R_XTENSA_ASM_EXPAND	printf
 3f0:	0008e0        	callx8	a8
 3f3:	ff0a46        	j	20 <CompileBlock+0x20>
			3f3: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x20
 3f6:	00          	.byte	00
 3f7:	00          	.byte	00
 3f8:	0000d1        	l32r	a13, fffc03f8 <CompileBlock+0xfffc03f8>
			3f8: R_XTENSA_SLOT0_OP	.literal.CompileBlock
 3fb:	0000c1        	l32r	a12, fffc03fc <CompileBlock+0xfffc03fc>
			3fb: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x40
 3fe:	0000b1        	l32r	a11, fffc0400 <CompileBlock+0xfffc0400>
			3fe: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x4
 401:	0000a1        	l32r	a10, fffc0404 <CompileBlock+0xfffc0404>
			401: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0x8
 404:	000081        	l32r	a8, fffc0404 <CompileBlock+0xfffc0404>
			404: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0xa8
			404: R_XTENSA_ASM_EXPAND	printf
 407:	0008e0        	callx8	a8
 40a:	ff0246        	j	17 <CompileBlock+0x17>
			40a: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x17
 40d:	131672        	l16ui	a7, a6, 38
 410:	a72a      	add.n	a10, a7, a2
 412:	8e29a7        	blt	a9, a10, 3a4 <CompileBlock+0x3a4>
			412: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x3a4
 415:	ffe146        	j	39e <CompileBlock+0x39e>
			415: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x39e
 418:	215642        	s16i	a4, a6, 66
 41b:	135642        	s16i	a4, a6, 38
 41e:	ff3ec6        	j	11d <CompileBlock+0x11d>
			41e: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x11d
 421:	211672        	l16ui	a7, a6, 66
 424:	6198      	l32i.n	a9, a1, 24
 426:	20a660        	or	a10, a6, a6
 429:	215692        	s16i	a9, a6, 66
 42c:	125672        	s16i	a7, a6, 36
 42f:	000081        	l32r	a8, fffc0430 <CompileBlock+0xfffc0430>
			42f: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0xac
			42f: R_XTENSA_ASM_EXPAND	.text.PushBlockResults
 432:	0008e0        	callx8	a8
 435:	21a8      	l32i.n	a10, a1, 8
 437:	211642        	l16ui	a4, a6, 66
 43a:	000081        	l32r	a8, fffc043c <CompileBlock+0xfffc043c>
			43a: R_XTENSA_SLOT0_OP	.literal.CompileBlock+0xb0
			43a: R_XTENSA_ASM_EXPAND	GetFuncTypeNumResults
 43d:	0008e0        	callx8	a8
 440:	3a0b      	addi.n	a3, a10, -1
 442:	f43030        	extui	a3, a3, 0, 16
 445:	cb8a56        	bnez	a10, 101 <CompileBlock+0x101>
			445: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x101
 448:	215642        	s16i	a4, a6, 66
 44b:	135642        	s16i	a4, a6, 38
 44e:	ff7b86        	j	240 <CompileBlock+0x240>
			44e: R_XTENSA_SLOT0_OP	.text.CompileBlock+0x240

Disassembly of section .text.Compile_LoopOrBlock:

00000000 <Compile_LoopOrBlock>:
   0:	008136        	entry	a1, 64
   3:	02ad      	mov.n	a10, a2
   5:	4b0c      	movi.n	a11, 4
   7:	000081        	l32r	a8, fffc0008 <Compile_LoopOrBlock+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x18
			7: R_XTENSA_ASM_EXPAND	.text.PreserveRegisterIfOccupied
   a:	0008e0        	callx8	a8
   d:	027d      	mov.n	a7, a2
   f:	f43030        	extui	a3, a3, 0, 16
  12:	0a2d      	mov.n	a2, a10
  14:	cafc      	bnez.n	a10, 54 <Compile_LoopOrBlock+0x54>
			14: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x54
  16:	2b0c      	movi.n	a11, 2
  18:	20a770        	or	a10, a7, a7
  1b:	000081        	l32r	a8, fffc001c <Compile_LoopOrBlock+0xfffc001c>
			1b: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x1c
			1b: R_XTENSA_ASM_EXPAND	.text.PreserveRegisterIfOccupied
  1e:	0008e0        	callx8	a8
  21:	0a2d      	mov.n	a2, a10
  23:	daec      	bnez.n	a10, 54 <Compile_LoopOrBlock+0x54>
			23: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x54
  25:	07ad      	mov.n	a10, a7
  27:	000081        	l32r	a8, fffc0028 <Compile_LoopOrBlock+0xfffc0028>
			27: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x20
			27: R_XTENSA_ASM_EXPAND	.text.PreserveArgsAndLocals
  2a:	0008e0        	callx8	a8
  2d:	0a2d      	mov.n	a2, a10
  2f:	1aec      	bnez.n	a10, 54 <Compile_LoopOrBlock+0x54>
			2f: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x54
  31:	1cc1b2        	addi	a11, a1, 28
  34:	07ad      	mov.n	a10, a7
  36:	000081        	l32r	a8, fffc0038 <Compile_LoopOrBlock+0xfffc0038>
			36: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x24
			36: R_XTENSA_ASM_EXPAND	.text.ReadBlockType
  39:	0008e0        	callx8	a8
  3c:	0a2d      	mov.n	a2, a10
  3e:	2adc      	bnez.n	a10, 54 <Compile_LoopOrBlock+0x54>
			3e: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x54
  40:	7158      	l32i.n	a5, a1, 28
  42:	103326        	beqi	a3, 3, 56 <Compile_LoopOrBlock+0x56>
			42: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x56
  45:	03cd      	mov.n	a12, a3
  47:	05bd      	mov.n	a11, a5
  49:	20a770        	or	a10, a7, a7
  4c:	000081        	l32r	a8, fffc004c <Compile_LoopOrBlock+0xfffc004c>
			4c: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x28
			4c: R_XTENSA_ASM_EXPAND	CompileBlock
  4f:	0008e0        	callx8	a8
  52:	0a2d      	mov.n	a2, a10
  54:	f01d      	retw.n
  56:	05ad      	mov.n	a10, a5
  58:	000081        	l32r	a8, fffc0058 <Compile_LoopOrBlock+0xfffc0058>
			58: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x2c
			58: R_XTENSA_ASM_EXPAND	GetFuncTypeNumParams
  5b:	0008e0        	callx8	a8
  5e:	0a6d      	mov.n	a6, a10
  60:	0b6a16        	beqz	a10, 11a <Compile_LoopOrBlock+0x11a>
			60: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x11a
  63:	211742        	l16ui	a4, a7, 66
  66:	131782        	l16ui	a8, a7, 38
  69:	c08480        	sub	a8, a4, a8
  6c:	f48080        	extui	a8, a8, 0, 16
  6f:	02b8a7        	bgeu	a8, a10, 75 <Compile_LoopOrBlock+0x75>
			6f: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x75
  72:	002486        	j	108 <Compile_LoopOrBlock+0x108>
			72: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x108
  75:	201782        	l16ui	a8, a7, 64
  78:	053847        	bltu	a8, a4, 81 <Compile_LoopOrBlock+0x81>
			78: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x81
  7b:	2e0782        	l8ui	a8, a7, 46
  7e:	0d7816        	beqz	a8, 159 <Compile_LoopOrBlock+0x159>
			7e: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x159
  81:	c06460        	sub	a6, a4, a6
  84:	f46060        	extui	a6, a6, 0, 16
  87:	023647        	bltu	a6, a4, 8d <Compile_LoopOrBlock+0x8d>
			87: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x8d
  8a:	002306        	j	11a <Compile_LoopOrBlock+0x11a>
			8a: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x11a
  8d:	f42060        	extui	a2, a6, 0, 16
  90:	908670        	addx2	a8, a6, a7
  93:	3159      	s32i.n	a5, a1, 12
  95:	20a440        	or	a10, a4, a4
  98:	205220        	or	a5, a2, a2
  9b:	082d      	mov.n	a2, a8
  9d:	1835a7        	bltu	a5, a10, b9 <Compile_LoopOrBlock+0xb9>
			9d: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0xb9
  a0:	2e0792        	l8ui	a9, a7, 46
  a3:	094916        	beqz	a9, 13b <Compile_LoopOrBlock+0x13b>
			a3: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x13b
  a6:	661b      	addi.n	a6, a6, 1
  a8:	f45060        	extui	a5, a6, 0, 16
  ab:	222b      	addi.n	a2, a2, 2
  ad:	023547        	bltu	a5, a4, b3 <Compile_LoopOrBlock+0xb3>
			ad: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0xb3
  b0:	003046        	j	175 <Compile_LoopOrBlock+0x175>
			b0: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x175
  b3:	2117a2        	l16ui	a10, a7, 66
  b6:	e6b5a7        	bgeu	a5, a10, a0 <Compile_LoopOrBlock+0xa0>
			b6: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0xa0
  b9:	50a3a2        	movi	a10, 0x350
  bc:	96aa      	add.n	a9, a6, a10
  be:	a81282        	l16ui	a8, a2, 0x150
  c1:	2217a2        	l16ui	a10, a7, 68
  c4:	979a      	add.n	a9, a7, a9
  c6:	0009c2        	l8ui	a12, a9, 0
  c9:	d938a7        	bltu	a8, a10, a6 <Compile_LoopOrBlock+0xa6>
			c9: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0xa6
  cc:	231792        	l16ui	a9, a7, 70
  cf:	00a2e2        	movi	a14, 0x200
  d2:	1ac1b2        	addi	a11, a1, 26
  d5:	07ad      	mov.n	a10, a7
  d7:	cbb897        	bgeu	a8, a9, a6 <Compile_LoopOrBlock+0xa6>
			d7: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0xa6
  da:	2517d2        	l16ui	a13, a7, 74
  dd:	f87c      	movi.n	a8, -1
  df:	0d5182        	s16i	a8, a1, 26
  e2:	000081        	l32r	a8, fffc00e4 <Compile_LoopOrBlock+0xfffc00e4>
			e2: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x30
			e2: R_XTENSA_ASM_EXPAND	.text.AllocateSlotsWithinRange
  e5:	0008e0        	callx8	a8
  e8:	0a8d      	mov.n	a8, a10
  ea:	06cd      	mov.n	a12, a6
  ec:	07ad      	mov.n	a10, a7
  ee:	07f856        	bnez	a8, 171 <Compile_LoopOrBlock+0x171>
			ee: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x171
  f1:	0d1152        	l16ui	a5, a1, 26
  f4:	05bd      	mov.n	a11, a5
  f6:	000081        	l32r	a8, fffc00f8 <Compile_LoopOrBlock+0xfffc00f8>
			f6: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x34
			f6: R_XTENSA_ASM_EXPAND	.text.CopyStackIndexToSlot
  f9:	0008e0        	callx8	a8
  fc:	0a8d      	mov.n	a8, a10
  fe:	06fa56        	bnez	a10, 171 <Compile_LoopOrBlock+0x171>
			fe: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x171
 101:	a85252        	s16i	a5, a2, 0x150
 104:	ffe786        	j	a6 <Compile_LoopOrBlock+0xa6>
			104: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0xa6
 107:	00          	.byte	00
 108:	0000d1        	l32r	a13, fffc0108 <Compile_LoopOrBlock+0xfffc0108>
			108: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock
 10b:	0000b1        	l32r	a11, fffc010c <Compile_LoopOrBlock+0xfffc010c>
			10b: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x4
 10e:	0000a1        	l32r	a10, fffc0110 <Compile_LoopOrBlock+0xfffc0110>
			10e: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x8
 111:	51a7c2        	movi	a12, 0x751
 114:	000081        	l32r	a8, fffc0114 <Compile_LoopOrBlock+0xfffc0114>
			114: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x38
			114: R_XTENSA_ASM_EXPAND	printf
 117:	0008e0        	callx8	a8
 11a:	0000b1        	l32r	a11, fffc011c <Compile_LoopOrBlock+0xfffc011c>
			11a: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x14
 11d:	07ad      	mov.n	a10, a7
 11f:	000081        	l32r	a8, fffc0120 <Compile_LoopOrBlock+0xfffc0120>
			11f: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x3c
			11f: R_XTENSA_ASM_EXPAND	.text.EmitOp
 122:	0008e0        	callx8	a8
 125:	0a2d      	mov.n	a2, a10
 127:	f29a56        	bnez	a10, 54 <Compile_LoopOrBlock+0x54>
			127: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x54
 12a:	03cd      	mov.n	a12, a3
 12c:	05bd      	mov.n	a11, a5
 12e:	07ad      	mov.n	a10, a7
 130:	000081        	l32r	a8, fffc0130 <Compile_LoopOrBlock+0xfffc0130>
			130: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x40
			130: R_XTENSA_ASM_EXPAND	CompileBlock
 133:	0008e0        	callx8	a8
 136:	0a2d      	mov.n	a2, a10
 138:	ffc606        	j	54 <Compile_LoopOrBlock+0x54>
			138: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x54
 13b:	0000b1        	l32r	a11, fffc013c <Compile_LoopOrBlock+0xfffc013c>
			13b: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x4
 13e:	0000a1        	l32r	a10, fffc0140 <Compile_LoopOrBlock+0xfffc0140>
			13e: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x8
 141:	0000d1        	l32r	a13, fffc0144 <Compile_LoopOrBlock+0xfffc0144>
			141: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x10
 144:	29a1c2        	movi	a12, 0x129
 147:	000081        	l32r	a8, fffc0148 <Compile_LoopOrBlock+0xfffc0148>
			147: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x44
			147: R_XTENSA_ASM_EXPAND	printf
 14a:	0008e0        	callx8	a8
 14d:	211792        	l16ui	a9, a7, 66
 150:	02b597        	bgeu	a5, a9, 156 <Compile_LoopOrBlock+0x156>
			150: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x156
 153:	ffd886        	j	b9 <Compile_LoopOrBlock+0xb9>
			153: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0xb9
 156:	ffd306        	j	a6 <Compile_LoopOrBlock+0xa6>
			156: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0xa6
 159:	0000d1        	l32r	a13, fffc015c <Compile_LoopOrBlock+0xfffc015c>
			159: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0xc
 15c:	0000b1        	l32r	a11, fffc015c <Compile_LoopOrBlock+0xfffc015c>
			15c: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x4
 15f:	0000a1        	l32r	a10, fffc0160 <Compile_LoopOrBlock+0xfffc0160>
			15f: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x8
 162:	d7a0c2        	movi	a12, 215
 165:	000081        	l32r	a8, fffc0168 <Compile_LoopOrBlock+0xfffc0168>
			165: R_XTENSA_SLOT0_OP	.literal.Compile_LoopOrBlock+0x48
			165: R_XTENSA_ASM_EXPAND	printf
 168:	0008e0        	callx8	a8
 16b:	211742        	l16ui	a4, a7, 66
 16e:	ffc3c6        	j	81 <Compile_LoopOrBlock+0x81>
			16e: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x81
 171:	082d      	mov.n	a2, a8
 173:	f01d      	retw.n
 175:	3158      	l32i.n	a5, a1, 12
 177:	ffe7c6        	j	11a <Compile_LoopOrBlock+0x11a>
			177: R_XTENSA_SLOT0_OP	.text.Compile_LoopOrBlock+0x11a

Disassembly of section .text.Compile_If:

00000000 <Compile_If>:
   0:	008136        	entry	a1, 64
   3:	211262        	l16ui	a6, a2, 66
   6:	201282        	l16ui	a8, a2, 64
   9:	207220        	or	a7, a2, a2
   c:	f43030        	extui	a3, a3, 0, 16
   f:	053867        	bltu	a8, a6, 18 <Compile_If+0x18>
			f: R_XTENSA_SLOT0_OP	.text.Compile_If+0x18
  12:	2e0282        	l8ui	a8, a2, 46
  15:	223816        	beqz	a8, 23c <Compile_If+0x23c>
			15: R_XTENSA_SLOT0_OP	.text.Compile_If+0x23c
  18:	860b      	addi.n	a8, a6, -1
  1a:	20e8f7        	bbsi	a8, 15, 3e <Compile_If+0x3e>
			1a: R_XTENSA_SLOT0_OP	.text.Compile_If+0x3e
  1d:	06d752        	addmi	a5, a7, 0x600
  20:	291582        	l16ui	a8, a5, 82
  23:	1cd856        	bnez	a8, 1f4 <Compile_If+0x1f4>
			23: R_XTENSA_SLOT0_OP	.text.Compile_If+0x1f4
  26:	2a1582        	l16ui	a8, a5, 84
  29:	189c      	beqz.n	a8, 3e <Compile_If+0x3e>
			29: R_XTENSA_SLOT0_OP	.text.Compile_If+0x3e
  2b:	0f1867        	beq	a8, a6, 3e <Compile_If+0x3e>
			2b: R_XTENSA_SLOT0_OP	.text.Compile_If+0x3e
  2e:	4b0c      	movi.n	a11, 4
  30:	20a770        	or	a10, a7, a7
  33:	000081        	l32r	a8, fffc0034 <Compile_If+0xfffc0034>
			33: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x24
			33: R_XTENSA_ASM_EXPAND	.text.PreserveRegisterIfOccupied
  36:	0008e0        	callx8	a8
  39:	0a2d      	mov.n	a2, a10
  3b:	1b1a56        	bnez	a10, 1f0 <Compile_If+0x1f0>
			3b: R_XTENSA_SLOT0_OP	.text.Compile_If+0x1f0
  3e:	07ad      	mov.n	a10, a7
  40:	000081        	l32r	a8, fffc0040 <Compile_If+0xfffc0040>
			40: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x28
			40: R_XTENSA_ASM_EXPAND	.text.PreserveArgsAndLocals
  43:	0008e0        	callx8	a8
  46:	0a2d      	mov.n	a2, a10
  48:	1a4a56        	bnez	a10, 1f0 <Compile_If+0x1f0>
			48: R_XTENSA_SLOT0_OP	.text.Compile_If+0x1f0
  4b:	211782        	l16ui	a8, a7, 66
  4e:	201792        	l16ui	a9, a7, 64
  51:	753987        	bltu	a9, a8, ca <Compile_If+0xca>
			51: R_XTENSA_SLOT0_OP	.text.Compile_If+0xca
  54:	2e0792        	l8ui	a9, a7, 46
  57:	05a916        	beqz	a9, b5 <Compile_If+0xb5>
			57: R_XTENSA_SLOT0_OP	.text.Compile_If+0xb5
  5a:	280b      	addi.n	a2, a8, -1
  5c:	232280        	sext	a2, a2, 15
  5f:	02a287        	bge	a2, a8, 65 <Compile_If+0x65>
			5f: R_XTENSA_SLOT0_OP	.text.Compile_If+0x65
  62:	006986        	j	20c <Compile_If+0x20c>
			62: R_XTENSA_SLOT0_OP	.text.Compile_If+0x20c
  65:	0000b1        	l32r	a11, fffc0068 <Compile_If+0xfffc0068>
			65: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x4
  68:	07ad      	mov.n	a10, a7
  6a:	000081        	l32r	a8, fffc006c <Compile_If+0xfffc006c>
			6a: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x2c
			6a: R_XTENSA_ASM_EXPAND	.text.EmitOp
  6d:	0008e0        	callx8	a8
  70:	0a2d      	mov.n	a2, a10
  72:	17aa56        	bnez	a10, 1f0 <Compile_If+0x1f0>
			72: R_XTENSA_SLOT0_OP	.text.Compile_If+0x1f0
  75:	211782        	l16ui	a8, a7, 66
  78:	201792        	l16ui	a9, a7, 64
  7b:	053987        	bltu	a9, a8, 84 <Compile_If+0x84>
			7b: R_XTENSA_SLOT0_OP	.text.Compile_If+0x84
  7e:	2e07a2        	l8ui	a10, a7, 46
  81:	1ffa16        	beqz	a10, 284 <Compile_If+0x284>
			81: R_XTENSA_SLOT0_OP	.text.Compile_If+0x284
  84:	980b      	addi.n	a9, a8, -1
  86:	236980        	sext	a6, a9, 15
  89:	02a687        	bge	a6, a8, 8f <Compile_If+0x8f>
			89: R_XTENSA_SLOT0_OP	.text.Compile_If+0x8f
  8c:	006106        	j	214 <Compile_If+0x214>
			8c: R_XTENSA_SLOT0_OP	.text.Compile_If+0x214
  8f:	2e07a2        	l8ui	a10, a7, 46
  92:	077a16        	beqz	a10, 10d <Compile_If+0x10d>
			92: R_XTENSA_SLOT0_OP	.text.Compile_If+0x10d
  95:	2017b2        	l16ui	a11, a7, 64
  98:	f49090        	extui	a9, a9, 0, 16
  9b:	0d3b87        	bltu	a11, a8, ac <Compile_If+0xac>
			9b: R_XTENSA_SLOT0_OP	.text.Compile_If+0xac
  9e:	180a16        	beqz	a10, 222 <Compile_If+0x222>
			9e: R_XTENSA_SLOT0_OP	.text.Compile_If+0x222
  a1:	880b      	addi.n	a8, a8, -1
  a3:	f49080        	extui	a9, a8, 0, 16
  a6:	0268f7        	bbci	a8, 15, ac <Compile_If+0xac>
			a6: R_XTENSA_SLOT0_OP	.text.Compile_If+0xac
  a9:	0069c6        	j	254 <Compile_If+0x254>
			a9: R_XTENSA_SLOT0_OP	.text.Compile_If+0x254
  ac:	909970        	addx2	a9, a9, a7
  af:	a819b2        	l16ui	a11, a9, 0x150
  b2:	006846        	j	257 <Compile_If+0x257>
			b2: R_XTENSA_SLOT0_OP	.text.Compile_If+0x257
  b5:	0000d1        	l32r	a13, fffc00b8 <Compile_If+0xfffc00b8>
			b5: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x8
  b8:	0000b1        	l32r	a11, fffc00b8 <Compile_If+0xfffc00b8>
			b8: R_XTENSA_SLOT0_OP	.literal.Compile_If+0xc
  bb:	0000a1        	l32r	a10, fffc00bc <Compile_If+0xfffc00bc>
			bb: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x10
  be:	d7a0c2        	movi	a12, 215
  c1:	000081        	l32r	a8, fffc00c4 <Compile_If+0xfffc00c4>
			c1: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x30
			c1: R_XTENSA_ASM_EXPAND	printf
  c4:	0008e0        	callx8	a8
  c7:	211782        	l16ui	a8, a7, 66
  ca:	280b      	addi.n	a2, a8, -1
  cc:	232280        	sext	a2, a2, 15
  cf:	02a287        	bge	a2, a8, d5 <Compile_If+0xd5>
			cf: R_XTENSA_SLOT0_OP	.text.Compile_If+0xd5
  d2:	004d86        	j	20c <Compile_If+0x20c>
			d2: R_XTENSA_SLOT0_OP	.text.Compile_If+0x20c
  d5:	2e0782        	l8ui	a8, a7, 46
  d8:	f89856        	bnez	a8, 65 <Compile_If+0x65>
			d8: R_XTENSA_SLOT0_OP	.text.Compile_If+0x65
  db:	0000d1        	l32r	a13, fffc00dc <Compile_If+0xfffc00dc>
			db: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x14
  de:	0000b1        	l32r	a11, fffc00e0 <Compile_If+0xfffc00e0>
			de: R_XTENSA_SLOT0_OP	.literal.Compile_If+0xc
  e1:	0000a1        	l32r	a10, fffc00e4 <Compile_If+0xfffc00e4>
			e1: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x10
  e4:	07a1c2        	movi	a12, 0x107
  e7:	000081        	l32r	a8, fffc00e8 <Compile_If+0xfffc00e8>
			e7: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x34
			e7: R_XTENSA_ASM_EXPAND	printf
  ea:	0008e0        	callx8	a8
  ed:	211782        	l16ui	a8, a7, 66
  f0:	022287        	blt	a2, a8, f6 <Compile_If+0xf6>
			f0: R_XTENSA_SLOT0_OP	.text.Compile_If+0xf6
  f3:	ffdb86        	j	65 <Compile_If+0x65>
			f3: R_XTENSA_SLOT0_OP	.text.Compile_If+0x65
  f6:	902270        	addx2	a2, a2, a7
  f9:	a81282        	l16ui	a8, a2, 0x150
  fc:	000091        	l32r	a9, fffc00fc <Compile_If+0xfffc00fc>
			fc: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x20
  ff:	0000b1        	l32r	a11, fffc0100 <Compile_If+0xfffc0100>
			ff: R_XTENSA_SLOT0_OP	.literal.Compile_If
 102:	02b987        	bgeu	a9, a8, 108 <Compile_If+0x108>
			102: R_XTENSA_SLOT0_OP	.text.Compile_If+0x108
 105:	ffd7c6        	j	68 <Compile_If+0x68>
			105: R_XTENSA_SLOT0_OP	.text.Compile_If+0x68
 108:	ffd646        	j	65 <Compile_If+0x65>
			108: R_XTENSA_SLOT0_OP	.text.Compile_If+0x65
 10b:	00          	.byte	00
 10c:	00          	.byte	00
 10d:	0000d1        	l32r	a13, fffc0110 <Compile_If+0xfffc0110>
			10d: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x14
 110:	0000b1        	l32r	a11, fffc0110 <Compile_If+0xfffc0110>
			110: R_XTENSA_SLOT0_OP	.literal.Compile_If+0xc
 113:	0000a1        	l32r	a10, fffc0114 <Compile_If+0xfffc0114>
			113: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x10
 116:	07a1c2        	movi	a12, 0x107
 119:	000081        	l32r	a8, fffc011c <Compile_If+0xfffc011c>
			119: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x38
			119: R_XTENSA_ASM_EXPAND	printf
 11c:	0008e0        	callx8	a8
 11f:	211782        	l16ui	a8, a7, 66
 122:	022687        	blt	a6, a8, 128 <Compile_If+0x128>
			122: R_XTENSA_SLOT0_OP	.text.Compile_If+0x128
 125:	0064c6        	j	2bc <Compile_If+0x2bc>
			125: R_XTENSA_SLOT0_OP	.text.Compile_If+0x2bc
 128:	906670        	addx2	a6, a6, a7
 12b:	a81692        	l16ui	a9, a6, 0x150
 12e:	0000a1        	l32r	a10, fffc0130 <Compile_If+0xfffc0130>
			12e: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x20
 131:	023a97        	bltu	a10, a9, 137 <Compile_If+0x137>
			131: R_XTENSA_SLOT0_OP	.text.Compile_If+0x137
 134:	006506        	j	2cc <Compile_If+0x2cc>
			134: R_XTENSA_SLOT0_OP	.text.Compile_If+0x2cc
 137:	20a770        	or	a10, a7, a7
 13a:	000081        	l32r	a8, fffc013c <Compile_If+0xfffc013c>
			13a: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x3c
			13a: R_XTENSA_ASM_EXPAND	.text.Pop
 13d:	0008e0        	callx8	a8
 140:	0a2d      	mov.n	a2, a10
 142:	0aaa56        	bnez	a10, 1f0 <Compile_If+0x1f0>
			142: R_XTENSA_SLOT0_OP	.text.Compile_If+0x1f0
 145:	07ad      	mov.n	a10, a7
 147:	000081        	l32r	a8, fffc0148 <Compile_If+0xfffc0148>
			147: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x40
			147: R_XTENSA_ASM_EXPAND	.text.ReservePointer
 14a:	0008e0        	callx8	a8
 14d:	0a6d      	mov.n	a6, a10
 14f:	1cc1b2        	addi	a11, a1, 28
 152:	07ad      	mov.n	a10, a7
 154:	000081        	l32r	a8, fffc0154 <Compile_If+0xfffc0154>
			154: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x44
			154: R_XTENSA_ASM_EXPAND	.text.ReadBlockType
 157:	0008e0        	callx8	a8
 15a:	0a2d      	mov.n	a2, a10
 15c:	090a56        	bnez	a10, 1f0 <Compile_If+0x1f0>
			15c: R_XTENSA_SLOT0_OP	.text.Compile_If+0x1f0
 15f:	7158      	l32i.n	a5, a1, 28
 161:	03cd      	mov.n	a12, a3
 163:	05bd      	mov.n	a11, a5
 165:	07ad      	mov.n	a10, a7
 167:	211732        	l16ui	a3, a7, 66
 16a:	000081        	l32r	a8, fffc016c <Compile_If+0xfffc016c>
			16a: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x48
			16a: R_XTENSA_ASM_EXPAND	CompileBlock
 16d:	0008e0        	callx8	a8
 170:	0a2d      	mov.n	a2, a10
 172:	07aa56        	bnez	a10, 1f0 <Compile_If+0x1f0>
			172: R_XTENSA_SLOT0_OP	.text.Compile_If+0x1f0
 175:	06d782        	addmi	a8, a7, 0x600
 178:	2b1842        	l16ui	a4, a8, 86
 17b:	025466        	bnei	a4, 5, 181 <Compile_If+0x181>
			17b: R_XTENSA_SLOT0_OP	.text.Compile_If+0x181
 17e:	003886        	j	264 <Compile_If+0x264>
			17e: R_XTENSA_SLOT0_OP	.text.Compile_If+0x264
 181:	05ad      	mov.n	a10, a5
 183:	000081        	l32r	a8, fffc0184 <Compile_If+0xfffc0184>
			183: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x4c
			183: R_XTENSA_ASM_EXPAND	GetFuncTypeNumResults
 186:	0008e0        	callx8	a8
 189:	10fa16        	beqz	a10, 29c <Compile_If+0x29c>
			189: R_XTENSA_SLOT0_OP	.text.Compile_If+0x29c
 18c:	2788      	l32i.n	a8, a7, 8
 18e:	07a8      	l32i.n	a10, a7, 0
 190:	880b      	addi.n	a8, a8, -1
 192:	2789      	s32i.n	a8, a7, 8
 194:	215732        	s16i	a3, a7, 66
 197:	0d2732        	l32i	a3, a7, 52
 19a:	000081        	l32r	a8, fffc019c <Compile_If+0xfffc019c>
			19a: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x50
			19a: R_XTENSA_ASM_EXPAND	AcquireCodePage
 19d:	0008e0        	callx8	a8
 1a0:	0a4d      	mov.n	a4, a10
 1a2:	000081        	l32r	a8, fffc01a4 <Compile_If+0xfffc01a4>
			1a2: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x54
			1a2: R_XTENSA_ASM_EXPAND	GetPagePC
 1a5:	0008e0        	callx8	a8
 1a8:	06a9      	s32i.n	a10, a6, 0
 1aa:	d749      	s32i.n	a4, a7, 52
 1ac:	5c0c      	movi.n	a12, 5
 1ae:	05bd      	mov.n	a11, a5
 1b0:	20a770        	or	a10, a7, a7
 1b3:	000081        	l32r	a8, fffc01b4 <Compile_If+0xfffc01b4>
			1b3: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x58
			1b3: R_XTENSA_ASM_EXPAND	CompileBlock
 1b6:	0008e0        	callx8	a8
 1b9:	0a6d      	mov.n	a6, a10
 1bb:	0eaa56        	bnez	a10, 2a9 <Compile_If+0x2a9>
			1bb: R_XTENSA_SLOT0_OP	.text.Compile_If+0x2a9
 1be:	0000b1        	l32r	a11, fffc01c0 <Compile_If+0xfffc01c0>
			1be: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x18
 1c1:	07ad      	mov.n	a10, a7
 1c3:	000081        	l32r	a8, fffc01c4 <Compile_If+0xfffc01c4>
			1c3: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x5c
			1c3: R_XTENSA_ASM_EXPAND	.text.EmitOp
 1c6:	0008e0        	callx8	a8
 1c9:	0a6d      	mov.n	a6, a10
 1cb:	0daa56        	bnez	a10, 2a9 <Compile_If+0x2a9>
			1cb: R_XTENSA_SLOT0_OP	.text.Compile_If+0x2a9
 1ce:	03ad      	mov.n	a10, a3
 1d0:	000081        	l32r	a8, fffc01d0 <Compile_If+0xfffc01d0>
			1d0: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x60
			1d0: R_XTENSA_ASM_EXPAND	GetPagePC
 1d3:	0008e0        	callx8	a8
 1d6:	0abd      	mov.n	a11, a10
 1d8:	20a770        	or	a10, a7, a7
 1db:	000081        	l32r	a8, fffc01dc <Compile_If+0xfffc01dc>
			1db: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x64
			1db: R_XTENSA_ASM_EXPAND	.text.EmitPointer
 1de:	0008e0        	callx8	a8
 1e1:	d7b8      	l32i.n	a11, a7, 52
 1e3:	091b37        	beq	a11, a3, 1f0 <Compile_If+0x1f0>
			1e3: R_XTENSA_SLOT0_OP	.text.Compile_If+0x1f0
 1e6:	07a8      	l32i.n	a10, a7, 0
 1e8:	000081        	l32r	a8, fffc01e8 <Compile_If+0xfffc01e8>
			1e8: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x68
			1e8: R_XTENSA_ASM_EXPAND	ReleaseCodePage
 1eb:	0008e0        	callx8	a8
 1ee:	d739      	s32i.n	a3, a7, 52
 1f0:	f01d      	retw.n
 1f2:	00          	.byte	00
 1f3:	00          	.byte	00
 1f4:	029867        	bne	a8, a6, 1fa <Compile_If+0x1fa>
			1f4: R_XTENSA_SLOT0_OP	.text.Compile_If+0x1fa
 1f7:	ff8ac6        	j	26 <Compile_If+0x26>
			1f7: R_XTENSA_SLOT0_OP	.text.Compile_If+0x26
 1fa:	2b0c      	movi.n	a11, 2
 1fc:	07ad      	mov.n	a10, a7
 1fe:	000081        	l32r	a8, fffc0200 <Compile_If+0xfffc0200>
			1fe: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x6c
			1fe: R_XTENSA_ASM_EXPAND	.text.PreserveRegisterIfOccupied
 201:	0008e0        	callx8	a8
 204:	0a2d      	mov.n	a2, a10
 206:	e1ca16        	beqz	a10, 26 <Compile_If+0x26>
			206: R_XTENSA_SLOT0_OP	.text.Compile_If+0x26
 209:	f01d      	retw.n
 20b:	00          	.byte	00
 20c:	e55296        	bltz	a2, 65 <Compile_If+0x65>
			20c: R_XTENSA_SLOT0_OP	.text.Compile_If+0x65
 20f:	ffb8c6        	j	f6 <Compile_If+0xf6>
			20f: R_XTENSA_SLOT0_OP	.text.Compile_If+0xf6
 212:	00          	.byte	00
 213:	00          	.byte	00
 214:	f106d6        	bgez	a6, 128 <Compile_If+0x128>
			214: R_XTENSA_SLOT0_OP	.text.Compile_If+0x128
 217:	201792        	l16ui	a9, a7, 64
 21a:	363987        	bltu	a9, a8, 254 <Compile_If+0x254>
			21a: R_XTENSA_SLOT0_OP	.text.Compile_If+0x254
 21d:	2e0782        	l8ui	a8, a7, 46
 220:	08fc      	bnez.n	a8, 254 <Compile_If+0x254>
			220: R_XTENSA_SLOT0_OP	.text.Compile_If+0x254
 222:	0000d1        	l32r	a13, fffc0224 <Compile_If+0xfffc0224>
			222: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x8
 225:	0000b1        	l32r	a11, fffc0228 <Compile_If+0xfffc0228>
			225: R_XTENSA_SLOT0_OP	.literal.Compile_If+0xc
 228:	0000a1        	l32r	a10, fffc0228 <Compile_If+0xfffc0228>
			228: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x10
 22b:	d7a0c2        	movi	a12, 215
 22e:	000081        	l32r	a8, fffc0230 <Compile_If+0xfffc0230>
			22e: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x70
			22e: R_XTENSA_ASM_EXPAND	printf
 231:	0008e0        	callx8	a8
 234:	211782        	l16ui	a8, a7, 66
 237:	ff9986        	j	a1 <Compile_If+0xa1>
			237: R_XTENSA_SLOT0_OP	.text.Compile_If+0xa1
 23a:	00          	.byte	00
 23b:	00          	.byte	00
 23c:	0000d1        	l32r	a13, fffc023c <Compile_If+0xfffc023c>
			23c: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x8
 23f:	0000b1        	l32r	a11, fffc0240 <Compile_If+0xfffc0240>
			23f: R_XTENSA_SLOT0_OP	.literal.Compile_If+0xc
 242:	0000a1        	l32r	a10, fffc0244 <Compile_If+0xfffc0244>
			242: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x10
 245:	d7a0c2        	movi	a12, 215
 248:	000081        	l32r	a8, fffc0248 <Compile_If+0xfffc0248>
			248: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x74
			248: R_XTENSA_ASM_EXPAND	printf
 24b:	0008e0        	callx8	a8
 24e:	211262        	l16ui	a6, a2, 66
 251:	ff70c6        	j	18 <Compile_If+0x18>
			251: R_XTENSA_SLOT0_OP	.text.Compile_If+0x18
 254:	0000b1        	l32r	a11, fffc0254 <Compile_If+0xfffc0254>
			254: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x1c
 257:	0d27a2        	l32i	a10, a7, 52
 25a:	000081        	l32r	a8, fffc025c <Compile_If+0xfffc025c>
			25a: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x78
			25a: R_XTENSA_ASM_EXPAND	.text.EmitSlotOffset$isra$0
 25d:	0008e0        	callx8	a8
 260:	ffb4c6        	j	137 <Compile_If+0x137>
			260: R_XTENSA_SLOT0_OP	.text.Compile_If+0x137
 263:	00          	.byte	00
 264:	07a8      	l32i.n	a10, a7, 0
 266:	215732        	s16i	a3, a7, 66
 269:	d738      	l32i.n	a3, a7, 52
 26b:	000081        	l32r	a8, fffc026c <Compile_If+0xfffc026c>
			26b: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x7c
			26b: R_XTENSA_ASM_EXPAND	AcquireCodePage
 26e:	0008e0        	callx8	a8
 271:	31a9      	s32i.n	a10, a1, 12
 273:	000081        	l32r	a8, fffc0274 <Compile_If+0xfffc0274>
			273: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x80
			273: R_XTENSA_ASM_EXPAND	GetPagePC
 276:	0008e0        	callx8	a8
 279:	3188      	l32i.n	a8, a1, 12
 27b:	06a9      	s32i.n	a10, a6, 0
 27d:	d789      	s32i.n	a8, a7, 52
 27f:	ffca46        	j	1ac <Compile_If+0x1ac>
			27f: R_XTENSA_SLOT0_OP	.text.Compile_If+0x1ac
 282:	00          	.byte	00
 283:	00          	.byte	00
 284:	0000d1        	l32r	a13, fffc0284 <Compile_If+0xfffc0284>
			284: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x8
 287:	0000b1        	l32r	a11, fffc0288 <Compile_If+0xfffc0288>
			287: R_XTENSA_SLOT0_OP	.literal.Compile_If+0xc
 28a:	0000a1        	l32r	a10, fffc028c <Compile_If+0xfffc028c>
			28a: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x10
 28d:	d7a0c2        	movi	a12, 215
 290:	000081        	l32r	a8, fffc0290 <Compile_If+0xfffc0290>
			290: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x84
			290: R_XTENSA_ASM_EXPAND	printf
 293:	0008e0        	callx8	a8
 296:	211782        	l16ui	a8, a7, 66
 299:	ff79c6        	j	84 <Compile_If+0x84>
			299: R_XTENSA_SLOT0_OP	.text.Compile_If+0x84
 29c:	d7a8      	l32i.n	a10, a7, 52
 29e:	000081        	l32r	a8, fffc02a0 <Compile_If+0xfffc02a0>
			29e: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x88
			29e: R_XTENSA_ASM_EXPAND	GetPagePC
 2a1:	0008e0        	callx8	a8
 2a4:	06a9      	s32i.n	a10, a6, 0
 2a6:	f01d      	retw.n
 2a8:	00          	.byte	00
 2a9:	d7b8      	l32i.n	a11, a7, 52
 2ab:	091b37        	beq	a11, a3, 2b8 <Compile_If+0x2b8>
			2ab: R_XTENSA_SLOT0_OP	.text.Compile_If+0x2b8
 2ae:	07a8      	l32i.n	a10, a7, 0
 2b0:	000081        	l32r	a8, fffc02b0 <Compile_If+0xfffc02b0>
			2b0: R_XTENSA_SLOT0_OP	.literal.Compile_If+0x8c
			2b0: R_XTENSA_ASM_EXPAND	ReleaseCodePage
 2b3:	0008e0        	callx8	a8
 2b6:	d739      	s32i.n	a3, a7, 52
 2b8:	062d      	mov.n	a2, a6
 2ba:	f01d      	retw.n
 2bc:	201792        	l16ui	a9, a7, 64
 2bf:	12b987        	bgeu	a9, a8, 2d5 <Compile_If+0x2d5>
			2bf: R_XTENSA_SLOT0_OP	.text.Compile_If+0x2d5
 2c2:	880b      	addi.n	a8, a8, -1
 2c4:	f49080        	extui	a9, a8, 0, 16
 2c7:	ff7846        	j	ac <Compile_If+0xac>
			2c7: R_XTENSA_SLOT0_OP	.text.Compile_If+0xac
 2ca:	00          	.byte	00
 2cb:	00          	.byte	00
 2cc:	201792        	l16ui	a9, a7, 64
 2cf:	02b987        	bgeu	a9, a8, 2d5 <Compile_If+0x2d5>
			2cf: R_XTENSA_SLOT0_OP	.text.Compile_If+0x2d5
 2d2:	ff72c6        	j	a1 <Compile_If+0xa1>
			2d2: R_XTENSA_SLOT0_OP	.text.Compile_If+0xa1
 2d5:	2e07a2        	l8ui	a10, a7, 46
 2d8:	dc5a56        	bnez	a10, a1 <Compile_If+0xa1>
			2d8: R_XTENSA_SLOT0_OP	.text.Compile_If+0xa1
 2db:	ffd0c6        	j	222 <Compile_If+0x222>
			2db: R_XTENSA_SLOT0_OP	.text.Compile_If+0x222

Disassembly of section .text.CompileFunction:

00000000 <CompileFunction>:
   0:	004136        	entry	a1, 32
   3:	3288      	l32i.n	a8, a2, 12
   5:	02ad      	mov.n	a10, a2
   7:	000021        	l32r	a2, fffc0008 <CompileFunction+0xfffc0008>
			7: R_XTENSA_SLOT0_OP	.literal.CompileFunction
   a:	688c      	beqz.n	a8, 14 <CompileFunction+0x14>
			a: R_XTENSA_SLOT0_OP	.text.CompileFunction+0x14
   c:	000081        	l32r	a8, fffc000c <CompileFunction+0xfffc000c>
			c: R_XTENSA_SLOT0_OP	.literal.CompileFunction+0x4
			c: R_XTENSA_ASM_EXPAND	.text.CompileFunction$part$0
   f:	0008e0        	callx8	a8
  12:	0a2d      	mov.n	a2, a10
  14:	f01d      	retw.n
